// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * Get the VPC NAT Gateway by name:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const my_imported_vpc_nat_gateway = digitalocean.getVpcNatGateway({
 *     name: my_existing_vpc_nat_gateway.name,
 * });
 * ```
 *
 * Get the VPC NAT Gateway by ID:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const my_imported_vpc_nat_gateway = digitalocean.getVpcNatGateway({
 *     id: my_existing_vpc_nat_gateway.id,
 * });
 * ```
 */
export function getVpcNatGateway(args?: GetVpcNatGatewayArgs, opts?: pulumi.InvokeOptions): Promise<GetVpcNatGatewayResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getVpcNatGateway:getVpcNatGateway", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcNatGateway.
 */
export interface GetVpcNatGatewayArgs {
    /**
     * The ID of VPC NAT Gateway.
     */
    id?: string;
    /**
     * The name of VPC NAT Gateway.
     */
    name?: string;
}

/**
 * A collection of values returned by getVpcNatGateway.
 */
export interface GetVpcNatGatewayResult {
    readonly createdAt: string;
    readonly egresses: outputs.GetVpcNatGatewayEgress[];
    readonly icmpTimeoutSeconds: number;
    readonly id?: string;
    readonly name?: string;
    readonly region: string;
    readonly size: number;
    readonly state: string;
    readonly tcpTimeoutSeconds: number;
    readonly type: string;
    readonly udpTimeoutSeconds: number;
    readonly updatedAt: string;
    readonly vpcs: outputs.GetVpcNatGatewayVpc[];
}
/**
 * ## Example Usage
 *
 * Get the VPC NAT Gateway by name:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const my_imported_vpc_nat_gateway = digitalocean.getVpcNatGateway({
 *     name: my_existing_vpc_nat_gateway.name,
 * });
 * ```
 *
 * Get the VPC NAT Gateway by ID:
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as digitalocean from "@pulumi/digitalocean";
 *
 * const my_imported_vpc_nat_gateway = digitalocean.getVpcNatGateway({
 *     id: my_existing_vpc_nat_gateway.id,
 * });
 * ```
 */
export function getVpcNatGatewayOutput(args?: GetVpcNatGatewayOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetVpcNatGatewayResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("digitalocean:index/getVpcNatGateway:getVpcNatGateway", {
        "id": args.id,
        "name": args.name,
    }, opts);
}

/**
 * A collection of arguments for invoking getVpcNatGateway.
 */
export interface GetVpcNatGatewayOutputArgs {
    /**
     * The ID of VPC NAT Gateway.
     */
    id?: pulumi.Input<string>;
    /**
     * The name of VPC NAT Gateway.
     */
    name?: pulumi.Input<string>;
}
