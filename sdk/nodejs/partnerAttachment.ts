// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

export class PartnerAttachment extends pulumi.CustomResource {
    /**
     * Get an existing PartnerAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PartnerAttachmentState, opts?: pulumi.CustomResourceOptions): PartnerAttachment {
        return new PartnerAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'digitalocean:index/partnerAttachment:PartnerAttachment';

    /**
     * Returns true if the given object is an instance of PartnerAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PartnerAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PartnerAttachment.__pulumiType;
    }

    declare public readonly bgp: pulumi.Output<outputs.PartnerAttachmentBgp>;
    /**
     * The children uuids of Partner Attachment
     */
    declare public /*out*/ readonly childrens: pulumi.Output<string[]>;
    /**
     * The connection bandwidth in Mbps
     */
    declare public readonly connectionBandwidthInMbps: pulumi.Output<number>;
    /**
     * The date and time when the Partner Attachment was created
     */
    declare public /*out*/ readonly createdAt: pulumi.Output<string>;
    /**
     * The NaaS provider
     */
    declare public readonly naasProvider: pulumi.Output<string>;
    /**
     * The name of the Partner Attachment
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The UUID of the Parent Partner Attachment
     */
    declare public readonly parentUuid: pulumi.Output<string | undefined>;
    /**
     * The redundancy zone for the NaaS
     */
    declare public readonly redundancyZone: pulumi.Output<string>;
    /**
     * The region where the Partner Attachment will be created
     */
    declare public readonly region: pulumi.Output<string>;
    /**
     * The state of the Partner Attachment
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    /**
     * The list of VPC IDs to attach the Partner Attachment to
     */
    declare public readonly vpcIds: pulumi.Output<string[]>;

    /**
     * Create a PartnerAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PartnerAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PartnerAttachmentArgs | PartnerAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PartnerAttachmentState | undefined;
            resourceInputs["bgp"] = state?.bgp;
            resourceInputs["childrens"] = state?.childrens;
            resourceInputs["connectionBandwidthInMbps"] = state?.connectionBandwidthInMbps;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["naasProvider"] = state?.naasProvider;
            resourceInputs["name"] = state?.name;
            resourceInputs["parentUuid"] = state?.parentUuid;
            resourceInputs["redundancyZone"] = state?.redundancyZone;
            resourceInputs["region"] = state?.region;
            resourceInputs["state"] = state?.state;
            resourceInputs["vpcIds"] = state?.vpcIds;
        } else {
            const args = argsOrState as PartnerAttachmentArgs | undefined;
            if (args?.connectionBandwidthInMbps === undefined && !opts.urn) {
                throw new Error("Missing required property 'connectionBandwidthInMbps'");
            }
            if (args?.naasProvider === undefined && !opts.urn) {
                throw new Error("Missing required property 'naasProvider'");
            }
            if (args?.region === undefined && !opts.urn) {
                throw new Error("Missing required property 'region'");
            }
            if (args?.vpcIds === undefined && !opts.urn) {
                throw new Error("Missing required property 'vpcIds'");
            }
            resourceInputs["bgp"] = args?.bgp;
            resourceInputs["connectionBandwidthInMbps"] = args?.connectionBandwidthInMbps;
            resourceInputs["naasProvider"] = args?.naasProvider;
            resourceInputs["name"] = args?.name;
            resourceInputs["parentUuid"] = args?.parentUuid;
            resourceInputs["redundancyZone"] = args?.redundancyZone;
            resourceInputs["region"] = args?.region;
            resourceInputs["vpcIds"] = args?.vpcIds;
            resourceInputs["childrens"] = undefined /*out*/;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PartnerAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PartnerAttachment resources.
 */
export interface PartnerAttachmentState {
    bgp?: pulumi.Input<inputs.PartnerAttachmentBgp>;
    /**
     * The children uuids of Partner Attachment
     */
    childrens?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The connection bandwidth in Mbps
     */
    connectionBandwidthInMbps?: pulumi.Input<number>;
    /**
     * The date and time when the Partner Attachment was created
     */
    createdAt?: pulumi.Input<string>;
    /**
     * The NaaS provider
     */
    naasProvider?: pulumi.Input<string>;
    /**
     * The name of the Partner Attachment
     */
    name?: pulumi.Input<string>;
    /**
     * The UUID of the Parent Partner Attachment
     */
    parentUuid?: pulumi.Input<string>;
    /**
     * The redundancy zone for the NaaS
     */
    redundancyZone?: pulumi.Input<string>;
    /**
     * The region where the Partner Attachment will be created
     */
    region?: pulumi.Input<string>;
    /**
     * The state of the Partner Attachment
     */
    state?: pulumi.Input<string>;
    /**
     * The list of VPC IDs to attach the Partner Attachment to
     */
    vpcIds?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a PartnerAttachment resource.
 */
export interface PartnerAttachmentArgs {
    bgp?: pulumi.Input<inputs.PartnerAttachmentBgp>;
    /**
     * The connection bandwidth in Mbps
     */
    connectionBandwidthInMbps: pulumi.Input<number>;
    /**
     * The NaaS provider
     */
    naasProvider: pulumi.Input<string>;
    /**
     * The name of the Partner Attachment
     */
    name?: pulumi.Input<string>;
    /**
     * The UUID of the Parent Partner Attachment
     */
    parentUuid?: pulumi.Input<string>;
    /**
     * The redundancy zone for the NaaS
     */
    redundancyZone?: pulumi.Input<string>;
    /**
     * The region where the Partner Attachment will be created
     */
    region: pulumi.Input<string>;
    /**
     * The list of VPC IDs to attach the Partner Attachment to
     */
    vpcIds: pulumi.Input<pulumi.Input<string>[]>;
}
