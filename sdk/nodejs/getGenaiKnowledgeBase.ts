// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as enums from "./types/enums";
import * as utilities from "./utilities";

export function getGenaiKnowledgeBase(args?: GetGenaiKnowledgeBaseArgs, opts?: pulumi.InvokeOptions): Promise<GetGenaiKnowledgeBaseResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getGenaiKnowledgeBase:getGenaiKnowledgeBase", {
        "addedToAgentAt": args.addedToAgentAt,
        "databaseId": args.databaseId,
        "embeddingModelUuid": args.embeddingModelUuid,
        "isPublic": args.isPublic,
        "lastIndexingJobs": args.lastIndexingJobs,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
        "tags": args.tags,
        "userId": args.userId,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getGenaiKnowledgeBase.
 */
export interface GetGenaiKnowledgeBaseArgs {
    addedToAgentAt?: string;
    databaseId?: string;
    embeddingModelUuid?: string;
    isPublic?: boolean;
    lastIndexingJobs?: inputs.GetGenaiKnowledgeBaseLastIndexingJob[];
    name?: string;
    projectId?: string;
    region?: string;
    tags?: string[];
    userId?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getGenaiKnowledgeBase.
 */
export interface GetGenaiKnowledgeBaseResult {
    readonly addedToAgentAt?: string;
    readonly createdAt: string;
    readonly databaseId?: string;
    readonly embeddingModelUuid?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly isPublic?: boolean;
    readonly lastIndexingJobs?: outputs.GetGenaiKnowledgeBaseLastIndexingJob[];
    readonly name?: string;
    readonly projectId?: string;
    readonly region?: string;
    readonly tags?: string[];
    readonly updatedAt: string;
    readonly userId?: string;
    readonly uuid?: string;
}
export function getGenaiKnowledgeBaseOutput(args?: GetGenaiKnowledgeBaseOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetGenaiKnowledgeBaseResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("digitalocean:index/getGenaiKnowledgeBase:getGenaiKnowledgeBase", {
        "addedToAgentAt": args.addedToAgentAt,
        "databaseId": args.databaseId,
        "embeddingModelUuid": args.embeddingModelUuid,
        "isPublic": args.isPublic,
        "lastIndexingJobs": args.lastIndexingJobs,
        "name": args.name,
        "projectId": args.projectId,
        "region": args.region,
        "tags": args.tags,
        "userId": args.userId,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getGenaiKnowledgeBase.
 */
export interface GetGenaiKnowledgeBaseOutputArgs {
    addedToAgentAt?: pulumi.Input<string>;
    databaseId?: pulumi.Input<string>;
    embeddingModelUuid?: pulumi.Input<string>;
    isPublic?: pulumi.Input<boolean>;
    lastIndexingJobs?: pulumi.Input<pulumi.Input<inputs.GetGenaiKnowledgeBaseLastIndexingJobArgs>[]>;
    name?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    userId?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
