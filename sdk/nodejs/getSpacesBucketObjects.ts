// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * > **NOTE on `maxKeys`:** Retrieving very large numbers of keys can adversely affect the provider's performance.
 *
 * The bucket-objects data source returns keys (i.e., file names) and other metadata about objects in a Spaces bucket.
 */
export function getSpacesBucketObjects(args: GetSpacesBucketObjectsArgs, opts?: pulumi.InvokeOptions): Promise<GetSpacesBucketObjectsResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("digitalocean:index/getSpacesBucketObjects:getSpacesBucketObjects", {
        "bucket": args.bucket,
        "delimiter": args.delimiter,
        "encodingType": args.encodingType,
        "maxKeys": args.maxKeys,
        "prefix": args.prefix,
        "region": args.region,
    }, opts);
}

/**
 * A collection of arguments for invoking getSpacesBucketObjects.
 */
export interface GetSpacesBucketObjectsArgs {
    /**
     * Lists object keys in this Spaces bucket
     */
    bucket: string;
    /**
     * A character used to group keys (Default: none)
     */
    delimiter?: string;
    /**
     * Encodes keys using this method (Default: none; besides none, only "url" can be used)
     */
    encodingType?: string;
    /**
     * Maximum object keys to return (Default: 1000)
     */
    maxKeys?: number;
    /**
     * Limits results to object keys with this prefix (Default: none)
     */
    prefix?: string;
    /**
     * The slug of the region where the bucket is stored.
     */
    region: string;
}

/**
 * A collection of values returned by getSpacesBucketObjects.
 */
export interface GetSpacesBucketObjectsResult {
    readonly bucket: string;
    /**
     * List of any keys between `prefix` and the next occurrence of `delimiter` (i.e., similar to subdirectories of the `prefix` "directory"); the list is only returned when you specify `delimiter`
     */
    readonly commonPrefixes: string[];
    readonly delimiter?: string;
    readonly encodingType?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * List of strings representing object keys
     */
    readonly keys: string[];
    readonly maxKeys?: number;
    /**
     * List of strings representing object owner IDs
     */
    readonly owners: string[];
    readonly prefix?: string;
    readonly region: string;
}

export function getSpacesBucketObjectsOutput(args: GetSpacesBucketObjectsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpacesBucketObjectsResult> {
    return pulumi.output(args).apply(a => getSpacesBucketObjects(a, opts))
}

/**
 * A collection of arguments for invoking getSpacesBucketObjects.
 */
export interface GetSpacesBucketObjectsOutputArgs {
    /**
     * Lists object keys in this Spaces bucket
     */
    bucket: pulumi.Input<string>;
    /**
     * A character used to group keys (Default: none)
     */
    delimiter?: pulumi.Input<string>;
    /**
     * Encodes keys using this method (Default: none; besides none, only "url" can be used)
     */
    encodingType?: pulumi.Input<string>;
    /**
     * Maximum object keys to return (Default: 1000)
     */
    maxKeys?: pulumi.Input<number>;
    /**
     * Limits results to object keys with this prefix (Default: none)
     */
    prefix?: pulumi.Input<string>;
    /**
     * The slug of the region where the bucket is stored.
     */
    region: pulumi.Input<string>;
}
