// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The provider type for the digitalocean package. By default, resources use package-wide configuration
 * settings, however an explicit `Provider` instance may be created and passed during resource
 * construction to achieve fine-grained programmatic control over provider settings. See the
 * [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
 */
export class Provider extends pulumi.ProviderResource {
    /** @internal */
    public static readonly __pulumiType = 'digitalocean';

    /**
     * Returns true if the given object is an instance of Provider.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Provider {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === "pulumi:providers:" + Provider.__pulumiType;
    }

    /**
     * The URL to use for the DigitalOcean API.
     */
    declare public readonly apiEndpoint: pulumi.Output<string | undefined>;
    /**
     * The access key ID for Spaces API operations.
     */
    declare public readonly spacesAccessId: pulumi.Output<string | undefined>;
    /**
     * The URL to use for the DigitalOcean Spaces API.
     */
    declare public readonly spacesEndpoint: pulumi.Output<string | undefined>;
    /**
     * The secret access key for Spaces API operations.
     */
    declare public readonly spacesSecretKey: pulumi.Output<string | undefined>;
    /**
     * The token key for API operations.
     */
    declare public readonly token: pulumi.Output<string | undefined>;

    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        {
            resourceInputs["apiEndpoint"] = (args?.apiEndpoint) ?? (utilities.getEnv("DIGITALOCEAN_API_URL") || "https://api.digitalocean.com");
            resourceInputs["httpRetryMax"] = pulumi.output(args?.httpRetryMax).apply(JSON.stringify);
            resourceInputs["httpRetryWaitMax"] = pulumi.output(args?.httpRetryWaitMax).apply(JSON.stringify);
            resourceInputs["httpRetryWaitMin"] = pulumi.output(args?.httpRetryWaitMin).apply(JSON.stringify);
            resourceInputs["requestsPerSecond"] = pulumi.output(args?.requestsPerSecond).apply(JSON.stringify);
            resourceInputs["spacesAccessId"] = args?.spacesAccessId;
            resourceInputs["spacesEndpoint"] = (args?.spacesEndpoint) ?? utilities.getEnv("SPACES_ENDPOINT_URL");
            resourceInputs["spacesSecretKey"] = args?.spacesSecretKey;
            resourceInputs["token"] = args?.token;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Provider.__pulumiType, name, resourceInputs, opts);
    }

    /**
     * This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.
     */
    terraformConfig(): pulumi.Output<Provider.TerraformConfigResult> {
        return pulumi.runtime.call("pulumi:providers:digitalocean/terraformConfig", {
            "__self__": this,
        }, this);
    }
}

/**
 * The set of arguments for constructing a Provider resource.
 */
export interface ProviderArgs {
    /**
     * The URL to use for the DigitalOcean API.
     */
    apiEndpoint?: pulumi.Input<string>;
    /**
     * The maximum number of retries on a failed API request.
     */
    httpRetryMax?: pulumi.Input<number>;
    /**
     * The maximum wait time (in seconds) between failed API requests.
     */
    httpRetryWaitMax?: pulumi.Input<number>;
    /**
     * The minimum wait time (in seconds) between failed API requests.
     */
    httpRetryWaitMin?: pulumi.Input<number>;
    /**
     * The rate of requests per second to limit the HTTP client.
     */
    requestsPerSecond?: pulumi.Input<number>;
    /**
     * The access key ID for Spaces API operations.
     */
    spacesAccessId?: pulumi.Input<string>;
    /**
     * The URL to use for the DigitalOcean Spaces API.
     */
    spacesEndpoint?: pulumi.Input<string>;
    /**
     * The secret access key for Spaces API operations.
     */
    spacesSecretKey?: pulumi.Input<string>;
    /**
     * The token key for API operations.
     */
    token?: pulumi.Input<string>;
}

export namespace Provider {
    /**
     * The results of the Provider.terraformConfig method.
     */
    export interface TerraformConfigResult {
        readonly result: {[key: string]: any};
    }

}
