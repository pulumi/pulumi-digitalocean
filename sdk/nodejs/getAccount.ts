// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Get information on your DigitalOcean account.
 */
export function getAccount(opts?: pulumi.InvokeOptions): Promise<GetAccountResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("digitalocean:index/getAccount:getAccount", {
    }, opts);
}

/**
 * A collection of values returned by getAccount.
 */
export interface GetAccountResult {
    /**
     * The total number of droplets current user or team may have active at one time.
     */
    readonly dropletLimit: number;
    /**
     * The email address used by the current user to register for DigitalOcean.
     */
    readonly email: string;
    /**
     * If true, the user has verified their account via email. False otherwise.
     */
    readonly emailVerified: boolean;
    /**
     * The total number of floating IPs the current user or team may have.
     */
    readonly floatingIpLimit: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * This value is one of "active", "warning" or "locked".
     */
    readonly status: string;
    /**
     * A human-readable message giving more details about the status of the account.
     */
    readonly statusMessage: string;
    /**
     * The unique universal identifier for the current user.
     */
    readonly uuid: string;
}
/**
 * Get information on your DigitalOcean account.
 */
export function getAccountOutput(opts?: pulumi.InvokeOptions): pulumi.Output<GetAccountResult> {
    return pulumi.output(getAccount(opts))
}
