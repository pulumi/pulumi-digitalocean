// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetFloatingIp
    {
        /// <summary>
        /// &gt; **Deprecated:** DigitalOcean Floating IPs have been renamed reserved IPs. This data source will be removed in a future release. Please use `digitalocean.ReservedIp` instead.
        /// 
        /// Get information on a floating ip. This data source provides the region and Droplet id
        /// as configured on your DigitalOcean account. This is useful if the floating IP
        /// in question is not managed by the provider or you need to find the Droplet the IP is
        /// attached to.
        /// 
        /// An error is triggered if the provided floating IP does not exist.
        /// </summary>
        public static Task<GetFloatingIpResult> InvokeAsync(GetFloatingIpArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetFloatingIpResult>("digitalocean:index/getFloatingIp:getFloatingIp", args ?? new GetFloatingIpArgs(), options.WithDefaults());

        /// <summary>
        /// &gt; **Deprecated:** DigitalOcean Floating IPs have been renamed reserved IPs. This data source will be removed in a future release. Please use `digitalocean.ReservedIp` instead.
        /// 
        /// Get information on a floating ip. This data source provides the region and Droplet id
        /// as configured on your DigitalOcean account. This is useful if the floating IP
        /// in question is not managed by the provider or you need to find the Droplet the IP is
        /// attached to.
        /// 
        /// An error is triggered if the provided floating IP does not exist.
        /// </summary>
        public static Output<GetFloatingIpResult> Invoke(GetFloatingIpInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetFloatingIpResult>("digitalocean:index/getFloatingIp:getFloatingIp", args ?? new GetFloatingIpInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetFloatingIpArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The allocated IP address of the specific floating IP to retrieve.
        /// </summary>
        [Input("ipAddress", required: true)]
        public string IpAddress { get; set; } = null!;

        public GetFloatingIpArgs()
        {
        }
        public static new GetFloatingIpArgs Empty => new GetFloatingIpArgs();
    }

    public sealed class GetFloatingIpInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The allocated IP address of the specific floating IP to retrieve.
        /// </summary>
        [Input("ipAddress", required: true)]
        public Input<string> IpAddress { get; set; } = null!;

        public GetFloatingIpInvokeArgs()
        {
        }
        public static new GetFloatingIpInvokeArgs Empty => new GetFloatingIpInvokeArgs();
    }


    [OutputType]
    public sealed class GetFloatingIpResult
    {
        /// <summary>
        /// The Droplet id that the floating IP has been assigned to.
        /// </summary>
        public readonly int DropletId;
        /// <summary>
        /// The uniform resource name of the floating IP.
        /// </summary>
        public readonly string FloatingIpUrn;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string IpAddress;
        /// <summary>
        /// The region that the floating IP is reserved to.
        /// </summary>
        public readonly string Region;

        [OutputConstructor]
        private GetFloatingIpResult(
            int dropletId,

            string floatingIpUrn,

            string id,

            string ipAddress,

            string region)
        {
            DropletId = dropletId;
            FloatingIpUrn = floatingIpUrn;
            Id = id;
            IpAddress = ipAddress;
            Region = region;
        }
    }
}
