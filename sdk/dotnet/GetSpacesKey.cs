// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetSpacesKey
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// Get the key by access key ID:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = DigitalOcean.GetSpacesKey.Invoke(new()
        ///     {
        ///         AccessKey = "ACCESS_KEY_ID",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["keyGrants"] = example.Apply(getSpacesKeyResult =&gt; getSpacesKeyResult.Grants),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetSpacesKeyResult> InvokeAsync(GetSpacesKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSpacesKeyResult>("digitalocean:index/getSpacesKey:getSpacesKey", args ?? new GetSpacesKeyArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// Get the key by access key ID:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = DigitalOcean.GetSpacesKey.Invoke(new()
        ///     {
        ///         AccessKey = "ACCESS_KEY_ID",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["keyGrants"] = example.Apply(getSpacesKeyResult =&gt; getSpacesKeyResult.Grants),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSpacesKeyResult> Invoke(GetSpacesKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpacesKeyResult>("digitalocean:index/getSpacesKey:getSpacesKey", args ?? new GetSpacesKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// Get the key by access key ID:
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = DigitalOcean.GetSpacesKey.Invoke(new()
        ///     {
        ///         AccessKey = "ACCESS_KEY_ID",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["keyGrants"] = example.Apply(getSpacesKeyResult =&gt; getSpacesKeyResult.Grants),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetSpacesKeyResult> Invoke(GetSpacesKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSpacesKeyResult>("digitalocean:index/getSpacesKey:getSpacesKey", args ?? new GetSpacesKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSpacesKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Access Key ID of the Spaces key.
        /// </summary>
        [Input("accessKey", required: true)]
        public string AccessKey { get; set; } = null!;

        public GetSpacesKeyArgs()
        {
        }
        public static new GetSpacesKeyArgs Empty => new GetSpacesKeyArgs();
    }

    public sealed class GetSpacesKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Access Key ID of the Spaces key.
        /// </summary>
        [Input("accessKey", required: true)]
        public Input<string> AccessKey { get; set; } = null!;

        public GetSpacesKeyInvokeArgs()
        {
        }
        public static new GetSpacesKeyInvokeArgs Empty => new GetSpacesKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetSpacesKeyResult
    {
        /// <summary>
        /// The access key ID of the Spaces key
        /// </summary>
        public readonly string AccessKey;
        /// <summary>
        /// The creation time of the Spaces key
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The list of grants associated with the Spaces key.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSpacesKeyGrantResult> Grants;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the Spaces key
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private GetSpacesKeyResult(
            string accessKey,

            string createdAt,

            ImmutableArray<Outputs.GetSpacesKeyGrantResult> grants,

            string id,

            string name)
        {
            AccessKey = accessKey;
            CreatedAt = createdAt;
            Grants = grants;
            Id = id;
            Name = name;
        }
    }
}
