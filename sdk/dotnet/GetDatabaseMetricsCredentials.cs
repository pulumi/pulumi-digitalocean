// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetDatabaseMetricsCredentials
    {
        /// <summary>
        /// Provides access to the metrics credentials for DigitalOcean database clusters. These credentials are account-wide and can be used to access metrics for any database cluster in the account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = DigitalOcean.GetDatabaseMetricsCredentials.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["metricsUsername"] = example.Apply(getDatabaseMetricsCredentialsResult =&gt; getDatabaseMetricsCredentialsResult.Username),
        ///         ["metricsPassword"] = example.Apply(getDatabaseMetricsCredentialsResult =&gt; getDatabaseMetricsCredentialsResult.Password),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetDatabaseMetricsCredentialsResult> InvokeAsync(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseMetricsCredentialsResult>("digitalocean:index/getDatabaseMetricsCredentials:getDatabaseMetricsCredentials", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Provides access to the metrics credentials for DigitalOcean database clusters. These credentials are account-wide and can be used to access metrics for any database cluster in the account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = DigitalOcean.GetDatabaseMetricsCredentials.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["metricsUsername"] = example.Apply(getDatabaseMetricsCredentialsResult =&gt; getDatabaseMetricsCredentialsResult.Username),
        ///         ["metricsPassword"] = example.Apply(getDatabaseMetricsCredentialsResult =&gt; getDatabaseMetricsCredentialsResult.Password),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseMetricsCredentialsResult> Invoke(InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseMetricsCredentialsResult>("digitalocean:index/getDatabaseMetricsCredentials:getDatabaseMetricsCredentials", InvokeArgs.Empty, options.WithDefaults());

        /// <summary>
        /// Provides access to the metrics credentials for DigitalOcean database clusters. These credentials are account-wide and can be used to access metrics for any database cluster in the account.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = DigitalOcean.GetDatabaseMetricsCredentials.Invoke();
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["metricsUsername"] = example.Apply(getDatabaseMetricsCredentialsResult =&gt; getDatabaseMetricsCredentialsResult.Username),
        ///         ["metricsPassword"] = example.Apply(getDatabaseMetricsCredentialsResult =&gt; getDatabaseMetricsCredentialsResult.Password),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetDatabaseMetricsCredentialsResult> Invoke(InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseMetricsCredentialsResult>("digitalocean:index/getDatabaseMetricsCredentials:getDatabaseMetricsCredentials", InvokeArgs.Empty, options.WithDefaults());
    }


    [OutputType]
    public sealed class GetDatabaseMetricsCredentialsResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The password for accessing database metrics. This is marked as sensitive.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The username for accessing database metrics.
        /// </summary>
        public readonly string Username;

        [OutputConstructor]
        private GetDatabaseMetricsCredentialsResult(
            string id,

            string password,

            string username)
        {
            Id = id;
            Password = password;
            Username = username;
        }
    }
}
