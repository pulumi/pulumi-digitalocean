// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetGenaiKnowledgeBase
    {
        public static Task<GetGenaiKnowledgeBaseResult> InvokeAsync(GetGenaiKnowledgeBaseArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGenaiKnowledgeBaseResult>("digitalocean:index/getGenaiKnowledgeBase:getGenaiKnowledgeBase", args ?? new GetGenaiKnowledgeBaseArgs(), options.WithDefaults());

        public static Output<GetGenaiKnowledgeBaseResult> Invoke(GetGenaiKnowledgeBaseInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiKnowledgeBaseResult>("digitalocean:index/getGenaiKnowledgeBase:getGenaiKnowledgeBase", args ?? new GetGenaiKnowledgeBaseInvokeArgs(), options.WithDefaults());

        public static Output<GetGenaiKnowledgeBaseResult> Invoke(GetGenaiKnowledgeBaseInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiKnowledgeBaseResult>("digitalocean:index/getGenaiKnowledgeBase:getGenaiKnowledgeBase", args ?? new GetGenaiKnowledgeBaseInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGenaiKnowledgeBaseArgs : global::Pulumi.InvokeArgs
    {
        [Input("addedToAgentAt")]
        public string? AddedToAgentAt { get; set; }

        [Input("databaseId")]
        public string? DatabaseId { get; set; }

        [Input("embeddingModelUuid")]
        public string? EmbeddingModelUuid { get; set; }

        [Input("isPublic")]
        public bool? IsPublic { get; set; }

        [Input("lastIndexingJobs")]
        private List<Inputs.GetGenaiKnowledgeBaseLastIndexingJobArgs>? _lastIndexingJobs;
        public List<Inputs.GetGenaiKnowledgeBaseLastIndexingJobArgs> LastIndexingJobs
        {
            get => _lastIndexingJobs ?? (_lastIndexingJobs = new List<Inputs.GetGenaiKnowledgeBaseLastIndexingJobArgs>());
            set => _lastIndexingJobs = value;
        }

        [Input("name")]
        public string? Name { get; set; }

        [Input("projectId")]
        public string? ProjectId { get; set; }

        [Input("region")]
        public string? Region { get; set; }

        [Input("tags")]
        private List<string>? _tags;
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        [Input("userId")]
        public string? UserId { get; set; }

        [Input("uuid")]
        public string? Uuid { get; set; }

        public GetGenaiKnowledgeBaseArgs()
        {
        }
        public static new GetGenaiKnowledgeBaseArgs Empty => new GetGenaiKnowledgeBaseArgs();
    }

    public sealed class GetGenaiKnowledgeBaseInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("addedToAgentAt")]
        public Input<string>? AddedToAgentAt { get; set; }

        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        [Input("embeddingModelUuid")]
        public Input<string>? EmbeddingModelUuid { get; set; }

        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        [Input("lastIndexingJobs")]
        private InputList<Inputs.GetGenaiKnowledgeBaseLastIndexingJobInputArgs>? _lastIndexingJobs;
        public InputList<Inputs.GetGenaiKnowledgeBaseLastIndexingJobInputArgs> LastIndexingJobs
        {
            get => _lastIndexingJobs ?? (_lastIndexingJobs = new InputList<Inputs.GetGenaiKnowledgeBaseLastIndexingJobInputArgs>());
            set => _lastIndexingJobs = value;
        }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("userId")]
        public Input<string>? UserId { get; set; }

        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public GetGenaiKnowledgeBaseInvokeArgs()
        {
        }
        public static new GetGenaiKnowledgeBaseInvokeArgs Empty => new GetGenaiKnowledgeBaseInvokeArgs();
    }


    [OutputType]
    public sealed class GetGenaiKnowledgeBaseResult
    {
        public readonly string? AddedToAgentAt;
        public readonly string CreatedAt;
        public readonly string? DatabaseId;
        public readonly string? EmbeddingModelUuid;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsPublic;
        public readonly ImmutableArray<Outputs.GetGenaiKnowledgeBaseLastIndexingJobResult> LastIndexingJobs;
        public readonly string? Name;
        public readonly string? ProjectId;
        public readonly string? Region;
        public readonly ImmutableArray<string> Tags;
        public readonly string UpdatedAt;
        public readonly string? UserId;
        public readonly string? Uuid;

        [OutputConstructor]
        private GetGenaiKnowledgeBaseResult(
            string? addedToAgentAt,

            string createdAt,

            string? databaseId,

            string? embeddingModelUuid,

            string id,

            bool? isPublic,

            ImmutableArray<Outputs.GetGenaiKnowledgeBaseLastIndexingJobResult> lastIndexingJobs,

            string? name,

            string? projectId,

            string? region,

            ImmutableArray<string> tags,

            string updatedAt,

            string? userId,

            string? uuid)
        {
            AddedToAgentAt = addedToAgentAt;
            CreatedAt = createdAt;
            DatabaseId = databaseId;
            EmbeddingModelUuid = embeddingModelUuid;
            Id = id;
            IsPublic = isPublic;
            LastIndexingJobs = lastIndexingJobs;
            Name = name;
            ProjectId = projectId;
            Region = region;
            Tags = tags;
            UpdatedAt = updatedAt;
            UserId = userId;
            Uuid = uuid;
        }
    }
}
