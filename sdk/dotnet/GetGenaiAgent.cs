// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetGenaiAgent
    {
        public static Task<GetGenaiAgentResult> InvokeAsync(GetGenaiAgentArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGenaiAgentResult>("digitalocean:index/getGenaiAgent:getGenaiAgent", args ?? new GetGenaiAgentArgs(), options.WithDefaults());

        public static Output<GetGenaiAgentResult> Invoke(GetGenaiAgentInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiAgentResult>("digitalocean:index/getGenaiAgent:getGenaiAgent", args ?? new GetGenaiAgentInvokeArgs(), options.WithDefaults());

        public static Output<GetGenaiAgentResult> Invoke(GetGenaiAgentInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiAgentResult>("digitalocean:index/getGenaiAgent:getGenaiAgent", args ?? new GetGenaiAgentInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGenaiAgentArgs : global::Pulumi.InvokeArgs
    {
        [Input("agentGuardrails")]
        private List<Inputs.GetGenaiAgentAgentGuardrailArgs>? _agentGuardrails;
        public List<Inputs.GetGenaiAgentAgentGuardrailArgs> AgentGuardrails
        {
            get => _agentGuardrails ?? (_agentGuardrails = new List<Inputs.GetGenaiAgentAgentGuardrailArgs>());
            set => _agentGuardrails = value;
        }

        [Input("agentId", required: true)]
        public string AgentId { get; set; } = null!;

        [Input("anthropicApiKeys")]
        private List<Inputs.GetGenaiAgentAnthropicApiKeyArgs>? _anthropicApiKeys;
        public List<Inputs.GetGenaiAgentAnthropicApiKeyArgs> AnthropicApiKeys
        {
            get => _anthropicApiKeys ?? (_anthropicApiKeys = new List<Inputs.GetGenaiAgentAnthropicApiKeyArgs>());
            set => _anthropicApiKeys = value;
        }

        [Input("apiKeyInfos")]
        private List<Inputs.GetGenaiAgentApiKeyInfoArgs>? _apiKeyInfos;
        public List<Inputs.GetGenaiAgentApiKeyInfoArgs> ApiKeyInfos
        {
            get => _apiKeyInfos ?? (_apiKeyInfos = new List<Inputs.GetGenaiAgentApiKeyInfoArgs>());
            set => _apiKeyInfos = value;
        }

        [Input("apiKeys")]
        private List<Inputs.GetGenaiAgentApiKeyArgs>? _apiKeys;
        public List<Inputs.GetGenaiAgentApiKeyArgs> ApiKeys
        {
            get => _apiKeys ?? (_apiKeys = new List<Inputs.GetGenaiAgentApiKeyArgs>());
            set => _apiKeys = value;
        }

        [Input("chatbotIdentifiers")]
        private List<Inputs.GetGenaiAgentChatbotIdentifierArgs>? _chatbotIdentifiers;
        public List<Inputs.GetGenaiAgentChatbotIdentifierArgs> ChatbotIdentifiers
        {
            get => _chatbotIdentifiers ?? (_chatbotIdentifiers = new List<Inputs.GetGenaiAgentChatbotIdentifierArgs>());
            set => _chatbotIdentifiers = value;
        }

        [Input("chatbots")]
        private List<Inputs.GetGenaiAgentChatbotArgs>? _chatbots;
        public List<Inputs.GetGenaiAgentChatbotArgs> Chatbots
        {
            get => _chatbots ?? (_chatbots = new List<Inputs.GetGenaiAgentChatbotArgs>());
            set => _chatbots = value;
        }

        [Input("deployments")]
        private List<Inputs.GetGenaiAgentDeploymentArgs>? _deployments;
        public List<Inputs.GetGenaiAgentDeploymentArgs> Deployments
        {
            get => _deployments ?? (_deployments = new List<Inputs.GetGenaiAgentDeploymentArgs>());
            set => _deployments = value;
        }

        [Input("description")]
        public string? Description { get; set; }

        [Input("functions")]
        private List<Inputs.GetGenaiAgentFunctionArgs>? _functions;
        public List<Inputs.GetGenaiAgentFunctionArgs> Functions
        {
            get => _functions ?? (_functions = new List<Inputs.GetGenaiAgentFunctionArgs>());
            set => _functions = value;
        }

        [Input("ifCase")]
        public string? IfCase { get; set; }

        [Input("k")]
        public int? K { get; set; }

        [Input("knowledgeBases")]
        private List<Inputs.GetGenaiAgentKnowledgeBaseArgs>? _knowledgeBases;
        public List<Inputs.GetGenaiAgentKnowledgeBaseArgs> KnowledgeBases
        {
            get => _knowledgeBases ?? (_knowledgeBases = new List<Inputs.GetGenaiAgentKnowledgeBaseArgs>());
            set => _knowledgeBases = value;
        }

        [Input("maxTokens")]
        public int? MaxTokens { get; set; }

        [Input("models")]
        private List<Inputs.GetGenaiAgentModelArgs>? _models;
        public List<Inputs.GetGenaiAgentModelArgs> Models
        {
            get => _models ?? (_models = new List<Inputs.GetGenaiAgentModelArgs>());
            set => _models = value;
        }

        [Input("openAiApiKeys")]
        private List<Inputs.GetGenaiAgentOpenAiApiKeyArgs>? _openAiApiKeys;
        public List<Inputs.GetGenaiAgentOpenAiApiKeyArgs> OpenAiApiKeys
        {
            get => _openAiApiKeys ?? (_openAiApiKeys = new List<Inputs.GetGenaiAgentOpenAiApiKeyArgs>());
            set => _openAiApiKeys = value;
        }

        [Input("retrievalMethod")]
        public string? RetrievalMethod { get; set; }

        [Input("routeCreatedBy")]
        public string? RouteCreatedBy { get; set; }

        [Input("routeName")]
        public string? RouteName { get; set; }

        [Input("routeUuid")]
        public string? RouteUuid { get; set; }

        [Input("tags")]
        private List<string>? _tags;
        public List<string> Tags
        {
            get => _tags ?? (_tags = new List<string>());
            set => _tags = value;
        }

        [Input("temperature")]
        public double? Temperature { get; set; }

        [Input("templates")]
        private List<Inputs.GetGenaiAgentTemplateArgs>? _templates;
        public List<Inputs.GetGenaiAgentTemplateArgs> Templates
        {
            get => _templates ?? (_templates = new List<Inputs.GetGenaiAgentTemplateArgs>());
            set => _templates = value;
        }

        [Input("topP")]
        public double? TopP { get; set; }

        [Input("url")]
        public string? Url { get; set; }

        [Input("userId")]
        public string? UserId { get; set; }

        public GetGenaiAgentArgs()
        {
        }
        public static new GetGenaiAgentArgs Empty => new GetGenaiAgentArgs();
    }

    public sealed class GetGenaiAgentInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("agentGuardrails")]
        private InputList<Inputs.GetGenaiAgentAgentGuardrailInputArgs>? _agentGuardrails;
        public InputList<Inputs.GetGenaiAgentAgentGuardrailInputArgs> AgentGuardrails
        {
            get => _agentGuardrails ?? (_agentGuardrails = new InputList<Inputs.GetGenaiAgentAgentGuardrailInputArgs>());
            set => _agentGuardrails = value;
        }

        [Input("agentId", required: true)]
        public Input<string> AgentId { get; set; } = null!;

        [Input("anthropicApiKeys")]
        private InputList<Inputs.GetGenaiAgentAnthropicApiKeyInputArgs>? _anthropicApiKeys;
        public InputList<Inputs.GetGenaiAgentAnthropicApiKeyInputArgs> AnthropicApiKeys
        {
            get => _anthropicApiKeys ?? (_anthropicApiKeys = new InputList<Inputs.GetGenaiAgentAnthropicApiKeyInputArgs>());
            set => _anthropicApiKeys = value;
        }

        [Input("apiKeyInfos")]
        private InputList<Inputs.GetGenaiAgentApiKeyInfoInputArgs>? _apiKeyInfos;
        public InputList<Inputs.GetGenaiAgentApiKeyInfoInputArgs> ApiKeyInfos
        {
            get => _apiKeyInfos ?? (_apiKeyInfos = new InputList<Inputs.GetGenaiAgentApiKeyInfoInputArgs>());
            set => _apiKeyInfos = value;
        }

        [Input("apiKeys")]
        private InputList<Inputs.GetGenaiAgentApiKeyInputArgs>? _apiKeys;
        public InputList<Inputs.GetGenaiAgentApiKeyInputArgs> ApiKeys
        {
            get => _apiKeys ?? (_apiKeys = new InputList<Inputs.GetGenaiAgentApiKeyInputArgs>());
            set => _apiKeys = value;
        }

        [Input("chatbotIdentifiers")]
        private InputList<Inputs.GetGenaiAgentChatbotIdentifierInputArgs>? _chatbotIdentifiers;
        public InputList<Inputs.GetGenaiAgentChatbotIdentifierInputArgs> ChatbotIdentifiers
        {
            get => _chatbotIdentifiers ?? (_chatbotIdentifiers = new InputList<Inputs.GetGenaiAgentChatbotIdentifierInputArgs>());
            set => _chatbotIdentifiers = value;
        }

        [Input("chatbots")]
        private InputList<Inputs.GetGenaiAgentChatbotInputArgs>? _chatbots;
        public InputList<Inputs.GetGenaiAgentChatbotInputArgs> Chatbots
        {
            get => _chatbots ?? (_chatbots = new InputList<Inputs.GetGenaiAgentChatbotInputArgs>());
            set => _chatbots = value;
        }

        [Input("deployments")]
        private InputList<Inputs.GetGenaiAgentDeploymentInputArgs>? _deployments;
        public InputList<Inputs.GetGenaiAgentDeploymentInputArgs> Deployments
        {
            get => _deployments ?? (_deployments = new InputList<Inputs.GetGenaiAgentDeploymentInputArgs>());
            set => _deployments = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("functions")]
        private InputList<Inputs.GetGenaiAgentFunctionInputArgs>? _functions;
        public InputList<Inputs.GetGenaiAgentFunctionInputArgs> Functions
        {
            get => _functions ?? (_functions = new InputList<Inputs.GetGenaiAgentFunctionInputArgs>());
            set => _functions = value;
        }

        [Input("ifCase")]
        public Input<string>? IfCase { get; set; }

        [Input("k")]
        public Input<int>? K { get; set; }

        [Input("knowledgeBases")]
        private InputList<Inputs.GetGenaiAgentKnowledgeBaseInputArgs>? _knowledgeBases;
        public InputList<Inputs.GetGenaiAgentKnowledgeBaseInputArgs> KnowledgeBases
        {
            get => _knowledgeBases ?? (_knowledgeBases = new InputList<Inputs.GetGenaiAgentKnowledgeBaseInputArgs>());
            set => _knowledgeBases = value;
        }

        [Input("maxTokens")]
        public Input<int>? MaxTokens { get; set; }

        [Input("models")]
        private InputList<Inputs.GetGenaiAgentModelInputArgs>? _models;
        public InputList<Inputs.GetGenaiAgentModelInputArgs> Models
        {
            get => _models ?? (_models = new InputList<Inputs.GetGenaiAgentModelInputArgs>());
            set => _models = value;
        }

        [Input("openAiApiKeys")]
        private InputList<Inputs.GetGenaiAgentOpenAiApiKeyInputArgs>? _openAiApiKeys;
        public InputList<Inputs.GetGenaiAgentOpenAiApiKeyInputArgs> OpenAiApiKeys
        {
            get => _openAiApiKeys ?? (_openAiApiKeys = new InputList<Inputs.GetGenaiAgentOpenAiApiKeyInputArgs>());
            set => _openAiApiKeys = value;
        }

        [Input("retrievalMethod")]
        public Input<string>? RetrievalMethod { get; set; }

        [Input("routeCreatedBy")]
        public Input<string>? RouteCreatedBy { get; set; }

        [Input("routeName")]
        public Input<string>? RouteName { get; set; }

        [Input("routeUuid")]
        public Input<string>? RouteUuid { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        [Input("temperature")]
        public Input<double>? Temperature { get; set; }

        [Input("templates")]
        private InputList<Inputs.GetGenaiAgentTemplateInputArgs>? _templates;
        public InputList<Inputs.GetGenaiAgentTemplateInputArgs> Templates
        {
            get => _templates ?? (_templates = new InputList<Inputs.GetGenaiAgentTemplateInputArgs>());
            set => _templates = value;
        }

        [Input("topP")]
        public Input<double>? TopP { get; set; }

        [Input("url")]
        public Input<string>? Url { get; set; }

        [Input("userId")]
        public Input<string>? UserId { get; set; }

        public GetGenaiAgentInvokeArgs()
        {
        }
        public static new GetGenaiAgentInvokeArgs Empty => new GetGenaiAgentInvokeArgs();
    }


    [OutputType]
    public sealed class GetGenaiAgentResult
    {
        public readonly ImmutableArray<Outputs.GetGenaiAgentAgentGuardrailResult> AgentGuardrails;
        public readonly string AgentId;
        public readonly ImmutableArray<Outputs.GetGenaiAgentAnthropicApiKeyResult> AnthropicApiKeys;
        public readonly ImmutableArray<Outputs.GetGenaiAgentApiKeyInfoResult> ApiKeyInfos;
        public readonly ImmutableArray<Outputs.GetGenaiAgentApiKeyResult> ApiKeys;
        public readonly ImmutableArray<Outputs.GetGenaiAgentChatbotIdentifierResult> ChatbotIdentifiers;
        public readonly ImmutableArray<Outputs.GetGenaiAgentChatbotResult> Chatbots;
        public readonly ImmutableArray<Outputs.GetGenaiAgentChildAgentResult> ChildAgents;
        public readonly string CreatedAt;
        public readonly ImmutableArray<Outputs.GetGenaiAgentDeploymentResult> Deployments;
        public readonly string? Description;
        public readonly ImmutableArray<Outputs.GetGenaiAgentFunctionResult> Functions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IfCase;
        public readonly string Instruction;
        public readonly int? K;
        public readonly ImmutableArray<Outputs.GetGenaiAgentKnowledgeBaseResult> KnowledgeBases;
        public readonly int? MaxTokens;
        public readonly string ModelUuid;
        public readonly ImmutableArray<Outputs.GetGenaiAgentModelResult> Models;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetGenaiAgentOpenAiApiKeyResult> OpenAiApiKeys;
        public readonly ImmutableArray<Outputs.GetGenaiAgentParentAgentResult> ParentAgents;
        public readonly string ProjectId;
        public readonly string Region;
        public readonly string? RetrievalMethod;
        public readonly string RouteCreatedAt;
        public readonly string? RouteCreatedBy;
        public readonly string? RouteName;
        public readonly string? RouteUuid;
        public readonly ImmutableArray<string> Tags;
        public readonly double? Temperature;
        public readonly ImmutableArray<Outputs.GetGenaiAgentTemplateResult> Templates;
        public readonly double? TopP;
        public readonly string UpdatedAt;
        public readonly string? Url;
        public readonly string? UserId;

        [OutputConstructor]
        private GetGenaiAgentResult(
            ImmutableArray<Outputs.GetGenaiAgentAgentGuardrailResult> agentGuardrails,

            string agentId,

            ImmutableArray<Outputs.GetGenaiAgentAnthropicApiKeyResult> anthropicApiKeys,

            ImmutableArray<Outputs.GetGenaiAgentApiKeyInfoResult> apiKeyInfos,

            ImmutableArray<Outputs.GetGenaiAgentApiKeyResult> apiKeys,

            ImmutableArray<Outputs.GetGenaiAgentChatbotIdentifierResult> chatbotIdentifiers,

            ImmutableArray<Outputs.GetGenaiAgentChatbotResult> chatbots,

            ImmutableArray<Outputs.GetGenaiAgentChildAgentResult> childAgents,

            string createdAt,

            ImmutableArray<Outputs.GetGenaiAgentDeploymentResult> deployments,

            string? description,

            ImmutableArray<Outputs.GetGenaiAgentFunctionResult> functions,

            string id,

            string? ifCase,

            string instruction,

            int? k,

            ImmutableArray<Outputs.GetGenaiAgentKnowledgeBaseResult> knowledgeBases,

            int? maxTokens,

            string modelUuid,

            ImmutableArray<Outputs.GetGenaiAgentModelResult> models,

            string name,

            ImmutableArray<Outputs.GetGenaiAgentOpenAiApiKeyResult> openAiApiKeys,

            ImmutableArray<Outputs.GetGenaiAgentParentAgentResult> parentAgents,

            string projectId,

            string region,

            string? retrievalMethod,

            string routeCreatedAt,

            string? routeCreatedBy,

            string? routeName,

            string? routeUuid,

            ImmutableArray<string> tags,

            double? temperature,

            ImmutableArray<Outputs.GetGenaiAgentTemplateResult> templates,

            double? topP,

            string updatedAt,

            string? url,

            string? userId)
        {
            AgentGuardrails = agentGuardrails;
            AgentId = agentId;
            AnthropicApiKeys = anthropicApiKeys;
            ApiKeyInfos = apiKeyInfos;
            ApiKeys = apiKeys;
            ChatbotIdentifiers = chatbotIdentifiers;
            Chatbots = chatbots;
            ChildAgents = childAgents;
            CreatedAt = createdAt;
            Deployments = deployments;
            Description = description;
            Functions = functions;
            Id = id;
            IfCase = ifCase;
            Instruction = instruction;
            K = k;
            KnowledgeBases = knowledgeBases;
            MaxTokens = maxTokens;
            ModelUuid = modelUuid;
            Models = models;
            Name = name;
            OpenAiApiKeys = openAiApiKeys;
            ParentAgents = parentAgents;
            ProjectId = projectId;
            Region = region;
            RetrievalMethod = retrievalMethod;
            RouteCreatedAt = routeCreatedAt;
            RouteCreatedBy = routeCreatedBy;
            RouteName = routeName;
            RouteUuid = routeUuid;
            Tags = tags;
            Temperature = temperature;
            Templates = templates;
            TopP = topP;
            UpdatedAt = updatedAt;
            Url = url;
            UserId = userId;
        }
    }
}
