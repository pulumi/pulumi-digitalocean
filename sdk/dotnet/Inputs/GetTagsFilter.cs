// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Inputs
{

    public sealed class GetTagsFilterArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Set to `True` to require that a field match all of the `Values` instead of just one or more of
        /// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
        /// that all of the `Values` are present in the list or set.
        /// </summary>
        [Input("all")]
        public bool? All { get; set; }

        /// <summary>
        /// Filter the tags by this key. This may be one of `Name`, `TotalResourceCount`,  `DropletsCount`, `ImagesCount`, `VolumesCount`, `VolumeSnapshotsCount`, or `DatabasesCount`.
        /// </summary>
        [Input("key", required: true)]
        public string Key { get; set; } = null!;

        /// <summary>
        /// One of `Exact` (default), `Re`, or `Substring`. For string-typed fields, specify `Re` to
        /// match by using the `Values` as regular expressions, or specify `Substring` to match by treating the `Values` as
        /// substrings to find within the string field.
        /// </summary>
        [Input("matchBy")]
        public string? MatchBy { get; set; }

        [Input("values", required: true)]
        private List<string>? _values;

        /// <summary>
        /// Only retrieves tags which keys has value that matches
        /// one of the values provided here.
        /// </summary>
        public List<string> Values
        {
            get => _values ?? (_values = new List<string>());
            set => _values = value;
        }

        public GetTagsFilterArgs()
        {
        }
        public static new GetTagsFilterArgs Empty => new GetTagsFilterArgs();
    }
}
