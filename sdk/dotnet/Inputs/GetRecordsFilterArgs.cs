// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Inputs
{

    public sealed class GetRecordsFilterInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Set to `True` to require that a field match all of the `Values` instead of just one or more of
        /// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
        /// that all of the `Values` are present in the list or set.
        /// </summary>
        [Input("all")]
        public Input<bool>? All { get; set; }

        /// <summary>
        /// Filter the DNS records by this key. This may be one of `Domain`, `Flags`, `Name`, `Port`,
        /// `Priority`, `Tag`, `Ttl`, `Type`, `Value`, or `Weight`.
        /// </summary>
        [Input("key", required: true)]
        public Input<string> Key { get; set; } = null!;

        /// <summary>
        /// One of `Exact` (default), `Re`, or `Substring`. For string-typed fields, specify `Re` to
        /// match by using the `Values` as regular expressions, or specify `Substring` to match by treating the `Values` as
        /// substrings to find within the string field.
        /// </summary>
        [Input("matchBy")]
        public Input<string>? MatchBy { get; set; }

        [Input("values", required: true)]
        private InputList<string>? _values;

        /// <summary>
        /// A list of values to match against the `Key` field. Only retrieves DNS records
        /// where the `Key` field takes on one or more of the values provided here.
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public GetRecordsFilterInputArgs()
        {
        }
        public static new GetRecordsFilterInputArgs Empty => new GetRecordsFilterInputArgs();
    }
}
