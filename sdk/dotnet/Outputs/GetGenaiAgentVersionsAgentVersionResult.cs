// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Outputs
{

    [OutputType]
    public sealed class GetGenaiAgentVersionsAgentVersionResult
    {
        /// <summary>
        /// ID of the Agent to retrieve versions for
        /// </summary>
        public readonly string AgentUuid;
        /// <summary>
        /// List of child agents attached to this version
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentVersionsAgentVersionAttachedChildAgentResult> AttachedChildAgents;
        /// <summary>
        /// List of functions attached to this version
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentVersionsAgentVersionAttachedFunctionResult> AttachedFunctions;
        /// <summary>
        /// List of guardrails attached to this version
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentVersionsAgentVersionAttachedGuardrailResult> AttachedGuardrails;
        /// <summary>
        /// List of Knowledge Bases agent versions
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentVersionsAgentVersionAttachedKnowledgeBaseResult> AttachedKnowledgeBases;
        /// <summary>
        /// Indicates if the version can be rolled back
        /// </summary>
        public readonly bool CanRollback;
        /// <summary>
        /// Timestamp when the Agent Version was created
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// Email of the user who created this version
        /// </summary>
        public readonly string CreatedByEmail;
        /// <summary>
        /// Indicates if this version is currently applied configuration
        /// </summary>
        public readonly bool CurrentlyApplied;
        /// <summary>
        /// Description of the Agent Version
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Id of the Agent Version
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Instruction for the Agent Version
        /// </summary>
        public readonly string Instruction;
        /// <summary>
        /// K value for the Agent Version
        /// </summary>
        public readonly int K;
        /// <summary>
        /// Maximum tokens allowed for the Agent
        /// </summary>
        public readonly int MaxTokens;
        /// <summary>
        /// Name of model associated to the agent version
        /// </summary>
        public readonly string ModelName;
        /// <summary>
        /// Name of the Agent
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Indicates if the should provide in-response citations
        /// </summary>
        public readonly bool ProvideCitations;
        /// <summary>
        /// Retrieval method used. 
        /// - RETRIEVAL_METHOD_UNKNOWN: The retrieval method is unknown
        /// - RETRIEVAL_METHOD_REWRITE: The retrieval method is rewrite
        /// - RETRIEVAL_METHOD_STEP_BACK: The retrieval method is step back
        /// - RETRIEVAL_METHOD_SUB_QUERIES: The retrieval method is sub queries
        /// - RETRIEVAL_METHOD_NONE: The retrieval method is none.
        /// </summary>
        public readonly string RetrievalMethod;
        /// <summary>
        /// List of Tags
        /// </summary>
        public readonly ImmutableArray<string> Tags;
        /// <summary>
        /// Temperature setting for the Agent Version
        /// </summary>
        public readonly double Temperature;
        /// <summary>
        /// Top P sampling parameter for the Agent Version
        /// </summary>
        public readonly double TopP;
        /// <summary>
        /// Trigger action for the Agent Version
        /// </summary>
        public readonly string TriggerAction;
        /// <summary>
        /// Hash of the Agent Version
        /// </summary>
        public readonly string VersionHash;

        [OutputConstructor]
        private GetGenaiAgentVersionsAgentVersionResult(
            string agentUuid,

            ImmutableArray<Outputs.GetGenaiAgentVersionsAgentVersionAttachedChildAgentResult> attachedChildAgents,

            ImmutableArray<Outputs.GetGenaiAgentVersionsAgentVersionAttachedFunctionResult> attachedFunctions,

            ImmutableArray<Outputs.GetGenaiAgentVersionsAgentVersionAttachedGuardrailResult> attachedGuardrails,

            ImmutableArray<Outputs.GetGenaiAgentVersionsAgentVersionAttachedKnowledgeBaseResult> attachedKnowledgeBases,

            bool canRollback,

            string createdAt,

            string createdByEmail,

            bool currentlyApplied,

            string description,

            string id,

            string instruction,

            int k,

            int maxTokens,

            string modelName,

            string name,

            bool provideCitations,

            string retrievalMethod,

            ImmutableArray<string> tags,

            double temperature,

            double topP,

            string triggerAction,

            string versionHash)
        {
            AgentUuid = agentUuid;
            AttachedChildAgents = attachedChildAgents;
            AttachedFunctions = attachedFunctions;
            AttachedGuardrails = attachedGuardrails;
            AttachedKnowledgeBases = attachedKnowledgeBases;
            CanRollback = canRollback;
            CreatedAt = createdAt;
            CreatedByEmail = createdByEmail;
            CurrentlyApplied = currentlyApplied;
            Description = description;
            Id = id;
            Instruction = instruction;
            K = k;
            MaxTokens = maxTokens;
            ModelName = modelName;
            Name = name;
            ProvideCitations = provideCitations;
            RetrievalMethod = retrievalMethod;
            Tags = tags;
            Temperature = temperature;
            TopP = topP;
            TriggerAction = triggerAction;
            VersionHash = versionHash;
        }
    }
}
