// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Outputs
{

    [OutputType]
    public sealed class GetRecordsRecordResult
    {
        /// <summary>
        /// The domain name to search for DNS records
        /// </summary>
        public readonly string Domain;
        /// <summary>
        /// An unsigned integer between 0-255 used for CAA records.
        /// </summary>
        public readonly int Flags;
        /// <summary>
        /// The ID of the record.
        /// </summary>
        public readonly int Id;
        /// <summary>
        /// The name of the DNS record.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The port for SRV records.
        /// </summary>
        public readonly int Port;
        /// <summary>
        /// The priority for SRV and MX records.
        /// </summary>
        public readonly int Priority;
        /// <summary>
        /// The parameter tag for CAA records.
        /// </summary>
        public readonly string Tag;
        /// <summary>
        /// This value is the time to live for the record, in seconds. This defines the time frame that clients can cache queried information before a refresh should be requested.
        /// </summary>
        public readonly int Ttl;
        /// <summary>
        /// The type of the DNS record.
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Variable data depending on record type. For example, the "data" value for an A record would be the IPv4 address to which the domain will be mapped. For a CAA record, it would contain the domain name of the CA being granted permission to issue certificates.
        /// </summary>
        public readonly string Value;
        /// <summary>
        /// The weight for SRV records.
        /// </summary>
        public readonly int Weight;

        [OutputConstructor]
        private GetRecordsRecordResult(
            string domain,

            int flags,

            int id,

            string name,

            int port,

            int priority,

            string tag,

            int ttl,

            string type,

            string value,

            int weight)
        {
            Domain = domain;
            Flags = flags;
            Id = id;
            Name = name;
            Port = port;
            Priority = priority;
            Tag = tag;
            Ttl = ttl;
            Type = type;
            Value = value;
            Weight = weight;
        }
    }
}
