// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Outputs
{

    [OutputType]
    public sealed class GetGenaiAgentsAgentChildAgentResult
    {
        /// <summary>
        /// ID of the child agent
        /// </summary>
        public readonly string AgentId;
        /// <summary>
        /// Anthropic API Key information
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentAnthropicApiKeyResult> AnthropicApiKeys;
        /// <summary>
        /// List of API Key Infos
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentApiKeyInfoResult> ApiKeyInfos;
        /// <summary>
        /// List of API Keys
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentApiKeyResult> ApiKeys;
        /// <summary>
        /// List of Chatbot Identifiers
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentChatbotIdentifierResult> ChatbotIdentifiers;
        /// <summary>
        /// ChatBot configuration
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentChatbotResult> Chatbots;
        /// <summary>
        /// List of API Key Infos
        /// </summary>
        public readonly ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentDeploymentResult> Deployments;
        /// <summary>
        /// Description for the Agent
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Instruction for the Agent
        /// </summary>
        public readonly string Instruction;
        /// <summary>
        /// Model UUID of the Agent
        /// </summary>
        public readonly string ModelUuid;
        /// <summary>
        /// Name of the Agent
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Project ID of the Agent
        /// </summary>
        public readonly string ProjectId;
        /// <summary>
        /// Region where the Agent is deployed
        /// </summary>
        public readonly string Region;

        [OutputConstructor]
        private GetGenaiAgentsAgentChildAgentResult(
            string agentId,

            ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentAnthropicApiKeyResult> anthropicApiKeys,

            ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentApiKeyInfoResult> apiKeyInfos,

            ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentApiKeyResult> apiKeys,

            ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentChatbotIdentifierResult> chatbotIdentifiers,

            ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentChatbotResult> chatbots,

            ImmutableArray<Outputs.GetGenaiAgentsAgentChildAgentDeploymentResult> deployments,

            string? description,

            string instruction,

            string modelUuid,

            string name,

            string projectId,

            string region)
        {
            AgentId = agentId;
            AnthropicApiKeys = anthropicApiKeys;
            ApiKeyInfos = apiKeyInfos;
            ApiKeys = apiKeys;
            ChatbotIdentifiers = chatbotIdentifiers;
            Chatbots = chatbots;
            Deployments = deployments;
            Description = description;
            Instruction = instruction;
            ModelUuid = modelUuid;
            Name = name;
            ProjectId = projectId;
            Region = region;
        }
    }
}
