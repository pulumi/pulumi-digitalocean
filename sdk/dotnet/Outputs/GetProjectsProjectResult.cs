// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Outputs
{

    [OutputType]
    public sealed class GetProjectsProjectResult
    {
        /// <summary>
        /// The date and time when the project was created, (ISO8601)
        /// </summary>
        public readonly string CreatedAt;
        /// <summary>
        /// The description of the project
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`.
        /// </summary>
        public readonly string Environment;
        /// <summary>
        /// The ID of the project
        /// </summary>
        public readonly string Id;
        public readonly bool IsDefault;
        /// <summary>
        /// The name of the project
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The ID of the project owner
        /// </summary>
        public readonly int OwnerId;
        /// <summary>
        /// The unique universal identifier of the project owner
        /// </summary>
        public readonly string OwnerUuid;
        /// <summary>
        /// The purpose of the project (Default: "Web Application")
        /// </summary>
        public readonly string Purpose;
        /// <summary>
        /// A set of uniform resource names (URNs) for the resources associated with the project
        /// </summary>
        public readonly ImmutableArray<string> Resources;
        /// <summary>
        /// The date and time when the project was last updated, (ISO8601)
        /// </summary>
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetProjectsProjectResult(
            string createdAt,

            string description,

            string environment,

            string id,

            bool isDefault,

            string name,

            int ownerId,

            string ownerUuid,

            string purpose,

            ImmutableArray<string> resources,

            string updatedAt)
        {
            CreatedAt = createdAt;
            Description = description;
            Environment = environment;
            Id = id;
            IsDefault = isDefault;
            Name = name;
            OwnerId = ownerId;
            OwnerUuid = ownerUuid;
            Purpose = purpose;
            Resources = resources;
            UpdatedAt = updatedAt;
        }
    }
}
