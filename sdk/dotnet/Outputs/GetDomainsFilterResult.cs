// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Outputs
{

    [OutputType]
    public sealed class GetDomainsFilterResult
    {
        /// <summary>
        /// Set to `True` to require that a field match all of the `Values` instead of just one or more of
        /// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
        /// that all of the `Values` are present in the list or set.
        /// </summary>
        public readonly bool? All;
        /// <summary>
        /// Filter the domains by this key. This may be one of `Name`, `Urn`, and `Ttl`.
        /// </summary>
        public readonly string Key;
        /// <summary>
        /// One of `Exact` (default), `Re`, or `Substring`. For string-typed fields, specify `Re` to
        /// match by using the `Values` as regular expressions, or specify `Substring` to match by treating the `Values` as
        /// substrings to find within the string field.
        /// </summary>
        public readonly string? MatchBy;
        /// <summary>
        /// A list of values to match against the `Key` field. Only retrieves domains
        /// where the `Key` field takes on one or more of the values provided here.
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetDomainsFilterResult(
            bool? all,

            string key,

            string? matchBy,

            ImmutableArray<string> values)
        {
            All = all;
            Key = key;
            MatchBy = matchBy;
            Values = values;
        }
    }
}
