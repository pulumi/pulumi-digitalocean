// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Outputs
{

    [OutputType]
    public sealed class DropletAutoscaleConfig
    {
        /// <summary>
        /// The cooldown duration between scaling events for the Droplet Autoscale pool.
        /// </summary>
        public readonly int? CooldownMinutes;
        /// <summary>
        /// The maximum number of instances to maintain in the Droplet Autoscale pool.
        /// </summary>
        public readonly int? MaxInstances;
        /// <summary>
        /// The minimum number of instances to maintain in the Droplet Autoscale pool.
        /// </summary>
        public readonly int? MinInstances;
        /// <summary>
        /// The target average CPU load (in range `[0, 1]`) to maintain in the Droplet Autoscale pool.
        /// </summary>
        public readonly double? TargetCpuUtilization;
        /// <summary>
        /// The target average Memory load (in range `[0, 1]`) to maintain in the Droplet Autoscale 
        /// pool.
        /// </summary>
        public readonly double? TargetMemoryUtilization;
        /// <summary>
        /// The static number of instances to maintain in the pool Droplet Autoscale pool. This
        /// argument cannot be used with any other config options.
        /// </summary>
        public readonly int? TargetNumberInstances;

        [OutputConstructor]
        private DropletAutoscaleConfig(
            int? cooldownMinutes,

            int? maxInstances,

            int? minInstances,

            double? targetCpuUtilization,

            double? targetMemoryUtilization,

            int? targetNumberInstances)
        {
            CooldownMinutes = cooldownMinutes;
            MaxInstances = maxInstances;
            MinInstances = minInstances;
            TargetCpuUtilization = targetCpuUtilization;
            TargetMemoryUtilization = targetMemoryUtilization;
            TargetNumberInstances = targetNumberInstances;
        }
    }
}
