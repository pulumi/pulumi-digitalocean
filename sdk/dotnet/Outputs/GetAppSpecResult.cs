// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean.Outputs
{

    [OutputType]
    public sealed class GetAppSpecResult
    {
        /// <summary>
        /// Describes an alert policy for the component.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppSpecAlertResult> Alerts;
        public readonly ImmutableArray<Outputs.GetAppSpecDatabaseResult> Databases;
        /// <summary>
        /// Whether to disable the edge cache for the app. Default is false, which enables the edge cache.
        /// </summary>
        public readonly bool? DisableEdgeCache;
        /// <summary>
        /// Email obfuscation configuration for the app. Default is false, which keeps the email obfuscated.
        /// </summary>
        public readonly bool? DisableEmailObfuscation;
        public readonly ImmutableArray<Outputs.GetAppSpecDomainResult> Domain;
        public readonly ImmutableArray<string> Domains;
        public readonly ImmutableArray<Outputs.GetAppSpecEgressResult> Egresses;
        /// <summary>
        /// Whether to enable enhanced threat control for the app. Default is false. Set to true to enable enhanced threat control, putting additional security measures for Layer 7 DDoS attacks.
        /// </summary>
        public readonly bool? EnhancedThreatControlEnabled;
        /// <summary>
        /// Describes an environment variable made available to an app competent.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetAppSpecEnvResult> Envs;
        /// <summary>
        /// List of features which is applied to the app
        /// </summary>
        public readonly ImmutableArray<string> Features;
        public readonly ImmutableArray<Outputs.GetAppSpecFunctionResult> Functions;
        public readonly Outputs.GetAppSpecIngressResult Ingress;
        public readonly ImmutableArray<Outputs.GetAppSpecJobResult> Jobs;
        /// <summary>
        /// The name of the component.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The slug for the DigitalOcean data center region hosting the app
        /// </summary>
        public readonly string? Region;
        public readonly ImmutableArray<Outputs.GetAppSpecServiceResult> Services;
        public readonly ImmutableArray<Outputs.GetAppSpecStaticSiteResult> StaticSites;
        public readonly ImmutableArray<Outputs.GetAppSpecWorkerResult> Workers;

        [OutputConstructor]
        private GetAppSpecResult(
            ImmutableArray<Outputs.GetAppSpecAlertResult> alerts,

            ImmutableArray<Outputs.GetAppSpecDatabaseResult> databases,

            bool? disableEdgeCache,

            bool? disableEmailObfuscation,

            ImmutableArray<Outputs.GetAppSpecDomainResult> domain,

            ImmutableArray<string> domains,

            ImmutableArray<Outputs.GetAppSpecEgressResult> egresses,

            bool? enhancedThreatControlEnabled,

            ImmutableArray<Outputs.GetAppSpecEnvResult> envs,

            ImmutableArray<string> features,

            ImmutableArray<Outputs.GetAppSpecFunctionResult> functions,

            Outputs.GetAppSpecIngressResult ingress,

            ImmutableArray<Outputs.GetAppSpecJobResult> jobs,

            string name,

            string? region,

            ImmutableArray<Outputs.GetAppSpecServiceResult> services,

            ImmutableArray<Outputs.GetAppSpecStaticSiteResult> staticSites,

            ImmutableArray<Outputs.GetAppSpecWorkerResult> workers)
        {
            Alerts = alerts;
            Databases = databases;
            DisableEdgeCache = disableEdgeCache;
            DisableEmailObfuscation = disableEmailObfuscation;
            Domain = domain;
            Domains = domains;
            Egresses = egresses;
            EnhancedThreatControlEnabled = enhancedThreatControlEnabled;
            Envs = envs;
            Features = features;
            Functions = functions;
            Ingress = ingress;
            Jobs = jobs;
            Name = name;
            Region = region;
            Services = services;
            StaticSites = staticSites;
            Workers = workers;
        }
    }
}
