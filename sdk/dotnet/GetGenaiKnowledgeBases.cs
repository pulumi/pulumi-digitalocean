// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetGenaiKnowledgeBases
    {
        public static Task<GetGenaiKnowledgeBasesResult> InvokeAsync(GetGenaiKnowledgeBasesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGenaiKnowledgeBasesResult>("digitalocean:index/getGenaiKnowledgeBases:getGenaiKnowledgeBases", args ?? new GetGenaiKnowledgeBasesArgs(), options.WithDefaults());

        public static Output<GetGenaiKnowledgeBasesResult> Invoke(GetGenaiKnowledgeBasesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiKnowledgeBasesResult>("digitalocean:index/getGenaiKnowledgeBases:getGenaiKnowledgeBases", args ?? new GetGenaiKnowledgeBasesInvokeArgs(), options.WithDefaults());

        public static Output<GetGenaiKnowledgeBasesResult> Invoke(GetGenaiKnowledgeBasesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiKnowledgeBasesResult>("digitalocean:index/getGenaiKnowledgeBases:getGenaiKnowledgeBases", args ?? new GetGenaiKnowledgeBasesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGenaiKnowledgeBasesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetGenaiKnowledgeBasesFilterArgs>? _filters;
        public List<Inputs.GetGenaiKnowledgeBasesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetGenaiKnowledgeBasesFilterArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private List<Inputs.GetGenaiKnowledgeBasesSortArgs>? _sorts;
        public List<Inputs.GetGenaiKnowledgeBasesSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetGenaiKnowledgeBasesSortArgs>());
            set => _sorts = value;
        }

        public GetGenaiKnowledgeBasesArgs()
        {
        }
        public static new GetGenaiKnowledgeBasesArgs Empty => new GetGenaiKnowledgeBasesArgs();
    }

    public sealed class GetGenaiKnowledgeBasesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetGenaiKnowledgeBasesFilterInputArgs>? _filters;
        public InputList<Inputs.GetGenaiKnowledgeBasesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetGenaiKnowledgeBasesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private InputList<Inputs.GetGenaiKnowledgeBasesSortInputArgs>? _sorts;
        public InputList<Inputs.GetGenaiKnowledgeBasesSortInputArgs> Sorts
        {
            get => _sorts ?? (_sorts = new InputList<Inputs.GetGenaiKnowledgeBasesSortInputArgs>());
            set => _sorts = value;
        }

        public GetGenaiKnowledgeBasesInvokeArgs()
        {
        }
        public static new GetGenaiKnowledgeBasesInvokeArgs Empty => new GetGenaiKnowledgeBasesInvokeArgs();
    }


    [OutputType]
    public sealed class GetGenaiKnowledgeBasesResult
    {
        public readonly ImmutableArray<Outputs.GetGenaiKnowledgeBasesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetGenaiKnowledgeBasesKnowledgeBaseResult> KnowledgeBases;
        public readonly ImmutableArray<Outputs.GetGenaiKnowledgeBasesSortResult> Sorts;

        [OutputConstructor]
        private GetGenaiKnowledgeBasesResult(
            ImmutableArray<Outputs.GetGenaiKnowledgeBasesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetGenaiKnowledgeBasesKnowledgeBaseResult> knowledgeBases,

            ImmutableArray<Outputs.GetGenaiKnowledgeBasesSortResult> sorts)
        {
            Filters = filters;
            Id = id;
            KnowledgeBases = knowledgeBases;
            Sorts = sorts;
        }
    }
}
