// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetGenaiOpenaiApiKeys
    {
        public static Task<GetGenaiOpenaiApiKeysResult> InvokeAsync(GetGenaiOpenaiApiKeysArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGenaiOpenaiApiKeysResult>("digitalocean:index/getGenaiOpenaiApiKeys:getGenaiOpenaiApiKeys", args ?? new GetGenaiOpenaiApiKeysArgs(), options.WithDefaults());

        public static Output<GetGenaiOpenaiApiKeysResult> Invoke(GetGenaiOpenaiApiKeysInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiOpenaiApiKeysResult>("digitalocean:index/getGenaiOpenaiApiKeys:getGenaiOpenaiApiKeys", args ?? new GetGenaiOpenaiApiKeysInvokeArgs(), options.WithDefaults());

        public static Output<GetGenaiOpenaiApiKeysResult> Invoke(GetGenaiOpenaiApiKeysInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiOpenaiApiKeysResult>("digitalocean:index/getGenaiOpenaiApiKeys:getGenaiOpenaiApiKeys", args ?? new GetGenaiOpenaiApiKeysInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGenaiOpenaiApiKeysArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetGenaiOpenaiApiKeysFilterArgs>? _filters;
        public List<Inputs.GetGenaiOpenaiApiKeysFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetGenaiOpenaiApiKeysFilterArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private List<Inputs.GetGenaiOpenaiApiKeysSortArgs>? _sorts;
        public List<Inputs.GetGenaiOpenaiApiKeysSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetGenaiOpenaiApiKeysSortArgs>());
            set => _sorts = value;
        }

        public GetGenaiOpenaiApiKeysArgs()
        {
        }
        public static new GetGenaiOpenaiApiKeysArgs Empty => new GetGenaiOpenaiApiKeysArgs();
    }

    public sealed class GetGenaiOpenaiApiKeysInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetGenaiOpenaiApiKeysFilterInputArgs>? _filters;
        public InputList<Inputs.GetGenaiOpenaiApiKeysFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetGenaiOpenaiApiKeysFilterInputArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private InputList<Inputs.GetGenaiOpenaiApiKeysSortInputArgs>? _sorts;
        public InputList<Inputs.GetGenaiOpenaiApiKeysSortInputArgs> Sorts
        {
            get => _sorts ?? (_sorts = new InputList<Inputs.GetGenaiOpenaiApiKeysSortInputArgs>());
            set => _sorts = value;
        }

        public GetGenaiOpenaiApiKeysInvokeArgs()
        {
        }
        public static new GetGenaiOpenaiApiKeysInvokeArgs Empty => new GetGenaiOpenaiApiKeysInvokeArgs();
    }


    [OutputType]
    public sealed class GetGenaiOpenaiApiKeysResult
    {
        public readonly ImmutableArray<Outputs.GetGenaiOpenaiApiKeysFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetGenaiOpenaiApiKeysOpenaiApiKeyResult> OpenaiApiKeys;
        public readonly ImmutableArray<Outputs.GetGenaiOpenaiApiKeysSortResult> Sorts;

        [OutputConstructor]
        private GetGenaiOpenaiApiKeysResult(
            ImmutableArray<Outputs.GetGenaiOpenaiApiKeysFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetGenaiOpenaiApiKeysOpenaiApiKeyResult> openaiApiKeys,

            ImmutableArray<Outputs.GetGenaiOpenaiApiKeysSortResult> sorts)
        {
            Filters = filters;
            Id = id;
            OpenaiApiKeys = openaiApiKeys;
            Sorts = sorts;
        }
    }
}
