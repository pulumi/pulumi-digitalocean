// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetDatabaseUser
    {
        /// <summary>
        /// Provides information on a DigitalOcean database user resource.
        /// </summary>
        public static Task<GetDatabaseUserResult> InvokeAsync(GetDatabaseUserArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDatabaseUserResult>("digitalocean:index/getDatabaseUser:getDatabaseUser", args ?? new GetDatabaseUserArgs(), options.WithDefaults());

        /// <summary>
        /// Provides information on a DigitalOcean database user resource.
        /// </summary>
        public static Output<GetDatabaseUserResult> Invoke(GetDatabaseUserInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDatabaseUserResult>("digitalocean:index/getDatabaseUser:getDatabaseUser", args ?? new GetDatabaseUserInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDatabaseUserArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the database cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the database user.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetDatabaseUserArgs()
        {
        }
        public static new GetDatabaseUserArgs Empty => new GetDatabaseUserArgs();
    }

    public sealed class GetDatabaseUserInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The ID of the database cluster.
        /// </summary>
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        /// <summary>
        /// The name of the database user.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetDatabaseUserInvokeArgs()
        {
        }
        public static new GetDatabaseUserInvokeArgs Empty => new GetDatabaseUserInvokeArgs();
    }


    [OutputType]
    public sealed class GetDatabaseUserResult
    {
        public readonly string ClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The authentication method of the MySQL user. The value will be `mysql_native_password` or `caching_sha2_password`.
        /// </summary>
        public readonly string MysqlAuthPlugin;
        public readonly string Name;
        /// <summary>
        /// The password of the database user. This will not be set for MongoDB users.
        /// </summary>
        public readonly string Password;
        /// <summary>
        /// The role of the database user. The value will be either `primary` or `normal`.
        /// </summary>
        public readonly string Role;

        [OutputConstructor]
        private GetDatabaseUserResult(
            string clusterId,

            string id,

            string mysqlAuthPlugin,

            string name,

            string password,

            string role)
        {
            ClusterId = clusterId;
            Id = id;
            MysqlAuthPlugin = mysqlAuthPlugin;
            Name = name;
            Password = password;
            Role = role;
        }
    }
}
