// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetSshKey
    {
        /// <summary>
        /// Get information on a ssh key. This data source provides the name, public key,
        /// and fingerprint as configured on your DigitalOcean account. This is useful if
        /// the ssh key in question is not managed by the provider or you need to utilize any
        /// of the keys data.
        /// 
        /// An error is triggered if the provided ssh key name does not exist.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Get the ssh key:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var exampleSshKey = Output.Create(DigitalOcean.GetSshKey.InvokeAsync(new DigitalOcean.GetSshKeyArgs
        ///         {
        ///             Name = "example",
        ///         }));
        ///         var exampleDroplet = new DigitalOcean.Droplet("exampleDroplet", new DigitalOcean.DropletArgs
        ///         {
        ///             Image = "ubuntu-18-04-x64",
        ///             Region = "nyc2",
        ///             Size = "s-1vcpu-1gb",
        ///             SshKeys = 
        ///             {
        ///                 exampleSshKey.Apply(exampleSshKey =&gt; exampleSshKey.Id),
        ///             },
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetSshKeyResult> InvokeAsync(GetSshKeyArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetSshKeyResult>("digitalocean:index/getSshKey:getSshKey", args ?? new GetSshKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Get information on a ssh key. This data source provides the name, public key,
        /// and fingerprint as configured on your DigitalOcean account. This is useful if
        /// the ssh key in question is not managed by the provider or you need to utilize any
        /// of the keys data.
        /// 
        /// An error is triggered if the provided ssh key name does not exist.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// Get the ssh key:
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using DigitalOcean = Pulumi.DigitalOcean;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var exampleSshKey = Output.Create(DigitalOcean.GetSshKey.InvokeAsync(new DigitalOcean.GetSshKeyArgs
        ///         {
        ///             Name = "example",
        ///         }));
        ///         var exampleDroplet = new DigitalOcean.Droplet("exampleDroplet", new DigitalOcean.DropletArgs
        ///         {
        ///             Image = "ubuntu-18-04-x64",
        ///             Region = "nyc2",
        ///             Size = "s-1vcpu-1gb",
        ///             SshKeys = 
        ///             {
        ///                 exampleSshKey.Apply(exampleSshKey =&gt; exampleSshKey.Id),
        ///             },
        ///         });
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetSshKeyResult> Invoke(GetSshKeyInvokeArgs args, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.Invoke<GetSshKeyResult>("digitalocean:index/getSshKey:getSshKey", args ?? new GetSshKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSshKeyArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ssh key.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetSshKeyArgs()
        {
        }
    }

    public sealed class GetSshKeyInvokeArgs : Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the ssh key.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetSshKeyInvokeArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetSshKeyResult
    {
        public readonly string Fingerprint;
        public readonly int Id;
        public readonly string Name;
        public readonly string PublicKey;

        [OutputConstructor]
        private GetSshKeyResult(
            string fingerprint,

            int id,

            string name,

            string publicKey)
        {
            Fingerprint = fingerprint;
            Id = id;
            Name = name;
            PublicKey = publicKey;
        }
    }
}
