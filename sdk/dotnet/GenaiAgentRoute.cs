// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    [DigitalOceanResourceType("digitalocean:index/genaiAgentRoute:GenaiAgentRoute")]
    public partial class GenaiAgentRoute : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The UUID of the child agent.
        /// </summary>
        [Output("childAgentUuid")]
        public Output<string> ChildAgentUuid { get; private set; } = null!;

        /// <summary>
        /// if-case condition for the route.
        /// </summary>
        [Output("ifCase")]
        public Output<string?> IfCase { get; private set; } = null!;

        /// <summary>
        /// The UUID of the parent agent.
        /// </summary>
        [Output("parentAgentUuid")]
        public Output<string> ParentAgentUuid { get; private set; } = null!;

        [Output("rollback")]
        public Output<bool?> Rollback { get; private set; } = null!;

        /// <summary>
        /// A name for the route.
        /// </summary>
        [Output("routeName")]
        public Output<string?> RouteName { get; private set; } = null!;

        /// <summary>
        /// The UUID of the linkage
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a GenaiAgentRoute resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GenaiAgentRoute(string name, GenaiAgentRouteArgs args, CustomResourceOptions? options = null)
            : base("digitalocean:index/genaiAgentRoute:GenaiAgentRoute", name, args ?? new GenaiAgentRouteArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GenaiAgentRoute(string name, Input<string> id, GenaiAgentRouteState? state = null, CustomResourceOptions? options = null)
            : base("digitalocean:index/genaiAgentRoute:GenaiAgentRoute", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GenaiAgentRoute resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GenaiAgentRoute Get(string name, Input<string> id, GenaiAgentRouteState? state = null, CustomResourceOptions? options = null)
        {
            return new GenaiAgentRoute(name, id, state, options);
        }
    }

    public sealed class GenaiAgentRouteArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UUID of the child agent.
        /// </summary>
        [Input("childAgentUuid", required: true)]
        public Input<string> ChildAgentUuid { get; set; } = null!;

        /// <summary>
        /// if-case condition for the route.
        /// </summary>
        [Input("ifCase")]
        public Input<string>? IfCase { get; set; }

        /// <summary>
        /// The UUID of the parent agent.
        /// </summary>
        [Input("parentAgentUuid", required: true)]
        public Input<string> ParentAgentUuid { get; set; } = null!;

        [Input("rollback")]
        public Input<bool>? Rollback { get; set; }

        /// <summary>
        /// A name for the route.
        /// </summary>
        [Input("routeName")]
        public Input<string>? RouteName { get; set; }

        public GenaiAgentRouteArgs()
        {
        }
        public static new GenaiAgentRouteArgs Empty => new GenaiAgentRouteArgs();
    }

    public sealed class GenaiAgentRouteState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The UUID of the child agent.
        /// </summary>
        [Input("childAgentUuid")]
        public Input<string>? ChildAgentUuid { get; set; }

        /// <summary>
        /// if-case condition for the route.
        /// </summary>
        [Input("ifCase")]
        public Input<string>? IfCase { get; set; }

        /// <summary>
        /// The UUID of the parent agent.
        /// </summary>
        [Input("parentAgentUuid")]
        public Input<string>? ParentAgentUuid { get; set; }

        [Input("rollback")]
        public Input<bool>? Rollback { get; set; }

        /// <summary>
        /// A name for the route.
        /// </summary>
        [Input("routeName")]
        public Input<string>? RouteName { get; set; }

        /// <summary>
        /// The UUID of the linkage
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public GenaiAgentRouteState()
        {
        }
        public static new GenaiAgentRouteState Empty => new GenaiAgentRouteState();
    }
}
