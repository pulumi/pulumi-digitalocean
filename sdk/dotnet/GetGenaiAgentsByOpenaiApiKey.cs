// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    public static class GetGenaiAgentsByOpenaiApiKey
    {
        public static Task<GetGenaiAgentsByOpenaiApiKeyResult> InvokeAsync(GetGenaiAgentsByOpenaiApiKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGenaiAgentsByOpenaiApiKeyResult>("digitalocean:index/getGenaiAgentsByOpenaiApiKey:getGenaiAgentsByOpenaiApiKey", args ?? new GetGenaiAgentsByOpenaiApiKeyArgs(), options.WithDefaults());

        public static Output<GetGenaiAgentsByOpenaiApiKeyResult> Invoke(GetGenaiAgentsByOpenaiApiKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiAgentsByOpenaiApiKeyResult>("digitalocean:index/getGenaiAgentsByOpenaiApiKey:getGenaiAgentsByOpenaiApiKey", args ?? new GetGenaiAgentsByOpenaiApiKeyInvokeArgs(), options.WithDefaults());

        public static Output<GetGenaiAgentsByOpenaiApiKeyResult> Invoke(GetGenaiAgentsByOpenaiApiKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGenaiAgentsByOpenaiApiKeyResult>("digitalocean:index/getGenaiAgentsByOpenaiApiKey:getGenaiAgentsByOpenaiApiKey", args ?? new GetGenaiAgentsByOpenaiApiKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGenaiAgentsByOpenaiApiKeyArgs : global::Pulumi.InvokeArgs
    {
        [Input("uuid", required: true)]
        public string Uuid { get; set; } = null!;

        public GetGenaiAgentsByOpenaiApiKeyArgs()
        {
        }
        public static new GetGenaiAgentsByOpenaiApiKeyArgs Empty => new GetGenaiAgentsByOpenaiApiKeyArgs();
    }

    public sealed class GetGenaiAgentsByOpenaiApiKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("uuid", required: true)]
        public Input<string> Uuid { get; set; } = null!;

        public GetGenaiAgentsByOpenaiApiKeyInvokeArgs()
        {
        }
        public static new GetGenaiAgentsByOpenaiApiKeyInvokeArgs Empty => new GetGenaiAgentsByOpenaiApiKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetGenaiAgentsByOpenaiApiKeyResult
    {
        public readonly ImmutableArray<Outputs.GetGenaiAgentsByOpenaiApiKeyAgentResult> Agents;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Uuid;

        [OutputConstructor]
        private GetGenaiAgentsByOpenaiApiKeyResult(
            ImmutableArray<Outputs.GetGenaiAgentsByOpenaiApiKeyAgentResult> agents,

            string id,

            string uuid)
        {
            Agents = agents;
            Id = id;
            Uuid = uuid;
        }
    }
}
