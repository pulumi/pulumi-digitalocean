// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    [DigitalOceanResourceType("digitalocean:index/genaiKnowledgeBase:GenaiKnowledgeBase")]
    public partial class GenaiKnowledgeBase : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The time when the knowledge base was added to the agent.
        /// </summary>
        [Output("addedToAgentAt")]
        public Output<string?> AddedToAgentAt { get; private set; } = null!;

        /// <summary>
        /// The time when the knowledge base was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
        /// </summary>
        [Output("databaseId")]
        public Output<string?> DatabaseId { get; private set; } = null!;

        /// <summary>
        /// Data sources for the knowledge base
        /// </summary>
        [Output("datasources")]
        public Output<ImmutableArray<Outputs.GenaiKnowledgeBaseDataSource>> Datasources { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the embedding model
        /// </summary>
        [Output("embeddingModelUuid")]
        public Output<string> EmbeddingModelUuid { get; private set; } = null!;

        /// <summary>
        /// Indicates whether the knowledge base is public or private.
        /// </summary>
        [Output("isPublic")]
        public Output<bool?> IsPublic { get; private set; } = null!;

        /// <summary>
        /// The last indexing job for the knowledge base.
        /// </summary>
        [Output("lastIndexingJobs")]
        public Output<ImmutableArray<Outputs.GenaiKnowledgeBaseLastIndexingJob>> LastIndexingJobs { get; private set; } = null!;

        /// <summary>
        /// The name of the knowledge base.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the project to which the knowledge base belongs.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The unique identifier of the VPC to which the knowledge base belongs.
        /// </summary>
        [Output("vpcUuid")]
        public Output<string?> VpcUuid { get; private set; } = null!;


        /// <summary>
        /// Create a GenaiKnowledgeBase resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GenaiKnowledgeBase(string name, GenaiKnowledgeBaseArgs args, CustomResourceOptions? options = null)
            : base("digitalocean:index/genaiKnowledgeBase:GenaiKnowledgeBase", name, args ?? new GenaiKnowledgeBaseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GenaiKnowledgeBase(string name, Input<string> id, GenaiKnowledgeBaseState? state = null, CustomResourceOptions? options = null)
            : base("digitalocean:index/genaiKnowledgeBase:GenaiKnowledgeBase", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GenaiKnowledgeBase resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GenaiKnowledgeBase Get(string name, Input<string> id, GenaiKnowledgeBaseState? state = null, CustomResourceOptions? options = null)
        {
            return new GenaiKnowledgeBase(name, id, state, options);
        }
    }

    public sealed class GenaiKnowledgeBaseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when the knowledge base was added to the agent.
        /// </summary>
        [Input("addedToAgentAt")]
        public Input<string>? AddedToAgentAt { get; set; }

        /// <summary>
        /// The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        [Input("datasources", required: true)]
        private InputList<Inputs.GenaiKnowledgeBaseDataSourceArgs>? _datasources;

        /// <summary>
        /// Data sources for the knowledge base
        /// </summary>
        public InputList<Inputs.GenaiKnowledgeBaseDataSourceArgs> Datasources
        {
            get => _datasources ?? (_datasources = new InputList<Inputs.GenaiKnowledgeBaseDataSourceArgs>());
            set => _datasources = value;
        }

        /// <summary>
        /// The unique identifier of the embedding model
        /// </summary>
        [Input("embeddingModelUuid", required: true)]
        public Input<string> EmbeddingModelUuid { get; set; } = null!;

        /// <summary>
        /// Indicates whether the knowledge base is public or private.
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        [Input("lastIndexingJobs")]
        private InputList<Inputs.GenaiKnowledgeBaseLastIndexingJobArgs>? _lastIndexingJobs;

        /// <summary>
        /// The last indexing job for the knowledge base.
        /// </summary>
        public InputList<Inputs.GenaiKnowledgeBaseLastIndexingJobArgs> LastIndexingJobs
        {
            get => _lastIndexingJobs ?? (_lastIndexingJobs = new InputList<Inputs.GenaiKnowledgeBaseLastIndexingJobArgs>());
            set => _lastIndexingJobs = value;
        }

        /// <summary>
        /// The name of the knowledge base.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The unique identifier of the project to which the knowledge base belongs.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The unique identifier of the VPC to which the knowledge base belongs.
        /// </summary>
        [Input("vpcUuid")]
        public Input<string>? VpcUuid { get; set; }

        public GenaiKnowledgeBaseArgs()
        {
        }
        public static new GenaiKnowledgeBaseArgs Empty => new GenaiKnowledgeBaseArgs();
    }

    public sealed class GenaiKnowledgeBaseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The time when the knowledge base was added to the agent.
        /// </summary>
        [Input("addedToAgentAt")]
        public Input<string>? AddedToAgentAt { get; set; }

        /// <summary>
        /// The time when the knowledge base was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
        /// </summary>
        [Input("databaseId")]
        public Input<string>? DatabaseId { get; set; }

        [Input("datasources")]
        private InputList<Inputs.GenaiKnowledgeBaseDataSourceGetArgs>? _datasources;

        /// <summary>
        /// Data sources for the knowledge base
        /// </summary>
        public InputList<Inputs.GenaiKnowledgeBaseDataSourceGetArgs> Datasources
        {
            get => _datasources ?? (_datasources = new InputList<Inputs.GenaiKnowledgeBaseDataSourceGetArgs>());
            set => _datasources = value;
        }

        /// <summary>
        /// The unique identifier of the embedding model
        /// </summary>
        [Input("embeddingModelUuid")]
        public Input<string>? EmbeddingModelUuid { get; set; }

        /// <summary>
        /// Indicates whether the knowledge base is public or private.
        /// </summary>
        [Input("isPublic")]
        public Input<bool>? IsPublic { get; set; }

        [Input("lastIndexingJobs")]
        private InputList<Inputs.GenaiKnowledgeBaseLastIndexingJobGetArgs>? _lastIndexingJobs;

        /// <summary>
        /// The last indexing job for the knowledge base.
        /// </summary>
        public InputList<Inputs.GenaiKnowledgeBaseLastIndexingJobGetArgs> LastIndexingJobs
        {
            get => _lastIndexingJobs ?? (_lastIndexingJobs = new InputList<Inputs.GenaiKnowledgeBaseLastIndexingJobGetArgs>());
            set => _lastIndexingJobs = value;
        }

        /// <summary>
        /// The name of the knowledge base.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The unique identifier of the project to which the knowledge base belongs.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("region")]
        public Input<string>? Region { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The unique identifier of the VPC to which the knowledge base belongs.
        /// </summary>
        [Input("vpcUuid")]
        public Input<string>? VpcUuid { get; set; }

        public GenaiKnowledgeBaseState()
        {
        }
        public static new GenaiKnowledgeBaseState Empty => new GenaiKnowledgeBaseState();
    }
}
