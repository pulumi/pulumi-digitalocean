// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.DigitalOcean
{
    [DigitalOceanResourceType("digitalocean:index/genaiOpenaiApiKey:GenaiOpenaiApiKey")]
    public partial class GenaiOpenaiApiKey : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The OpenAI API key.
        /// </summary>
        [Output("apiKey")]
        public Output<string> ApiKey { get; private set; } = null!;

        /// <summary>
        /// When the API key was created.
        /// </summary>
        [Output("createdAt")]
        public Output<string> CreatedAt { get; private set; } = null!;

        /// <summary>
        /// Who created the API key.
        /// </summary>
        [Output("createdBy")]
        public Output<string> CreatedBy { get; private set; } = null!;

        /// <summary>
        /// When the API key was deleted.
        /// </summary>
        [Output("deletedAt")]
        public Output<string> DeletedAt { get; private set; } = null!;

        /// <summary>
        /// Models associated with the OpenAI API key
        /// </summary>
        [Output("models")]
        public Output<ImmutableArray<Outputs.GenaiOpenaiApiKeyModel>> Models { get; private set; } = null!;

        /// <summary>
        /// A name for the API key.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// When the API key was last updated.
        /// </summary>
        [Output("updatedAt")]
        public Output<string> UpdatedAt { get; private set; } = null!;

        /// <summary>
        /// The UUID of the API key.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a GenaiOpenaiApiKey resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GenaiOpenaiApiKey(string name, GenaiOpenaiApiKeyArgs args, CustomResourceOptions? options = null)
            : base("digitalocean:index/genaiOpenaiApiKey:GenaiOpenaiApiKey", name, args ?? new GenaiOpenaiApiKeyArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GenaiOpenaiApiKey(string name, Input<string> id, GenaiOpenaiApiKeyState? state = null, CustomResourceOptions? options = null)
            : base("digitalocean:index/genaiOpenaiApiKey:GenaiOpenaiApiKey", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GenaiOpenaiApiKey resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GenaiOpenaiApiKey Get(string name, Input<string> id, GenaiOpenaiApiKeyState? state = null, CustomResourceOptions? options = null)
        {
            return new GenaiOpenaiApiKey(name, id, state, options);
        }
    }

    public sealed class GenaiOpenaiApiKeyArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OpenAI API key.
        /// </summary>
        [Input("apiKey", required: true)]
        public Input<string> ApiKey { get; set; } = null!;

        [Input("models")]
        private InputList<Inputs.GenaiOpenaiApiKeyModelArgs>? _models;

        /// <summary>
        /// Models associated with the OpenAI API key
        /// </summary>
        public InputList<Inputs.GenaiOpenaiApiKeyModelArgs> Models
        {
            get => _models ?? (_models = new InputList<Inputs.GenaiOpenaiApiKeyModelArgs>());
            set => _models = value;
        }

        /// <summary>
        /// A name for the API key.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public GenaiOpenaiApiKeyArgs()
        {
        }
        public static new GenaiOpenaiApiKeyArgs Empty => new GenaiOpenaiApiKeyArgs();
    }

    public sealed class GenaiOpenaiApiKeyState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The OpenAI API key.
        /// </summary>
        [Input("apiKey")]
        public Input<string>? ApiKey { get; set; }

        /// <summary>
        /// When the API key was created.
        /// </summary>
        [Input("createdAt")]
        public Input<string>? CreatedAt { get; set; }

        /// <summary>
        /// Who created the API key.
        /// </summary>
        [Input("createdBy")]
        public Input<string>? CreatedBy { get; set; }

        /// <summary>
        /// When the API key was deleted.
        /// </summary>
        [Input("deletedAt")]
        public Input<string>? DeletedAt { get; set; }

        [Input("models")]
        private InputList<Inputs.GenaiOpenaiApiKeyModelGetArgs>? _models;

        /// <summary>
        /// Models associated with the OpenAI API key
        /// </summary>
        public InputList<Inputs.GenaiOpenaiApiKeyModelGetArgs> Models
        {
            get => _models ?? (_models = new InputList<Inputs.GenaiOpenaiApiKeyModelGetArgs>());
            set => _models = value;
        }

        /// <summary>
        /// A name for the API key.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// When the API key was last updated.
        /// </summary>
        [Input("updatedAt")]
        public Input<string>? UpdatedAt { get; set; }

        /// <summary>
        /// The UUID of the API key.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public GenaiOpenaiApiKeyState()
        {
        }
        public static new GenaiOpenaiApiKeyState Empty => new GenaiOpenaiApiKeyState();
    }
}
