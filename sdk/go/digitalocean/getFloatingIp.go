// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Get information on a floating ip. This data source provides the region and Droplet id
// as configured on your DigitalOcean account. This is useful if the floating IP
// in question is not managed by this provider or you need to find the Droplet the IP is
// attached to.
//
// An error is triggered if the provided floating IP does not exist.
//
// ## Example Usage
//
// Get the floating IP:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-digitalocean/sdk/v2/go/digitalocean"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := digitalocean.LookupFloatingIp(ctx, &digitalocean.LookupFloatingIpArgs{
// 			IpAddress: publicIp,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("fipOutput", example.DropletId)
// 		return nil
// 	})
// }
// ```
func LookupFloatingIp(ctx *pulumi.Context, args *LookupFloatingIpArgs, opts ...pulumi.InvokeOption) (*LookupFloatingIpResult, error) {
	var rv LookupFloatingIpResult
	err := ctx.Invoke("digitalocean:index/getFloatingIp:getFloatingIp", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getFloatingIp.
type LookupFloatingIpArgs struct {
	// The allocated IP address of the specific floating IP to retrieve.
	IpAddress string `pulumi:"ipAddress"`
}

// A collection of values returned by getFloatingIp.
type LookupFloatingIpResult struct {
	DropletId     int    `pulumi:"dropletId"`
	FloatingIpUrn string `pulumi:"floatingIpUrn"`
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	IpAddress string `pulumi:"ipAddress"`
	Region    string `pulumi:"region"`
}
