// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information on a load balancer for use in other resources. This data source
// provides all of the load balancers properties as configured on your DigitalOcean
// account. This is useful if the load balancer in question is not managed by
// the provider or you need to utilize any of the load balancers data.
//
// An error is triggered if the provided load balancer name does not exist.
//
// ## Example Usage
//
// Get the load balancer by name:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := digitalocean.LookupLoadBalancer(ctx, &GetLoadBalancerArgs{
// 			Name: pulumi.StringRef("app"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("lbOutput", example.Ip)
// 		return nil
// 	})
// }
// ```
//
// Get the load balancer by ID:
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		_, err := digitalocean.LookupLoadBalancer(ctx, &GetLoadBalancerArgs{
// 			Id: pulumi.StringRef("loadbalancer_id"),
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func LookupLoadBalancer(ctx *pulumi.Context, args *LookupLoadBalancerArgs, opts ...pulumi.InvokeOption) (*LookupLoadBalancerResult, error) {
	var rv LookupLoadBalancerResult
	err := ctx.Invoke("digitalocean:index/getLoadBalancer:getLoadBalancer", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getLoadBalancer.
type LookupLoadBalancerArgs struct {
	// The ID of load balancer.
	Id *string `pulumi:"id"`
	// The name of load balancer.
	Name *string `pulumi:"name"`
}

// A collection of values returned by getLoadBalancer.
type LookupLoadBalancerResult struct {
	Algorithm                    string                          `pulumi:"algorithm"`
	DisableLetsEncryptDnsRecords bool                            `pulumi:"disableLetsEncryptDnsRecords"`
	DropletIds                   []int                           `pulumi:"dropletIds"`
	DropletTag                   string                          `pulumi:"dropletTag"`
	EnableBackendKeepalive       bool                            `pulumi:"enableBackendKeepalive"`
	EnableProxyProtocol          bool                            `pulumi:"enableProxyProtocol"`
	ForwardingRules              []GetLoadBalancerForwardingRule `pulumi:"forwardingRules"`
	Healthchecks                 []GetLoadBalancerHealthcheck    `pulumi:"healthchecks"`
	Id                           *string                         `pulumi:"id"`
	Ip                           string                          `pulumi:"ip"`
	LoadBalancerUrn              string                          `pulumi:"loadBalancerUrn"`
	Name                         *string                         `pulumi:"name"`
	RedirectHttpToHttps          bool                            `pulumi:"redirectHttpToHttps"`
	Region                       string                          `pulumi:"region"`
	Size                         string                          `pulumi:"size"`
	SizeUnit                     int                             `pulumi:"sizeUnit"`
	Status                       string                          `pulumi:"status"`
	StickySessions               []GetLoadBalancerStickySession  `pulumi:"stickySessions"`
	VpcUuid                      string                          `pulumi:"vpcUuid"`
}

func LookupLoadBalancerOutput(ctx *pulumi.Context, args LookupLoadBalancerOutputArgs, opts ...pulumi.InvokeOption) LookupLoadBalancerResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupLoadBalancerResult, error) {
			args := v.(LookupLoadBalancerArgs)
			r, err := LookupLoadBalancer(ctx, &args, opts...)
			return *r, err
		}).(LookupLoadBalancerResultOutput)
}

// A collection of arguments for invoking getLoadBalancer.
type LookupLoadBalancerOutputArgs struct {
	// The ID of load balancer.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// The name of load balancer.
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (LookupLoadBalancerOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadBalancerArgs)(nil)).Elem()
}

// A collection of values returned by getLoadBalancer.
type LookupLoadBalancerResultOutput struct{ *pulumi.OutputState }

func (LookupLoadBalancerResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupLoadBalancerResult)(nil)).Elem()
}

func (o LookupLoadBalancerResultOutput) ToLookupLoadBalancerResultOutput() LookupLoadBalancerResultOutput {
	return o
}

func (o LookupLoadBalancerResultOutput) ToLookupLoadBalancerResultOutputWithContext(ctx context.Context) LookupLoadBalancerResultOutput {
	return o
}

func (o LookupLoadBalancerResultOutput) Algorithm() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Algorithm }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) DisableLetsEncryptDnsRecords() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) bool { return v.DisableLetsEncryptDnsRecords }).(pulumi.BoolOutput)
}

func (o LookupLoadBalancerResultOutput) DropletIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []int { return v.DropletIds }).(pulumi.IntArrayOutput)
}

func (o LookupLoadBalancerResultOutput) DropletTag() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.DropletTag }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) EnableBackendKeepalive() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) bool { return v.EnableBackendKeepalive }).(pulumi.BoolOutput)
}

func (o LookupLoadBalancerResultOutput) EnableProxyProtocol() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) bool { return v.EnableProxyProtocol }).(pulumi.BoolOutput)
}

func (o LookupLoadBalancerResultOutput) ForwardingRules() GetLoadBalancerForwardingRuleArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerForwardingRule { return v.ForwardingRules }).(GetLoadBalancerForwardingRuleArrayOutput)
}

func (o LookupLoadBalancerResultOutput) Healthchecks() GetLoadBalancerHealthcheckArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerHealthcheck { return v.Healthchecks }).(GetLoadBalancerHealthcheckArrayOutput)
}

func (o LookupLoadBalancerResultOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Ip }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) LoadBalancerUrn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.LoadBalancerUrn }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o LookupLoadBalancerResultOutput) RedirectHttpToHttps() pulumi.BoolOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) bool { return v.RedirectHttpToHttps }).(pulumi.BoolOutput)
}

func (o LookupLoadBalancerResultOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Region }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Size }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) SizeUnit() pulumi.IntOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) int { return v.SizeUnit }).(pulumi.IntOutput)
}

func (o LookupLoadBalancerResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.Status }).(pulumi.StringOutput)
}

func (o LookupLoadBalancerResultOutput) StickySessions() GetLoadBalancerStickySessionArrayOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) []GetLoadBalancerStickySession { return v.StickySessions }).(GetLoadBalancerStickySessionArrayOutput)
}

func (o LookupLoadBalancerResultOutput) VpcUuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupLoadBalancerResult) string { return v.VpcUuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupLoadBalancerResultOutput{})
}
