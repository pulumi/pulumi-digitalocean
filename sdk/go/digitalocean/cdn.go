// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a DigitalOcean CDN Endpoint resource for use with Spaces.
type Cdn struct {
	s *pulumi.ResourceState
}

// NewCdn registers a new resource with the given unique name, arguments, and options.
func NewCdn(ctx *pulumi.Context,
	name string, args *CdnArgs, opts ...pulumi.ResourceOpt) (*Cdn, error) {
	if args == nil || args.Origin == nil {
		return nil, errors.New("missing required argument 'Origin'")
	}
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["certificateId"] = nil
		inputs["customDomain"] = nil
		inputs["origin"] = nil
		inputs["ttl"] = nil
	} else {
		inputs["certificateId"] = args.CertificateId
		inputs["customDomain"] = args.CustomDomain
		inputs["origin"] = args.Origin
		inputs["ttl"] = args.Ttl
	}
	inputs["createdAt"] = nil
	inputs["endpoint"] = nil
	s, err := ctx.RegisterResource("digitalocean:index/cdn:Cdn", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Cdn{s: s}, nil
}

// GetCdn gets an existing Cdn resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCdn(ctx *pulumi.Context,
	name string, id pulumi.ID, state *CdnState, opts ...pulumi.ResourceOpt) (*Cdn, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["certificateId"] = state.CertificateId
		inputs["createdAt"] = state.CreatedAt
		inputs["customDomain"] = state.CustomDomain
		inputs["endpoint"] = state.Endpoint
		inputs["origin"] = state.Origin
		inputs["ttl"] = state.Ttl
	}
	s, err := ctx.ReadResource("digitalocean:index/cdn:Cdn", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Cdn{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Cdn) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Cdn) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// ID of a DigitalOcean managed TLS certificate for use with custom domains
func (r *Cdn) CertificateId() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["certificateId"])
}

// The date and time when the CDN Endpoint was created.
func (r *Cdn) CreatedAt() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createdAt"])
}

// The fully qualified domain name (FQDN) of the custom subdomain used with the CDN Endpoint.
func (r *Cdn) CustomDomain() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["customDomain"])
}

// The fully qualified domain name (FQDN) from which the CDN-backed content is served.
func (r *Cdn) Endpoint() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["endpoint"])
}

// The fully qualified domain name, (FQDN) for a Space.
func (r *Cdn) Origin() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["origin"])
}

// The time to live for the CDN Endpoint, in seconds. Default is 3600 seconds.
// * `certificate_id`- (Optional) The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
func (r *Cdn) Ttl() *pulumi.IntOutput {
	return (*pulumi.IntOutput)(r.s.State["ttl"])
}

// Input properties used for looking up and filtering Cdn resources.
type CdnState struct {
	// ID of a DigitalOcean managed TLS certificate for use with custom domains
	CertificateId interface{}
	// The date and time when the CDN Endpoint was created.
	CreatedAt interface{}
	// The fully qualified domain name (FQDN) of the custom subdomain used with the CDN Endpoint.
	CustomDomain interface{}
	// The fully qualified domain name (FQDN) from which the CDN-backed content is served.
	Endpoint interface{}
	// The fully qualified domain name, (FQDN) for a Space.
	Origin interface{}
	// The time to live for the CDN Endpoint, in seconds. Default is 3600 seconds.
	// * `certificate_id`- (Optional) The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
	Ttl interface{}
}

// The set of arguments for constructing a Cdn resource.
type CdnArgs struct {
	// ID of a DigitalOcean managed TLS certificate for use with custom domains
	CertificateId interface{}
	// The fully qualified domain name (FQDN) of the custom subdomain used with the CDN Endpoint.
	CustomDomain interface{}
	// The fully qualified domain name, (FQDN) for a Space.
	Origin interface{}
	// The time to live for the CDN Endpoint, in seconds. Default is 3600 seconds.
	// * `certificate_id`- (Optional) The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
	Ttl interface{}
}
