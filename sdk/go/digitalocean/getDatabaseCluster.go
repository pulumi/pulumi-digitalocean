// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides information on a DigitalOcean database cluster resource.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-digitalocean/sdk/v2/go/digitalocean"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := digitalocean.LookupDatabaseCluster(ctx, &digitalocean.LookupDatabaseClusterArgs{
// 			Name: "example-cluster",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("databaseOutput", example.Uri)
// 		return nil
// 	})
// }
// ```
func LookupDatabaseCluster(ctx *pulumi.Context, args *LookupDatabaseClusterArgs, opts ...pulumi.InvokeOption) (*LookupDatabaseClusterResult, error) {
	var rv LookupDatabaseClusterResult
	err := ctx.Invoke("digitalocean:index/getDatabaseCluster:getDatabaseCluster", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDatabaseCluster.
type LookupDatabaseClusterArgs struct {
	// The name of the database cluster.
	Name string   `pulumi:"name"`
	Tags []string `pulumi:"tags"`
}

// A collection of values returned by getDatabaseCluster.
type LookupDatabaseClusterResult struct {
	// Name of the cluster's default database.
	Database string `pulumi:"database"`
	// Database engine used by the cluster (ex. `pg` for PostreSQL).
	Engine string `pulumi:"engine"`
	// Database cluster's hostname.
	Host string `pulumi:"host"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Defines when the automatic maintenance should be performed for the database cluster.
	MaintenanceWindows []GetDatabaseClusterMaintenanceWindow `pulumi:"maintenanceWindows"`
	Name               string                                `pulumi:"name"`
	// Number of nodes that will be included in the cluster.
	NodeCount int `pulumi:"nodeCount"`
	// Password for the cluster's default user.
	Password string `pulumi:"password"`
	// Network port that the database cluster is listening on.
	Port int `pulumi:"port"`
	// Same as `host`, but only accessible from resources within the account and in the same region.
	PrivateHost string `pulumi:"privateHost"`
	// The ID of the VPC where the database cluster is located.
	PrivateNetworkUuid string `pulumi:"privateNetworkUuid"`
	// Same as `uri`, but only accessible from resources within the account and in the same region.
	PrivateUri string `pulumi:"privateUri"`
	// DigitalOcean region where the cluster will reside.
	Region string `pulumi:"region"`
	// Database droplet size associated with the cluster (ex. `db-s-1vcpu-1gb`).
	Size string   `pulumi:"size"`
	Tags []string `pulumi:"tags"`
	// The full URI for connecting to the database cluster.
	Uri string `pulumi:"uri"`
	// The uniform resource name of the database cluster.
	Urn string `pulumi:"urn"`
	// Username for the cluster's default user.
	User string `pulumi:"user"`
	// Engine version used by the cluster (ex. `11` for PostgreSQL 11).
	Version string `pulumi:"version"`
}
