// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides access to the metrics credentials for DigitalOcean database clusters. These credentials are account-wide and can be used to access metrics for any database cluster in the account.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := digitalocean.GetDatabaseMetricsCredentials(ctx, map[string]interface{}{}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("metricsUsername", example.Username)
//			ctx.Export("metricsPassword", example.Password)
//			return nil
//		})
//	}
//
// ```
func GetDatabaseMetricsCredentials(ctx *pulumi.Context, opts ...pulumi.InvokeOption) (*GetDatabaseMetricsCredentialsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDatabaseMetricsCredentialsResult
	err := ctx.Invoke("digitalocean:index/getDatabaseMetricsCredentials:getDatabaseMetricsCredentials", nil, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of values returned by getDatabaseMetricsCredentials.
type GetDatabaseMetricsCredentialsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The password for accessing database metrics. This is marked as sensitive.
	Password string `pulumi:"password"`
	// The username for accessing database metrics.
	Username string `pulumi:"username"`
}

func GetDatabaseMetricsCredentialsOutput(ctx *pulumi.Context, opts ...pulumi.InvokeOption) GetDatabaseMetricsCredentialsResultOutput {
	return pulumi.ToOutput(0).ApplyT(func(int) (GetDatabaseMetricsCredentialsResultOutput, error) {
		options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
		return ctx.InvokeOutput("digitalocean:index/getDatabaseMetricsCredentials:getDatabaseMetricsCredentials", nil, GetDatabaseMetricsCredentialsResultOutput{}, options).(GetDatabaseMetricsCredentialsResultOutput), nil
	}).(GetDatabaseMetricsCredentialsResultOutput)
}

// A collection of values returned by getDatabaseMetricsCredentials.
type GetDatabaseMetricsCredentialsResultOutput struct{ *pulumi.OutputState }

func (GetDatabaseMetricsCredentialsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseMetricsCredentialsResult)(nil)).Elem()
}

func (o GetDatabaseMetricsCredentialsResultOutput) ToGetDatabaseMetricsCredentialsResultOutput() GetDatabaseMetricsCredentialsResultOutput {
	return o
}

func (o GetDatabaseMetricsCredentialsResultOutput) ToGetDatabaseMetricsCredentialsResultOutputWithContext(ctx context.Context) GetDatabaseMetricsCredentialsResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetDatabaseMetricsCredentialsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMetricsCredentialsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The password for accessing database metrics. This is marked as sensitive.
func (o GetDatabaseMetricsCredentialsResultOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMetricsCredentialsResult) string { return v.Password }).(pulumi.StringOutput)
}

// The username for accessing database metrics.
func (o GetDatabaseMetricsCredentialsResultOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseMetricsCredentialsResult) string { return v.Username }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDatabaseMetricsCredentialsResultOutput{})
}
