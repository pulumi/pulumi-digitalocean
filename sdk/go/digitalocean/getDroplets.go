// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on Droplets for use in other resources, with the ability to filter and sort the results.
// If no filters are specified, all Droplets will be returned.
//
// This data source is useful if the Droplets in question are not managed by the provider or you need to
// utilize any of the Droplets' data.
//
// Note: You can use the `Droplet` data source to obtain metadata
// about a single Droplet if you already know the `id`, unique `name`, or unique `tag` to retrieve.
func GetDroplets(ctx *pulumi.Context, args *GetDropletsArgs, opts ...pulumi.InvokeOption) (*GetDropletsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDropletsResult
	err := ctx.Invoke("digitalocean:index/getDroplets:getDroplets", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDroplets.
type GetDropletsArgs struct {
	// Filter the results.
	// The `filter` block is documented below.
	Filters []GetDropletsFilter `pulumi:"filters"`
	// Sort the results.
	// The `sort` block is documented below.
	Sorts []GetDropletsSort `pulumi:"sorts"`
}

// A collection of values returned by getDroplets.
type GetDropletsResult struct {
	// A list of Droplets satisfying any `filter` and `sort` criteria. Each Droplet has the following attributes:
	Droplets []GetDropletsDroplet `pulumi:"droplets"`
	Filters  []GetDropletsFilter  `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id    string            `pulumi:"id"`
	Sorts []GetDropletsSort `pulumi:"sorts"`
}

func GetDropletsOutput(ctx *pulumi.Context, args GetDropletsOutputArgs, opts ...pulumi.InvokeOption) GetDropletsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDropletsResult, error) {
			args := v.(GetDropletsArgs)
			r, err := GetDroplets(ctx, &args, opts...)
			var s GetDropletsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDropletsResultOutput)
}

// A collection of arguments for invoking getDroplets.
type GetDropletsOutputArgs struct {
	// Filter the results.
	// The `filter` block is documented below.
	Filters GetDropletsFilterArrayInput `pulumi:"filters"`
	// Sort the results.
	// The `sort` block is documented below.
	Sorts GetDropletsSortArrayInput `pulumi:"sorts"`
}

func (GetDropletsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletsArgs)(nil)).Elem()
}

// A collection of values returned by getDroplets.
type GetDropletsResultOutput struct{ *pulumi.OutputState }

func (GetDropletsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletsResult)(nil)).Elem()
}

func (o GetDropletsResultOutput) ToGetDropletsResultOutput() GetDropletsResultOutput {
	return o
}

func (o GetDropletsResultOutput) ToGetDropletsResultOutputWithContext(ctx context.Context) GetDropletsResultOutput {
	return o
}

func (o GetDropletsResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetDropletsResult] {
	return pulumix.Output[GetDropletsResult]{
		OutputState: o.OutputState,
	}
}

// A list of Droplets satisfying any `filter` and `sort` criteria. Each Droplet has the following attributes:
func (o GetDropletsResultOutput) Droplets() GetDropletsDropletArrayOutput {
	return o.ApplyT(func(v GetDropletsResult) []GetDropletsDroplet { return v.Droplets }).(GetDropletsDropletArrayOutput)
}

func (o GetDropletsResultOutput) Filters() GetDropletsFilterArrayOutput {
	return o.ApplyT(func(v GetDropletsResult) []GetDropletsFilter { return v.Filters }).(GetDropletsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDropletsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDropletsResultOutput) Sorts() GetDropletsSortArrayOutput {
	return o.ApplyT(func(v GetDropletsResult) []GetDropletsSort { return v.Sorts }).(GetDropletsSortArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDropletsResultOutput{})
}
