// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// Get the key by access key ID:
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := digitalocean.LookupSpacesKey(ctx, &digitalocean.LookupSpacesKeyArgs{
//				AccessKey: "ACCESS_KEY_ID",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("keyGrants", example.Grants)
//			return nil
//		})
//	}
//
// ```
func LookupSpacesKey(ctx *pulumi.Context, args *LookupSpacesKeyArgs, opts ...pulumi.InvokeOption) (*LookupSpacesKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupSpacesKeyResult
	err := ctx.Invoke("digitalocean:index/getSpacesKey:getSpacesKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSpacesKey.
type LookupSpacesKeyArgs struct {
	// The Access Key ID of the Spaces key.
	AccessKey string `pulumi:"accessKey"`
}

// A collection of values returned by getSpacesKey.
type LookupSpacesKeyResult struct {
	// The access key ID of the Spaces key
	AccessKey string `pulumi:"accessKey"`
	// The creation time of the Spaces key
	CreatedAt string `pulumi:"createdAt"`
	// The list of grants associated with the Spaces key.
	Grants []GetSpacesKeyGrant `pulumi:"grants"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The name of the Spaces key
	Name string `pulumi:"name"`
}

func LookupSpacesKeyOutput(ctx *pulumi.Context, args LookupSpacesKeyOutputArgs, opts ...pulumi.InvokeOption) LookupSpacesKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupSpacesKeyResultOutput, error) {
			args := v.(LookupSpacesKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("digitalocean:index/getSpacesKey:getSpacesKey", args, LookupSpacesKeyResultOutput{}, options).(LookupSpacesKeyResultOutput), nil
		}).(LookupSpacesKeyResultOutput)
}

// A collection of arguments for invoking getSpacesKey.
type LookupSpacesKeyOutputArgs struct {
	// The Access Key ID of the Spaces key.
	AccessKey pulumi.StringInput `pulumi:"accessKey"`
}

func (LookupSpacesKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpacesKeyArgs)(nil)).Elem()
}

// A collection of values returned by getSpacesKey.
type LookupSpacesKeyResultOutput struct{ *pulumi.OutputState }

func (LookupSpacesKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupSpacesKeyResult)(nil)).Elem()
}

func (o LookupSpacesKeyResultOutput) ToLookupSpacesKeyResultOutput() LookupSpacesKeyResultOutput {
	return o
}

func (o LookupSpacesKeyResultOutput) ToLookupSpacesKeyResultOutputWithContext(ctx context.Context) LookupSpacesKeyResultOutput {
	return o
}

// The access key ID of the Spaces key
func (o LookupSpacesKeyResultOutput) AccessKey() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpacesKeyResult) string { return v.AccessKey }).(pulumi.StringOutput)
}

// The creation time of the Spaces key
func (o LookupSpacesKeyResultOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpacesKeyResult) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The list of grants associated with the Spaces key.
func (o LookupSpacesKeyResultOutput) Grants() GetSpacesKeyGrantArrayOutput {
	return o.ApplyT(func(v LookupSpacesKeyResult) []GetSpacesKeyGrant { return v.Grants }).(GetSpacesKeyGrantArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupSpacesKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpacesKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the Spaces key
func (o LookupSpacesKeyResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupSpacesKeyResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupSpacesKeyResultOutput{})
}
