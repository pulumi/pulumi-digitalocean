// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type AppSpec struct {
	// Describes an alert policy for the component.
	Alerts    []AppSpecAlert    `pulumi:"alerts"`
	Databases []AppSpecDatabase `pulumi:"databases"`
	// Describes a domain where the application will be made available.
	DomainNames []AppSpecDomainName `pulumi:"domainNames"`
	// Deprecated: This attribute has been replaced by `domain` which supports additional functionality.
	Domains []string `pulumi:"domains"`
	// Describes an environment variable made available to an app competent.
	Envs []AppSpecEnv `pulumi:"envs"`
	Jobs []AppSpecJob `pulumi:"jobs"`
	// The name of the component.
	Name string `pulumi:"name"`
	// The slug for the DigitalOcean data center region hosting the app.
	Region      *string             `pulumi:"region"`
	Services    []AppSpecService    `pulumi:"services"`
	StaticSites []AppSpecStaticSite `pulumi:"staticSites"`
	Workers     []AppSpecWorker     `pulumi:"workers"`
}

// AppSpecInput is an input type that accepts AppSpecArgs and AppSpecOutput values.
// You can construct a concrete instance of `AppSpecInput` via:
//
//          AppSpecArgs{...}
type AppSpecInput interface {
	pulumi.Input

	ToAppSpecOutput() AppSpecOutput
	ToAppSpecOutputWithContext(context.Context) AppSpecOutput
}

type AppSpecArgs struct {
	// Describes an alert policy for the component.
	Alerts    AppSpecAlertArrayInput    `pulumi:"alerts"`
	Databases AppSpecDatabaseArrayInput `pulumi:"databases"`
	// Describes a domain where the application will be made available.
	DomainNames AppSpecDomainNameArrayInput `pulumi:"domainNames"`
	// Deprecated: This attribute has been replaced by `domain` which supports additional functionality.
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// Describes an environment variable made available to an app competent.
	Envs AppSpecEnvArrayInput `pulumi:"envs"`
	Jobs AppSpecJobArrayInput `pulumi:"jobs"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// The slug for the DigitalOcean data center region hosting the app.
	Region      pulumi.StringPtrInput       `pulumi:"region"`
	Services    AppSpecServiceArrayInput    `pulumi:"services"`
	StaticSites AppSpecStaticSiteArrayInput `pulumi:"staticSites"`
	Workers     AppSpecWorkerArrayInput     `pulumi:"workers"`
}

func (AppSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpec)(nil)).Elem()
}

func (i AppSpecArgs) ToAppSpecOutput() AppSpecOutput {
	return i.ToAppSpecOutputWithContext(context.Background())
}

func (i AppSpecArgs) ToAppSpecOutputWithContext(ctx context.Context) AppSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecOutput)
}

func (i AppSpecArgs) ToAppSpecPtrOutput() AppSpecPtrOutput {
	return i.ToAppSpecPtrOutputWithContext(context.Background())
}

func (i AppSpecArgs) ToAppSpecPtrOutputWithContext(ctx context.Context) AppSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecOutput).ToAppSpecPtrOutputWithContext(ctx)
}

// AppSpecPtrInput is an input type that accepts AppSpecArgs, AppSpecPtr and AppSpecPtrOutput values.
// You can construct a concrete instance of `AppSpecPtrInput` via:
//
//          AppSpecArgs{...}
//
//  or:
//
//          nil
type AppSpecPtrInput interface {
	pulumi.Input

	ToAppSpecPtrOutput() AppSpecPtrOutput
	ToAppSpecPtrOutputWithContext(context.Context) AppSpecPtrOutput
}

type appSpecPtrType AppSpecArgs

func AppSpecPtr(v *AppSpecArgs) AppSpecPtrInput {
	return (*appSpecPtrType)(v)
}

func (*appSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpec)(nil)).Elem()
}

func (i *appSpecPtrType) ToAppSpecPtrOutput() AppSpecPtrOutput {
	return i.ToAppSpecPtrOutputWithContext(context.Background())
}

func (i *appSpecPtrType) ToAppSpecPtrOutputWithContext(ctx context.Context) AppSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecPtrOutput)
}

type AppSpecOutput struct{ *pulumi.OutputState }

func (AppSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpec)(nil)).Elem()
}

func (o AppSpecOutput) ToAppSpecOutput() AppSpecOutput {
	return o
}

func (o AppSpecOutput) ToAppSpecOutputWithContext(ctx context.Context) AppSpecOutput {
	return o
}

func (o AppSpecOutput) ToAppSpecPtrOutput() AppSpecPtrOutput {
	return o.ToAppSpecPtrOutputWithContext(context.Background())
}

func (o AppSpecOutput) ToAppSpecPtrOutputWithContext(ctx context.Context) AppSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpec) *AppSpec {
		return &v
	}).(AppSpecPtrOutput)
}

// Describes an alert policy for the component.
func (o AppSpecOutput) Alerts() AppSpecAlertArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppSpecAlert { return v.Alerts }).(AppSpecAlertArrayOutput)
}

func (o AppSpecOutput) Databases() AppSpecDatabaseArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppSpecDatabase { return v.Databases }).(AppSpecDatabaseArrayOutput)
}

// Describes a domain where the application will be made available.
func (o AppSpecOutput) DomainNames() AppSpecDomainNameArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppSpecDomainName { return v.DomainNames }).(AppSpecDomainNameArrayOutput)
}

// Deprecated: This attribute has been replaced by `domain` which supports additional functionality.
func (o AppSpecOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppSpec) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Describes an environment variable made available to an app competent.
func (o AppSpecOutput) Envs() AppSpecEnvArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppSpecEnv { return v.Envs }).(AppSpecEnvArrayOutput)
}

func (o AppSpecOutput) Jobs() AppSpecJobArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppSpecJob { return v.Jobs }).(AppSpecJobArrayOutput)
}

// The name of the component.
func (o AppSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpec) string { return v.Name }).(pulumi.StringOutput)
}

// The slug for the DigitalOcean data center region hosting the app.
func (o AppSpecOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpec) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o AppSpecOutput) Services() AppSpecServiceArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppSpecService { return v.Services }).(AppSpecServiceArrayOutput)
}

func (o AppSpecOutput) StaticSites() AppSpecStaticSiteArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppSpecStaticSite { return v.StaticSites }).(AppSpecStaticSiteArrayOutput)
}

func (o AppSpecOutput) Workers() AppSpecWorkerArrayOutput {
	return o.ApplyT(func(v AppSpec) []AppSpecWorker { return v.Workers }).(AppSpecWorkerArrayOutput)
}

type AppSpecPtrOutput struct{ *pulumi.OutputState }

func (AppSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpec)(nil)).Elem()
}

func (o AppSpecPtrOutput) ToAppSpecPtrOutput() AppSpecPtrOutput {
	return o
}

func (o AppSpecPtrOutput) ToAppSpecPtrOutputWithContext(ctx context.Context) AppSpecPtrOutput {
	return o
}

func (o AppSpecPtrOutput) Elem() AppSpecOutput {
	return o.ApplyT(func(v *AppSpec) AppSpec {
		if v != nil {
			return *v
		}
		var ret AppSpec
		return ret
	}).(AppSpecOutput)
}

// Describes an alert policy for the component.
func (o AppSpecPtrOutput) Alerts() AppSpecAlertArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppSpecAlert {
		if v == nil {
			return nil
		}
		return v.Alerts
	}).(AppSpecAlertArrayOutput)
}

func (o AppSpecPtrOutput) Databases() AppSpecDatabaseArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppSpecDatabase {
		if v == nil {
			return nil
		}
		return v.Databases
	}).(AppSpecDatabaseArrayOutput)
}

// Describes a domain where the application will be made available.
func (o AppSpecPtrOutput) DomainNames() AppSpecDomainNameArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppSpecDomainName {
		if v == nil {
			return nil
		}
		return v.DomainNames
	}).(AppSpecDomainNameArrayOutput)
}

// Deprecated: This attribute has been replaced by `domain` which supports additional functionality.
func (o AppSpecPtrOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSpec) []string {
		if v == nil {
			return nil
		}
		return v.Domains
	}).(pulumi.StringArrayOutput)
}

// Describes an environment variable made available to an app competent.
func (o AppSpecPtrOutput) Envs() AppSpecEnvArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppSpecEnv {
		if v == nil {
			return nil
		}
		return v.Envs
	}).(AppSpecEnvArrayOutput)
}

func (o AppSpecPtrOutput) Jobs() AppSpecJobArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppSpecJob {
		if v == nil {
			return nil
		}
		return v.Jobs
	}).(AppSpecJobArrayOutput)
}

// The name of the component.
func (o AppSpecPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpec) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The slug for the DigitalOcean data center region hosting the app.
func (o AppSpecPtrOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpec) *string {
		if v == nil {
			return nil
		}
		return v.Region
	}).(pulumi.StringPtrOutput)
}

func (o AppSpecPtrOutput) Services() AppSpecServiceArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppSpecService {
		if v == nil {
			return nil
		}
		return v.Services
	}).(AppSpecServiceArrayOutput)
}

func (o AppSpecPtrOutput) StaticSites() AppSpecStaticSiteArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppSpecStaticSite {
		if v == nil {
			return nil
		}
		return v.StaticSites
	}).(AppSpecStaticSiteArrayOutput)
}

func (o AppSpecPtrOutput) Workers() AppSpecWorkerArrayOutput {
	return o.ApplyT(func(v *AppSpec) []AppSpecWorker {
		if v == nil {
			return nil
		}
		return v.Workers
	}).(AppSpecWorkerArrayOutput)
}

type AppSpecAlert struct {
	// Determines whether or not the alert is disabled (default: `false`).
	Disabled *bool `pulumi:"disabled"`
	// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
	Rule string `pulumi:"rule"`
}

// AppSpecAlertInput is an input type that accepts AppSpecAlertArgs and AppSpecAlertOutput values.
// You can construct a concrete instance of `AppSpecAlertInput` via:
//
//          AppSpecAlertArgs{...}
type AppSpecAlertInput interface {
	pulumi.Input

	ToAppSpecAlertOutput() AppSpecAlertOutput
	ToAppSpecAlertOutputWithContext(context.Context) AppSpecAlertOutput
}

type AppSpecAlertArgs struct {
	// Determines whether or not the alert is disabled (default: `false`).
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
	Rule pulumi.StringInput `pulumi:"rule"`
}

func (AppSpecAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecAlert)(nil)).Elem()
}

func (i AppSpecAlertArgs) ToAppSpecAlertOutput() AppSpecAlertOutput {
	return i.ToAppSpecAlertOutputWithContext(context.Background())
}

func (i AppSpecAlertArgs) ToAppSpecAlertOutputWithContext(ctx context.Context) AppSpecAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecAlertOutput)
}

// AppSpecAlertArrayInput is an input type that accepts AppSpecAlertArray and AppSpecAlertArrayOutput values.
// You can construct a concrete instance of `AppSpecAlertArrayInput` via:
//
//          AppSpecAlertArray{ AppSpecAlertArgs{...} }
type AppSpecAlertArrayInput interface {
	pulumi.Input

	ToAppSpecAlertArrayOutput() AppSpecAlertArrayOutput
	ToAppSpecAlertArrayOutputWithContext(context.Context) AppSpecAlertArrayOutput
}

type AppSpecAlertArray []AppSpecAlertInput

func (AppSpecAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecAlert)(nil)).Elem()
}

func (i AppSpecAlertArray) ToAppSpecAlertArrayOutput() AppSpecAlertArrayOutput {
	return i.ToAppSpecAlertArrayOutputWithContext(context.Background())
}

func (i AppSpecAlertArray) ToAppSpecAlertArrayOutputWithContext(ctx context.Context) AppSpecAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecAlertArrayOutput)
}

type AppSpecAlertOutput struct{ *pulumi.OutputState }

func (AppSpecAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecAlert)(nil)).Elem()
}

func (o AppSpecAlertOutput) ToAppSpecAlertOutput() AppSpecAlertOutput {
	return o
}

func (o AppSpecAlertOutput) ToAppSpecAlertOutputWithContext(ctx context.Context) AppSpecAlertOutput {
	return o
}

// Determines whether or not the alert is disabled (default: `false`).
func (o AppSpecAlertOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecAlert) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
func (o AppSpecAlertOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecAlert) string { return v.Rule }).(pulumi.StringOutput)
}

type AppSpecAlertArrayOutput struct{ *pulumi.OutputState }

func (AppSpecAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecAlert)(nil)).Elem()
}

func (o AppSpecAlertArrayOutput) ToAppSpecAlertArrayOutput() AppSpecAlertArrayOutput {
	return o
}

func (o AppSpecAlertArrayOutput) ToAppSpecAlertArrayOutputWithContext(ctx context.Context) AppSpecAlertArrayOutput {
	return o
}

func (o AppSpecAlertArrayOutput) Index(i pulumi.IntInput) AppSpecAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecAlert {
		return vs[0].([]AppSpecAlert)[vs[1].(int)]
	}).(AppSpecAlertOutput)
}

type AppSpecDatabase struct {
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if `clusterName` is not set, a new cluster will be provisioned.
	ClusterName *string `pulumi:"clusterName"`
	// The name of the MySQL or PostgreSQL database to configure.
	DbName *string `pulumi:"dbName"`
	// The name of the MySQL or PostgreSQL user to configure.
	DbUser *string `pulumi:"dbUser"`
	// The database engine to use (`MYSQL`, `PG`, `REDIS`, or `MONGODB`).
	Engine *string `pulumi:"engine"`
	// The name of the component.
	Name *string `pulumi:"name"`
	// Whether this is a production or dev database.
	Production *bool `pulumi:"production"`
	// The version of the database engine.
	Version *string `pulumi:"version"`
}

// AppSpecDatabaseInput is an input type that accepts AppSpecDatabaseArgs and AppSpecDatabaseOutput values.
// You can construct a concrete instance of `AppSpecDatabaseInput` via:
//
//          AppSpecDatabaseArgs{...}
type AppSpecDatabaseInput interface {
	pulumi.Input

	ToAppSpecDatabaseOutput() AppSpecDatabaseOutput
	ToAppSpecDatabaseOutputWithContext(context.Context) AppSpecDatabaseOutput
}

type AppSpecDatabaseArgs struct {
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if `clusterName` is not set, a new cluster will be provisioned.
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	// The name of the MySQL or PostgreSQL database to configure.
	DbName pulumi.StringPtrInput `pulumi:"dbName"`
	// The name of the MySQL or PostgreSQL user to configure.
	DbUser pulumi.StringPtrInput `pulumi:"dbUser"`
	// The database engine to use (`MYSQL`, `PG`, `REDIS`, or `MONGODB`).
	Engine pulumi.StringPtrInput `pulumi:"engine"`
	// The name of the component.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether this is a production or dev database.
	Production pulumi.BoolPtrInput `pulumi:"production"`
	// The version of the database engine.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (AppSpecDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecDatabase)(nil)).Elem()
}

func (i AppSpecDatabaseArgs) ToAppSpecDatabaseOutput() AppSpecDatabaseOutput {
	return i.ToAppSpecDatabaseOutputWithContext(context.Background())
}

func (i AppSpecDatabaseArgs) ToAppSpecDatabaseOutputWithContext(ctx context.Context) AppSpecDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecDatabaseOutput)
}

// AppSpecDatabaseArrayInput is an input type that accepts AppSpecDatabaseArray and AppSpecDatabaseArrayOutput values.
// You can construct a concrete instance of `AppSpecDatabaseArrayInput` via:
//
//          AppSpecDatabaseArray{ AppSpecDatabaseArgs{...} }
type AppSpecDatabaseArrayInput interface {
	pulumi.Input

	ToAppSpecDatabaseArrayOutput() AppSpecDatabaseArrayOutput
	ToAppSpecDatabaseArrayOutputWithContext(context.Context) AppSpecDatabaseArrayOutput
}

type AppSpecDatabaseArray []AppSpecDatabaseInput

func (AppSpecDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecDatabase)(nil)).Elem()
}

func (i AppSpecDatabaseArray) ToAppSpecDatabaseArrayOutput() AppSpecDatabaseArrayOutput {
	return i.ToAppSpecDatabaseArrayOutputWithContext(context.Background())
}

func (i AppSpecDatabaseArray) ToAppSpecDatabaseArrayOutputWithContext(ctx context.Context) AppSpecDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecDatabaseArrayOutput)
}

type AppSpecDatabaseOutput struct{ *pulumi.OutputState }

func (AppSpecDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecDatabase)(nil)).Elem()
}

func (o AppSpecDatabaseOutput) ToAppSpecDatabaseOutput() AppSpecDatabaseOutput {
	return o
}

func (o AppSpecDatabaseOutput) ToAppSpecDatabaseOutputWithContext(ctx context.Context) AppSpecDatabaseOutput {
	return o
}

// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if `clusterName` is not set, a new cluster will be provisioned.
func (o AppSpecDatabaseOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecDatabase) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

// The name of the MySQL or PostgreSQL database to configure.
func (o AppSpecDatabaseOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecDatabase) *string { return v.DbName }).(pulumi.StringPtrOutput)
}

// The name of the MySQL or PostgreSQL user to configure.
func (o AppSpecDatabaseOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecDatabase) *string { return v.DbUser }).(pulumi.StringPtrOutput)
}

// The database engine to use (`MYSQL`, `PG`, `REDIS`, or `MONGODB`).
func (o AppSpecDatabaseOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecDatabase) *string { return v.Engine }).(pulumi.StringPtrOutput)
}

// The name of the component.
func (o AppSpecDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether this is a production or dev database.
func (o AppSpecDatabaseOutput) Production() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecDatabase) *bool { return v.Production }).(pulumi.BoolPtrOutput)
}

// The version of the database engine.
func (o AppSpecDatabaseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecDatabase) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type AppSpecDatabaseArrayOutput struct{ *pulumi.OutputState }

func (AppSpecDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecDatabase)(nil)).Elem()
}

func (o AppSpecDatabaseArrayOutput) ToAppSpecDatabaseArrayOutput() AppSpecDatabaseArrayOutput {
	return o
}

func (o AppSpecDatabaseArrayOutput) ToAppSpecDatabaseArrayOutputWithContext(ctx context.Context) AppSpecDatabaseArrayOutput {
	return o
}

func (o AppSpecDatabaseArrayOutput) Index(i pulumi.IntInput) AppSpecDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecDatabase {
		return vs[0].([]AppSpecDatabase)[vs[1].(int)]
	}).(AppSpecDatabaseOutput)
}

type AppSpecDomainName struct {
	// The name of the component.
	Name string `pulumi:"name"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type *string `pulumi:"type"`
	// A boolean indicating whether the domain includes all sub-domains, in addition to the given domain.
	Wildcard *bool `pulumi:"wildcard"`
	// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
	Zone *string `pulumi:"zone"`
}

// AppSpecDomainNameInput is an input type that accepts AppSpecDomainNameArgs and AppSpecDomainNameOutput values.
// You can construct a concrete instance of `AppSpecDomainNameInput` via:
//
//          AppSpecDomainNameArgs{...}
type AppSpecDomainNameInput interface {
	pulumi.Input

	ToAppSpecDomainNameOutput() AppSpecDomainNameOutput
	ToAppSpecDomainNameOutputWithContext(context.Context) AppSpecDomainNameOutput
}

type AppSpecDomainNameArgs struct {
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// A boolean indicating whether the domain includes all sub-domains, in addition to the given domain.
	Wildcard pulumi.BoolPtrInput `pulumi:"wildcard"`
	// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
	Zone pulumi.StringPtrInput `pulumi:"zone"`
}

func (AppSpecDomainNameArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecDomainName)(nil)).Elem()
}

func (i AppSpecDomainNameArgs) ToAppSpecDomainNameOutput() AppSpecDomainNameOutput {
	return i.ToAppSpecDomainNameOutputWithContext(context.Background())
}

func (i AppSpecDomainNameArgs) ToAppSpecDomainNameOutputWithContext(ctx context.Context) AppSpecDomainNameOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecDomainNameOutput)
}

// AppSpecDomainNameArrayInput is an input type that accepts AppSpecDomainNameArray and AppSpecDomainNameArrayOutput values.
// You can construct a concrete instance of `AppSpecDomainNameArrayInput` via:
//
//          AppSpecDomainNameArray{ AppSpecDomainNameArgs{...} }
type AppSpecDomainNameArrayInput interface {
	pulumi.Input

	ToAppSpecDomainNameArrayOutput() AppSpecDomainNameArrayOutput
	ToAppSpecDomainNameArrayOutputWithContext(context.Context) AppSpecDomainNameArrayOutput
}

type AppSpecDomainNameArray []AppSpecDomainNameInput

func (AppSpecDomainNameArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecDomainName)(nil)).Elem()
}

func (i AppSpecDomainNameArray) ToAppSpecDomainNameArrayOutput() AppSpecDomainNameArrayOutput {
	return i.ToAppSpecDomainNameArrayOutputWithContext(context.Background())
}

func (i AppSpecDomainNameArray) ToAppSpecDomainNameArrayOutputWithContext(ctx context.Context) AppSpecDomainNameArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecDomainNameArrayOutput)
}

type AppSpecDomainNameOutput struct{ *pulumi.OutputState }

func (AppSpecDomainNameOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecDomainName)(nil)).Elem()
}

func (o AppSpecDomainNameOutput) ToAppSpecDomainNameOutput() AppSpecDomainNameOutput {
	return o
}

func (o AppSpecDomainNameOutput) ToAppSpecDomainNameOutputWithContext(ctx context.Context) AppSpecDomainNameOutput {
	return o
}

// The name of the component.
func (o AppSpecDomainNameOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecDomainName) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o AppSpecDomainNameOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecDomainName) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// A boolean indicating whether the domain includes all sub-domains, in addition to the given domain.
func (o AppSpecDomainNameOutput) Wildcard() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecDomainName) *bool { return v.Wildcard }).(pulumi.BoolPtrOutput)
}

// If the domain uses DigitalOcean DNS and you would like App Platform to automatically manage it for you, set this to the name of the domain on your account.
func (o AppSpecDomainNameOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecDomainName) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type AppSpecDomainNameArrayOutput struct{ *pulumi.OutputState }

func (AppSpecDomainNameArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecDomainName)(nil)).Elem()
}

func (o AppSpecDomainNameArrayOutput) ToAppSpecDomainNameArrayOutput() AppSpecDomainNameArrayOutput {
	return o
}

func (o AppSpecDomainNameArrayOutput) ToAppSpecDomainNameArrayOutputWithContext(ctx context.Context) AppSpecDomainNameArrayOutput {
	return o
}

func (o AppSpecDomainNameArrayOutput) Index(i pulumi.IntInput) AppSpecDomainNameOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecDomainName {
		return vs[0].([]AppSpecDomainName)[vs[1].(int)]
	}).(AppSpecDomainNameOutput)
}

type AppSpecEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type *string `pulumi:"type"`
	// The threshold for the type of the warning.
	Value *string `pulumi:"value"`
}

// AppSpecEnvInput is an input type that accepts AppSpecEnvArgs and AppSpecEnvOutput values.
// You can construct a concrete instance of `AppSpecEnvInput` via:
//
//          AppSpecEnvArgs{...}
type AppSpecEnvInput interface {
	pulumi.Input

	ToAppSpecEnvOutput() AppSpecEnvOutput
	ToAppSpecEnvOutputWithContext(context.Context) AppSpecEnvOutput
}

type AppSpecEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The threshold for the type of the warning.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AppSpecEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecEnv)(nil)).Elem()
}

func (i AppSpecEnvArgs) ToAppSpecEnvOutput() AppSpecEnvOutput {
	return i.ToAppSpecEnvOutputWithContext(context.Background())
}

func (i AppSpecEnvArgs) ToAppSpecEnvOutputWithContext(ctx context.Context) AppSpecEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecEnvOutput)
}

// AppSpecEnvArrayInput is an input type that accepts AppSpecEnvArray and AppSpecEnvArrayOutput values.
// You can construct a concrete instance of `AppSpecEnvArrayInput` via:
//
//          AppSpecEnvArray{ AppSpecEnvArgs{...} }
type AppSpecEnvArrayInput interface {
	pulumi.Input

	ToAppSpecEnvArrayOutput() AppSpecEnvArrayOutput
	ToAppSpecEnvArrayOutputWithContext(context.Context) AppSpecEnvArrayOutput
}

type AppSpecEnvArray []AppSpecEnvInput

func (AppSpecEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecEnv)(nil)).Elem()
}

func (i AppSpecEnvArray) ToAppSpecEnvArrayOutput() AppSpecEnvArrayOutput {
	return i.ToAppSpecEnvArrayOutputWithContext(context.Background())
}

func (i AppSpecEnvArray) ToAppSpecEnvArrayOutputWithContext(ctx context.Context) AppSpecEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecEnvArrayOutput)
}

type AppSpecEnvOutput struct{ *pulumi.OutputState }

func (AppSpecEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecEnv)(nil)).Elem()
}

func (o AppSpecEnvOutput) ToAppSpecEnvOutput() AppSpecEnvOutput {
	return o
}

func (o AppSpecEnvOutput) ToAppSpecEnvOutputWithContext(ctx context.Context) AppSpecEnvOutput {
	return o
}

// The name of the environment variable.
func (o AppSpecEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o AppSpecEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o AppSpecEnvOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecEnv) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The threshold for the type of the warning.
func (o AppSpecEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AppSpecEnvArrayOutput struct{ *pulumi.OutputState }

func (AppSpecEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecEnv)(nil)).Elem()
}

func (o AppSpecEnvArrayOutput) ToAppSpecEnvArrayOutput() AppSpecEnvArrayOutput {
	return o
}

func (o AppSpecEnvArrayOutput) ToAppSpecEnvArrayOutputWithContext(ctx context.Context) AppSpecEnvArrayOutput {
	return o
}

func (o AppSpecEnvArrayOutput) Index(i pulumi.IntInput) AppSpecEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecEnv {
		return vs[0].([]AppSpecEnv)[vs[1].(int)]
	}).(AppSpecEnvOutput)
}

type AppSpecJob struct {
	// Describes an alert policy for the component.
	Alerts []AppSpecJobAlert `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs []AppSpecJobEnv `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
	Git *AppSpecJobGit `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github *AppSpecJobGithub `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab *AppSpecJobGitlab `pulumi:"gitlab"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image *AppSpecJobImage `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
	InstanceSizeSlug *string `pulumi:"instanceSizeSlug"`
	// The type of job and when it will be run during the deployment process. It may be one of:
	// - `UNSPECIFIED`: Default job type, will auto-complete to POST_DEPLOY kind.
	// - `PRE_DEPLOY`: Indicates a job that runs before an app deployment.
	// - `POST_DEPLOY`: Indicates a job that runs after an app deployment.
	// - `FAILED_DEPLOY`: Indicates a job that runs after a component fails to deploy.
	Kind *string `pulumi:"kind"`
	// Describes a log forwarding destination.
	LogDestinations []AppSpecJobLogDestination `pulumi:"logDestinations"`
	// The name of the component.
	Name string `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir *string `pulumi:"sourceDir"`
}

// AppSpecJobInput is an input type that accepts AppSpecJobArgs and AppSpecJobOutput values.
// You can construct a concrete instance of `AppSpecJobInput` via:
//
//          AppSpecJobArgs{...}
type AppSpecJobInput interface {
	pulumi.Input

	ToAppSpecJobOutput() AppSpecJobOutput
	ToAppSpecJobOutputWithContext(context.Context) AppSpecJobOutput
}

type AppSpecJobArgs struct {
	// Describes an alert policy for the component.
	Alerts AppSpecJobAlertArrayInput `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs AppSpecJobEnvArrayInput `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
	Git AppSpecJobGitPtrInput `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github AppSpecJobGithubPtrInput `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab AppSpecJobGitlabPtrInput `pulumi:"gitlab"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image AppSpecJobImagePtrInput `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
	InstanceSizeSlug pulumi.StringPtrInput `pulumi:"instanceSizeSlug"`
	// The type of job and when it will be run during the deployment process. It may be one of:
	// - `UNSPECIFIED`: Default job type, will auto-complete to POST_DEPLOY kind.
	// - `PRE_DEPLOY`: Indicates a job that runs before an app deployment.
	// - `POST_DEPLOY`: Indicates a job that runs after an app deployment.
	// - `FAILED_DEPLOY`: Indicates a job that runs after a component fails to deploy.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Describes a log forwarding destination.
	LogDestinations AppSpecJobLogDestinationArrayInput `pulumi:"logDestinations"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (AppSpecJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJob)(nil)).Elem()
}

func (i AppSpecJobArgs) ToAppSpecJobOutput() AppSpecJobOutput {
	return i.ToAppSpecJobOutputWithContext(context.Background())
}

func (i AppSpecJobArgs) ToAppSpecJobOutputWithContext(ctx context.Context) AppSpecJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobOutput)
}

// AppSpecJobArrayInput is an input type that accepts AppSpecJobArray and AppSpecJobArrayOutput values.
// You can construct a concrete instance of `AppSpecJobArrayInput` via:
//
//          AppSpecJobArray{ AppSpecJobArgs{...} }
type AppSpecJobArrayInput interface {
	pulumi.Input

	ToAppSpecJobArrayOutput() AppSpecJobArrayOutput
	ToAppSpecJobArrayOutputWithContext(context.Context) AppSpecJobArrayOutput
}

type AppSpecJobArray []AppSpecJobInput

func (AppSpecJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecJob)(nil)).Elem()
}

func (i AppSpecJobArray) ToAppSpecJobArrayOutput() AppSpecJobArrayOutput {
	return i.ToAppSpecJobArrayOutputWithContext(context.Background())
}

func (i AppSpecJobArray) ToAppSpecJobArrayOutputWithContext(ctx context.Context) AppSpecJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobArrayOutput)
}

type AppSpecJobOutput struct{ *pulumi.OutputState }

func (AppSpecJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJob)(nil)).Elem()
}

func (o AppSpecJobOutput) ToAppSpecJobOutput() AppSpecJobOutput {
	return o
}

func (o AppSpecJobOutput) ToAppSpecJobOutputWithContext(ctx context.Context) AppSpecJobOutput {
	return o
}

// Describes an alert policy for the component.
func (o AppSpecJobOutput) Alerts() AppSpecJobAlertArrayOutput {
	return o.ApplyT(func(v AppSpecJob) []AppSpecJobAlert { return v.Alerts }).(AppSpecJobAlertArrayOutput)
}

// An optional build command to run while building this component from source.
func (o AppSpecJobOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
func (o AppSpecJobOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app.
func (o AppSpecJobOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// Describes an environment variable made available to an app competent.
func (o AppSpecJobOutput) Envs() AppSpecJobEnvArrayOutput {
	return o.ApplyT(func(v AppSpecJob) []AppSpecJobEnv { return v.Envs }).(AppSpecJobEnvArrayOutput)
}

// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
func (o AppSpecJobOutput) Git() AppSpecJobGitPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *AppSpecJobGit { return v.Git }).(AppSpecJobGitPtrOutput)
}

// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecJobOutput) Github() AppSpecJobGithubPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *AppSpecJobGithub { return v.Github }).(AppSpecJobGithubPtrOutput)
}

// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecJobOutput) Gitlab() AppSpecJobGitlabPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *AppSpecJobGitlab { return v.Gitlab }).(AppSpecJobGitlabPtrOutput)
}

// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecJobOutput) Image() AppSpecJobImagePtrOutput {
	return o.ApplyT(func(v AppSpecJob) *AppSpecJobImage { return v.Image }).(AppSpecJobImagePtrOutput)
}

// The amount of instances that this component should be scaled to.
func (o AppSpecJobOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
func (o AppSpecJobOutput) InstanceSizeSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *string { return v.InstanceSizeSlug }).(pulumi.StringPtrOutput)
}

// The type of job and when it will be run during the deployment process. It may be one of:
// - `UNSPECIFIED`: Default job type, will auto-complete to POST_DEPLOY kind.
// - `PRE_DEPLOY`: Indicates a job that runs before an app deployment.
// - `POST_DEPLOY`: Indicates a job that runs after an app deployment.
// - `FAILED_DEPLOY`: Indicates a job that runs after a component fails to deploy.
func (o AppSpecJobOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Describes a log forwarding destination.
func (o AppSpecJobOutput) LogDestinations() AppSpecJobLogDestinationArrayOutput {
	return o.ApplyT(func(v AppSpecJob) []AppSpecJobLogDestination { return v.LogDestinations }).(AppSpecJobLogDestinationArrayOutput)
}

// The name of the component.
func (o AppSpecJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJob) string { return v.Name }).(pulumi.StringOutput)
}

// An optional run command to override the component's default.
func (o AppSpecJobOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build.
func (o AppSpecJobOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJob) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppSpecJobArrayOutput struct{ *pulumi.OutputState }

func (AppSpecJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecJob)(nil)).Elem()
}

func (o AppSpecJobArrayOutput) ToAppSpecJobArrayOutput() AppSpecJobArrayOutput {
	return o
}

func (o AppSpecJobArrayOutput) ToAppSpecJobArrayOutputWithContext(ctx context.Context) AppSpecJobArrayOutput {
	return o
}

func (o AppSpecJobArrayOutput) Index(i pulumi.IntInput) AppSpecJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecJob {
		return vs[0].([]AppSpecJob)[vs[1].(int)]
	}).(AppSpecJobOutput)
}

type AppSpecJobAlert struct {
	// Determines whether or not the alert is disabled (default: `false`).
	Disabled *bool `pulumi:"disabled"`
	// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
	Operator string `pulumi:"operator"`
	// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
	Rule string `pulumi:"rule"`
	// The threshold for the type of the warning.
	Value float64 `pulumi:"value"`
	// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
	Window string `pulumi:"window"`
}

// AppSpecJobAlertInput is an input type that accepts AppSpecJobAlertArgs and AppSpecJobAlertOutput values.
// You can construct a concrete instance of `AppSpecJobAlertInput` via:
//
//          AppSpecJobAlertArgs{...}
type AppSpecJobAlertInput interface {
	pulumi.Input

	ToAppSpecJobAlertOutput() AppSpecJobAlertOutput
	ToAppSpecJobAlertOutputWithContext(context.Context) AppSpecJobAlertOutput
}

type AppSpecJobAlertArgs struct {
	// Determines whether or not the alert is disabled (default: `false`).
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
	Rule pulumi.StringInput `pulumi:"rule"`
	// The threshold for the type of the warning.
	Value pulumi.Float64Input `pulumi:"value"`
	// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
	Window pulumi.StringInput `pulumi:"window"`
}

func (AppSpecJobAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobAlert)(nil)).Elem()
}

func (i AppSpecJobAlertArgs) ToAppSpecJobAlertOutput() AppSpecJobAlertOutput {
	return i.ToAppSpecJobAlertOutputWithContext(context.Background())
}

func (i AppSpecJobAlertArgs) ToAppSpecJobAlertOutputWithContext(ctx context.Context) AppSpecJobAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobAlertOutput)
}

// AppSpecJobAlertArrayInput is an input type that accepts AppSpecJobAlertArray and AppSpecJobAlertArrayOutput values.
// You can construct a concrete instance of `AppSpecJobAlertArrayInput` via:
//
//          AppSpecJobAlertArray{ AppSpecJobAlertArgs{...} }
type AppSpecJobAlertArrayInput interface {
	pulumi.Input

	ToAppSpecJobAlertArrayOutput() AppSpecJobAlertArrayOutput
	ToAppSpecJobAlertArrayOutputWithContext(context.Context) AppSpecJobAlertArrayOutput
}

type AppSpecJobAlertArray []AppSpecJobAlertInput

func (AppSpecJobAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecJobAlert)(nil)).Elem()
}

func (i AppSpecJobAlertArray) ToAppSpecJobAlertArrayOutput() AppSpecJobAlertArrayOutput {
	return i.ToAppSpecJobAlertArrayOutputWithContext(context.Background())
}

func (i AppSpecJobAlertArray) ToAppSpecJobAlertArrayOutputWithContext(ctx context.Context) AppSpecJobAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobAlertArrayOutput)
}

type AppSpecJobAlertOutput struct{ *pulumi.OutputState }

func (AppSpecJobAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobAlert)(nil)).Elem()
}

func (o AppSpecJobAlertOutput) ToAppSpecJobAlertOutput() AppSpecJobAlertOutput {
	return o
}

func (o AppSpecJobAlertOutput) ToAppSpecJobAlertOutputWithContext(ctx context.Context) AppSpecJobAlertOutput {
	return o
}

// Determines whether or not the alert is disabled (default: `false`).
func (o AppSpecJobAlertOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecJobAlert) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
func (o AppSpecJobAlertOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobAlert) string { return v.Operator }).(pulumi.StringOutput)
}

// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
func (o AppSpecJobAlertOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobAlert) string { return v.Rule }).(pulumi.StringOutput)
}

// The threshold for the type of the warning.
func (o AppSpecJobAlertOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AppSpecJobAlert) float64 { return v.Value }).(pulumi.Float64Output)
}

// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
func (o AppSpecJobAlertOutput) Window() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobAlert) string { return v.Window }).(pulumi.StringOutput)
}

type AppSpecJobAlertArrayOutput struct{ *pulumi.OutputState }

func (AppSpecJobAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecJobAlert)(nil)).Elem()
}

func (o AppSpecJobAlertArrayOutput) ToAppSpecJobAlertArrayOutput() AppSpecJobAlertArrayOutput {
	return o
}

func (o AppSpecJobAlertArrayOutput) ToAppSpecJobAlertArrayOutputWithContext(ctx context.Context) AppSpecJobAlertArrayOutput {
	return o
}

func (o AppSpecJobAlertArrayOutput) Index(i pulumi.IntInput) AppSpecJobAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecJobAlert {
		return vs[0].([]AppSpecJobAlert)[vs[1].(int)]
	}).(AppSpecJobAlertOutput)
}

type AppSpecJobEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type *string `pulumi:"type"`
	// The threshold for the type of the warning.
	Value *string `pulumi:"value"`
}

// AppSpecJobEnvInput is an input type that accepts AppSpecJobEnvArgs and AppSpecJobEnvOutput values.
// You can construct a concrete instance of `AppSpecJobEnvInput` via:
//
//          AppSpecJobEnvArgs{...}
type AppSpecJobEnvInput interface {
	pulumi.Input

	ToAppSpecJobEnvOutput() AppSpecJobEnvOutput
	ToAppSpecJobEnvOutputWithContext(context.Context) AppSpecJobEnvOutput
}

type AppSpecJobEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The threshold for the type of the warning.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AppSpecJobEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobEnv)(nil)).Elem()
}

func (i AppSpecJobEnvArgs) ToAppSpecJobEnvOutput() AppSpecJobEnvOutput {
	return i.ToAppSpecJobEnvOutputWithContext(context.Background())
}

func (i AppSpecJobEnvArgs) ToAppSpecJobEnvOutputWithContext(ctx context.Context) AppSpecJobEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobEnvOutput)
}

// AppSpecJobEnvArrayInput is an input type that accepts AppSpecJobEnvArray and AppSpecJobEnvArrayOutput values.
// You can construct a concrete instance of `AppSpecJobEnvArrayInput` via:
//
//          AppSpecJobEnvArray{ AppSpecJobEnvArgs{...} }
type AppSpecJobEnvArrayInput interface {
	pulumi.Input

	ToAppSpecJobEnvArrayOutput() AppSpecJobEnvArrayOutput
	ToAppSpecJobEnvArrayOutputWithContext(context.Context) AppSpecJobEnvArrayOutput
}

type AppSpecJobEnvArray []AppSpecJobEnvInput

func (AppSpecJobEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecJobEnv)(nil)).Elem()
}

func (i AppSpecJobEnvArray) ToAppSpecJobEnvArrayOutput() AppSpecJobEnvArrayOutput {
	return i.ToAppSpecJobEnvArrayOutputWithContext(context.Background())
}

func (i AppSpecJobEnvArray) ToAppSpecJobEnvArrayOutputWithContext(ctx context.Context) AppSpecJobEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobEnvArrayOutput)
}

type AppSpecJobEnvOutput struct{ *pulumi.OutputState }

func (AppSpecJobEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobEnv)(nil)).Elem()
}

func (o AppSpecJobEnvOutput) ToAppSpecJobEnvOutput() AppSpecJobEnvOutput {
	return o
}

func (o AppSpecJobEnvOutput) ToAppSpecJobEnvOutputWithContext(ctx context.Context) AppSpecJobEnvOutput {
	return o
}

// The name of the environment variable.
func (o AppSpecJobEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o AppSpecJobEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o AppSpecJobEnvOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobEnv) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The threshold for the type of the warning.
func (o AppSpecJobEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AppSpecJobEnvArrayOutput struct{ *pulumi.OutputState }

func (AppSpecJobEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecJobEnv)(nil)).Elem()
}

func (o AppSpecJobEnvArrayOutput) ToAppSpecJobEnvArrayOutput() AppSpecJobEnvArrayOutput {
	return o
}

func (o AppSpecJobEnvArrayOutput) ToAppSpecJobEnvArrayOutputWithContext(ctx context.Context) AppSpecJobEnvArrayOutput {
	return o
}

func (o AppSpecJobEnvArrayOutput) Index(i pulumi.IntInput) AppSpecJobEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecJobEnv {
		return vs[0].([]AppSpecJobEnv)[vs[1].(int)]
	}).(AppSpecJobEnvOutput)
}

type AppSpecJobGit struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// AppSpecJobGitInput is an input type that accepts AppSpecJobGitArgs and AppSpecJobGitOutput values.
// You can construct a concrete instance of `AppSpecJobGitInput` via:
//
//          AppSpecJobGitArgs{...}
type AppSpecJobGitInput interface {
	pulumi.Input

	ToAppSpecJobGitOutput() AppSpecJobGitOutput
	ToAppSpecJobGitOutputWithContext(context.Context) AppSpecJobGitOutput
}

type AppSpecJobGitArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (AppSpecJobGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobGit)(nil)).Elem()
}

func (i AppSpecJobGitArgs) ToAppSpecJobGitOutput() AppSpecJobGitOutput {
	return i.ToAppSpecJobGitOutputWithContext(context.Background())
}

func (i AppSpecJobGitArgs) ToAppSpecJobGitOutputWithContext(ctx context.Context) AppSpecJobGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGitOutput)
}

func (i AppSpecJobGitArgs) ToAppSpecJobGitPtrOutput() AppSpecJobGitPtrOutput {
	return i.ToAppSpecJobGitPtrOutputWithContext(context.Background())
}

func (i AppSpecJobGitArgs) ToAppSpecJobGitPtrOutputWithContext(ctx context.Context) AppSpecJobGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGitOutput).ToAppSpecJobGitPtrOutputWithContext(ctx)
}

// AppSpecJobGitPtrInput is an input type that accepts AppSpecJobGitArgs, AppSpecJobGitPtr and AppSpecJobGitPtrOutput values.
// You can construct a concrete instance of `AppSpecJobGitPtrInput` via:
//
//          AppSpecJobGitArgs{...}
//
//  or:
//
//          nil
type AppSpecJobGitPtrInput interface {
	pulumi.Input

	ToAppSpecJobGitPtrOutput() AppSpecJobGitPtrOutput
	ToAppSpecJobGitPtrOutputWithContext(context.Context) AppSpecJobGitPtrOutput
}

type appSpecJobGitPtrType AppSpecJobGitArgs

func AppSpecJobGitPtr(v *AppSpecJobGitArgs) AppSpecJobGitPtrInput {
	return (*appSpecJobGitPtrType)(v)
}

func (*appSpecJobGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobGit)(nil)).Elem()
}

func (i *appSpecJobGitPtrType) ToAppSpecJobGitPtrOutput() AppSpecJobGitPtrOutput {
	return i.ToAppSpecJobGitPtrOutputWithContext(context.Background())
}

func (i *appSpecJobGitPtrType) ToAppSpecJobGitPtrOutputWithContext(ctx context.Context) AppSpecJobGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGitPtrOutput)
}

type AppSpecJobGitOutput struct{ *pulumi.OutputState }

func (AppSpecJobGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobGit)(nil)).Elem()
}

func (o AppSpecJobGitOutput) ToAppSpecJobGitOutput() AppSpecJobGitOutput {
	return o
}

func (o AppSpecJobGitOutput) ToAppSpecJobGitOutputWithContext(ctx context.Context) AppSpecJobGitOutput {
	return o
}

func (o AppSpecJobGitOutput) ToAppSpecJobGitPtrOutput() AppSpecJobGitPtrOutput {
	return o.ToAppSpecJobGitPtrOutputWithContext(context.Background())
}

func (o AppSpecJobGitOutput) ToAppSpecJobGitPtrOutputWithContext(ctx context.Context) AppSpecJobGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecJobGit) *AppSpecJobGit {
		return &v
	}).(AppSpecJobGitPtrOutput)
}

// The name of the branch to use.
func (o AppSpecJobGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o AppSpecJobGitOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobGit) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type AppSpecJobGitPtrOutput struct{ *pulumi.OutputState }

func (AppSpecJobGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobGit)(nil)).Elem()
}

func (o AppSpecJobGitPtrOutput) ToAppSpecJobGitPtrOutput() AppSpecJobGitPtrOutput {
	return o
}

func (o AppSpecJobGitPtrOutput) ToAppSpecJobGitPtrOutputWithContext(ctx context.Context) AppSpecJobGitPtrOutput {
	return o
}

func (o AppSpecJobGitPtrOutput) Elem() AppSpecJobGitOutput {
	return o.ApplyT(func(v *AppSpecJobGit) AppSpecJobGit {
		if v != nil {
			return *v
		}
		var ret AppSpecJobGit
		return ret
	}).(AppSpecJobGitOutput)
}

// The name of the branch to use.
func (o AppSpecJobGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o AppSpecJobGitPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type AppSpecJobGithub struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// AppSpecJobGithubInput is an input type that accepts AppSpecJobGithubArgs and AppSpecJobGithubOutput values.
// You can construct a concrete instance of `AppSpecJobGithubInput` via:
//
//          AppSpecJobGithubArgs{...}
type AppSpecJobGithubInput interface {
	pulumi.Input

	ToAppSpecJobGithubOutput() AppSpecJobGithubOutput
	ToAppSpecJobGithubOutputWithContext(context.Context) AppSpecJobGithubOutput
}

type AppSpecJobGithubArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppSpecJobGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobGithub)(nil)).Elem()
}

func (i AppSpecJobGithubArgs) ToAppSpecJobGithubOutput() AppSpecJobGithubOutput {
	return i.ToAppSpecJobGithubOutputWithContext(context.Background())
}

func (i AppSpecJobGithubArgs) ToAppSpecJobGithubOutputWithContext(ctx context.Context) AppSpecJobGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGithubOutput)
}

func (i AppSpecJobGithubArgs) ToAppSpecJobGithubPtrOutput() AppSpecJobGithubPtrOutput {
	return i.ToAppSpecJobGithubPtrOutputWithContext(context.Background())
}

func (i AppSpecJobGithubArgs) ToAppSpecJobGithubPtrOutputWithContext(ctx context.Context) AppSpecJobGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGithubOutput).ToAppSpecJobGithubPtrOutputWithContext(ctx)
}

// AppSpecJobGithubPtrInput is an input type that accepts AppSpecJobGithubArgs, AppSpecJobGithubPtr and AppSpecJobGithubPtrOutput values.
// You can construct a concrete instance of `AppSpecJobGithubPtrInput` via:
//
//          AppSpecJobGithubArgs{...}
//
//  or:
//
//          nil
type AppSpecJobGithubPtrInput interface {
	pulumi.Input

	ToAppSpecJobGithubPtrOutput() AppSpecJobGithubPtrOutput
	ToAppSpecJobGithubPtrOutputWithContext(context.Context) AppSpecJobGithubPtrOutput
}

type appSpecJobGithubPtrType AppSpecJobGithubArgs

func AppSpecJobGithubPtr(v *AppSpecJobGithubArgs) AppSpecJobGithubPtrInput {
	return (*appSpecJobGithubPtrType)(v)
}

func (*appSpecJobGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobGithub)(nil)).Elem()
}

func (i *appSpecJobGithubPtrType) ToAppSpecJobGithubPtrOutput() AppSpecJobGithubPtrOutput {
	return i.ToAppSpecJobGithubPtrOutputWithContext(context.Background())
}

func (i *appSpecJobGithubPtrType) ToAppSpecJobGithubPtrOutputWithContext(ctx context.Context) AppSpecJobGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGithubPtrOutput)
}

type AppSpecJobGithubOutput struct{ *pulumi.OutputState }

func (AppSpecJobGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobGithub)(nil)).Elem()
}

func (o AppSpecJobGithubOutput) ToAppSpecJobGithubOutput() AppSpecJobGithubOutput {
	return o
}

func (o AppSpecJobGithubOutput) ToAppSpecJobGithubOutputWithContext(ctx context.Context) AppSpecJobGithubOutput {
	return o
}

func (o AppSpecJobGithubOutput) ToAppSpecJobGithubPtrOutput() AppSpecJobGithubPtrOutput {
	return o.ToAppSpecJobGithubPtrOutputWithContext(context.Background())
}

func (o AppSpecJobGithubOutput) ToAppSpecJobGithubPtrOutputWithContext(ctx context.Context) AppSpecJobGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecJobGithub) *AppSpecJobGithub {
		return &v
	}).(AppSpecJobGithubPtrOutput)
}

// The name of the branch to use.
func (o AppSpecJobGithubOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobGithub) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecJobGithubOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecJobGithub) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecJobGithubOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobGithub) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppSpecJobGithubPtrOutput struct{ *pulumi.OutputState }

func (AppSpecJobGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobGithub)(nil)).Elem()
}

func (o AppSpecJobGithubPtrOutput) ToAppSpecJobGithubPtrOutput() AppSpecJobGithubPtrOutput {
	return o
}

func (o AppSpecJobGithubPtrOutput) ToAppSpecJobGithubPtrOutputWithContext(ctx context.Context) AppSpecJobGithubPtrOutput {
	return o
}

func (o AppSpecJobGithubPtrOutput) Elem() AppSpecJobGithubOutput {
	return o.ApplyT(func(v *AppSpecJobGithub) AppSpecJobGithub {
		if v != nil {
			return *v
		}
		var ret AppSpecJobGithub
		return ret
	}).(AppSpecJobGithubOutput)
}

// The name of the branch to use.
func (o AppSpecJobGithubPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobGithub) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecJobGithubPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecJobGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecJobGithubPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppSpecJobGitlab struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// AppSpecJobGitlabInput is an input type that accepts AppSpecJobGitlabArgs and AppSpecJobGitlabOutput values.
// You can construct a concrete instance of `AppSpecJobGitlabInput` via:
//
//          AppSpecJobGitlabArgs{...}
type AppSpecJobGitlabInput interface {
	pulumi.Input

	ToAppSpecJobGitlabOutput() AppSpecJobGitlabOutput
	ToAppSpecJobGitlabOutputWithContext(context.Context) AppSpecJobGitlabOutput
}

type AppSpecJobGitlabArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppSpecJobGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobGitlab)(nil)).Elem()
}

func (i AppSpecJobGitlabArgs) ToAppSpecJobGitlabOutput() AppSpecJobGitlabOutput {
	return i.ToAppSpecJobGitlabOutputWithContext(context.Background())
}

func (i AppSpecJobGitlabArgs) ToAppSpecJobGitlabOutputWithContext(ctx context.Context) AppSpecJobGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGitlabOutput)
}

func (i AppSpecJobGitlabArgs) ToAppSpecJobGitlabPtrOutput() AppSpecJobGitlabPtrOutput {
	return i.ToAppSpecJobGitlabPtrOutputWithContext(context.Background())
}

func (i AppSpecJobGitlabArgs) ToAppSpecJobGitlabPtrOutputWithContext(ctx context.Context) AppSpecJobGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGitlabOutput).ToAppSpecJobGitlabPtrOutputWithContext(ctx)
}

// AppSpecJobGitlabPtrInput is an input type that accepts AppSpecJobGitlabArgs, AppSpecJobGitlabPtr and AppSpecJobGitlabPtrOutput values.
// You can construct a concrete instance of `AppSpecJobGitlabPtrInput` via:
//
//          AppSpecJobGitlabArgs{...}
//
//  or:
//
//          nil
type AppSpecJobGitlabPtrInput interface {
	pulumi.Input

	ToAppSpecJobGitlabPtrOutput() AppSpecJobGitlabPtrOutput
	ToAppSpecJobGitlabPtrOutputWithContext(context.Context) AppSpecJobGitlabPtrOutput
}

type appSpecJobGitlabPtrType AppSpecJobGitlabArgs

func AppSpecJobGitlabPtr(v *AppSpecJobGitlabArgs) AppSpecJobGitlabPtrInput {
	return (*appSpecJobGitlabPtrType)(v)
}

func (*appSpecJobGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobGitlab)(nil)).Elem()
}

func (i *appSpecJobGitlabPtrType) ToAppSpecJobGitlabPtrOutput() AppSpecJobGitlabPtrOutput {
	return i.ToAppSpecJobGitlabPtrOutputWithContext(context.Background())
}

func (i *appSpecJobGitlabPtrType) ToAppSpecJobGitlabPtrOutputWithContext(ctx context.Context) AppSpecJobGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobGitlabPtrOutput)
}

type AppSpecJobGitlabOutput struct{ *pulumi.OutputState }

func (AppSpecJobGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobGitlab)(nil)).Elem()
}

func (o AppSpecJobGitlabOutput) ToAppSpecJobGitlabOutput() AppSpecJobGitlabOutput {
	return o
}

func (o AppSpecJobGitlabOutput) ToAppSpecJobGitlabOutputWithContext(ctx context.Context) AppSpecJobGitlabOutput {
	return o
}

func (o AppSpecJobGitlabOutput) ToAppSpecJobGitlabPtrOutput() AppSpecJobGitlabPtrOutput {
	return o.ToAppSpecJobGitlabPtrOutputWithContext(context.Background())
}

func (o AppSpecJobGitlabOutput) ToAppSpecJobGitlabPtrOutputWithContext(ctx context.Context) AppSpecJobGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecJobGitlab) *AppSpecJobGitlab {
		return &v
	}).(AppSpecJobGitlabPtrOutput)
}

// The name of the branch to use.
func (o AppSpecJobGitlabOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobGitlab) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecJobGitlabOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecJobGitlab) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecJobGitlabOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobGitlab) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppSpecJobGitlabPtrOutput struct{ *pulumi.OutputState }

func (AppSpecJobGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobGitlab)(nil)).Elem()
}

func (o AppSpecJobGitlabPtrOutput) ToAppSpecJobGitlabPtrOutput() AppSpecJobGitlabPtrOutput {
	return o
}

func (o AppSpecJobGitlabPtrOutput) ToAppSpecJobGitlabPtrOutputWithContext(ctx context.Context) AppSpecJobGitlabPtrOutput {
	return o
}

func (o AppSpecJobGitlabPtrOutput) Elem() AppSpecJobGitlabOutput {
	return o.ApplyT(func(v *AppSpecJobGitlab) AppSpecJobGitlab {
		if v != nil {
			return *v
		}
		var ret AppSpecJobGitlab
		return ret
	}).(AppSpecJobGitlabOutput)
}

// The name of the branch to use.
func (o AppSpecJobGitlabPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecJobGitlabPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecJobGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecJobGitlabPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppSpecJobImage struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry *string `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType string `pulumi:"registryType"`
	// The repository name.
	Repository string `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag *string `pulumi:"tag"`
}

// AppSpecJobImageInput is an input type that accepts AppSpecJobImageArgs and AppSpecJobImageOutput values.
// You can construct a concrete instance of `AppSpecJobImageInput` via:
//
//          AppSpecJobImageArgs{...}
type AppSpecJobImageInput interface {
	pulumi.Input

	ToAppSpecJobImageOutput() AppSpecJobImageOutput
	ToAppSpecJobImageOutputWithContext(context.Context) AppSpecJobImageOutput
}

type AppSpecJobImageArgs struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType pulumi.StringInput `pulumi:"registryType"`
	// The repository name.
	Repository pulumi.StringInput `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (AppSpecJobImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobImage)(nil)).Elem()
}

func (i AppSpecJobImageArgs) ToAppSpecJobImageOutput() AppSpecJobImageOutput {
	return i.ToAppSpecJobImageOutputWithContext(context.Background())
}

func (i AppSpecJobImageArgs) ToAppSpecJobImageOutputWithContext(ctx context.Context) AppSpecJobImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobImageOutput)
}

func (i AppSpecJobImageArgs) ToAppSpecJobImagePtrOutput() AppSpecJobImagePtrOutput {
	return i.ToAppSpecJobImagePtrOutputWithContext(context.Background())
}

func (i AppSpecJobImageArgs) ToAppSpecJobImagePtrOutputWithContext(ctx context.Context) AppSpecJobImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobImageOutput).ToAppSpecJobImagePtrOutputWithContext(ctx)
}

// AppSpecJobImagePtrInput is an input type that accepts AppSpecJobImageArgs, AppSpecJobImagePtr and AppSpecJobImagePtrOutput values.
// You can construct a concrete instance of `AppSpecJobImagePtrInput` via:
//
//          AppSpecJobImageArgs{...}
//
//  or:
//
//          nil
type AppSpecJobImagePtrInput interface {
	pulumi.Input

	ToAppSpecJobImagePtrOutput() AppSpecJobImagePtrOutput
	ToAppSpecJobImagePtrOutputWithContext(context.Context) AppSpecJobImagePtrOutput
}

type appSpecJobImagePtrType AppSpecJobImageArgs

func AppSpecJobImagePtr(v *AppSpecJobImageArgs) AppSpecJobImagePtrInput {
	return (*appSpecJobImagePtrType)(v)
}

func (*appSpecJobImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobImage)(nil)).Elem()
}

func (i *appSpecJobImagePtrType) ToAppSpecJobImagePtrOutput() AppSpecJobImagePtrOutput {
	return i.ToAppSpecJobImagePtrOutputWithContext(context.Background())
}

func (i *appSpecJobImagePtrType) ToAppSpecJobImagePtrOutputWithContext(ctx context.Context) AppSpecJobImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobImagePtrOutput)
}

type AppSpecJobImageOutput struct{ *pulumi.OutputState }

func (AppSpecJobImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobImage)(nil)).Elem()
}

func (o AppSpecJobImageOutput) ToAppSpecJobImageOutput() AppSpecJobImageOutput {
	return o
}

func (o AppSpecJobImageOutput) ToAppSpecJobImageOutputWithContext(ctx context.Context) AppSpecJobImageOutput {
	return o
}

func (o AppSpecJobImageOutput) ToAppSpecJobImagePtrOutput() AppSpecJobImagePtrOutput {
	return o.ToAppSpecJobImagePtrOutputWithContext(context.Background())
}

func (o AppSpecJobImageOutput) ToAppSpecJobImagePtrOutputWithContext(ctx context.Context) AppSpecJobImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecJobImage) *AppSpecJobImage {
		return &v
	}).(AppSpecJobImagePtrOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o AppSpecJobImageOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobImage) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o AppSpecJobImageOutput) RegistryType() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobImage) string { return v.RegistryType }).(pulumi.StringOutput)
}

// The repository name.
func (o AppSpecJobImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o AppSpecJobImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type AppSpecJobImagePtrOutput struct{ *pulumi.OutputState }

func (AppSpecJobImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobImage)(nil)).Elem()
}

func (o AppSpecJobImagePtrOutput) ToAppSpecJobImagePtrOutput() AppSpecJobImagePtrOutput {
	return o
}

func (o AppSpecJobImagePtrOutput) ToAppSpecJobImagePtrOutputWithContext(ctx context.Context) AppSpecJobImagePtrOutput {
	return o
}

func (o AppSpecJobImagePtrOutput) Elem() AppSpecJobImageOutput {
	return o.ApplyT(func(v *AppSpecJobImage) AppSpecJobImage {
		if v != nil {
			return *v
		}
		var ret AppSpecJobImage
		return ret
	}).(AppSpecJobImageOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o AppSpecJobImagePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobImage) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o AppSpecJobImagePtrOutput) RegistryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobImage) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryType
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o AppSpecJobImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o AppSpecJobImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type AppSpecJobLogDestination struct {
	// Datadog configuration.
	Datadog *AppSpecJobLogDestinationDatadog `pulumi:"datadog"`
	// Logtail configuration.
	Logtail *AppSpecJobLogDestinationLogtail `pulumi:"logtail"`
	// The name of the component.
	Name string `pulumi:"name"`
	// Papertrail configuration.
	Papertrail *AppSpecJobLogDestinationPapertrail `pulumi:"papertrail"`
}

// AppSpecJobLogDestinationInput is an input type that accepts AppSpecJobLogDestinationArgs and AppSpecJobLogDestinationOutput values.
// You can construct a concrete instance of `AppSpecJobLogDestinationInput` via:
//
//          AppSpecJobLogDestinationArgs{...}
type AppSpecJobLogDestinationInput interface {
	pulumi.Input

	ToAppSpecJobLogDestinationOutput() AppSpecJobLogDestinationOutput
	ToAppSpecJobLogDestinationOutputWithContext(context.Context) AppSpecJobLogDestinationOutput
}

type AppSpecJobLogDestinationArgs struct {
	// Datadog configuration.
	Datadog AppSpecJobLogDestinationDatadogPtrInput `pulumi:"datadog"`
	// Logtail configuration.
	Logtail AppSpecJobLogDestinationLogtailPtrInput `pulumi:"logtail"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// Papertrail configuration.
	Papertrail AppSpecJobLogDestinationPapertrailPtrInput `pulumi:"papertrail"`
}

func (AppSpecJobLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobLogDestination)(nil)).Elem()
}

func (i AppSpecJobLogDestinationArgs) ToAppSpecJobLogDestinationOutput() AppSpecJobLogDestinationOutput {
	return i.ToAppSpecJobLogDestinationOutputWithContext(context.Background())
}

func (i AppSpecJobLogDestinationArgs) ToAppSpecJobLogDestinationOutputWithContext(ctx context.Context) AppSpecJobLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationOutput)
}

// AppSpecJobLogDestinationArrayInput is an input type that accepts AppSpecJobLogDestinationArray and AppSpecJobLogDestinationArrayOutput values.
// You can construct a concrete instance of `AppSpecJobLogDestinationArrayInput` via:
//
//          AppSpecJobLogDestinationArray{ AppSpecJobLogDestinationArgs{...} }
type AppSpecJobLogDestinationArrayInput interface {
	pulumi.Input

	ToAppSpecJobLogDestinationArrayOutput() AppSpecJobLogDestinationArrayOutput
	ToAppSpecJobLogDestinationArrayOutputWithContext(context.Context) AppSpecJobLogDestinationArrayOutput
}

type AppSpecJobLogDestinationArray []AppSpecJobLogDestinationInput

func (AppSpecJobLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecJobLogDestination)(nil)).Elem()
}

func (i AppSpecJobLogDestinationArray) ToAppSpecJobLogDestinationArrayOutput() AppSpecJobLogDestinationArrayOutput {
	return i.ToAppSpecJobLogDestinationArrayOutputWithContext(context.Background())
}

func (i AppSpecJobLogDestinationArray) ToAppSpecJobLogDestinationArrayOutputWithContext(ctx context.Context) AppSpecJobLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationArrayOutput)
}

type AppSpecJobLogDestinationOutput struct{ *pulumi.OutputState }

func (AppSpecJobLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobLogDestination)(nil)).Elem()
}

func (o AppSpecJobLogDestinationOutput) ToAppSpecJobLogDestinationOutput() AppSpecJobLogDestinationOutput {
	return o
}

func (o AppSpecJobLogDestinationOutput) ToAppSpecJobLogDestinationOutputWithContext(ctx context.Context) AppSpecJobLogDestinationOutput {
	return o
}

// Datadog configuration.
func (o AppSpecJobLogDestinationOutput) Datadog() AppSpecJobLogDestinationDatadogPtrOutput {
	return o.ApplyT(func(v AppSpecJobLogDestination) *AppSpecJobLogDestinationDatadog { return v.Datadog }).(AppSpecJobLogDestinationDatadogPtrOutput)
}

// Logtail configuration.
func (o AppSpecJobLogDestinationOutput) Logtail() AppSpecJobLogDestinationLogtailPtrOutput {
	return o.ApplyT(func(v AppSpecJobLogDestination) *AppSpecJobLogDestinationLogtail { return v.Logtail }).(AppSpecJobLogDestinationLogtailPtrOutput)
}

// The name of the component.
func (o AppSpecJobLogDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobLogDestination) string { return v.Name }).(pulumi.StringOutput)
}

// Papertrail configuration.
func (o AppSpecJobLogDestinationOutput) Papertrail() AppSpecJobLogDestinationPapertrailPtrOutput {
	return o.ApplyT(func(v AppSpecJobLogDestination) *AppSpecJobLogDestinationPapertrail { return v.Papertrail }).(AppSpecJobLogDestinationPapertrailPtrOutput)
}

type AppSpecJobLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (AppSpecJobLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecJobLogDestination)(nil)).Elem()
}

func (o AppSpecJobLogDestinationArrayOutput) ToAppSpecJobLogDestinationArrayOutput() AppSpecJobLogDestinationArrayOutput {
	return o
}

func (o AppSpecJobLogDestinationArrayOutput) ToAppSpecJobLogDestinationArrayOutputWithContext(ctx context.Context) AppSpecJobLogDestinationArrayOutput {
	return o
}

func (o AppSpecJobLogDestinationArrayOutput) Index(i pulumi.IntInput) AppSpecJobLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecJobLogDestination {
		return vs[0].([]AppSpecJobLogDestination)[vs[1].(int)]
	}).(AppSpecJobLogDestinationOutput)
}

type AppSpecJobLogDestinationDatadog struct {
	// Datadog API key.
	ApiKey string `pulumi:"apiKey"`
	// Datadog HTTP log intake endpoint.
	Endpoint *string `pulumi:"endpoint"`
}

// AppSpecJobLogDestinationDatadogInput is an input type that accepts AppSpecJobLogDestinationDatadogArgs and AppSpecJobLogDestinationDatadogOutput values.
// You can construct a concrete instance of `AppSpecJobLogDestinationDatadogInput` via:
//
//          AppSpecJobLogDestinationDatadogArgs{...}
type AppSpecJobLogDestinationDatadogInput interface {
	pulumi.Input

	ToAppSpecJobLogDestinationDatadogOutput() AppSpecJobLogDestinationDatadogOutput
	ToAppSpecJobLogDestinationDatadogOutputWithContext(context.Context) AppSpecJobLogDestinationDatadogOutput
}

type AppSpecJobLogDestinationDatadogArgs struct {
	// Datadog API key.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Datadog HTTP log intake endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
}

func (AppSpecJobLogDestinationDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobLogDestinationDatadog)(nil)).Elem()
}

func (i AppSpecJobLogDestinationDatadogArgs) ToAppSpecJobLogDestinationDatadogOutput() AppSpecJobLogDestinationDatadogOutput {
	return i.ToAppSpecJobLogDestinationDatadogOutputWithContext(context.Background())
}

func (i AppSpecJobLogDestinationDatadogArgs) ToAppSpecJobLogDestinationDatadogOutputWithContext(ctx context.Context) AppSpecJobLogDestinationDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationDatadogOutput)
}

func (i AppSpecJobLogDestinationDatadogArgs) ToAppSpecJobLogDestinationDatadogPtrOutput() AppSpecJobLogDestinationDatadogPtrOutput {
	return i.ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i AppSpecJobLogDestinationDatadogArgs) ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationDatadogOutput).ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx)
}

// AppSpecJobLogDestinationDatadogPtrInput is an input type that accepts AppSpecJobLogDestinationDatadogArgs, AppSpecJobLogDestinationDatadogPtr and AppSpecJobLogDestinationDatadogPtrOutput values.
// You can construct a concrete instance of `AppSpecJobLogDestinationDatadogPtrInput` via:
//
//          AppSpecJobLogDestinationDatadogArgs{...}
//
//  or:
//
//          nil
type AppSpecJobLogDestinationDatadogPtrInput interface {
	pulumi.Input

	ToAppSpecJobLogDestinationDatadogPtrOutput() AppSpecJobLogDestinationDatadogPtrOutput
	ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(context.Context) AppSpecJobLogDestinationDatadogPtrOutput
}

type appSpecJobLogDestinationDatadogPtrType AppSpecJobLogDestinationDatadogArgs

func AppSpecJobLogDestinationDatadogPtr(v *AppSpecJobLogDestinationDatadogArgs) AppSpecJobLogDestinationDatadogPtrInput {
	return (*appSpecJobLogDestinationDatadogPtrType)(v)
}

func (*appSpecJobLogDestinationDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobLogDestinationDatadog)(nil)).Elem()
}

func (i *appSpecJobLogDestinationDatadogPtrType) ToAppSpecJobLogDestinationDatadogPtrOutput() AppSpecJobLogDestinationDatadogPtrOutput {
	return i.ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i *appSpecJobLogDestinationDatadogPtrType) ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationDatadogPtrOutput)
}

type AppSpecJobLogDestinationDatadogOutput struct{ *pulumi.OutputState }

func (AppSpecJobLogDestinationDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobLogDestinationDatadog)(nil)).Elem()
}

func (o AppSpecJobLogDestinationDatadogOutput) ToAppSpecJobLogDestinationDatadogOutput() AppSpecJobLogDestinationDatadogOutput {
	return o
}

func (o AppSpecJobLogDestinationDatadogOutput) ToAppSpecJobLogDestinationDatadogOutputWithContext(ctx context.Context) AppSpecJobLogDestinationDatadogOutput {
	return o
}

func (o AppSpecJobLogDestinationDatadogOutput) ToAppSpecJobLogDestinationDatadogPtrOutput() AppSpecJobLogDestinationDatadogPtrOutput {
	return o.ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (o AppSpecJobLogDestinationDatadogOutput) ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecJobLogDestinationDatadog) *AppSpecJobLogDestinationDatadog {
		return &v
	}).(AppSpecJobLogDestinationDatadogPtrOutput)
}

// Datadog API key.
func (o AppSpecJobLogDestinationDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobLogDestinationDatadog) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecJobLogDestinationDatadogOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecJobLogDestinationDatadog) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

type AppSpecJobLogDestinationDatadogPtrOutput struct{ *pulumi.OutputState }

func (AppSpecJobLogDestinationDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobLogDestinationDatadog)(nil)).Elem()
}

func (o AppSpecJobLogDestinationDatadogPtrOutput) ToAppSpecJobLogDestinationDatadogPtrOutput() AppSpecJobLogDestinationDatadogPtrOutput {
	return o
}

func (o AppSpecJobLogDestinationDatadogPtrOutput) ToAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationDatadogPtrOutput {
	return o
}

func (o AppSpecJobLogDestinationDatadogPtrOutput) Elem() AppSpecJobLogDestinationDatadogOutput {
	return o.ApplyT(func(v *AppSpecJobLogDestinationDatadog) AppSpecJobLogDestinationDatadog {
		if v != nil {
			return *v
		}
		var ret AppSpecJobLogDestinationDatadog
		return ret
	}).(AppSpecJobLogDestinationDatadogOutput)
}

// Datadog API key.
func (o AppSpecJobLogDestinationDatadogPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecJobLogDestinationDatadogPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type AppSpecJobLogDestinationLogtail struct {
	// Logtail token.
	Token string `pulumi:"token"`
}

// AppSpecJobLogDestinationLogtailInput is an input type that accepts AppSpecJobLogDestinationLogtailArgs and AppSpecJobLogDestinationLogtailOutput values.
// You can construct a concrete instance of `AppSpecJobLogDestinationLogtailInput` via:
//
//          AppSpecJobLogDestinationLogtailArgs{...}
type AppSpecJobLogDestinationLogtailInput interface {
	pulumi.Input

	ToAppSpecJobLogDestinationLogtailOutput() AppSpecJobLogDestinationLogtailOutput
	ToAppSpecJobLogDestinationLogtailOutputWithContext(context.Context) AppSpecJobLogDestinationLogtailOutput
}

type AppSpecJobLogDestinationLogtailArgs struct {
	// Logtail token.
	Token pulumi.StringInput `pulumi:"token"`
}

func (AppSpecJobLogDestinationLogtailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobLogDestinationLogtail)(nil)).Elem()
}

func (i AppSpecJobLogDestinationLogtailArgs) ToAppSpecJobLogDestinationLogtailOutput() AppSpecJobLogDestinationLogtailOutput {
	return i.ToAppSpecJobLogDestinationLogtailOutputWithContext(context.Background())
}

func (i AppSpecJobLogDestinationLogtailArgs) ToAppSpecJobLogDestinationLogtailOutputWithContext(ctx context.Context) AppSpecJobLogDestinationLogtailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationLogtailOutput)
}

func (i AppSpecJobLogDestinationLogtailArgs) ToAppSpecJobLogDestinationLogtailPtrOutput() AppSpecJobLogDestinationLogtailPtrOutput {
	return i.ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i AppSpecJobLogDestinationLogtailArgs) ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationLogtailOutput).ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx)
}

// AppSpecJobLogDestinationLogtailPtrInput is an input type that accepts AppSpecJobLogDestinationLogtailArgs, AppSpecJobLogDestinationLogtailPtr and AppSpecJobLogDestinationLogtailPtrOutput values.
// You can construct a concrete instance of `AppSpecJobLogDestinationLogtailPtrInput` via:
//
//          AppSpecJobLogDestinationLogtailArgs{...}
//
//  or:
//
//          nil
type AppSpecJobLogDestinationLogtailPtrInput interface {
	pulumi.Input

	ToAppSpecJobLogDestinationLogtailPtrOutput() AppSpecJobLogDestinationLogtailPtrOutput
	ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(context.Context) AppSpecJobLogDestinationLogtailPtrOutput
}

type appSpecJobLogDestinationLogtailPtrType AppSpecJobLogDestinationLogtailArgs

func AppSpecJobLogDestinationLogtailPtr(v *AppSpecJobLogDestinationLogtailArgs) AppSpecJobLogDestinationLogtailPtrInput {
	return (*appSpecJobLogDestinationLogtailPtrType)(v)
}

func (*appSpecJobLogDestinationLogtailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobLogDestinationLogtail)(nil)).Elem()
}

func (i *appSpecJobLogDestinationLogtailPtrType) ToAppSpecJobLogDestinationLogtailPtrOutput() AppSpecJobLogDestinationLogtailPtrOutput {
	return i.ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i *appSpecJobLogDestinationLogtailPtrType) ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationLogtailPtrOutput)
}

type AppSpecJobLogDestinationLogtailOutput struct{ *pulumi.OutputState }

func (AppSpecJobLogDestinationLogtailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobLogDestinationLogtail)(nil)).Elem()
}

func (o AppSpecJobLogDestinationLogtailOutput) ToAppSpecJobLogDestinationLogtailOutput() AppSpecJobLogDestinationLogtailOutput {
	return o
}

func (o AppSpecJobLogDestinationLogtailOutput) ToAppSpecJobLogDestinationLogtailOutputWithContext(ctx context.Context) AppSpecJobLogDestinationLogtailOutput {
	return o
}

func (o AppSpecJobLogDestinationLogtailOutput) ToAppSpecJobLogDestinationLogtailPtrOutput() AppSpecJobLogDestinationLogtailPtrOutput {
	return o.ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (o AppSpecJobLogDestinationLogtailOutput) ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationLogtailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecJobLogDestinationLogtail) *AppSpecJobLogDestinationLogtail {
		return &v
	}).(AppSpecJobLogDestinationLogtailPtrOutput)
}

// Logtail token.
func (o AppSpecJobLogDestinationLogtailOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobLogDestinationLogtail) string { return v.Token }).(pulumi.StringOutput)
}

type AppSpecJobLogDestinationLogtailPtrOutput struct{ *pulumi.OutputState }

func (AppSpecJobLogDestinationLogtailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobLogDestinationLogtail)(nil)).Elem()
}

func (o AppSpecJobLogDestinationLogtailPtrOutput) ToAppSpecJobLogDestinationLogtailPtrOutput() AppSpecJobLogDestinationLogtailPtrOutput {
	return o
}

func (o AppSpecJobLogDestinationLogtailPtrOutput) ToAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationLogtailPtrOutput {
	return o
}

func (o AppSpecJobLogDestinationLogtailPtrOutput) Elem() AppSpecJobLogDestinationLogtailOutput {
	return o.ApplyT(func(v *AppSpecJobLogDestinationLogtail) AppSpecJobLogDestinationLogtail {
		if v != nil {
			return *v
		}
		var ret AppSpecJobLogDestinationLogtail
		return ret
	}).(AppSpecJobLogDestinationLogtailOutput)
}

// Logtail token.
func (o AppSpecJobLogDestinationLogtailPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobLogDestinationLogtail) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type AppSpecJobLogDestinationPapertrail struct {
	// Datadog HTTP log intake endpoint.
	Endpoint string `pulumi:"endpoint"`
}

// AppSpecJobLogDestinationPapertrailInput is an input type that accepts AppSpecJobLogDestinationPapertrailArgs and AppSpecJobLogDestinationPapertrailOutput values.
// You can construct a concrete instance of `AppSpecJobLogDestinationPapertrailInput` via:
//
//          AppSpecJobLogDestinationPapertrailArgs{...}
type AppSpecJobLogDestinationPapertrailInput interface {
	pulumi.Input

	ToAppSpecJobLogDestinationPapertrailOutput() AppSpecJobLogDestinationPapertrailOutput
	ToAppSpecJobLogDestinationPapertrailOutputWithContext(context.Context) AppSpecJobLogDestinationPapertrailOutput
}

type AppSpecJobLogDestinationPapertrailArgs struct {
	// Datadog HTTP log intake endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (AppSpecJobLogDestinationPapertrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobLogDestinationPapertrail)(nil)).Elem()
}

func (i AppSpecJobLogDestinationPapertrailArgs) ToAppSpecJobLogDestinationPapertrailOutput() AppSpecJobLogDestinationPapertrailOutput {
	return i.ToAppSpecJobLogDestinationPapertrailOutputWithContext(context.Background())
}

func (i AppSpecJobLogDestinationPapertrailArgs) ToAppSpecJobLogDestinationPapertrailOutputWithContext(ctx context.Context) AppSpecJobLogDestinationPapertrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationPapertrailOutput)
}

func (i AppSpecJobLogDestinationPapertrailArgs) ToAppSpecJobLogDestinationPapertrailPtrOutput() AppSpecJobLogDestinationPapertrailPtrOutput {
	return i.ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i AppSpecJobLogDestinationPapertrailArgs) ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationPapertrailOutput).ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx)
}

// AppSpecJobLogDestinationPapertrailPtrInput is an input type that accepts AppSpecJobLogDestinationPapertrailArgs, AppSpecJobLogDestinationPapertrailPtr and AppSpecJobLogDestinationPapertrailPtrOutput values.
// You can construct a concrete instance of `AppSpecJobLogDestinationPapertrailPtrInput` via:
//
//          AppSpecJobLogDestinationPapertrailArgs{...}
//
//  or:
//
//          nil
type AppSpecJobLogDestinationPapertrailPtrInput interface {
	pulumi.Input

	ToAppSpecJobLogDestinationPapertrailPtrOutput() AppSpecJobLogDestinationPapertrailPtrOutput
	ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(context.Context) AppSpecJobLogDestinationPapertrailPtrOutput
}

type appSpecJobLogDestinationPapertrailPtrType AppSpecJobLogDestinationPapertrailArgs

func AppSpecJobLogDestinationPapertrailPtr(v *AppSpecJobLogDestinationPapertrailArgs) AppSpecJobLogDestinationPapertrailPtrInput {
	return (*appSpecJobLogDestinationPapertrailPtrType)(v)
}

func (*appSpecJobLogDestinationPapertrailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobLogDestinationPapertrail)(nil)).Elem()
}

func (i *appSpecJobLogDestinationPapertrailPtrType) ToAppSpecJobLogDestinationPapertrailPtrOutput() AppSpecJobLogDestinationPapertrailPtrOutput {
	return i.ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i *appSpecJobLogDestinationPapertrailPtrType) ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecJobLogDestinationPapertrailPtrOutput)
}

type AppSpecJobLogDestinationPapertrailOutput struct{ *pulumi.OutputState }

func (AppSpecJobLogDestinationPapertrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecJobLogDestinationPapertrail)(nil)).Elem()
}

func (o AppSpecJobLogDestinationPapertrailOutput) ToAppSpecJobLogDestinationPapertrailOutput() AppSpecJobLogDestinationPapertrailOutput {
	return o
}

func (o AppSpecJobLogDestinationPapertrailOutput) ToAppSpecJobLogDestinationPapertrailOutputWithContext(ctx context.Context) AppSpecJobLogDestinationPapertrailOutput {
	return o
}

func (o AppSpecJobLogDestinationPapertrailOutput) ToAppSpecJobLogDestinationPapertrailPtrOutput() AppSpecJobLogDestinationPapertrailPtrOutput {
	return o.ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (o AppSpecJobLogDestinationPapertrailOutput) ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationPapertrailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecJobLogDestinationPapertrail) *AppSpecJobLogDestinationPapertrail {
		return &v
	}).(AppSpecJobLogDestinationPapertrailPtrOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecJobLogDestinationPapertrailOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecJobLogDestinationPapertrail) string { return v.Endpoint }).(pulumi.StringOutput)
}

type AppSpecJobLogDestinationPapertrailPtrOutput struct{ *pulumi.OutputState }

func (AppSpecJobLogDestinationPapertrailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecJobLogDestinationPapertrail)(nil)).Elem()
}

func (o AppSpecJobLogDestinationPapertrailPtrOutput) ToAppSpecJobLogDestinationPapertrailPtrOutput() AppSpecJobLogDestinationPapertrailPtrOutput {
	return o
}

func (o AppSpecJobLogDestinationPapertrailPtrOutput) ToAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecJobLogDestinationPapertrailPtrOutput {
	return o
}

func (o AppSpecJobLogDestinationPapertrailPtrOutput) Elem() AppSpecJobLogDestinationPapertrailOutput {
	return o.ApplyT(func(v *AppSpecJobLogDestinationPapertrail) AppSpecJobLogDestinationPapertrail {
		if v != nil {
			return *v
		}
		var ret AppSpecJobLogDestinationPapertrail
		return ret
	}).(AppSpecJobLogDestinationPapertrailOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecJobLogDestinationPapertrailPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecJobLogDestinationPapertrail) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type AppSpecService struct {
	// Describes an alert policy for the component.
	Alerts []AppSpecServiceAlert `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.
	Cors *AppSpecServiceCors `pulumi:"cors"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs []AppSpecServiceEnv `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
	Git *AppSpecServiceGit `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github *AppSpecServiceGithub `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab *AppSpecServiceGitlab `pulumi:"gitlab"`
	// A health check to determine the availability of this component.
	HealthCheck *AppSpecServiceHealthCheck `pulumi:"healthCheck"`
	// The internal port on which this service's run command will listen.
	HttpPort *int `pulumi:"httpPort"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image *AppSpecServiceImage `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
	InstanceSizeSlug *string `pulumi:"instanceSizeSlug"`
	// A list of ports on which this service will listen for internal traffic.
	InternalPorts []int `pulumi:"internalPorts"`
	// Describes a log forwarding destination.
	LogDestinations []AppSpecServiceLogDestination `pulumi:"logDestinations"`
	// The name of the component.
	Name   string                `pulumi:"name"`
	Routes []AppSpecServiceRoute `pulumi:"routes"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir *string `pulumi:"sourceDir"`
}

// AppSpecServiceInput is an input type that accepts AppSpecServiceArgs and AppSpecServiceOutput values.
// You can construct a concrete instance of `AppSpecServiceInput` via:
//
//          AppSpecServiceArgs{...}
type AppSpecServiceInput interface {
	pulumi.Input

	ToAppSpecServiceOutput() AppSpecServiceOutput
	ToAppSpecServiceOutputWithContext(context.Context) AppSpecServiceOutput
}

type AppSpecServiceArgs struct {
	// Describes an alert policy for the component.
	Alerts AppSpecServiceAlertArrayInput `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.
	Cors AppSpecServiceCorsPtrInput `pulumi:"cors"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs AppSpecServiceEnvArrayInput `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
	Git AppSpecServiceGitPtrInput `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github AppSpecServiceGithubPtrInput `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab AppSpecServiceGitlabPtrInput `pulumi:"gitlab"`
	// A health check to determine the availability of this component.
	HealthCheck AppSpecServiceHealthCheckPtrInput `pulumi:"healthCheck"`
	// The internal port on which this service's run command will listen.
	HttpPort pulumi.IntPtrInput `pulumi:"httpPort"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image AppSpecServiceImagePtrInput `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
	InstanceSizeSlug pulumi.StringPtrInput `pulumi:"instanceSizeSlug"`
	// A list of ports on which this service will listen for internal traffic.
	InternalPorts pulumi.IntArrayInput `pulumi:"internalPorts"`
	// Describes a log forwarding destination.
	LogDestinations AppSpecServiceLogDestinationArrayInput `pulumi:"logDestinations"`
	// The name of the component.
	Name   pulumi.StringInput            `pulumi:"name"`
	Routes AppSpecServiceRouteArrayInput `pulumi:"routes"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (AppSpecServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecService)(nil)).Elem()
}

func (i AppSpecServiceArgs) ToAppSpecServiceOutput() AppSpecServiceOutput {
	return i.ToAppSpecServiceOutputWithContext(context.Background())
}

func (i AppSpecServiceArgs) ToAppSpecServiceOutputWithContext(ctx context.Context) AppSpecServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceOutput)
}

// AppSpecServiceArrayInput is an input type that accepts AppSpecServiceArray and AppSpecServiceArrayOutput values.
// You can construct a concrete instance of `AppSpecServiceArrayInput` via:
//
//          AppSpecServiceArray{ AppSpecServiceArgs{...} }
type AppSpecServiceArrayInput interface {
	pulumi.Input

	ToAppSpecServiceArrayOutput() AppSpecServiceArrayOutput
	ToAppSpecServiceArrayOutputWithContext(context.Context) AppSpecServiceArrayOutput
}

type AppSpecServiceArray []AppSpecServiceInput

func (AppSpecServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecService)(nil)).Elem()
}

func (i AppSpecServiceArray) ToAppSpecServiceArrayOutput() AppSpecServiceArrayOutput {
	return i.ToAppSpecServiceArrayOutputWithContext(context.Background())
}

func (i AppSpecServiceArray) ToAppSpecServiceArrayOutputWithContext(ctx context.Context) AppSpecServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceArrayOutput)
}

type AppSpecServiceOutput struct{ *pulumi.OutputState }

func (AppSpecServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecService)(nil)).Elem()
}

func (o AppSpecServiceOutput) ToAppSpecServiceOutput() AppSpecServiceOutput {
	return o
}

func (o AppSpecServiceOutput) ToAppSpecServiceOutputWithContext(ctx context.Context) AppSpecServiceOutput {
	return o
}

// Describes an alert policy for the component.
func (o AppSpecServiceOutput) Alerts() AppSpecServiceAlertArrayOutput {
	return o.ApplyT(func(v AppSpecService) []AppSpecServiceAlert { return v.Alerts }).(AppSpecServiceAlertArrayOutput)
}

// An optional build command to run while building this component from source.
func (o AppSpecServiceOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecService) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.
func (o AppSpecServiceOutput) Cors() AppSpecServiceCorsPtrOutput {
	return o.ApplyT(func(v AppSpecService) *AppSpecServiceCors { return v.Cors }).(AppSpecServiceCorsPtrOutput)
}

// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
func (o AppSpecServiceOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecService) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app.
func (o AppSpecServiceOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecService) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// Describes an environment variable made available to an app competent.
func (o AppSpecServiceOutput) Envs() AppSpecServiceEnvArrayOutput {
	return o.ApplyT(func(v AppSpecService) []AppSpecServiceEnv { return v.Envs }).(AppSpecServiceEnvArrayOutput)
}

// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
func (o AppSpecServiceOutput) Git() AppSpecServiceGitPtrOutput {
	return o.ApplyT(func(v AppSpecService) *AppSpecServiceGit { return v.Git }).(AppSpecServiceGitPtrOutput)
}

// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecServiceOutput) Github() AppSpecServiceGithubPtrOutput {
	return o.ApplyT(func(v AppSpecService) *AppSpecServiceGithub { return v.Github }).(AppSpecServiceGithubPtrOutput)
}

// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecServiceOutput) Gitlab() AppSpecServiceGitlabPtrOutput {
	return o.ApplyT(func(v AppSpecService) *AppSpecServiceGitlab { return v.Gitlab }).(AppSpecServiceGitlabPtrOutput)
}

// A health check to determine the availability of this component.
func (o AppSpecServiceOutput) HealthCheck() AppSpecServiceHealthCheckPtrOutput {
	return o.ApplyT(func(v AppSpecService) *AppSpecServiceHealthCheck { return v.HealthCheck }).(AppSpecServiceHealthCheckPtrOutput)
}

// The internal port on which this service's run command will listen.
func (o AppSpecServiceOutput) HttpPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecService) *int { return v.HttpPort }).(pulumi.IntPtrOutput)
}

// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecServiceOutput) Image() AppSpecServiceImagePtrOutput {
	return o.ApplyT(func(v AppSpecService) *AppSpecServiceImage { return v.Image }).(AppSpecServiceImagePtrOutput)
}

// The amount of instances that this component should be scaled to.
func (o AppSpecServiceOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecService) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
func (o AppSpecServiceOutput) InstanceSizeSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecService) *string { return v.InstanceSizeSlug }).(pulumi.StringPtrOutput)
}

// A list of ports on which this service will listen for internal traffic.
func (o AppSpecServiceOutput) InternalPorts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v AppSpecService) []int { return v.InternalPorts }).(pulumi.IntArrayOutput)
}

// Describes a log forwarding destination.
func (o AppSpecServiceOutput) LogDestinations() AppSpecServiceLogDestinationArrayOutput {
	return o.ApplyT(func(v AppSpecService) []AppSpecServiceLogDestination { return v.LogDestinations }).(AppSpecServiceLogDestinationArrayOutput)
}

// The name of the component.
func (o AppSpecServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecService) string { return v.Name }).(pulumi.StringOutput)
}

func (o AppSpecServiceOutput) Routes() AppSpecServiceRouteArrayOutput {
	return o.ApplyT(func(v AppSpecService) []AppSpecServiceRoute { return v.Routes }).(AppSpecServiceRouteArrayOutput)
}

// An optional run command to override the component's default.
func (o AppSpecServiceOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecService) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build.
func (o AppSpecServiceOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecService) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppSpecServiceArrayOutput struct{ *pulumi.OutputState }

func (AppSpecServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecService)(nil)).Elem()
}

func (o AppSpecServiceArrayOutput) ToAppSpecServiceArrayOutput() AppSpecServiceArrayOutput {
	return o
}

func (o AppSpecServiceArrayOutput) ToAppSpecServiceArrayOutputWithContext(ctx context.Context) AppSpecServiceArrayOutput {
	return o
}

func (o AppSpecServiceArrayOutput) Index(i pulumi.IntInput) AppSpecServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecService {
		return vs[0].([]AppSpecService)[vs[1].(int)]
	}).(AppSpecServiceOutput)
}

type AppSpecServiceAlert struct {
	// Determines whether or not the alert is disabled (default: `false`).
	Disabled *bool `pulumi:"disabled"`
	// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
	Operator string `pulumi:"operator"`
	// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
	Rule string `pulumi:"rule"`
	// The threshold for the type of the warning.
	Value float64 `pulumi:"value"`
	// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
	Window string `pulumi:"window"`
}

// AppSpecServiceAlertInput is an input type that accepts AppSpecServiceAlertArgs and AppSpecServiceAlertOutput values.
// You can construct a concrete instance of `AppSpecServiceAlertInput` via:
//
//          AppSpecServiceAlertArgs{...}
type AppSpecServiceAlertInput interface {
	pulumi.Input

	ToAppSpecServiceAlertOutput() AppSpecServiceAlertOutput
	ToAppSpecServiceAlertOutputWithContext(context.Context) AppSpecServiceAlertOutput
}

type AppSpecServiceAlertArgs struct {
	// Determines whether or not the alert is disabled (default: `false`).
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
	Rule pulumi.StringInput `pulumi:"rule"`
	// The threshold for the type of the warning.
	Value pulumi.Float64Input `pulumi:"value"`
	// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
	Window pulumi.StringInput `pulumi:"window"`
}

func (AppSpecServiceAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceAlert)(nil)).Elem()
}

func (i AppSpecServiceAlertArgs) ToAppSpecServiceAlertOutput() AppSpecServiceAlertOutput {
	return i.ToAppSpecServiceAlertOutputWithContext(context.Background())
}

func (i AppSpecServiceAlertArgs) ToAppSpecServiceAlertOutputWithContext(ctx context.Context) AppSpecServiceAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceAlertOutput)
}

// AppSpecServiceAlertArrayInput is an input type that accepts AppSpecServiceAlertArray and AppSpecServiceAlertArrayOutput values.
// You can construct a concrete instance of `AppSpecServiceAlertArrayInput` via:
//
//          AppSpecServiceAlertArray{ AppSpecServiceAlertArgs{...} }
type AppSpecServiceAlertArrayInput interface {
	pulumi.Input

	ToAppSpecServiceAlertArrayOutput() AppSpecServiceAlertArrayOutput
	ToAppSpecServiceAlertArrayOutputWithContext(context.Context) AppSpecServiceAlertArrayOutput
}

type AppSpecServiceAlertArray []AppSpecServiceAlertInput

func (AppSpecServiceAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecServiceAlert)(nil)).Elem()
}

func (i AppSpecServiceAlertArray) ToAppSpecServiceAlertArrayOutput() AppSpecServiceAlertArrayOutput {
	return i.ToAppSpecServiceAlertArrayOutputWithContext(context.Background())
}

func (i AppSpecServiceAlertArray) ToAppSpecServiceAlertArrayOutputWithContext(ctx context.Context) AppSpecServiceAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceAlertArrayOutput)
}

type AppSpecServiceAlertOutput struct{ *pulumi.OutputState }

func (AppSpecServiceAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceAlert)(nil)).Elem()
}

func (o AppSpecServiceAlertOutput) ToAppSpecServiceAlertOutput() AppSpecServiceAlertOutput {
	return o
}

func (o AppSpecServiceAlertOutput) ToAppSpecServiceAlertOutputWithContext(ctx context.Context) AppSpecServiceAlertOutput {
	return o
}

// Determines whether or not the alert is disabled (default: `false`).
func (o AppSpecServiceAlertOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecServiceAlert) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
func (o AppSpecServiceAlertOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceAlert) string { return v.Operator }).(pulumi.StringOutput)
}

// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
func (o AppSpecServiceAlertOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceAlert) string { return v.Rule }).(pulumi.StringOutput)
}

// The threshold for the type of the warning.
func (o AppSpecServiceAlertOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AppSpecServiceAlert) float64 { return v.Value }).(pulumi.Float64Output)
}

// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
func (o AppSpecServiceAlertOutput) Window() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceAlert) string { return v.Window }).(pulumi.StringOutput)
}

type AppSpecServiceAlertArrayOutput struct{ *pulumi.OutputState }

func (AppSpecServiceAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecServiceAlert)(nil)).Elem()
}

func (o AppSpecServiceAlertArrayOutput) ToAppSpecServiceAlertArrayOutput() AppSpecServiceAlertArrayOutput {
	return o
}

func (o AppSpecServiceAlertArrayOutput) ToAppSpecServiceAlertArrayOutputWithContext(ctx context.Context) AppSpecServiceAlertArrayOutput {
	return o
}

func (o AppSpecServiceAlertArrayOutput) Index(i pulumi.IntInput) AppSpecServiceAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecServiceAlert {
		return vs[0].([]AppSpecServiceAlert)[vs[1].(int)]
	}).(AppSpecServiceAlertOutput)
}

type AppSpecServiceCors struct {
	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
	AllowMethods []string `pulumi:"allowMethods"`
	// The `Access-Control-Allow-Origin` can be
	AllowOrigins *AppSpecServiceCorsAllowOrigins `pulumi:"allowOrigins"`
	// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `pulumi:"maxAge"`
}

// AppSpecServiceCorsInput is an input type that accepts AppSpecServiceCorsArgs and AppSpecServiceCorsOutput values.
// You can construct a concrete instance of `AppSpecServiceCorsInput` via:
//
//          AppSpecServiceCorsArgs{...}
type AppSpecServiceCorsInput interface {
	pulumi.Input

	ToAppSpecServiceCorsOutput() AppSpecServiceCorsOutput
	ToAppSpecServiceCorsOutputWithContext(context.Context) AppSpecServiceCorsOutput
}

type AppSpecServiceCorsArgs struct {
	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	// The `Access-Control-Allow-Origin` can be
	AllowOrigins AppSpecServiceCorsAllowOriginsPtrInput `pulumi:"allowOrigins"`
	// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge pulumi.StringPtrInput `pulumi:"maxAge"`
}

func (AppSpecServiceCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceCors)(nil)).Elem()
}

func (i AppSpecServiceCorsArgs) ToAppSpecServiceCorsOutput() AppSpecServiceCorsOutput {
	return i.ToAppSpecServiceCorsOutputWithContext(context.Background())
}

func (i AppSpecServiceCorsArgs) ToAppSpecServiceCorsOutputWithContext(ctx context.Context) AppSpecServiceCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceCorsOutput)
}

func (i AppSpecServiceCorsArgs) ToAppSpecServiceCorsPtrOutput() AppSpecServiceCorsPtrOutput {
	return i.ToAppSpecServiceCorsPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceCorsArgs) ToAppSpecServiceCorsPtrOutputWithContext(ctx context.Context) AppSpecServiceCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceCorsOutput).ToAppSpecServiceCorsPtrOutputWithContext(ctx)
}

// AppSpecServiceCorsPtrInput is an input type that accepts AppSpecServiceCorsArgs, AppSpecServiceCorsPtr and AppSpecServiceCorsPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceCorsPtrInput` via:
//
//          AppSpecServiceCorsArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceCorsPtrInput interface {
	pulumi.Input

	ToAppSpecServiceCorsPtrOutput() AppSpecServiceCorsPtrOutput
	ToAppSpecServiceCorsPtrOutputWithContext(context.Context) AppSpecServiceCorsPtrOutput
}

type appSpecServiceCorsPtrType AppSpecServiceCorsArgs

func AppSpecServiceCorsPtr(v *AppSpecServiceCorsArgs) AppSpecServiceCorsPtrInput {
	return (*appSpecServiceCorsPtrType)(v)
}

func (*appSpecServiceCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceCors)(nil)).Elem()
}

func (i *appSpecServiceCorsPtrType) ToAppSpecServiceCorsPtrOutput() AppSpecServiceCorsPtrOutput {
	return i.ToAppSpecServiceCorsPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceCorsPtrType) ToAppSpecServiceCorsPtrOutputWithContext(ctx context.Context) AppSpecServiceCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceCorsPtrOutput)
}

type AppSpecServiceCorsOutput struct{ *pulumi.OutputState }

func (AppSpecServiceCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceCors)(nil)).Elem()
}

func (o AppSpecServiceCorsOutput) ToAppSpecServiceCorsOutput() AppSpecServiceCorsOutput {
	return o
}

func (o AppSpecServiceCorsOutput) ToAppSpecServiceCorsOutputWithContext(ctx context.Context) AppSpecServiceCorsOutput {
	return o
}

func (o AppSpecServiceCorsOutput) ToAppSpecServiceCorsPtrOutput() AppSpecServiceCorsPtrOutput {
	return o.ToAppSpecServiceCorsPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceCorsOutput) ToAppSpecServiceCorsPtrOutputWithContext(ctx context.Context) AppSpecServiceCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceCors) *AppSpecServiceCors {
		return &v
	}).(AppSpecServiceCorsPtrOutput)
}

// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.
func (o AppSpecServiceCorsOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecServiceCors) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
func (o AppSpecServiceCorsOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppSpecServiceCors) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
func (o AppSpecServiceCorsOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppSpecServiceCors) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

// The `Access-Control-Allow-Origin` can be
func (o AppSpecServiceCorsOutput) AllowOrigins() AppSpecServiceCorsAllowOriginsPtrOutput {
	return o.ApplyT(func(v AppSpecServiceCors) *AppSpecServiceCorsAllowOrigins { return v.AllowOrigins }).(AppSpecServiceCorsAllowOriginsPtrOutput)
}

// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
func (o AppSpecServiceCorsOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppSpecServiceCors) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
func (o AppSpecServiceCorsOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceCors) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type AppSpecServiceCorsPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceCors)(nil)).Elem()
}

func (o AppSpecServiceCorsPtrOutput) ToAppSpecServiceCorsPtrOutput() AppSpecServiceCorsPtrOutput {
	return o
}

func (o AppSpecServiceCorsPtrOutput) ToAppSpecServiceCorsPtrOutputWithContext(ctx context.Context) AppSpecServiceCorsPtrOutput {
	return o
}

func (o AppSpecServiceCorsPtrOutput) Elem() AppSpecServiceCorsOutput {
	return o.ApplyT(func(v *AppSpecServiceCors) AppSpecServiceCors {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceCors
		return ret
	}).(AppSpecServiceCorsOutput)
}

// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.
func (o AppSpecServiceCorsPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceCors) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
func (o AppSpecServiceCorsPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSpecServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
func (o AppSpecServiceCorsPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSpecServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

// The `Access-Control-Allow-Origin` can be
func (o AppSpecServiceCorsPtrOutput) AllowOrigins() AppSpecServiceCorsAllowOriginsPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceCors) *AppSpecServiceCorsAllowOrigins {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(AppSpecServiceCorsAllowOriginsPtrOutput)
}

// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
func (o AppSpecServiceCorsPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSpecServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
func (o AppSpecServiceCorsPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceCors) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceCorsAllowOrigins struct {
	// The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	Exact *string `pulumi:"exact"`
	// The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.
	Prefix *string `pulumi:"prefix"`
	// The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// AppSpecServiceCorsAllowOriginsInput is an input type that accepts AppSpecServiceCorsAllowOriginsArgs and AppSpecServiceCorsAllowOriginsOutput values.
// You can construct a concrete instance of `AppSpecServiceCorsAllowOriginsInput` via:
//
//          AppSpecServiceCorsAllowOriginsArgs{...}
type AppSpecServiceCorsAllowOriginsInput interface {
	pulumi.Input

	ToAppSpecServiceCorsAllowOriginsOutput() AppSpecServiceCorsAllowOriginsOutput
	ToAppSpecServiceCorsAllowOriginsOutputWithContext(context.Context) AppSpecServiceCorsAllowOriginsOutput
}

type AppSpecServiceCorsAllowOriginsArgs struct {
	// The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (AppSpecServiceCorsAllowOriginsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceCorsAllowOrigins)(nil)).Elem()
}

func (i AppSpecServiceCorsAllowOriginsArgs) ToAppSpecServiceCorsAllowOriginsOutput() AppSpecServiceCorsAllowOriginsOutput {
	return i.ToAppSpecServiceCorsAllowOriginsOutputWithContext(context.Background())
}

func (i AppSpecServiceCorsAllowOriginsArgs) ToAppSpecServiceCorsAllowOriginsOutputWithContext(ctx context.Context) AppSpecServiceCorsAllowOriginsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceCorsAllowOriginsOutput)
}

func (i AppSpecServiceCorsAllowOriginsArgs) ToAppSpecServiceCorsAllowOriginsPtrOutput() AppSpecServiceCorsAllowOriginsPtrOutput {
	return i.ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceCorsAllowOriginsArgs) ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx context.Context) AppSpecServiceCorsAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceCorsAllowOriginsOutput).ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx)
}

// AppSpecServiceCorsAllowOriginsPtrInput is an input type that accepts AppSpecServiceCorsAllowOriginsArgs, AppSpecServiceCorsAllowOriginsPtr and AppSpecServiceCorsAllowOriginsPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceCorsAllowOriginsPtrInput` via:
//
//          AppSpecServiceCorsAllowOriginsArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceCorsAllowOriginsPtrInput interface {
	pulumi.Input

	ToAppSpecServiceCorsAllowOriginsPtrOutput() AppSpecServiceCorsAllowOriginsPtrOutput
	ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(context.Context) AppSpecServiceCorsAllowOriginsPtrOutput
}

type appSpecServiceCorsAllowOriginsPtrType AppSpecServiceCorsAllowOriginsArgs

func AppSpecServiceCorsAllowOriginsPtr(v *AppSpecServiceCorsAllowOriginsArgs) AppSpecServiceCorsAllowOriginsPtrInput {
	return (*appSpecServiceCorsAllowOriginsPtrType)(v)
}

func (*appSpecServiceCorsAllowOriginsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceCorsAllowOrigins)(nil)).Elem()
}

func (i *appSpecServiceCorsAllowOriginsPtrType) ToAppSpecServiceCorsAllowOriginsPtrOutput() AppSpecServiceCorsAllowOriginsPtrOutput {
	return i.ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceCorsAllowOriginsPtrType) ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx context.Context) AppSpecServiceCorsAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceCorsAllowOriginsPtrOutput)
}

type AppSpecServiceCorsAllowOriginsOutput struct{ *pulumi.OutputState }

func (AppSpecServiceCorsAllowOriginsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceCorsAllowOrigins)(nil)).Elem()
}

func (o AppSpecServiceCorsAllowOriginsOutput) ToAppSpecServiceCorsAllowOriginsOutput() AppSpecServiceCorsAllowOriginsOutput {
	return o
}

func (o AppSpecServiceCorsAllowOriginsOutput) ToAppSpecServiceCorsAllowOriginsOutputWithContext(ctx context.Context) AppSpecServiceCorsAllowOriginsOutput {
	return o
}

func (o AppSpecServiceCorsAllowOriginsOutput) ToAppSpecServiceCorsAllowOriginsPtrOutput() AppSpecServiceCorsAllowOriginsPtrOutput {
	return o.ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceCorsAllowOriginsOutput) ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx context.Context) AppSpecServiceCorsAllowOriginsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceCorsAllowOrigins) *AppSpecServiceCorsAllowOrigins {
		return &v
	}).(AppSpecServiceCorsAllowOriginsPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.
func (o AppSpecServiceCorsAllowOriginsOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceCorsAllowOrigins) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.
func (o AppSpecServiceCorsAllowOriginsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceCorsAllowOrigins) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).
func (o AppSpecServiceCorsAllowOriginsOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceCorsAllowOrigins) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type AppSpecServiceCorsAllowOriginsPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceCorsAllowOriginsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceCorsAllowOrigins)(nil)).Elem()
}

func (o AppSpecServiceCorsAllowOriginsPtrOutput) ToAppSpecServiceCorsAllowOriginsPtrOutput() AppSpecServiceCorsAllowOriginsPtrOutput {
	return o
}

func (o AppSpecServiceCorsAllowOriginsPtrOutput) ToAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx context.Context) AppSpecServiceCorsAllowOriginsPtrOutput {
	return o
}

func (o AppSpecServiceCorsAllowOriginsPtrOutput) Elem() AppSpecServiceCorsAllowOriginsOutput {
	return o.ApplyT(func(v *AppSpecServiceCorsAllowOrigins) AppSpecServiceCorsAllowOrigins {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceCorsAllowOrigins
		return ret
	}).(AppSpecServiceCorsAllowOriginsOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.
func (o AppSpecServiceCorsAllowOriginsPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.
func (o AppSpecServiceCorsAllowOriginsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).
func (o AppSpecServiceCorsAllowOriginsPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type *string `pulumi:"type"`
	// The threshold for the type of the warning.
	Value *string `pulumi:"value"`
}

// AppSpecServiceEnvInput is an input type that accepts AppSpecServiceEnvArgs and AppSpecServiceEnvOutput values.
// You can construct a concrete instance of `AppSpecServiceEnvInput` via:
//
//          AppSpecServiceEnvArgs{...}
type AppSpecServiceEnvInput interface {
	pulumi.Input

	ToAppSpecServiceEnvOutput() AppSpecServiceEnvOutput
	ToAppSpecServiceEnvOutputWithContext(context.Context) AppSpecServiceEnvOutput
}

type AppSpecServiceEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The threshold for the type of the warning.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AppSpecServiceEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceEnv)(nil)).Elem()
}

func (i AppSpecServiceEnvArgs) ToAppSpecServiceEnvOutput() AppSpecServiceEnvOutput {
	return i.ToAppSpecServiceEnvOutputWithContext(context.Background())
}

func (i AppSpecServiceEnvArgs) ToAppSpecServiceEnvOutputWithContext(ctx context.Context) AppSpecServiceEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceEnvOutput)
}

// AppSpecServiceEnvArrayInput is an input type that accepts AppSpecServiceEnvArray and AppSpecServiceEnvArrayOutput values.
// You can construct a concrete instance of `AppSpecServiceEnvArrayInput` via:
//
//          AppSpecServiceEnvArray{ AppSpecServiceEnvArgs{...} }
type AppSpecServiceEnvArrayInput interface {
	pulumi.Input

	ToAppSpecServiceEnvArrayOutput() AppSpecServiceEnvArrayOutput
	ToAppSpecServiceEnvArrayOutputWithContext(context.Context) AppSpecServiceEnvArrayOutput
}

type AppSpecServiceEnvArray []AppSpecServiceEnvInput

func (AppSpecServiceEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecServiceEnv)(nil)).Elem()
}

func (i AppSpecServiceEnvArray) ToAppSpecServiceEnvArrayOutput() AppSpecServiceEnvArrayOutput {
	return i.ToAppSpecServiceEnvArrayOutputWithContext(context.Background())
}

func (i AppSpecServiceEnvArray) ToAppSpecServiceEnvArrayOutputWithContext(ctx context.Context) AppSpecServiceEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceEnvArrayOutput)
}

type AppSpecServiceEnvOutput struct{ *pulumi.OutputState }

func (AppSpecServiceEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceEnv)(nil)).Elem()
}

func (o AppSpecServiceEnvOutput) ToAppSpecServiceEnvOutput() AppSpecServiceEnvOutput {
	return o
}

func (o AppSpecServiceEnvOutput) ToAppSpecServiceEnvOutputWithContext(ctx context.Context) AppSpecServiceEnvOutput {
	return o
}

// The name of the environment variable.
func (o AppSpecServiceEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o AppSpecServiceEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o AppSpecServiceEnvOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceEnv) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The threshold for the type of the warning.
func (o AppSpecServiceEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AppSpecServiceEnvArrayOutput struct{ *pulumi.OutputState }

func (AppSpecServiceEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecServiceEnv)(nil)).Elem()
}

func (o AppSpecServiceEnvArrayOutput) ToAppSpecServiceEnvArrayOutput() AppSpecServiceEnvArrayOutput {
	return o
}

func (o AppSpecServiceEnvArrayOutput) ToAppSpecServiceEnvArrayOutputWithContext(ctx context.Context) AppSpecServiceEnvArrayOutput {
	return o
}

func (o AppSpecServiceEnvArrayOutput) Index(i pulumi.IntInput) AppSpecServiceEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecServiceEnv {
		return vs[0].([]AppSpecServiceEnv)[vs[1].(int)]
	}).(AppSpecServiceEnvOutput)
}

type AppSpecServiceGit struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// AppSpecServiceGitInput is an input type that accepts AppSpecServiceGitArgs and AppSpecServiceGitOutput values.
// You can construct a concrete instance of `AppSpecServiceGitInput` via:
//
//          AppSpecServiceGitArgs{...}
type AppSpecServiceGitInput interface {
	pulumi.Input

	ToAppSpecServiceGitOutput() AppSpecServiceGitOutput
	ToAppSpecServiceGitOutputWithContext(context.Context) AppSpecServiceGitOutput
}

type AppSpecServiceGitArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (AppSpecServiceGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceGit)(nil)).Elem()
}

func (i AppSpecServiceGitArgs) ToAppSpecServiceGitOutput() AppSpecServiceGitOutput {
	return i.ToAppSpecServiceGitOutputWithContext(context.Background())
}

func (i AppSpecServiceGitArgs) ToAppSpecServiceGitOutputWithContext(ctx context.Context) AppSpecServiceGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGitOutput)
}

func (i AppSpecServiceGitArgs) ToAppSpecServiceGitPtrOutput() AppSpecServiceGitPtrOutput {
	return i.ToAppSpecServiceGitPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceGitArgs) ToAppSpecServiceGitPtrOutputWithContext(ctx context.Context) AppSpecServiceGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGitOutput).ToAppSpecServiceGitPtrOutputWithContext(ctx)
}

// AppSpecServiceGitPtrInput is an input type that accepts AppSpecServiceGitArgs, AppSpecServiceGitPtr and AppSpecServiceGitPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceGitPtrInput` via:
//
//          AppSpecServiceGitArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceGitPtrInput interface {
	pulumi.Input

	ToAppSpecServiceGitPtrOutput() AppSpecServiceGitPtrOutput
	ToAppSpecServiceGitPtrOutputWithContext(context.Context) AppSpecServiceGitPtrOutput
}

type appSpecServiceGitPtrType AppSpecServiceGitArgs

func AppSpecServiceGitPtr(v *AppSpecServiceGitArgs) AppSpecServiceGitPtrInput {
	return (*appSpecServiceGitPtrType)(v)
}

func (*appSpecServiceGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceGit)(nil)).Elem()
}

func (i *appSpecServiceGitPtrType) ToAppSpecServiceGitPtrOutput() AppSpecServiceGitPtrOutput {
	return i.ToAppSpecServiceGitPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceGitPtrType) ToAppSpecServiceGitPtrOutputWithContext(ctx context.Context) AppSpecServiceGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGitPtrOutput)
}

type AppSpecServiceGitOutput struct{ *pulumi.OutputState }

func (AppSpecServiceGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceGit)(nil)).Elem()
}

func (o AppSpecServiceGitOutput) ToAppSpecServiceGitOutput() AppSpecServiceGitOutput {
	return o
}

func (o AppSpecServiceGitOutput) ToAppSpecServiceGitOutputWithContext(ctx context.Context) AppSpecServiceGitOutput {
	return o
}

func (o AppSpecServiceGitOutput) ToAppSpecServiceGitPtrOutput() AppSpecServiceGitPtrOutput {
	return o.ToAppSpecServiceGitPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceGitOutput) ToAppSpecServiceGitPtrOutputWithContext(ctx context.Context) AppSpecServiceGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceGit) *AppSpecServiceGit {
		return &v
	}).(AppSpecServiceGitPtrOutput)
}

// The name of the branch to use.
func (o AppSpecServiceGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o AppSpecServiceGitOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceGit) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type AppSpecServiceGitPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceGit)(nil)).Elem()
}

func (o AppSpecServiceGitPtrOutput) ToAppSpecServiceGitPtrOutput() AppSpecServiceGitPtrOutput {
	return o
}

func (o AppSpecServiceGitPtrOutput) ToAppSpecServiceGitPtrOutputWithContext(ctx context.Context) AppSpecServiceGitPtrOutput {
	return o
}

func (o AppSpecServiceGitPtrOutput) Elem() AppSpecServiceGitOutput {
	return o.ApplyT(func(v *AppSpecServiceGit) AppSpecServiceGit {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceGit
		return ret
	}).(AppSpecServiceGitOutput)
}

// The name of the branch to use.
func (o AppSpecServiceGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o AppSpecServiceGitPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceGithub struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// AppSpecServiceGithubInput is an input type that accepts AppSpecServiceGithubArgs and AppSpecServiceGithubOutput values.
// You can construct a concrete instance of `AppSpecServiceGithubInput` via:
//
//          AppSpecServiceGithubArgs{...}
type AppSpecServiceGithubInput interface {
	pulumi.Input

	ToAppSpecServiceGithubOutput() AppSpecServiceGithubOutput
	ToAppSpecServiceGithubOutputWithContext(context.Context) AppSpecServiceGithubOutput
}

type AppSpecServiceGithubArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppSpecServiceGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceGithub)(nil)).Elem()
}

func (i AppSpecServiceGithubArgs) ToAppSpecServiceGithubOutput() AppSpecServiceGithubOutput {
	return i.ToAppSpecServiceGithubOutputWithContext(context.Background())
}

func (i AppSpecServiceGithubArgs) ToAppSpecServiceGithubOutputWithContext(ctx context.Context) AppSpecServiceGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGithubOutput)
}

func (i AppSpecServiceGithubArgs) ToAppSpecServiceGithubPtrOutput() AppSpecServiceGithubPtrOutput {
	return i.ToAppSpecServiceGithubPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceGithubArgs) ToAppSpecServiceGithubPtrOutputWithContext(ctx context.Context) AppSpecServiceGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGithubOutput).ToAppSpecServiceGithubPtrOutputWithContext(ctx)
}

// AppSpecServiceGithubPtrInput is an input type that accepts AppSpecServiceGithubArgs, AppSpecServiceGithubPtr and AppSpecServiceGithubPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceGithubPtrInput` via:
//
//          AppSpecServiceGithubArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceGithubPtrInput interface {
	pulumi.Input

	ToAppSpecServiceGithubPtrOutput() AppSpecServiceGithubPtrOutput
	ToAppSpecServiceGithubPtrOutputWithContext(context.Context) AppSpecServiceGithubPtrOutput
}

type appSpecServiceGithubPtrType AppSpecServiceGithubArgs

func AppSpecServiceGithubPtr(v *AppSpecServiceGithubArgs) AppSpecServiceGithubPtrInput {
	return (*appSpecServiceGithubPtrType)(v)
}

func (*appSpecServiceGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceGithub)(nil)).Elem()
}

func (i *appSpecServiceGithubPtrType) ToAppSpecServiceGithubPtrOutput() AppSpecServiceGithubPtrOutput {
	return i.ToAppSpecServiceGithubPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceGithubPtrType) ToAppSpecServiceGithubPtrOutputWithContext(ctx context.Context) AppSpecServiceGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGithubPtrOutput)
}

type AppSpecServiceGithubOutput struct{ *pulumi.OutputState }

func (AppSpecServiceGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceGithub)(nil)).Elem()
}

func (o AppSpecServiceGithubOutput) ToAppSpecServiceGithubOutput() AppSpecServiceGithubOutput {
	return o
}

func (o AppSpecServiceGithubOutput) ToAppSpecServiceGithubOutputWithContext(ctx context.Context) AppSpecServiceGithubOutput {
	return o
}

func (o AppSpecServiceGithubOutput) ToAppSpecServiceGithubPtrOutput() AppSpecServiceGithubPtrOutput {
	return o.ToAppSpecServiceGithubPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceGithubOutput) ToAppSpecServiceGithubPtrOutputWithContext(ctx context.Context) AppSpecServiceGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceGithub) *AppSpecServiceGithub {
		return &v
	}).(AppSpecServiceGithubPtrOutput)
}

// The name of the branch to use.
func (o AppSpecServiceGithubOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceGithub) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecServiceGithubOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecServiceGithub) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecServiceGithubOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceGithub) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppSpecServiceGithubPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceGithub)(nil)).Elem()
}

func (o AppSpecServiceGithubPtrOutput) ToAppSpecServiceGithubPtrOutput() AppSpecServiceGithubPtrOutput {
	return o
}

func (o AppSpecServiceGithubPtrOutput) ToAppSpecServiceGithubPtrOutputWithContext(ctx context.Context) AppSpecServiceGithubPtrOutput {
	return o
}

func (o AppSpecServiceGithubPtrOutput) Elem() AppSpecServiceGithubOutput {
	return o.ApplyT(func(v *AppSpecServiceGithub) AppSpecServiceGithub {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceGithub
		return ret
	}).(AppSpecServiceGithubOutput)
}

// The name of the branch to use.
func (o AppSpecServiceGithubPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceGithub) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecServiceGithubPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecServiceGithubPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceGitlab struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// AppSpecServiceGitlabInput is an input type that accepts AppSpecServiceGitlabArgs and AppSpecServiceGitlabOutput values.
// You can construct a concrete instance of `AppSpecServiceGitlabInput` via:
//
//          AppSpecServiceGitlabArgs{...}
type AppSpecServiceGitlabInput interface {
	pulumi.Input

	ToAppSpecServiceGitlabOutput() AppSpecServiceGitlabOutput
	ToAppSpecServiceGitlabOutputWithContext(context.Context) AppSpecServiceGitlabOutput
}

type AppSpecServiceGitlabArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppSpecServiceGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceGitlab)(nil)).Elem()
}

func (i AppSpecServiceGitlabArgs) ToAppSpecServiceGitlabOutput() AppSpecServiceGitlabOutput {
	return i.ToAppSpecServiceGitlabOutputWithContext(context.Background())
}

func (i AppSpecServiceGitlabArgs) ToAppSpecServiceGitlabOutputWithContext(ctx context.Context) AppSpecServiceGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGitlabOutput)
}

func (i AppSpecServiceGitlabArgs) ToAppSpecServiceGitlabPtrOutput() AppSpecServiceGitlabPtrOutput {
	return i.ToAppSpecServiceGitlabPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceGitlabArgs) ToAppSpecServiceGitlabPtrOutputWithContext(ctx context.Context) AppSpecServiceGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGitlabOutput).ToAppSpecServiceGitlabPtrOutputWithContext(ctx)
}

// AppSpecServiceGitlabPtrInput is an input type that accepts AppSpecServiceGitlabArgs, AppSpecServiceGitlabPtr and AppSpecServiceGitlabPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceGitlabPtrInput` via:
//
//          AppSpecServiceGitlabArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceGitlabPtrInput interface {
	pulumi.Input

	ToAppSpecServiceGitlabPtrOutput() AppSpecServiceGitlabPtrOutput
	ToAppSpecServiceGitlabPtrOutputWithContext(context.Context) AppSpecServiceGitlabPtrOutput
}

type appSpecServiceGitlabPtrType AppSpecServiceGitlabArgs

func AppSpecServiceGitlabPtr(v *AppSpecServiceGitlabArgs) AppSpecServiceGitlabPtrInput {
	return (*appSpecServiceGitlabPtrType)(v)
}

func (*appSpecServiceGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceGitlab)(nil)).Elem()
}

func (i *appSpecServiceGitlabPtrType) ToAppSpecServiceGitlabPtrOutput() AppSpecServiceGitlabPtrOutput {
	return i.ToAppSpecServiceGitlabPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceGitlabPtrType) ToAppSpecServiceGitlabPtrOutputWithContext(ctx context.Context) AppSpecServiceGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceGitlabPtrOutput)
}

type AppSpecServiceGitlabOutput struct{ *pulumi.OutputState }

func (AppSpecServiceGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceGitlab)(nil)).Elem()
}

func (o AppSpecServiceGitlabOutput) ToAppSpecServiceGitlabOutput() AppSpecServiceGitlabOutput {
	return o
}

func (o AppSpecServiceGitlabOutput) ToAppSpecServiceGitlabOutputWithContext(ctx context.Context) AppSpecServiceGitlabOutput {
	return o
}

func (o AppSpecServiceGitlabOutput) ToAppSpecServiceGitlabPtrOutput() AppSpecServiceGitlabPtrOutput {
	return o.ToAppSpecServiceGitlabPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceGitlabOutput) ToAppSpecServiceGitlabPtrOutputWithContext(ctx context.Context) AppSpecServiceGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceGitlab) *AppSpecServiceGitlab {
		return &v
	}).(AppSpecServiceGitlabPtrOutput)
}

// The name of the branch to use.
func (o AppSpecServiceGitlabOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceGitlab) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecServiceGitlabOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecServiceGitlab) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecServiceGitlabOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceGitlab) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppSpecServiceGitlabPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceGitlab)(nil)).Elem()
}

func (o AppSpecServiceGitlabPtrOutput) ToAppSpecServiceGitlabPtrOutput() AppSpecServiceGitlabPtrOutput {
	return o
}

func (o AppSpecServiceGitlabPtrOutput) ToAppSpecServiceGitlabPtrOutputWithContext(ctx context.Context) AppSpecServiceGitlabPtrOutput {
	return o
}

func (o AppSpecServiceGitlabPtrOutput) Elem() AppSpecServiceGitlabOutput {
	return o.ApplyT(func(v *AppSpecServiceGitlab) AppSpecServiceGitlab {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceGitlab
		return ret
	}).(AppSpecServiceGitlabOutput)
}

// The name of the branch to use.
func (o AppSpecServiceGitlabPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecServiceGitlabPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecServiceGitlabPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceHealthCheck struct {
	// The number of failed health checks before considered unhealthy.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The route path used for the HTTP health check ping.
	HttpPath *string `pulumi:"httpPath"`
	// The number of seconds to wait before beginning health checks.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// The number of seconds to wait between health checks.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The number of successful health checks before considered healthy.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The number of seconds after which the check times out.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// AppSpecServiceHealthCheckInput is an input type that accepts AppSpecServiceHealthCheckArgs and AppSpecServiceHealthCheckOutput values.
// You can construct a concrete instance of `AppSpecServiceHealthCheckInput` via:
//
//          AppSpecServiceHealthCheckArgs{...}
type AppSpecServiceHealthCheckInput interface {
	pulumi.Input

	ToAppSpecServiceHealthCheckOutput() AppSpecServiceHealthCheckOutput
	ToAppSpecServiceHealthCheckOutputWithContext(context.Context) AppSpecServiceHealthCheckOutput
}

type AppSpecServiceHealthCheckArgs struct {
	// The number of failed health checks before considered unhealthy.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The route path used for the HTTP health check ping.
	HttpPath pulumi.StringPtrInput `pulumi:"httpPath"`
	// The number of seconds to wait before beginning health checks.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// The number of seconds to wait between health checks.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// The number of successful health checks before considered healthy.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The number of seconds after which the check times out.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (AppSpecServiceHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceHealthCheck)(nil)).Elem()
}

func (i AppSpecServiceHealthCheckArgs) ToAppSpecServiceHealthCheckOutput() AppSpecServiceHealthCheckOutput {
	return i.ToAppSpecServiceHealthCheckOutputWithContext(context.Background())
}

func (i AppSpecServiceHealthCheckArgs) ToAppSpecServiceHealthCheckOutputWithContext(ctx context.Context) AppSpecServiceHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceHealthCheckOutput)
}

func (i AppSpecServiceHealthCheckArgs) ToAppSpecServiceHealthCheckPtrOutput() AppSpecServiceHealthCheckPtrOutput {
	return i.ToAppSpecServiceHealthCheckPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceHealthCheckArgs) ToAppSpecServiceHealthCheckPtrOutputWithContext(ctx context.Context) AppSpecServiceHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceHealthCheckOutput).ToAppSpecServiceHealthCheckPtrOutputWithContext(ctx)
}

// AppSpecServiceHealthCheckPtrInput is an input type that accepts AppSpecServiceHealthCheckArgs, AppSpecServiceHealthCheckPtr and AppSpecServiceHealthCheckPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceHealthCheckPtrInput` via:
//
//          AppSpecServiceHealthCheckArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceHealthCheckPtrInput interface {
	pulumi.Input

	ToAppSpecServiceHealthCheckPtrOutput() AppSpecServiceHealthCheckPtrOutput
	ToAppSpecServiceHealthCheckPtrOutputWithContext(context.Context) AppSpecServiceHealthCheckPtrOutput
}

type appSpecServiceHealthCheckPtrType AppSpecServiceHealthCheckArgs

func AppSpecServiceHealthCheckPtr(v *AppSpecServiceHealthCheckArgs) AppSpecServiceHealthCheckPtrInput {
	return (*appSpecServiceHealthCheckPtrType)(v)
}

func (*appSpecServiceHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceHealthCheck)(nil)).Elem()
}

func (i *appSpecServiceHealthCheckPtrType) ToAppSpecServiceHealthCheckPtrOutput() AppSpecServiceHealthCheckPtrOutput {
	return i.ToAppSpecServiceHealthCheckPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceHealthCheckPtrType) ToAppSpecServiceHealthCheckPtrOutputWithContext(ctx context.Context) AppSpecServiceHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceHealthCheckPtrOutput)
}

type AppSpecServiceHealthCheckOutput struct{ *pulumi.OutputState }

func (AppSpecServiceHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceHealthCheck)(nil)).Elem()
}

func (o AppSpecServiceHealthCheckOutput) ToAppSpecServiceHealthCheckOutput() AppSpecServiceHealthCheckOutput {
	return o
}

func (o AppSpecServiceHealthCheckOutput) ToAppSpecServiceHealthCheckOutputWithContext(ctx context.Context) AppSpecServiceHealthCheckOutput {
	return o
}

func (o AppSpecServiceHealthCheckOutput) ToAppSpecServiceHealthCheckPtrOutput() AppSpecServiceHealthCheckPtrOutput {
	return o.ToAppSpecServiceHealthCheckPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceHealthCheckOutput) ToAppSpecServiceHealthCheckPtrOutputWithContext(ctx context.Context) AppSpecServiceHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceHealthCheck) *AppSpecServiceHealthCheck {
		return &v
	}).(AppSpecServiceHealthCheckPtrOutput)
}

// The number of failed health checks before considered unhealthy.
func (o AppSpecServiceHealthCheckOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecServiceHealthCheck) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The route path used for the HTTP health check ping.
func (o AppSpecServiceHealthCheckOutput) HttpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceHealthCheck) *string { return v.HttpPath }).(pulumi.StringPtrOutput)
}

// The number of seconds to wait before beginning health checks.
func (o AppSpecServiceHealthCheckOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecServiceHealthCheck) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// The number of seconds to wait between health checks.
func (o AppSpecServiceHealthCheckOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecServiceHealthCheck) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The number of successful health checks before considered healthy.
func (o AppSpecServiceHealthCheckOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecServiceHealthCheck) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The number of seconds after which the check times out.
func (o AppSpecServiceHealthCheckOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecServiceHealthCheck) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type AppSpecServiceHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceHealthCheck)(nil)).Elem()
}

func (o AppSpecServiceHealthCheckPtrOutput) ToAppSpecServiceHealthCheckPtrOutput() AppSpecServiceHealthCheckPtrOutput {
	return o
}

func (o AppSpecServiceHealthCheckPtrOutput) ToAppSpecServiceHealthCheckPtrOutputWithContext(ctx context.Context) AppSpecServiceHealthCheckPtrOutput {
	return o
}

func (o AppSpecServiceHealthCheckPtrOutput) Elem() AppSpecServiceHealthCheckOutput {
	return o.ApplyT(func(v *AppSpecServiceHealthCheck) AppSpecServiceHealthCheck {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceHealthCheck
		return ret
	}).(AppSpecServiceHealthCheckOutput)
}

// The number of failed health checks before considered unhealthy.
func (o AppSpecServiceHealthCheckPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The route path used for the HTTP health check ping.
func (o AppSpecServiceHealthCheckPtrOutput) HttpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.HttpPath
	}).(pulumi.StringPtrOutput)
}

// The number of seconds to wait before beginning health checks.
func (o AppSpecServiceHealthCheckPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// The number of seconds to wait between health checks.
func (o AppSpecServiceHealthCheckPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of successful health checks before considered healthy.
func (o AppSpecServiceHealthCheckPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The number of seconds after which the check times out.
func (o AppSpecServiceHealthCheckPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type AppSpecServiceImage struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry *string `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType string `pulumi:"registryType"`
	// The repository name.
	Repository string `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag *string `pulumi:"tag"`
}

// AppSpecServiceImageInput is an input type that accepts AppSpecServiceImageArgs and AppSpecServiceImageOutput values.
// You can construct a concrete instance of `AppSpecServiceImageInput` via:
//
//          AppSpecServiceImageArgs{...}
type AppSpecServiceImageInput interface {
	pulumi.Input

	ToAppSpecServiceImageOutput() AppSpecServiceImageOutput
	ToAppSpecServiceImageOutputWithContext(context.Context) AppSpecServiceImageOutput
}

type AppSpecServiceImageArgs struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType pulumi.StringInput `pulumi:"registryType"`
	// The repository name.
	Repository pulumi.StringInput `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (AppSpecServiceImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceImage)(nil)).Elem()
}

func (i AppSpecServiceImageArgs) ToAppSpecServiceImageOutput() AppSpecServiceImageOutput {
	return i.ToAppSpecServiceImageOutputWithContext(context.Background())
}

func (i AppSpecServiceImageArgs) ToAppSpecServiceImageOutputWithContext(ctx context.Context) AppSpecServiceImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceImageOutput)
}

func (i AppSpecServiceImageArgs) ToAppSpecServiceImagePtrOutput() AppSpecServiceImagePtrOutput {
	return i.ToAppSpecServiceImagePtrOutputWithContext(context.Background())
}

func (i AppSpecServiceImageArgs) ToAppSpecServiceImagePtrOutputWithContext(ctx context.Context) AppSpecServiceImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceImageOutput).ToAppSpecServiceImagePtrOutputWithContext(ctx)
}

// AppSpecServiceImagePtrInput is an input type that accepts AppSpecServiceImageArgs, AppSpecServiceImagePtr and AppSpecServiceImagePtrOutput values.
// You can construct a concrete instance of `AppSpecServiceImagePtrInput` via:
//
//          AppSpecServiceImageArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceImagePtrInput interface {
	pulumi.Input

	ToAppSpecServiceImagePtrOutput() AppSpecServiceImagePtrOutput
	ToAppSpecServiceImagePtrOutputWithContext(context.Context) AppSpecServiceImagePtrOutput
}

type appSpecServiceImagePtrType AppSpecServiceImageArgs

func AppSpecServiceImagePtr(v *AppSpecServiceImageArgs) AppSpecServiceImagePtrInput {
	return (*appSpecServiceImagePtrType)(v)
}

func (*appSpecServiceImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceImage)(nil)).Elem()
}

func (i *appSpecServiceImagePtrType) ToAppSpecServiceImagePtrOutput() AppSpecServiceImagePtrOutput {
	return i.ToAppSpecServiceImagePtrOutputWithContext(context.Background())
}

func (i *appSpecServiceImagePtrType) ToAppSpecServiceImagePtrOutputWithContext(ctx context.Context) AppSpecServiceImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceImagePtrOutput)
}

type AppSpecServiceImageOutput struct{ *pulumi.OutputState }

func (AppSpecServiceImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceImage)(nil)).Elem()
}

func (o AppSpecServiceImageOutput) ToAppSpecServiceImageOutput() AppSpecServiceImageOutput {
	return o
}

func (o AppSpecServiceImageOutput) ToAppSpecServiceImageOutputWithContext(ctx context.Context) AppSpecServiceImageOutput {
	return o
}

func (o AppSpecServiceImageOutput) ToAppSpecServiceImagePtrOutput() AppSpecServiceImagePtrOutput {
	return o.ToAppSpecServiceImagePtrOutputWithContext(context.Background())
}

func (o AppSpecServiceImageOutput) ToAppSpecServiceImagePtrOutputWithContext(ctx context.Context) AppSpecServiceImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceImage) *AppSpecServiceImage {
		return &v
	}).(AppSpecServiceImagePtrOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o AppSpecServiceImageOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceImage) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o AppSpecServiceImageOutput) RegistryType() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceImage) string { return v.RegistryType }).(pulumi.StringOutput)
}

// The repository name.
func (o AppSpecServiceImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o AppSpecServiceImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type AppSpecServiceImagePtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceImage)(nil)).Elem()
}

func (o AppSpecServiceImagePtrOutput) ToAppSpecServiceImagePtrOutput() AppSpecServiceImagePtrOutput {
	return o
}

func (o AppSpecServiceImagePtrOutput) ToAppSpecServiceImagePtrOutputWithContext(ctx context.Context) AppSpecServiceImagePtrOutput {
	return o
}

func (o AppSpecServiceImagePtrOutput) Elem() AppSpecServiceImageOutput {
	return o.ApplyT(func(v *AppSpecServiceImage) AppSpecServiceImage {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceImage
		return ret
	}).(AppSpecServiceImageOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o AppSpecServiceImagePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceImage) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o AppSpecServiceImagePtrOutput) RegistryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceImage) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryType
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o AppSpecServiceImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o AppSpecServiceImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceLogDestination struct {
	// Datadog configuration.
	Datadog *AppSpecServiceLogDestinationDatadog `pulumi:"datadog"`
	// Logtail configuration.
	Logtail *AppSpecServiceLogDestinationLogtail `pulumi:"logtail"`
	// The name of the component.
	Name string `pulumi:"name"`
	// Papertrail configuration.
	Papertrail *AppSpecServiceLogDestinationPapertrail `pulumi:"papertrail"`
}

// AppSpecServiceLogDestinationInput is an input type that accepts AppSpecServiceLogDestinationArgs and AppSpecServiceLogDestinationOutput values.
// You can construct a concrete instance of `AppSpecServiceLogDestinationInput` via:
//
//          AppSpecServiceLogDestinationArgs{...}
type AppSpecServiceLogDestinationInput interface {
	pulumi.Input

	ToAppSpecServiceLogDestinationOutput() AppSpecServiceLogDestinationOutput
	ToAppSpecServiceLogDestinationOutputWithContext(context.Context) AppSpecServiceLogDestinationOutput
}

type AppSpecServiceLogDestinationArgs struct {
	// Datadog configuration.
	Datadog AppSpecServiceLogDestinationDatadogPtrInput `pulumi:"datadog"`
	// Logtail configuration.
	Logtail AppSpecServiceLogDestinationLogtailPtrInput `pulumi:"logtail"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// Papertrail configuration.
	Papertrail AppSpecServiceLogDestinationPapertrailPtrInput `pulumi:"papertrail"`
}

func (AppSpecServiceLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceLogDestination)(nil)).Elem()
}

func (i AppSpecServiceLogDestinationArgs) ToAppSpecServiceLogDestinationOutput() AppSpecServiceLogDestinationOutput {
	return i.ToAppSpecServiceLogDestinationOutputWithContext(context.Background())
}

func (i AppSpecServiceLogDestinationArgs) ToAppSpecServiceLogDestinationOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationOutput)
}

// AppSpecServiceLogDestinationArrayInput is an input type that accepts AppSpecServiceLogDestinationArray and AppSpecServiceLogDestinationArrayOutput values.
// You can construct a concrete instance of `AppSpecServiceLogDestinationArrayInput` via:
//
//          AppSpecServiceLogDestinationArray{ AppSpecServiceLogDestinationArgs{...} }
type AppSpecServiceLogDestinationArrayInput interface {
	pulumi.Input

	ToAppSpecServiceLogDestinationArrayOutput() AppSpecServiceLogDestinationArrayOutput
	ToAppSpecServiceLogDestinationArrayOutputWithContext(context.Context) AppSpecServiceLogDestinationArrayOutput
}

type AppSpecServiceLogDestinationArray []AppSpecServiceLogDestinationInput

func (AppSpecServiceLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecServiceLogDestination)(nil)).Elem()
}

func (i AppSpecServiceLogDestinationArray) ToAppSpecServiceLogDestinationArrayOutput() AppSpecServiceLogDestinationArrayOutput {
	return i.ToAppSpecServiceLogDestinationArrayOutputWithContext(context.Background())
}

func (i AppSpecServiceLogDestinationArray) ToAppSpecServiceLogDestinationArrayOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationArrayOutput)
}

type AppSpecServiceLogDestinationOutput struct{ *pulumi.OutputState }

func (AppSpecServiceLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceLogDestination)(nil)).Elem()
}

func (o AppSpecServiceLogDestinationOutput) ToAppSpecServiceLogDestinationOutput() AppSpecServiceLogDestinationOutput {
	return o
}

func (o AppSpecServiceLogDestinationOutput) ToAppSpecServiceLogDestinationOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationOutput {
	return o
}

// Datadog configuration.
func (o AppSpecServiceLogDestinationOutput) Datadog() AppSpecServiceLogDestinationDatadogPtrOutput {
	return o.ApplyT(func(v AppSpecServiceLogDestination) *AppSpecServiceLogDestinationDatadog { return v.Datadog }).(AppSpecServiceLogDestinationDatadogPtrOutput)
}

// Logtail configuration.
func (o AppSpecServiceLogDestinationOutput) Logtail() AppSpecServiceLogDestinationLogtailPtrOutput {
	return o.ApplyT(func(v AppSpecServiceLogDestination) *AppSpecServiceLogDestinationLogtail { return v.Logtail }).(AppSpecServiceLogDestinationLogtailPtrOutput)
}

// The name of the component.
func (o AppSpecServiceLogDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceLogDestination) string { return v.Name }).(pulumi.StringOutput)
}

// Papertrail configuration.
func (o AppSpecServiceLogDestinationOutput) Papertrail() AppSpecServiceLogDestinationPapertrailPtrOutput {
	return o.ApplyT(func(v AppSpecServiceLogDestination) *AppSpecServiceLogDestinationPapertrail { return v.Papertrail }).(AppSpecServiceLogDestinationPapertrailPtrOutput)
}

type AppSpecServiceLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (AppSpecServiceLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecServiceLogDestination)(nil)).Elem()
}

func (o AppSpecServiceLogDestinationArrayOutput) ToAppSpecServiceLogDestinationArrayOutput() AppSpecServiceLogDestinationArrayOutput {
	return o
}

func (o AppSpecServiceLogDestinationArrayOutput) ToAppSpecServiceLogDestinationArrayOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationArrayOutput {
	return o
}

func (o AppSpecServiceLogDestinationArrayOutput) Index(i pulumi.IntInput) AppSpecServiceLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecServiceLogDestination {
		return vs[0].([]AppSpecServiceLogDestination)[vs[1].(int)]
	}).(AppSpecServiceLogDestinationOutput)
}

type AppSpecServiceLogDestinationDatadog struct {
	// Datadog API key.
	ApiKey string `pulumi:"apiKey"`
	// Datadog HTTP log intake endpoint.
	Endpoint *string `pulumi:"endpoint"`
}

// AppSpecServiceLogDestinationDatadogInput is an input type that accepts AppSpecServiceLogDestinationDatadogArgs and AppSpecServiceLogDestinationDatadogOutput values.
// You can construct a concrete instance of `AppSpecServiceLogDestinationDatadogInput` via:
//
//          AppSpecServiceLogDestinationDatadogArgs{...}
type AppSpecServiceLogDestinationDatadogInput interface {
	pulumi.Input

	ToAppSpecServiceLogDestinationDatadogOutput() AppSpecServiceLogDestinationDatadogOutput
	ToAppSpecServiceLogDestinationDatadogOutputWithContext(context.Context) AppSpecServiceLogDestinationDatadogOutput
}

type AppSpecServiceLogDestinationDatadogArgs struct {
	// Datadog API key.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Datadog HTTP log intake endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
}

func (AppSpecServiceLogDestinationDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceLogDestinationDatadog)(nil)).Elem()
}

func (i AppSpecServiceLogDestinationDatadogArgs) ToAppSpecServiceLogDestinationDatadogOutput() AppSpecServiceLogDestinationDatadogOutput {
	return i.ToAppSpecServiceLogDestinationDatadogOutputWithContext(context.Background())
}

func (i AppSpecServiceLogDestinationDatadogArgs) ToAppSpecServiceLogDestinationDatadogOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationDatadogOutput)
}

func (i AppSpecServiceLogDestinationDatadogArgs) ToAppSpecServiceLogDestinationDatadogPtrOutput() AppSpecServiceLogDestinationDatadogPtrOutput {
	return i.ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceLogDestinationDatadogArgs) ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationDatadogOutput).ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx)
}

// AppSpecServiceLogDestinationDatadogPtrInput is an input type that accepts AppSpecServiceLogDestinationDatadogArgs, AppSpecServiceLogDestinationDatadogPtr and AppSpecServiceLogDestinationDatadogPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceLogDestinationDatadogPtrInput` via:
//
//          AppSpecServiceLogDestinationDatadogArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceLogDestinationDatadogPtrInput interface {
	pulumi.Input

	ToAppSpecServiceLogDestinationDatadogPtrOutput() AppSpecServiceLogDestinationDatadogPtrOutput
	ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(context.Context) AppSpecServiceLogDestinationDatadogPtrOutput
}

type appSpecServiceLogDestinationDatadogPtrType AppSpecServiceLogDestinationDatadogArgs

func AppSpecServiceLogDestinationDatadogPtr(v *AppSpecServiceLogDestinationDatadogArgs) AppSpecServiceLogDestinationDatadogPtrInput {
	return (*appSpecServiceLogDestinationDatadogPtrType)(v)
}

func (*appSpecServiceLogDestinationDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceLogDestinationDatadog)(nil)).Elem()
}

func (i *appSpecServiceLogDestinationDatadogPtrType) ToAppSpecServiceLogDestinationDatadogPtrOutput() AppSpecServiceLogDestinationDatadogPtrOutput {
	return i.ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceLogDestinationDatadogPtrType) ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationDatadogPtrOutput)
}

type AppSpecServiceLogDestinationDatadogOutput struct{ *pulumi.OutputState }

func (AppSpecServiceLogDestinationDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceLogDestinationDatadog)(nil)).Elem()
}

func (o AppSpecServiceLogDestinationDatadogOutput) ToAppSpecServiceLogDestinationDatadogOutput() AppSpecServiceLogDestinationDatadogOutput {
	return o
}

func (o AppSpecServiceLogDestinationDatadogOutput) ToAppSpecServiceLogDestinationDatadogOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationDatadogOutput {
	return o
}

func (o AppSpecServiceLogDestinationDatadogOutput) ToAppSpecServiceLogDestinationDatadogPtrOutput() AppSpecServiceLogDestinationDatadogPtrOutput {
	return o.ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceLogDestinationDatadogOutput) ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceLogDestinationDatadog) *AppSpecServiceLogDestinationDatadog {
		return &v
	}).(AppSpecServiceLogDestinationDatadogPtrOutput)
}

// Datadog API key.
func (o AppSpecServiceLogDestinationDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceLogDestinationDatadog) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecServiceLogDestinationDatadogOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceLogDestinationDatadog) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

type AppSpecServiceLogDestinationDatadogPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceLogDestinationDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceLogDestinationDatadog)(nil)).Elem()
}

func (o AppSpecServiceLogDestinationDatadogPtrOutput) ToAppSpecServiceLogDestinationDatadogPtrOutput() AppSpecServiceLogDestinationDatadogPtrOutput {
	return o
}

func (o AppSpecServiceLogDestinationDatadogPtrOutput) ToAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationDatadogPtrOutput {
	return o
}

func (o AppSpecServiceLogDestinationDatadogPtrOutput) Elem() AppSpecServiceLogDestinationDatadogOutput {
	return o.ApplyT(func(v *AppSpecServiceLogDestinationDatadog) AppSpecServiceLogDestinationDatadog {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceLogDestinationDatadog
		return ret
	}).(AppSpecServiceLogDestinationDatadogOutput)
}

// Datadog API key.
func (o AppSpecServiceLogDestinationDatadogPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecServiceLogDestinationDatadogPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceLogDestinationLogtail struct {
	// Logtail token.
	Token string `pulumi:"token"`
}

// AppSpecServiceLogDestinationLogtailInput is an input type that accepts AppSpecServiceLogDestinationLogtailArgs and AppSpecServiceLogDestinationLogtailOutput values.
// You can construct a concrete instance of `AppSpecServiceLogDestinationLogtailInput` via:
//
//          AppSpecServiceLogDestinationLogtailArgs{...}
type AppSpecServiceLogDestinationLogtailInput interface {
	pulumi.Input

	ToAppSpecServiceLogDestinationLogtailOutput() AppSpecServiceLogDestinationLogtailOutput
	ToAppSpecServiceLogDestinationLogtailOutputWithContext(context.Context) AppSpecServiceLogDestinationLogtailOutput
}

type AppSpecServiceLogDestinationLogtailArgs struct {
	// Logtail token.
	Token pulumi.StringInput `pulumi:"token"`
}

func (AppSpecServiceLogDestinationLogtailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceLogDestinationLogtail)(nil)).Elem()
}

func (i AppSpecServiceLogDestinationLogtailArgs) ToAppSpecServiceLogDestinationLogtailOutput() AppSpecServiceLogDestinationLogtailOutput {
	return i.ToAppSpecServiceLogDestinationLogtailOutputWithContext(context.Background())
}

func (i AppSpecServiceLogDestinationLogtailArgs) ToAppSpecServiceLogDestinationLogtailOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationLogtailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationLogtailOutput)
}

func (i AppSpecServiceLogDestinationLogtailArgs) ToAppSpecServiceLogDestinationLogtailPtrOutput() AppSpecServiceLogDestinationLogtailPtrOutput {
	return i.ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceLogDestinationLogtailArgs) ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationLogtailOutput).ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx)
}

// AppSpecServiceLogDestinationLogtailPtrInput is an input type that accepts AppSpecServiceLogDestinationLogtailArgs, AppSpecServiceLogDestinationLogtailPtr and AppSpecServiceLogDestinationLogtailPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceLogDestinationLogtailPtrInput` via:
//
//          AppSpecServiceLogDestinationLogtailArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceLogDestinationLogtailPtrInput interface {
	pulumi.Input

	ToAppSpecServiceLogDestinationLogtailPtrOutput() AppSpecServiceLogDestinationLogtailPtrOutput
	ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(context.Context) AppSpecServiceLogDestinationLogtailPtrOutput
}

type appSpecServiceLogDestinationLogtailPtrType AppSpecServiceLogDestinationLogtailArgs

func AppSpecServiceLogDestinationLogtailPtr(v *AppSpecServiceLogDestinationLogtailArgs) AppSpecServiceLogDestinationLogtailPtrInput {
	return (*appSpecServiceLogDestinationLogtailPtrType)(v)
}

func (*appSpecServiceLogDestinationLogtailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceLogDestinationLogtail)(nil)).Elem()
}

func (i *appSpecServiceLogDestinationLogtailPtrType) ToAppSpecServiceLogDestinationLogtailPtrOutput() AppSpecServiceLogDestinationLogtailPtrOutput {
	return i.ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceLogDestinationLogtailPtrType) ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationLogtailPtrOutput)
}

type AppSpecServiceLogDestinationLogtailOutput struct{ *pulumi.OutputState }

func (AppSpecServiceLogDestinationLogtailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceLogDestinationLogtail)(nil)).Elem()
}

func (o AppSpecServiceLogDestinationLogtailOutput) ToAppSpecServiceLogDestinationLogtailOutput() AppSpecServiceLogDestinationLogtailOutput {
	return o
}

func (o AppSpecServiceLogDestinationLogtailOutput) ToAppSpecServiceLogDestinationLogtailOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationLogtailOutput {
	return o
}

func (o AppSpecServiceLogDestinationLogtailOutput) ToAppSpecServiceLogDestinationLogtailPtrOutput() AppSpecServiceLogDestinationLogtailPtrOutput {
	return o.ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceLogDestinationLogtailOutput) ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationLogtailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceLogDestinationLogtail) *AppSpecServiceLogDestinationLogtail {
		return &v
	}).(AppSpecServiceLogDestinationLogtailPtrOutput)
}

// Logtail token.
func (o AppSpecServiceLogDestinationLogtailOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceLogDestinationLogtail) string { return v.Token }).(pulumi.StringOutput)
}

type AppSpecServiceLogDestinationLogtailPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceLogDestinationLogtailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceLogDestinationLogtail)(nil)).Elem()
}

func (o AppSpecServiceLogDestinationLogtailPtrOutput) ToAppSpecServiceLogDestinationLogtailPtrOutput() AppSpecServiceLogDestinationLogtailPtrOutput {
	return o
}

func (o AppSpecServiceLogDestinationLogtailPtrOutput) ToAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationLogtailPtrOutput {
	return o
}

func (o AppSpecServiceLogDestinationLogtailPtrOutput) Elem() AppSpecServiceLogDestinationLogtailOutput {
	return o.ApplyT(func(v *AppSpecServiceLogDestinationLogtail) AppSpecServiceLogDestinationLogtail {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceLogDestinationLogtail
		return ret
	}).(AppSpecServiceLogDestinationLogtailOutput)
}

// Logtail token.
func (o AppSpecServiceLogDestinationLogtailPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceLogDestinationLogtail) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceLogDestinationPapertrail struct {
	// Datadog HTTP log intake endpoint.
	Endpoint string `pulumi:"endpoint"`
}

// AppSpecServiceLogDestinationPapertrailInput is an input type that accepts AppSpecServiceLogDestinationPapertrailArgs and AppSpecServiceLogDestinationPapertrailOutput values.
// You can construct a concrete instance of `AppSpecServiceLogDestinationPapertrailInput` via:
//
//          AppSpecServiceLogDestinationPapertrailArgs{...}
type AppSpecServiceLogDestinationPapertrailInput interface {
	pulumi.Input

	ToAppSpecServiceLogDestinationPapertrailOutput() AppSpecServiceLogDestinationPapertrailOutput
	ToAppSpecServiceLogDestinationPapertrailOutputWithContext(context.Context) AppSpecServiceLogDestinationPapertrailOutput
}

type AppSpecServiceLogDestinationPapertrailArgs struct {
	// Datadog HTTP log intake endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (AppSpecServiceLogDestinationPapertrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceLogDestinationPapertrail)(nil)).Elem()
}

func (i AppSpecServiceLogDestinationPapertrailArgs) ToAppSpecServiceLogDestinationPapertrailOutput() AppSpecServiceLogDestinationPapertrailOutput {
	return i.ToAppSpecServiceLogDestinationPapertrailOutputWithContext(context.Background())
}

func (i AppSpecServiceLogDestinationPapertrailArgs) ToAppSpecServiceLogDestinationPapertrailOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationPapertrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationPapertrailOutput)
}

func (i AppSpecServiceLogDestinationPapertrailArgs) ToAppSpecServiceLogDestinationPapertrailPtrOutput() AppSpecServiceLogDestinationPapertrailPtrOutput {
	return i.ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i AppSpecServiceLogDestinationPapertrailArgs) ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationPapertrailOutput).ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx)
}

// AppSpecServiceLogDestinationPapertrailPtrInput is an input type that accepts AppSpecServiceLogDestinationPapertrailArgs, AppSpecServiceLogDestinationPapertrailPtr and AppSpecServiceLogDestinationPapertrailPtrOutput values.
// You can construct a concrete instance of `AppSpecServiceLogDestinationPapertrailPtrInput` via:
//
//          AppSpecServiceLogDestinationPapertrailArgs{...}
//
//  or:
//
//          nil
type AppSpecServiceLogDestinationPapertrailPtrInput interface {
	pulumi.Input

	ToAppSpecServiceLogDestinationPapertrailPtrOutput() AppSpecServiceLogDestinationPapertrailPtrOutput
	ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(context.Context) AppSpecServiceLogDestinationPapertrailPtrOutput
}

type appSpecServiceLogDestinationPapertrailPtrType AppSpecServiceLogDestinationPapertrailArgs

func AppSpecServiceLogDestinationPapertrailPtr(v *AppSpecServiceLogDestinationPapertrailArgs) AppSpecServiceLogDestinationPapertrailPtrInput {
	return (*appSpecServiceLogDestinationPapertrailPtrType)(v)
}

func (*appSpecServiceLogDestinationPapertrailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceLogDestinationPapertrail)(nil)).Elem()
}

func (i *appSpecServiceLogDestinationPapertrailPtrType) ToAppSpecServiceLogDestinationPapertrailPtrOutput() AppSpecServiceLogDestinationPapertrailPtrOutput {
	return i.ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i *appSpecServiceLogDestinationPapertrailPtrType) ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceLogDestinationPapertrailPtrOutput)
}

type AppSpecServiceLogDestinationPapertrailOutput struct{ *pulumi.OutputState }

func (AppSpecServiceLogDestinationPapertrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceLogDestinationPapertrail)(nil)).Elem()
}

func (o AppSpecServiceLogDestinationPapertrailOutput) ToAppSpecServiceLogDestinationPapertrailOutput() AppSpecServiceLogDestinationPapertrailOutput {
	return o
}

func (o AppSpecServiceLogDestinationPapertrailOutput) ToAppSpecServiceLogDestinationPapertrailOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationPapertrailOutput {
	return o
}

func (o AppSpecServiceLogDestinationPapertrailOutput) ToAppSpecServiceLogDestinationPapertrailPtrOutput() AppSpecServiceLogDestinationPapertrailPtrOutput {
	return o.ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (o AppSpecServiceLogDestinationPapertrailOutput) ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationPapertrailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecServiceLogDestinationPapertrail) *AppSpecServiceLogDestinationPapertrail {
		return &v
	}).(AppSpecServiceLogDestinationPapertrailPtrOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecServiceLogDestinationPapertrailOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecServiceLogDestinationPapertrail) string { return v.Endpoint }).(pulumi.StringOutput)
}

type AppSpecServiceLogDestinationPapertrailPtrOutput struct{ *pulumi.OutputState }

func (AppSpecServiceLogDestinationPapertrailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecServiceLogDestinationPapertrail)(nil)).Elem()
}

func (o AppSpecServiceLogDestinationPapertrailPtrOutput) ToAppSpecServiceLogDestinationPapertrailPtrOutput() AppSpecServiceLogDestinationPapertrailPtrOutput {
	return o
}

func (o AppSpecServiceLogDestinationPapertrailPtrOutput) ToAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecServiceLogDestinationPapertrailPtrOutput {
	return o
}

func (o AppSpecServiceLogDestinationPapertrailPtrOutput) Elem() AppSpecServiceLogDestinationPapertrailOutput {
	return o.ApplyT(func(v *AppSpecServiceLogDestinationPapertrail) AppSpecServiceLogDestinationPapertrail {
		if v != nil {
			return *v
		}
		var ret AppSpecServiceLogDestinationPapertrail
		return ret
	}).(AppSpecServiceLogDestinationPapertrailOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecServiceLogDestinationPapertrailPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecServiceLogDestinationPapertrail) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type AppSpecServiceRoute struct {
	// Paths must start with `/` and must be unique within the app.
	Path *string `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `pulumi:"preservePathPrefix"`
}

// AppSpecServiceRouteInput is an input type that accepts AppSpecServiceRouteArgs and AppSpecServiceRouteOutput values.
// You can construct a concrete instance of `AppSpecServiceRouteInput` via:
//
//          AppSpecServiceRouteArgs{...}
type AppSpecServiceRouteInput interface {
	pulumi.Input

	ToAppSpecServiceRouteOutput() AppSpecServiceRouteOutput
	ToAppSpecServiceRouteOutputWithContext(context.Context) AppSpecServiceRouteOutput
}

type AppSpecServiceRouteArgs struct {
	// Paths must start with `/` and must be unique within the app.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix pulumi.BoolPtrInput `pulumi:"preservePathPrefix"`
}

func (AppSpecServiceRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceRoute)(nil)).Elem()
}

func (i AppSpecServiceRouteArgs) ToAppSpecServiceRouteOutput() AppSpecServiceRouteOutput {
	return i.ToAppSpecServiceRouteOutputWithContext(context.Background())
}

func (i AppSpecServiceRouteArgs) ToAppSpecServiceRouteOutputWithContext(ctx context.Context) AppSpecServiceRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceRouteOutput)
}

// AppSpecServiceRouteArrayInput is an input type that accepts AppSpecServiceRouteArray and AppSpecServiceRouteArrayOutput values.
// You can construct a concrete instance of `AppSpecServiceRouteArrayInput` via:
//
//          AppSpecServiceRouteArray{ AppSpecServiceRouteArgs{...} }
type AppSpecServiceRouteArrayInput interface {
	pulumi.Input

	ToAppSpecServiceRouteArrayOutput() AppSpecServiceRouteArrayOutput
	ToAppSpecServiceRouteArrayOutputWithContext(context.Context) AppSpecServiceRouteArrayOutput
}

type AppSpecServiceRouteArray []AppSpecServiceRouteInput

func (AppSpecServiceRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecServiceRoute)(nil)).Elem()
}

func (i AppSpecServiceRouteArray) ToAppSpecServiceRouteArrayOutput() AppSpecServiceRouteArrayOutput {
	return i.ToAppSpecServiceRouteArrayOutputWithContext(context.Background())
}

func (i AppSpecServiceRouteArray) ToAppSpecServiceRouteArrayOutputWithContext(ctx context.Context) AppSpecServiceRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecServiceRouteArrayOutput)
}

type AppSpecServiceRouteOutput struct{ *pulumi.OutputState }

func (AppSpecServiceRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecServiceRoute)(nil)).Elem()
}

func (o AppSpecServiceRouteOutput) ToAppSpecServiceRouteOutput() AppSpecServiceRouteOutput {
	return o
}

func (o AppSpecServiceRouteOutput) ToAppSpecServiceRouteOutputWithContext(ctx context.Context) AppSpecServiceRouteOutput {
	return o
}

// Paths must start with `/` and must be unique within the app.
func (o AppSpecServiceRouteOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecServiceRoute) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// An optional flag to preserve the path that is forwarded to the backend service.
func (o AppSpecServiceRouteOutput) PreservePathPrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecServiceRoute) *bool { return v.PreservePathPrefix }).(pulumi.BoolPtrOutput)
}

type AppSpecServiceRouteArrayOutput struct{ *pulumi.OutputState }

func (AppSpecServiceRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecServiceRoute)(nil)).Elem()
}

func (o AppSpecServiceRouteArrayOutput) ToAppSpecServiceRouteArrayOutput() AppSpecServiceRouteArrayOutput {
	return o
}

func (o AppSpecServiceRouteArrayOutput) ToAppSpecServiceRouteArrayOutputWithContext(ctx context.Context) AppSpecServiceRouteArrayOutput {
	return o
}

func (o AppSpecServiceRouteArrayOutput) Index(i pulumi.IntInput) AppSpecServiceRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecServiceRoute {
		return vs[0].([]AppSpecServiceRoute)[vs[1].(int)]
	}).(AppSpecServiceRouteOutput)
}

type AppSpecStaticSite struct {
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	CatchallDocument *string `pulumi:"catchallDocument"`
	// The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.
	Cors *AppSpecStaticSiteCors `pulumi:"cors"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs []AppSpecStaticSiteEnv `pulumi:"envs"`
	// The name of the error document to use when serving this static site.
	ErrorDocument *string `pulumi:"errorDocument"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
	Git *AppSpecStaticSiteGit `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github *AppSpecStaticSiteGithub `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab *AppSpecStaticSiteGitlab `pulumi:"gitlab"`
	// The name of the index document to use when serving this static site.
	IndexDocument *string `pulumi:"indexDocument"`
	// The name of the component.
	Name string `pulumi:"name"`
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
	OutputDir *string                  `pulumi:"outputDir"`
	Routes    []AppSpecStaticSiteRoute `pulumi:"routes"`
	// An optional path to the working directory to use for the build.
	SourceDir *string `pulumi:"sourceDir"`
}

// AppSpecStaticSiteInput is an input type that accepts AppSpecStaticSiteArgs and AppSpecStaticSiteOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteInput` via:
//
//          AppSpecStaticSiteArgs{...}
type AppSpecStaticSiteInput interface {
	pulumi.Input

	ToAppSpecStaticSiteOutput() AppSpecStaticSiteOutput
	ToAppSpecStaticSiteOutputWithContext(context.Context) AppSpecStaticSiteOutput
}

type AppSpecStaticSiteArgs struct {
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	CatchallDocument pulumi.StringPtrInput `pulumi:"catchallDocument"`
	// The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.
	Cors AppSpecStaticSiteCorsPtrInput `pulumi:"cors"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs AppSpecStaticSiteEnvArrayInput `pulumi:"envs"`
	// The name of the error document to use when serving this static site.
	ErrorDocument pulumi.StringPtrInput `pulumi:"errorDocument"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
	Git AppSpecStaticSiteGitPtrInput `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github AppSpecStaticSiteGithubPtrInput `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab AppSpecStaticSiteGitlabPtrInput `pulumi:"gitlab"`
	// The name of the index document to use when serving this static site.
	IndexDocument pulumi.StringPtrInput `pulumi:"indexDocument"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
	OutputDir pulumi.StringPtrInput            `pulumi:"outputDir"`
	Routes    AppSpecStaticSiteRouteArrayInput `pulumi:"routes"`
	// An optional path to the working directory to use for the build.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (AppSpecStaticSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSite)(nil)).Elem()
}

func (i AppSpecStaticSiteArgs) ToAppSpecStaticSiteOutput() AppSpecStaticSiteOutput {
	return i.ToAppSpecStaticSiteOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteArgs) ToAppSpecStaticSiteOutputWithContext(ctx context.Context) AppSpecStaticSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteOutput)
}

// AppSpecStaticSiteArrayInput is an input type that accepts AppSpecStaticSiteArray and AppSpecStaticSiteArrayOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteArrayInput` via:
//
//          AppSpecStaticSiteArray{ AppSpecStaticSiteArgs{...} }
type AppSpecStaticSiteArrayInput interface {
	pulumi.Input

	ToAppSpecStaticSiteArrayOutput() AppSpecStaticSiteArrayOutput
	ToAppSpecStaticSiteArrayOutputWithContext(context.Context) AppSpecStaticSiteArrayOutput
}

type AppSpecStaticSiteArray []AppSpecStaticSiteInput

func (AppSpecStaticSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecStaticSite)(nil)).Elem()
}

func (i AppSpecStaticSiteArray) ToAppSpecStaticSiteArrayOutput() AppSpecStaticSiteArrayOutput {
	return i.ToAppSpecStaticSiteArrayOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteArray) ToAppSpecStaticSiteArrayOutputWithContext(ctx context.Context) AppSpecStaticSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteArrayOutput)
}

type AppSpecStaticSiteOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSite)(nil)).Elem()
}

func (o AppSpecStaticSiteOutput) ToAppSpecStaticSiteOutput() AppSpecStaticSiteOutput {
	return o
}

func (o AppSpecStaticSiteOutput) ToAppSpecStaticSiteOutputWithContext(ctx context.Context) AppSpecStaticSiteOutput {
	return o
}

// An optional build command to run while building this component from source.
func (o AppSpecStaticSiteOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
func (o AppSpecStaticSiteOutput) CatchallDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *string { return v.CatchallDocument }).(pulumi.StringPtrOutput)
}

// The [CORS](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS) policies of the app.
func (o AppSpecStaticSiteOutput) Cors() AppSpecStaticSiteCorsPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *AppSpecStaticSiteCors { return v.Cors }).(AppSpecStaticSiteCorsPtrOutput)
}

// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
func (o AppSpecStaticSiteOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app.
func (o AppSpecStaticSiteOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// Describes an environment variable made available to an app competent.
func (o AppSpecStaticSiteOutput) Envs() AppSpecStaticSiteEnvArrayOutput {
	return o.ApplyT(func(v AppSpecStaticSite) []AppSpecStaticSiteEnv { return v.Envs }).(AppSpecStaticSiteEnvArrayOutput)
}

// The name of the error document to use when serving this static site.
func (o AppSpecStaticSiteOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
func (o AppSpecStaticSiteOutput) Git() AppSpecStaticSiteGitPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *AppSpecStaticSiteGit { return v.Git }).(AppSpecStaticSiteGitPtrOutput)
}

// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecStaticSiteOutput) Github() AppSpecStaticSiteGithubPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *AppSpecStaticSiteGithub { return v.Github }).(AppSpecStaticSiteGithubPtrOutput)
}

// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecStaticSiteOutput) Gitlab() AppSpecStaticSiteGitlabPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *AppSpecStaticSiteGitlab { return v.Gitlab }).(AppSpecStaticSiteGitlabPtrOutput)
}

// The name of the index document to use when serving this static site.
func (o AppSpecStaticSiteOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

// The name of the component.
func (o AppSpecStaticSiteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecStaticSite) string { return v.Name }).(pulumi.StringOutput)
}

// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
func (o AppSpecStaticSiteOutput) OutputDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *string { return v.OutputDir }).(pulumi.StringPtrOutput)
}

func (o AppSpecStaticSiteOutput) Routes() AppSpecStaticSiteRouteArrayOutput {
	return o.ApplyT(func(v AppSpecStaticSite) []AppSpecStaticSiteRoute { return v.Routes }).(AppSpecStaticSiteRouteArrayOutput)
}

// An optional path to the working directory to use for the build.
func (o AppSpecStaticSiteOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSite) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteArrayOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecStaticSite)(nil)).Elem()
}

func (o AppSpecStaticSiteArrayOutput) ToAppSpecStaticSiteArrayOutput() AppSpecStaticSiteArrayOutput {
	return o
}

func (o AppSpecStaticSiteArrayOutput) ToAppSpecStaticSiteArrayOutputWithContext(ctx context.Context) AppSpecStaticSiteArrayOutput {
	return o
}

func (o AppSpecStaticSiteArrayOutput) Index(i pulumi.IntInput) AppSpecStaticSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecStaticSite {
		return vs[0].([]AppSpecStaticSite)[vs[1].(int)]
	}).(AppSpecStaticSiteOutput)
}

type AppSpecStaticSiteCors struct {
	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.
	AllowCredentials *bool `pulumi:"allowCredentials"`
	// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
	AllowHeaders []string `pulumi:"allowHeaders"`
	// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
	AllowMethods []string `pulumi:"allowMethods"`
	// The `Access-Control-Allow-Origin` can be
	AllowOrigins *AppSpecStaticSiteCorsAllowOrigins `pulumi:"allowOrigins"`
	// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
	ExposeHeaders []string `pulumi:"exposeHeaders"`
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge *string `pulumi:"maxAge"`
}

// AppSpecStaticSiteCorsInput is an input type that accepts AppSpecStaticSiteCorsArgs and AppSpecStaticSiteCorsOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteCorsInput` via:
//
//          AppSpecStaticSiteCorsArgs{...}
type AppSpecStaticSiteCorsInput interface {
	pulumi.Input

	ToAppSpecStaticSiteCorsOutput() AppSpecStaticSiteCorsOutput
	ToAppSpecStaticSiteCorsOutputWithContext(context.Context) AppSpecStaticSiteCorsOutput
}

type AppSpecStaticSiteCorsArgs struct {
	// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.
	AllowCredentials pulumi.BoolPtrInput `pulumi:"allowCredentials"`
	// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
	AllowHeaders pulumi.StringArrayInput `pulumi:"allowHeaders"`
	// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
	AllowMethods pulumi.StringArrayInput `pulumi:"allowMethods"`
	// The `Access-Control-Allow-Origin` can be
	AllowOrigins AppSpecStaticSiteCorsAllowOriginsPtrInput `pulumi:"allowOrigins"`
	// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
	ExposeHeaders pulumi.StringArrayInput `pulumi:"exposeHeaders"`
	// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
	MaxAge pulumi.StringPtrInput `pulumi:"maxAge"`
}

func (AppSpecStaticSiteCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteCors)(nil)).Elem()
}

func (i AppSpecStaticSiteCorsArgs) ToAppSpecStaticSiteCorsOutput() AppSpecStaticSiteCorsOutput {
	return i.ToAppSpecStaticSiteCorsOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteCorsArgs) ToAppSpecStaticSiteCorsOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteCorsOutput)
}

func (i AppSpecStaticSiteCorsArgs) ToAppSpecStaticSiteCorsPtrOutput() AppSpecStaticSiteCorsPtrOutput {
	return i.ToAppSpecStaticSiteCorsPtrOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteCorsArgs) ToAppSpecStaticSiteCorsPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteCorsOutput).ToAppSpecStaticSiteCorsPtrOutputWithContext(ctx)
}

// AppSpecStaticSiteCorsPtrInput is an input type that accepts AppSpecStaticSiteCorsArgs, AppSpecStaticSiteCorsPtr and AppSpecStaticSiteCorsPtrOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteCorsPtrInput` via:
//
//          AppSpecStaticSiteCorsArgs{...}
//
//  or:
//
//          nil
type AppSpecStaticSiteCorsPtrInput interface {
	pulumi.Input

	ToAppSpecStaticSiteCorsPtrOutput() AppSpecStaticSiteCorsPtrOutput
	ToAppSpecStaticSiteCorsPtrOutputWithContext(context.Context) AppSpecStaticSiteCorsPtrOutput
}

type appSpecStaticSiteCorsPtrType AppSpecStaticSiteCorsArgs

func AppSpecStaticSiteCorsPtr(v *AppSpecStaticSiteCorsArgs) AppSpecStaticSiteCorsPtrInput {
	return (*appSpecStaticSiteCorsPtrType)(v)
}

func (*appSpecStaticSiteCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteCors)(nil)).Elem()
}

func (i *appSpecStaticSiteCorsPtrType) ToAppSpecStaticSiteCorsPtrOutput() AppSpecStaticSiteCorsPtrOutput {
	return i.ToAppSpecStaticSiteCorsPtrOutputWithContext(context.Background())
}

func (i *appSpecStaticSiteCorsPtrType) ToAppSpecStaticSiteCorsPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteCorsPtrOutput)
}

type AppSpecStaticSiteCorsOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteCors)(nil)).Elem()
}

func (o AppSpecStaticSiteCorsOutput) ToAppSpecStaticSiteCorsOutput() AppSpecStaticSiteCorsOutput {
	return o
}

func (o AppSpecStaticSiteCorsOutput) ToAppSpecStaticSiteCorsOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsOutput {
	return o
}

func (o AppSpecStaticSiteCorsOutput) ToAppSpecStaticSiteCorsPtrOutput() AppSpecStaticSiteCorsPtrOutput {
	return o.ToAppSpecStaticSiteCorsPtrOutputWithContext(context.Background())
}

func (o AppSpecStaticSiteCorsOutput) ToAppSpecStaticSiteCorsPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecStaticSiteCors) *AppSpecStaticSiteCors {
		return &v
	}).(AppSpecStaticSiteCorsPtrOutput)
}

// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.
func (o AppSpecStaticSiteCorsOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCors) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
func (o AppSpecStaticSiteCorsOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCors) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
func (o AppSpecStaticSiteCorsOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCors) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

// The `Access-Control-Allow-Origin` can be
func (o AppSpecStaticSiteCorsOutput) AllowOrigins() AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCors) *AppSpecStaticSiteCorsAllowOrigins { return v.AllowOrigins }).(AppSpecStaticSiteCorsAllowOriginsPtrOutput)
}

// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
func (o AppSpecStaticSiteCorsOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCors) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
func (o AppSpecStaticSiteCorsOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCors) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteCorsPtrOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteCors)(nil)).Elem()
}

func (o AppSpecStaticSiteCorsPtrOutput) ToAppSpecStaticSiteCorsPtrOutput() AppSpecStaticSiteCorsPtrOutput {
	return o
}

func (o AppSpecStaticSiteCorsPtrOutput) ToAppSpecStaticSiteCorsPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsPtrOutput {
	return o
}

func (o AppSpecStaticSiteCorsPtrOutput) Elem() AppSpecStaticSiteCorsOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCors) AppSpecStaticSiteCors {
		if v != nil {
			return *v
		}
		var ret AppSpecStaticSiteCors
		return ret
	}).(AppSpecStaticSiteCorsOutput)
}

// Whether browsers should expose the response to the client-side JavaScript code when the request's credentials mode is `include`. This configures the `Access-Control-Allow-Credentials` header.
func (o AppSpecStaticSiteCorsPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCors) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

// The set of allowed HTTP request headers. This configures the `Access-Control-Allow-Headers` header.
func (o AppSpecStaticSiteCorsPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

// The set of allowed HTTP methods. This configures the `Access-Control-Allow-Methods` header.
func (o AppSpecStaticSiteCorsPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

// The `Access-Control-Allow-Origin` can be
func (o AppSpecStaticSiteCorsPtrOutput) AllowOrigins() AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCors) *AppSpecStaticSiteCorsAllowOrigins {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(AppSpecStaticSiteCorsAllowOriginsPtrOutput)
}

// The set of HTTP response headers that browsers are allowed to access. This configures the `Access-Control-Expose-Headers` header.
func (o AppSpecStaticSiteCorsPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCors) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

// An optional duration specifying how long browsers can cache the results of a preflight request. This configures the Access-Control-Max-Age header. Example: `5h30m`.
func (o AppSpecStaticSiteCorsPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCors) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteCorsAllowOrigins struct {
	// The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	Exact *string `pulumi:"exact"`
	// The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.
	Prefix *string `pulumi:"prefix"`
	// The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).
	Regex *string `pulumi:"regex"`
}

// AppSpecStaticSiteCorsAllowOriginsInput is an input type that accepts AppSpecStaticSiteCorsAllowOriginsArgs and AppSpecStaticSiteCorsAllowOriginsOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteCorsAllowOriginsInput` via:
//
//          AppSpecStaticSiteCorsAllowOriginsArgs{...}
type AppSpecStaticSiteCorsAllowOriginsInput interface {
	pulumi.Input

	ToAppSpecStaticSiteCorsAllowOriginsOutput() AppSpecStaticSiteCorsAllowOriginsOutput
	ToAppSpecStaticSiteCorsAllowOriginsOutputWithContext(context.Context) AppSpecStaticSiteCorsAllowOriginsOutput
}

type AppSpecStaticSiteCorsAllowOriginsArgs struct {
	// The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.
	Exact pulumi.StringPtrInput `pulumi:"exact"`
	// The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	// The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).
	Regex pulumi.StringPtrInput `pulumi:"regex"`
}

func (AppSpecStaticSiteCorsAllowOriginsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteCorsAllowOrigins)(nil)).Elem()
}

func (i AppSpecStaticSiteCorsAllowOriginsArgs) ToAppSpecStaticSiteCorsAllowOriginsOutput() AppSpecStaticSiteCorsAllowOriginsOutput {
	return i.ToAppSpecStaticSiteCorsAllowOriginsOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteCorsAllowOriginsArgs) ToAppSpecStaticSiteCorsAllowOriginsOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsAllowOriginsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteCorsAllowOriginsOutput)
}

func (i AppSpecStaticSiteCorsAllowOriginsArgs) ToAppSpecStaticSiteCorsAllowOriginsPtrOutput() AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return i.ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteCorsAllowOriginsArgs) ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteCorsAllowOriginsOutput).ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx)
}

// AppSpecStaticSiteCorsAllowOriginsPtrInput is an input type that accepts AppSpecStaticSiteCorsAllowOriginsArgs, AppSpecStaticSiteCorsAllowOriginsPtr and AppSpecStaticSiteCorsAllowOriginsPtrOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteCorsAllowOriginsPtrInput` via:
//
//          AppSpecStaticSiteCorsAllowOriginsArgs{...}
//
//  or:
//
//          nil
type AppSpecStaticSiteCorsAllowOriginsPtrInput interface {
	pulumi.Input

	ToAppSpecStaticSiteCorsAllowOriginsPtrOutput() AppSpecStaticSiteCorsAllowOriginsPtrOutput
	ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(context.Context) AppSpecStaticSiteCorsAllowOriginsPtrOutput
}

type appSpecStaticSiteCorsAllowOriginsPtrType AppSpecStaticSiteCorsAllowOriginsArgs

func AppSpecStaticSiteCorsAllowOriginsPtr(v *AppSpecStaticSiteCorsAllowOriginsArgs) AppSpecStaticSiteCorsAllowOriginsPtrInput {
	return (*appSpecStaticSiteCorsAllowOriginsPtrType)(v)
}

func (*appSpecStaticSiteCorsAllowOriginsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteCorsAllowOrigins)(nil)).Elem()
}

func (i *appSpecStaticSiteCorsAllowOriginsPtrType) ToAppSpecStaticSiteCorsAllowOriginsPtrOutput() AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return i.ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (i *appSpecStaticSiteCorsAllowOriginsPtrType) ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteCorsAllowOriginsPtrOutput)
}

type AppSpecStaticSiteCorsAllowOriginsOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteCorsAllowOriginsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteCorsAllowOrigins)(nil)).Elem()
}

func (o AppSpecStaticSiteCorsAllowOriginsOutput) ToAppSpecStaticSiteCorsAllowOriginsOutput() AppSpecStaticSiteCorsAllowOriginsOutput {
	return o
}

func (o AppSpecStaticSiteCorsAllowOriginsOutput) ToAppSpecStaticSiteCorsAllowOriginsOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsAllowOriginsOutput {
	return o
}

func (o AppSpecStaticSiteCorsAllowOriginsOutput) ToAppSpecStaticSiteCorsAllowOriginsPtrOutput() AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o.ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (o AppSpecStaticSiteCorsAllowOriginsOutput) ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecStaticSiteCorsAllowOrigins) *AppSpecStaticSiteCorsAllowOrigins {
		return &v
	}).(AppSpecStaticSiteCorsAllowOriginsPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.
func (o AppSpecStaticSiteCorsAllowOriginsOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCorsAllowOrigins) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.
func (o AppSpecStaticSiteCorsAllowOriginsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCorsAllowOrigins) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).
func (o AppSpecStaticSiteCorsAllowOriginsOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteCorsAllowOrigins) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteCorsAllowOriginsPtrOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteCorsAllowOriginsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteCorsAllowOrigins)(nil)).Elem()
}

func (o AppSpecStaticSiteCorsAllowOriginsPtrOutput) ToAppSpecStaticSiteCorsAllowOriginsPtrOutput() AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o
}

func (o AppSpecStaticSiteCorsAllowOriginsPtrOutput) ToAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o
}

func (o AppSpecStaticSiteCorsAllowOriginsPtrOutput) Elem() AppSpecStaticSiteCorsAllowOriginsOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCorsAllowOrigins) AppSpecStaticSiteCorsAllowOrigins {
		if v != nil {
			return *v
		}
		var ret AppSpecStaticSiteCorsAllowOrigins
		return ret
	}).(AppSpecStaticSiteCorsAllowOriginsOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin only if the client's origin exactly matches the value you provide.
func (o AppSpecStaticSiteCorsAllowOriginsPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin if the beginning of the client's origin matches the value you provide.
func (o AppSpecStaticSiteCorsAllowOriginsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

// The `Access-Control-Allow-Origin` header will be set to the client's origin if the client’s origin matches the regex you provide, in [RE2 style syntax](https://github.com/google/re2/wiki/Syntax).
func (o AppSpecStaticSiteCorsAllowOriginsPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type *string `pulumi:"type"`
	// The threshold for the type of the warning.
	Value *string `pulumi:"value"`
}

// AppSpecStaticSiteEnvInput is an input type that accepts AppSpecStaticSiteEnvArgs and AppSpecStaticSiteEnvOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteEnvInput` via:
//
//          AppSpecStaticSiteEnvArgs{...}
type AppSpecStaticSiteEnvInput interface {
	pulumi.Input

	ToAppSpecStaticSiteEnvOutput() AppSpecStaticSiteEnvOutput
	ToAppSpecStaticSiteEnvOutputWithContext(context.Context) AppSpecStaticSiteEnvOutput
}

type AppSpecStaticSiteEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The threshold for the type of the warning.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AppSpecStaticSiteEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteEnv)(nil)).Elem()
}

func (i AppSpecStaticSiteEnvArgs) ToAppSpecStaticSiteEnvOutput() AppSpecStaticSiteEnvOutput {
	return i.ToAppSpecStaticSiteEnvOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteEnvArgs) ToAppSpecStaticSiteEnvOutputWithContext(ctx context.Context) AppSpecStaticSiteEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteEnvOutput)
}

// AppSpecStaticSiteEnvArrayInput is an input type that accepts AppSpecStaticSiteEnvArray and AppSpecStaticSiteEnvArrayOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteEnvArrayInput` via:
//
//          AppSpecStaticSiteEnvArray{ AppSpecStaticSiteEnvArgs{...} }
type AppSpecStaticSiteEnvArrayInput interface {
	pulumi.Input

	ToAppSpecStaticSiteEnvArrayOutput() AppSpecStaticSiteEnvArrayOutput
	ToAppSpecStaticSiteEnvArrayOutputWithContext(context.Context) AppSpecStaticSiteEnvArrayOutput
}

type AppSpecStaticSiteEnvArray []AppSpecStaticSiteEnvInput

func (AppSpecStaticSiteEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecStaticSiteEnv)(nil)).Elem()
}

func (i AppSpecStaticSiteEnvArray) ToAppSpecStaticSiteEnvArrayOutput() AppSpecStaticSiteEnvArrayOutput {
	return i.ToAppSpecStaticSiteEnvArrayOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteEnvArray) ToAppSpecStaticSiteEnvArrayOutputWithContext(ctx context.Context) AppSpecStaticSiteEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteEnvArrayOutput)
}

type AppSpecStaticSiteEnvOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteEnv)(nil)).Elem()
}

func (o AppSpecStaticSiteEnvOutput) ToAppSpecStaticSiteEnvOutput() AppSpecStaticSiteEnvOutput {
	return o
}

func (o AppSpecStaticSiteEnvOutput) ToAppSpecStaticSiteEnvOutputWithContext(ctx context.Context) AppSpecStaticSiteEnvOutput {
	return o
}

// The name of the environment variable.
func (o AppSpecStaticSiteEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o AppSpecStaticSiteEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o AppSpecStaticSiteEnvOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteEnv) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The threshold for the type of the warning.
func (o AppSpecStaticSiteEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteEnvArrayOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecStaticSiteEnv)(nil)).Elem()
}

func (o AppSpecStaticSiteEnvArrayOutput) ToAppSpecStaticSiteEnvArrayOutput() AppSpecStaticSiteEnvArrayOutput {
	return o
}

func (o AppSpecStaticSiteEnvArrayOutput) ToAppSpecStaticSiteEnvArrayOutputWithContext(ctx context.Context) AppSpecStaticSiteEnvArrayOutput {
	return o
}

func (o AppSpecStaticSiteEnvArrayOutput) Index(i pulumi.IntInput) AppSpecStaticSiteEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecStaticSiteEnv {
		return vs[0].([]AppSpecStaticSiteEnv)[vs[1].(int)]
	}).(AppSpecStaticSiteEnvOutput)
}

type AppSpecStaticSiteGit struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// AppSpecStaticSiteGitInput is an input type that accepts AppSpecStaticSiteGitArgs and AppSpecStaticSiteGitOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteGitInput` via:
//
//          AppSpecStaticSiteGitArgs{...}
type AppSpecStaticSiteGitInput interface {
	pulumi.Input

	ToAppSpecStaticSiteGitOutput() AppSpecStaticSiteGitOutput
	ToAppSpecStaticSiteGitOutputWithContext(context.Context) AppSpecStaticSiteGitOutput
}

type AppSpecStaticSiteGitArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (AppSpecStaticSiteGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteGit)(nil)).Elem()
}

func (i AppSpecStaticSiteGitArgs) ToAppSpecStaticSiteGitOutput() AppSpecStaticSiteGitOutput {
	return i.ToAppSpecStaticSiteGitOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteGitArgs) ToAppSpecStaticSiteGitOutputWithContext(ctx context.Context) AppSpecStaticSiteGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGitOutput)
}

func (i AppSpecStaticSiteGitArgs) ToAppSpecStaticSiteGitPtrOutput() AppSpecStaticSiteGitPtrOutput {
	return i.ToAppSpecStaticSiteGitPtrOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteGitArgs) ToAppSpecStaticSiteGitPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGitOutput).ToAppSpecStaticSiteGitPtrOutputWithContext(ctx)
}

// AppSpecStaticSiteGitPtrInput is an input type that accepts AppSpecStaticSiteGitArgs, AppSpecStaticSiteGitPtr and AppSpecStaticSiteGitPtrOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteGitPtrInput` via:
//
//          AppSpecStaticSiteGitArgs{...}
//
//  or:
//
//          nil
type AppSpecStaticSiteGitPtrInput interface {
	pulumi.Input

	ToAppSpecStaticSiteGitPtrOutput() AppSpecStaticSiteGitPtrOutput
	ToAppSpecStaticSiteGitPtrOutputWithContext(context.Context) AppSpecStaticSiteGitPtrOutput
}

type appSpecStaticSiteGitPtrType AppSpecStaticSiteGitArgs

func AppSpecStaticSiteGitPtr(v *AppSpecStaticSiteGitArgs) AppSpecStaticSiteGitPtrInput {
	return (*appSpecStaticSiteGitPtrType)(v)
}

func (*appSpecStaticSiteGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteGit)(nil)).Elem()
}

func (i *appSpecStaticSiteGitPtrType) ToAppSpecStaticSiteGitPtrOutput() AppSpecStaticSiteGitPtrOutput {
	return i.ToAppSpecStaticSiteGitPtrOutputWithContext(context.Background())
}

func (i *appSpecStaticSiteGitPtrType) ToAppSpecStaticSiteGitPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGitPtrOutput)
}

type AppSpecStaticSiteGitOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteGit)(nil)).Elem()
}

func (o AppSpecStaticSiteGitOutput) ToAppSpecStaticSiteGitOutput() AppSpecStaticSiteGitOutput {
	return o
}

func (o AppSpecStaticSiteGitOutput) ToAppSpecStaticSiteGitOutputWithContext(ctx context.Context) AppSpecStaticSiteGitOutput {
	return o
}

func (o AppSpecStaticSiteGitOutput) ToAppSpecStaticSiteGitPtrOutput() AppSpecStaticSiteGitPtrOutput {
	return o.ToAppSpecStaticSiteGitPtrOutputWithContext(context.Background())
}

func (o AppSpecStaticSiteGitOutput) ToAppSpecStaticSiteGitPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecStaticSiteGit) *AppSpecStaticSiteGit {
		return &v
	}).(AppSpecStaticSiteGitPtrOutput)
}

// The name of the branch to use.
func (o AppSpecStaticSiteGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o AppSpecStaticSiteGitOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteGit) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteGitPtrOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteGit)(nil)).Elem()
}

func (o AppSpecStaticSiteGitPtrOutput) ToAppSpecStaticSiteGitPtrOutput() AppSpecStaticSiteGitPtrOutput {
	return o
}

func (o AppSpecStaticSiteGitPtrOutput) ToAppSpecStaticSiteGitPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGitPtrOutput {
	return o
}

func (o AppSpecStaticSiteGitPtrOutput) Elem() AppSpecStaticSiteGitOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGit) AppSpecStaticSiteGit {
		if v != nil {
			return *v
		}
		var ret AppSpecStaticSiteGit
		return ret
	}).(AppSpecStaticSiteGitOutput)
}

// The name of the branch to use.
func (o AppSpecStaticSiteGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o AppSpecStaticSiteGitPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteGithub struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// AppSpecStaticSiteGithubInput is an input type that accepts AppSpecStaticSiteGithubArgs and AppSpecStaticSiteGithubOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteGithubInput` via:
//
//          AppSpecStaticSiteGithubArgs{...}
type AppSpecStaticSiteGithubInput interface {
	pulumi.Input

	ToAppSpecStaticSiteGithubOutput() AppSpecStaticSiteGithubOutput
	ToAppSpecStaticSiteGithubOutputWithContext(context.Context) AppSpecStaticSiteGithubOutput
}

type AppSpecStaticSiteGithubArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppSpecStaticSiteGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteGithub)(nil)).Elem()
}

func (i AppSpecStaticSiteGithubArgs) ToAppSpecStaticSiteGithubOutput() AppSpecStaticSiteGithubOutput {
	return i.ToAppSpecStaticSiteGithubOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteGithubArgs) ToAppSpecStaticSiteGithubOutputWithContext(ctx context.Context) AppSpecStaticSiteGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGithubOutput)
}

func (i AppSpecStaticSiteGithubArgs) ToAppSpecStaticSiteGithubPtrOutput() AppSpecStaticSiteGithubPtrOutput {
	return i.ToAppSpecStaticSiteGithubPtrOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteGithubArgs) ToAppSpecStaticSiteGithubPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGithubOutput).ToAppSpecStaticSiteGithubPtrOutputWithContext(ctx)
}

// AppSpecStaticSiteGithubPtrInput is an input type that accepts AppSpecStaticSiteGithubArgs, AppSpecStaticSiteGithubPtr and AppSpecStaticSiteGithubPtrOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteGithubPtrInput` via:
//
//          AppSpecStaticSiteGithubArgs{...}
//
//  or:
//
//          nil
type AppSpecStaticSiteGithubPtrInput interface {
	pulumi.Input

	ToAppSpecStaticSiteGithubPtrOutput() AppSpecStaticSiteGithubPtrOutput
	ToAppSpecStaticSiteGithubPtrOutputWithContext(context.Context) AppSpecStaticSiteGithubPtrOutput
}

type appSpecStaticSiteGithubPtrType AppSpecStaticSiteGithubArgs

func AppSpecStaticSiteGithubPtr(v *AppSpecStaticSiteGithubArgs) AppSpecStaticSiteGithubPtrInput {
	return (*appSpecStaticSiteGithubPtrType)(v)
}

func (*appSpecStaticSiteGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteGithub)(nil)).Elem()
}

func (i *appSpecStaticSiteGithubPtrType) ToAppSpecStaticSiteGithubPtrOutput() AppSpecStaticSiteGithubPtrOutput {
	return i.ToAppSpecStaticSiteGithubPtrOutputWithContext(context.Background())
}

func (i *appSpecStaticSiteGithubPtrType) ToAppSpecStaticSiteGithubPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGithubPtrOutput)
}

type AppSpecStaticSiteGithubOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteGithub)(nil)).Elem()
}

func (o AppSpecStaticSiteGithubOutput) ToAppSpecStaticSiteGithubOutput() AppSpecStaticSiteGithubOutput {
	return o
}

func (o AppSpecStaticSiteGithubOutput) ToAppSpecStaticSiteGithubOutputWithContext(ctx context.Context) AppSpecStaticSiteGithubOutput {
	return o
}

func (o AppSpecStaticSiteGithubOutput) ToAppSpecStaticSiteGithubPtrOutput() AppSpecStaticSiteGithubPtrOutput {
	return o.ToAppSpecStaticSiteGithubPtrOutputWithContext(context.Background())
}

func (o AppSpecStaticSiteGithubOutput) ToAppSpecStaticSiteGithubPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecStaticSiteGithub) *AppSpecStaticSiteGithub {
		return &v
	}).(AppSpecStaticSiteGithubPtrOutput)
}

// The name of the branch to use.
func (o AppSpecStaticSiteGithubOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteGithub) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecStaticSiteGithubOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteGithub) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecStaticSiteGithubOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteGithub) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteGithubPtrOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteGithub)(nil)).Elem()
}

func (o AppSpecStaticSiteGithubPtrOutput) ToAppSpecStaticSiteGithubPtrOutput() AppSpecStaticSiteGithubPtrOutput {
	return o
}

func (o AppSpecStaticSiteGithubPtrOutput) ToAppSpecStaticSiteGithubPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGithubPtrOutput {
	return o
}

func (o AppSpecStaticSiteGithubPtrOutput) Elem() AppSpecStaticSiteGithubOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGithub) AppSpecStaticSiteGithub {
		if v != nil {
			return *v
		}
		var ret AppSpecStaticSiteGithub
		return ret
	}).(AppSpecStaticSiteGithubOutput)
}

// The name of the branch to use.
func (o AppSpecStaticSiteGithubPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGithub) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecStaticSiteGithubPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecStaticSiteGithubPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteGitlab struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// AppSpecStaticSiteGitlabInput is an input type that accepts AppSpecStaticSiteGitlabArgs and AppSpecStaticSiteGitlabOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteGitlabInput` via:
//
//          AppSpecStaticSiteGitlabArgs{...}
type AppSpecStaticSiteGitlabInput interface {
	pulumi.Input

	ToAppSpecStaticSiteGitlabOutput() AppSpecStaticSiteGitlabOutput
	ToAppSpecStaticSiteGitlabOutputWithContext(context.Context) AppSpecStaticSiteGitlabOutput
}

type AppSpecStaticSiteGitlabArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppSpecStaticSiteGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteGitlab)(nil)).Elem()
}

func (i AppSpecStaticSiteGitlabArgs) ToAppSpecStaticSiteGitlabOutput() AppSpecStaticSiteGitlabOutput {
	return i.ToAppSpecStaticSiteGitlabOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteGitlabArgs) ToAppSpecStaticSiteGitlabOutputWithContext(ctx context.Context) AppSpecStaticSiteGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGitlabOutput)
}

func (i AppSpecStaticSiteGitlabArgs) ToAppSpecStaticSiteGitlabPtrOutput() AppSpecStaticSiteGitlabPtrOutput {
	return i.ToAppSpecStaticSiteGitlabPtrOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteGitlabArgs) ToAppSpecStaticSiteGitlabPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGitlabOutput).ToAppSpecStaticSiteGitlabPtrOutputWithContext(ctx)
}

// AppSpecStaticSiteGitlabPtrInput is an input type that accepts AppSpecStaticSiteGitlabArgs, AppSpecStaticSiteGitlabPtr and AppSpecStaticSiteGitlabPtrOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteGitlabPtrInput` via:
//
//          AppSpecStaticSiteGitlabArgs{...}
//
//  or:
//
//          nil
type AppSpecStaticSiteGitlabPtrInput interface {
	pulumi.Input

	ToAppSpecStaticSiteGitlabPtrOutput() AppSpecStaticSiteGitlabPtrOutput
	ToAppSpecStaticSiteGitlabPtrOutputWithContext(context.Context) AppSpecStaticSiteGitlabPtrOutput
}

type appSpecStaticSiteGitlabPtrType AppSpecStaticSiteGitlabArgs

func AppSpecStaticSiteGitlabPtr(v *AppSpecStaticSiteGitlabArgs) AppSpecStaticSiteGitlabPtrInput {
	return (*appSpecStaticSiteGitlabPtrType)(v)
}

func (*appSpecStaticSiteGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteGitlab)(nil)).Elem()
}

func (i *appSpecStaticSiteGitlabPtrType) ToAppSpecStaticSiteGitlabPtrOutput() AppSpecStaticSiteGitlabPtrOutput {
	return i.ToAppSpecStaticSiteGitlabPtrOutputWithContext(context.Background())
}

func (i *appSpecStaticSiteGitlabPtrType) ToAppSpecStaticSiteGitlabPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteGitlabPtrOutput)
}

type AppSpecStaticSiteGitlabOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteGitlab)(nil)).Elem()
}

func (o AppSpecStaticSiteGitlabOutput) ToAppSpecStaticSiteGitlabOutput() AppSpecStaticSiteGitlabOutput {
	return o
}

func (o AppSpecStaticSiteGitlabOutput) ToAppSpecStaticSiteGitlabOutputWithContext(ctx context.Context) AppSpecStaticSiteGitlabOutput {
	return o
}

func (o AppSpecStaticSiteGitlabOutput) ToAppSpecStaticSiteGitlabPtrOutput() AppSpecStaticSiteGitlabPtrOutput {
	return o.ToAppSpecStaticSiteGitlabPtrOutputWithContext(context.Background())
}

func (o AppSpecStaticSiteGitlabOutput) ToAppSpecStaticSiteGitlabPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecStaticSiteGitlab) *AppSpecStaticSiteGitlab {
		return &v
	}).(AppSpecStaticSiteGitlabPtrOutput)
}

// The name of the branch to use.
func (o AppSpecStaticSiteGitlabOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteGitlab) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecStaticSiteGitlabOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteGitlab) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecStaticSiteGitlabOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteGitlab) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteGitlabPtrOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecStaticSiteGitlab)(nil)).Elem()
}

func (o AppSpecStaticSiteGitlabPtrOutput) ToAppSpecStaticSiteGitlabPtrOutput() AppSpecStaticSiteGitlabPtrOutput {
	return o
}

func (o AppSpecStaticSiteGitlabPtrOutput) ToAppSpecStaticSiteGitlabPtrOutputWithContext(ctx context.Context) AppSpecStaticSiteGitlabPtrOutput {
	return o
}

func (o AppSpecStaticSiteGitlabPtrOutput) Elem() AppSpecStaticSiteGitlabOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGitlab) AppSpecStaticSiteGitlab {
		if v != nil {
			return *v
		}
		var ret AppSpecStaticSiteGitlab
		return ret
	}).(AppSpecStaticSiteGitlabOutput)
}

// The name of the branch to use.
func (o AppSpecStaticSiteGitlabPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecStaticSiteGitlabPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecStaticSiteGitlabPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecStaticSiteGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppSpecStaticSiteRoute struct {
	// Paths must start with `/` and must be unique within the app.
	Path *string `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `pulumi:"preservePathPrefix"`
}

// AppSpecStaticSiteRouteInput is an input type that accepts AppSpecStaticSiteRouteArgs and AppSpecStaticSiteRouteOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteRouteInput` via:
//
//          AppSpecStaticSiteRouteArgs{...}
type AppSpecStaticSiteRouteInput interface {
	pulumi.Input

	ToAppSpecStaticSiteRouteOutput() AppSpecStaticSiteRouteOutput
	ToAppSpecStaticSiteRouteOutputWithContext(context.Context) AppSpecStaticSiteRouteOutput
}

type AppSpecStaticSiteRouteArgs struct {
	// Paths must start with `/` and must be unique within the app.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix pulumi.BoolPtrInput `pulumi:"preservePathPrefix"`
}

func (AppSpecStaticSiteRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteRoute)(nil)).Elem()
}

func (i AppSpecStaticSiteRouteArgs) ToAppSpecStaticSiteRouteOutput() AppSpecStaticSiteRouteOutput {
	return i.ToAppSpecStaticSiteRouteOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteRouteArgs) ToAppSpecStaticSiteRouteOutputWithContext(ctx context.Context) AppSpecStaticSiteRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteRouteOutput)
}

// AppSpecStaticSiteRouteArrayInput is an input type that accepts AppSpecStaticSiteRouteArray and AppSpecStaticSiteRouteArrayOutput values.
// You can construct a concrete instance of `AppSpecStaticSiteRouteArrayInput` via:
//
//          AppSpecStaticSiteRouteArray{ AppSpecStaticSiteRouteArgs{...} }
type AppSpecStaticSiteRouteArrayInput interface {
	pulumi.Input

	ToAppSpecStaticSiteRouteArrayOutput() AppSpecStaticSiteRouteArrayOutput
	ToAppSpecStaticSiteRouteArrayOutputWithContext(context.Context) AppSpecStaticSiteRouteArrayOutput
}

type AppSpecStaticSiteRouteArray []AppSpecStaticSiteRouteInput

func (AppSpecStaticSiteRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecStaticSiteRoute)(nil)).Elem()
}

func (i AppSpecStaticSiteRouteArray) ToAppSpecStaticSiteRouteArrayOutput() AppSpecStaticSiteRouteArrayOutput {
	return i.ToAppSpecStaticSiteRouteArrayOutputWithContext(context.Background())
}

func (i AppSpecStaticSiteRouteArray) ToAppSpecStaticSiteRouteArrayOutputWithContext(ctx context.Context) AppSpecStaticSiteRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecStaticSiteRouteArrayOutput)
}

type AppSpecStaticSiteRouteOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecStaticSiteRoute)(nil)).Elem()
}

func (o AppSpecStaticSiteRouteOutput) ToAppSpecStaticSiteRouteOutput() AppSpecStaticSiteRouteOutput {
	return o
}

func (o AppSpecStaticSiteRouteOutput) ToAppSpecStaticSiteRouteOutputWithContext(ctx context.Context) AppSpecStaticSiteRouteOutput {
	return o
}

// Paths must start with `/` and must be unique within the app.
func (o AppSpecStaticSiteRouteOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteRoute) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// An optional flag to preserve the path that is forwarded to the backend service.
func (o AppSpecStaticSiteRouteOutput) PreservePathPrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecStaticSiteRoute) *bool { return v.PreservePathPrefix }).(pulumi.BoolPtrOutput)
}

type AppSpecStaticSiteRouteArrayOutput struct{ *pulumi.OutputState }

func (AppSpecStaticSiteRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecStaticSiteRoute)(nil)).Elem()
}

func (o AppSpecStaticSiteRouteArrayOutput) ToAppSpecStaticSiteRouteArrayOutput() AppSpecStaticSiteRouteArrayOutput {
	return o
}

func (o AppSpecStaticSiteRouteArrayOutput) ToAppSpecStaticSiteRouteArrayOutputWithContext(ctx context.Context) AppSpecStaticSiteRouteArrayOutput {
	return o
}

func (o AppSpecStaticSiteRouteArrayOutput) Index(i pulumi.IntInput) AppSpecStaticSiteRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecStaticSiteRoute {
		return vs[0].([]AppSpecStaticSiteRoute)[vs[1].(int)]
	}).(AppSpecStaticSiteRouteOutput)
}

type AppSpecWorker struct {
	// Describes an alert policy for the component.
	Alerts []AppSpecWorkerAlert `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs []AppSpecWorkerEnv `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
	Git *AppSpecWorkerGit `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github *AppSpecWorkerGithub `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab *AppSpecWorkerGitlab `pulumi:"gitlab"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image *AppSpecWorkerImage `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
	InstanceSizeSlug *string `pulumi:"instanceSizeSlug"`
	// Describes a log forwarding destination.
	LogDestinations []AppSpecWorkerLogDestination `pulumi:"logDestinations"`
	// The name of the component.
	Name string `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir *string `pulumi:"sourceDir"`
}

// AppSpecWorkerInput is an input type that accepts AppSpecWorkerArgs and AppSpecWorkerOutput values.
// You can construct a concrete instance of `AppSpecWorkerInput` via:
//
//          AppSpecWorkerArgs{...}
type AppSpecWorkerInput interface {
	pulumi.Input

	ToAppSpecWorkerOutput() AppSpecWorkerOutput
	ToAppSpecWorkerOutputWithContext(context.Context) AppSpecWorkerOutput
}

type AppSpecWorkerArgs struct {
	// Describes an alert policy for the component.
	Alerts AppSpecWorkerAlertArrayInput `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs AppSpecWorkerEnvArrayInput `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
	Git AppSpecWorkerGitPtrInput `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github AppSpecWorkerGithubPtrInput `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab AppSpecWorkerGitlabPtrInput `pulumi:"gitlab"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image AppSpecWorkerImagePtrInput `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
	InstanceSizeSlug pulumi.StringPtrInput `pulumi:"instanceSizeSlug"`
	// Describes a log forwarding destination.
	LogDestinations AppSpecWorkerLogDestinationArrayInput `pulumi:"logDestinations"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (AppSpecWorkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorker)(nil)).Elem()
}

func (i AppSpecWorkerArgs) ToAppSpecWorkerOutput() AppSpecWorkerOutput {
	return i.ToAppSpecWorkerOutputWithContext(context.Background())
}

func (i AppSpecWorkerArgs) ToAppSpecWorkerOutputWithContext(ctx context.Context) AppSpecWorkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerOutput)
}

// AppSpecWorkerArrayInput is an input type that accepts AppSpecWorkerArray and AppSpecWorkerArrayOutput values.
// You can construct a concrete instance of `AppSpecWorkerArrayInput` via:
//
//          AppSpecWorkerArray{ AppSpecWorkerArgs{...} }
type AppSpecWorkerArrayInput interface {
	pulumi.Input

	ToAppSpecWorkerArrayOutput() AppSpecWorkerArrayOutput
	ToAppSpecWorkerArrayOutputWithContext(context.Context) AppSpecWorkerArrayOutput
}

type AppSpecWorkerArray []AppSpecWorkerInput

func (AppSpecWorkerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecWorker)(nil)).Elem()
}

func (i AppSpecWorkerArray) ToAppSpecWorkerArrayOutput() AppSpecWorkerArrayOutput {
	return i.ToAppSpecWorkerArrayOutputWithContext(context.Background())
}

func (i AppSpecWorkerArray) ToAppSpecWorkerArrayOutputWithContext(ctx context.Context) AppSpecWorkerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerArrayOutput)
}

type AppSpecWorkerOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorker)(nil)).Elem()
}

func (o AppSpecWorkerOutput) ToAppSpecWorkerOutput() AppSpecWorkerOutput {
	return o
}

func (o AppSpecWorkerOutput) ToAppSpecWorkerOutputWithContext(ctx context.Context) AppSpecWorkerOutput {
	return o
}

// Describes an alert policy for the component.
func (o AppSpecWorkerOutput) Alerts() AppSpecWorkerAlertArrayOutput {
	return o.ApplyT(func(v AppSpecWorker) []AppSpecWorkerAlert { return v.Alerts }).(AppSpecWorkerAlertArrayOutput)
}

// An optional build command to run while building this component from source.
func (o AppSpecWorkerOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
func (o AppSpecWorkerOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app.
func (o AppSpecWorkerOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// Describes an environment variable made available to an app competent.
func (o AppSpecWorkerOutput) Envs() AppSpecWorkerEnvArrayOutput {
	return o.ApplyT(func(v AppSpecWorker) []AppSpecWorkerEnv { return v.Envs }).(AppSpecWorkerEnvArrayOutput)
}

// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set
func (o AppSpecWorkerOutput) Git() AppSpecWorkerGitPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *AppSpecWorkerGit { return v.Git }).(AppSpecWorkerGitPtrOutput)
}

// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecWorkerOutput) Github() AppSpecWorkerGithubPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *AppSpecWorkerGithub { return v.Github }).(AppSpecWorkerGithubPtrOutput)
}

// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecWorkerOutput) Gitlab() AppSpecWorkerGitlabPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *AppSpecWorkerGitlab { return v.Gitlab }).(AppSpecWorkerGitlabPtrOutput)
}

// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o AppSpecWorkerOutput) Image() AppSpecWorkerImagePtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *AppSpecWorkerImage { return v.Image }).(AppSpecWorkerImagePtrOutput)
}

// The amount of instances that this component should be scaled to.
func (o AppSpecWorkerOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component. This determines the plan (basic or professional) and the available CPU and memory. The list of available instance sizes can be [found with the API](https://docs.digitalocean.com/reference/api/api-reference/#operation/list_instance_sizes) or using the [doctl CLI](https://docs.digitalocean.com/reference/doctl/) (`doctl apps tier instance-size list`). Default: `basic-xxs`
func (o AppSpecWorkerOutput) InstanceSizeSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *string { return v.InstanceSizeSlug }).(pulumi.StringPtrOutput)
}

// Describes a log forwarding destination.
func (o AppSpecWorkerOutput) LogDestinations() AppSpecWorkerLogDestinationArrayOutput {
	return o.ApplyT(func(v AppSpecWorker) []AppSpecWorkerLogDestination { return v.LogDestinations }).(AppSpecWorkerLogDestinationArrayOutput)
}

// The name of the component.
func (o AppSpecWorkerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorker) string { return v.Name }).(pulumi.StringOutput)
}

// An optional run command to override the component's default.
func (o AppSpecWorkerOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build.
func (o AppSpecWorkerOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorker) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type AppSpecWorkerArrayOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecWorker)(nil)).Elem()
}

func (o AppSpecWorkerArrayOutput) ToAppSpecWorkerArrayOutput() AppSpecWorkerArrayOutput {
	return o
}

func (o AppSpecWorkerArrayOutput) ToAppSpecWorkerArrayOutputWithContext(ctx context.Context) AppSpecWorkerArrayOutput {
	return o
}

func (o AppSpecWorkerArrayOutput) Index(i pulumi.IntInput) AppSpecWorkerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecWorker {
		return vs[0].([]AppSpecWorker)[vs[1].(int)]
	}).(AppSpecWorkerOutput)
}

type AppSpecWorkerAlert struct {
	// Determines whether or not the alert is disabled (default: `false`).
	Disabled *bool `pulumi:"disabled"`
	// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
	Operator string `pulumi:"operator"`
	// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
	Rule string `pulumi:"rule"`
	// The threshold for the type of the warning.
	Value float64 `pulumi:"value"`
	// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
	Window string `pulumi:"window"`
}

// AppSpecWorkerAlertInput is an input type that accepts AppSpecWorkerAlertArgs and AppSpecWorkerAlertOutput values.
// You can construct a concrete instance of `AppSpecWorkerAlertInput` via:
//
//          AppSpecWorkerAlertArgs{...}
type AppSpecWorkerAlertInput interface {
	pulumi.Input

	ToAppSpecWorkerAlertOutput() AppSpecWorkerAlertOutput
	ToAppSpecWorkerAlertOutputWithContext(context.Context) AppSpecWorkerAlertOutput
}

type AppSpecWorkerAlertArgs struct {
	// Determines whether or not the alert is disabled (default: `false`).
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
	Operator pulumi.StringInput `pulumi:"operator"`
	// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
	Rule pulumi.StringInput `pulumi:"rule"`
	// The threshold for the type of the warning.
	Value pulumi.Float64Input `pulumi:"value"`
	// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
	Window pulumi.StringInput `pulumi:"window"`
}

func (AppSpecWorkerAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerAlert)(nil)).Elem()
}

func (i AppSpecWorkerAlertArgs) ToAppSpecWorkerAlertOutput() AppSpecWorkerAlertOutput {
	return i.ToAppSpecWorkerAlertOutputWithContext(context.Background())
}

func (i AppSpecWorkerAlertArgs) ToAppSpecWorkerAlertOutputWithContext(ctx context.Context) AppSpecWorkerAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerAlertOutput)
}

// AppSpecWorkerAlertArrayInput is an input type that accepts AppSpecWorkerAlertArray and AppSpecWorkerAlertArrayOutput values.
// You can construct a concrete instance of `AppSpecWorkerAlertArrayInput` via:
//
//          AppSpecWorkerAlertArray{ AppSpecWorkerAlertArgs{...} }
type AppSpecWorkerAlertArrayInput interface {
	pulumi.Input

	ToAppSpecWorkerAlertArrayOutput() AppSpecWorkerAlertArrayOutput
	ToAppSpecWorkerAlertArrayOutputWithContext(context.Context) AppSpecWorkerAlertArrayOutput
}

type AppSpecWorkerAlertArray []AppSpecWorkerAlertInput

func (AppSpecWorkerAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecWorkerAlert)(nil)).Elem()
}

func (i AppSpecWorkerAlertArray) ToAppSpecWorkerAlertArrayOutput() AppSpecWorkerAlertArrayOutput {
	return i.ToAppSpecWorkerAlertArrayOutputWithContext(context.Background())
}

func (i AppSpecWorkerAlertArray) ToAppSpecWorkerAlertArrayOutputWithContext(ctx context.Context) AppSpecWorkerAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerAlertArrayOutput)
}

type AppSpecWorkerAlertOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerAlert)(nil)).Elem()
}

func (o AppSpecWorkerAlertOutput) ToAppSpecWorkerAlertOutput() AppSpecWorkerAlertOutput {
	return o
}

func (o AppSpecWorkerAlertOutput) ToAppSpecWorkerAlertOutputWithContext(ctx context.Context) AppSpecWorkerAlertOutput {
	return o
}

// Determines whether or not the alert is disabled (default: `false`).
func (o AppSpecWorkerAlertOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerAlert) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

// The operator to use. This is either of `GREATER_THAN` or `LESS_THAN`.
func (o AppSpecWorkerAlertOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerAlert) string { return v.Operator }).(pulumi.StringOutput)
}

// The type of the alert to configure. Component app alert policies can be: `CPU_UTILIZATION`, `MEM_UTILIZATION`, or `RESTART_COUNT`.
func (o AppSpecWorkerAlertOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerAlert) string { return v.Rule }).(pulumi.StringOutput)
}

// The threshold for the type of the warning.
func (o AppSpecWorkerAlertOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v AppSpecWorkerAlert) float64 { return v.Value }).(pulumi.Float64Output)
}

// The time before alerts should be triggered. This is may be one of: `FIVE_MINUTES`, `TEN_MINUTES`, `THIRTY_MINUTES`, `ONE_HOUR`.
func (o AppSpecWorkerAlertOutput) Window() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerAlert) string { return v.Window }).(pulumi.StringOutput)
}

type AppSpecWorkerAlertArrayOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecWorkerAlert)(nil)).Elem()
}

func (o AppSpecWorkerAlertArrayOutput) ToAppSpecWorkerAlertArrayOutput() AppSpecWorkerAlertArrayOutput {
	return o
}

func (o AppSpecWorkerAlertArrayOutput) ToAppSpecWorkerAlertArrayOutputWithContext(ctx context.Context) AppSpecWorkerAlertArrayOutput {
	return o
}

func (o AppSpecWorkerAlertArrayOutput) Index(i pulumi.IntInput) AppSpecWorkerAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecWorkerAlert {
		return vs[0].([]AppSpecWorkerAlert)[vs[1].(int)]
	}).(AppSpecWorkerAlertOutput)
}

type AppSpecWorkerEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type *string `pulumi:"type"`
	// The threshold for the type of the warning.
	Value *string `pulumi:"value"`
}

// AppSpecWorkerEnvInput is an input type that accepts AppSpecWorkerEnvArgs and AppSpecWorkerEnvOutput values.
// You can construct a concrete instance of `AppSpecWorkerEnvInput` via:
//
//          AppSpecWorkerEnvArgs{...}
type AppSpecWorkerEnvInput interface {
	pulumi.Input

	ToAppSpecWorkerEnvOutput() AppSpecWorkerEnvOutput
	ToAppSpecWorkerEnvOutputWithContext(context.Context) AppSpecWorkerEnvOutput
}

type AppSpecWorkerEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringPtrInput `pulumi:"type"`
	// The threshold for the type of the warning.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (AppSpecWorkerEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerEnv)(nil)).Elem()
}

func (i AppSpecWorkerEnvArgs) ToAppSpecWorkerEnvOutput() AppSpecWorkerEnvOutput {
	return i.ToAppSpecWorkerEnvOutputWithContext(context.Background())
}

func (i AppSpecWorkerEnvArgs) ToAppSpecWorkerEnvOutputWithContext(ctx context.Context) AppSpecWorkerEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerEnvOutput)
}

// AppSpecWorkerEnvArrayInput is an input type that accepts AppSpecWorkerEnvArray and AppSpecWorkerEnvArrayOutput values.
// You can construct a concrete instance of `AppSpecWorkerEnvArrayInput` via:
//
//          AppSpecWorkerEnvArray{ AppSpecWorkerEnvArgs{...} }
type AppSpecWorkerEnvArrayInput interface {
	pulumi.Input

	ToAppSpecWorkerEnvArrayOutput() AppSpecWorkerEnvArrayOutput
	ToAppSpecWorkerEnvArrayOutputWithContext(context.Context) AppSpecWorkerEnvArrayOutput
}

type AppSpecWorkerEnvArray []AppSpecWorkerEnvInput

func (AppSpecWorkerEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecWorkerEnv)(nil)).Elem()
}

func (i AppSpecWorkerEnvArray) ToAppSpecWorkerEnvArrayOutput() AppSpecWorkerEnvArrayOutput {
	return i.ToAppSpecWorkerEnvArrayOutputWithContext(context.Background())
}

func (i AppSpecWorkerEnvArray) ToAppSpecWorkerEnvArrayOutputWithContext(ctx context.Context) AppSpecWorkerEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerEnvArrayOutput)
}

type AppSpecWorkerEnvOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerEnv)(nil)).Elem()
}

func (o AppSpecWorkerEnvOutput) ToAppSpecWorkerEnvOutput() AppSpecWorkerEnvOutput {
	return o
}

func (o AppSpecWorkerEnvOutput) ToAppSpecWorkerEnvOutputWithContext(ctx context.Context) AppSpecWorkerEnvOutput {
	return o
}

// The name of the environment variable.
func (o AppSpecWorkerEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o AppSpecWorkerEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o AppSpecWorkerEnvOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerEnv) *string { return v.Type }).(pulumi.StringPtrOutput)
}

// The threshold for the type of the warning.
func (o AppSpecWorkerEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type AppSpecWorkerEnvArrayOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecWorkerEnv)(nil)).Elem()
}

func (o AppSpecWorkerEnvArrayOutput) ToAppSpecWorkerEnvArrayOutput() AppSpecWorkerEnvArrayOutput {
	return o
}

func (o AppSpecWorkerEnvArrayOutput) ToAppSpecWorkerEnvArrayOutputWithContext(ctx context.Context) AppSpecWorkerEnvArrayOutput {
	return o
}

func (o AppSpecWorkerEnvArrayOutput) Index(i pulumi.IntInput) AppSpecWorkerEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecWorkerEnv {
		return vs[0].([]AppSpecWorkerEnv)[vs[1].(int)]
	}).(AppSpecWorkerEnvOutput)
}

type AppSpecWorkerGit struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// AppSpecWorkerGitInput is an input type that accepts AppSpecWorkerGitArgs and AppSpecWorkerGitOutput values.
// You can construct a concrete instance of `AppSpecWorkerGitInput` via:
//
//          AppSpecWorkerGitArgs{...}
type AppSpecWorkerGitInput interface {
	pulumi.Input

	ToAppSpecWorkerGitOutput() AppSpecWorkerGitOutput
	ToAppSpecWorkerGitOutputWithContext(context.Context) AppSpecWorkerGitOutput
}

type AppSpecWorkerGitArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (AppSpecWorkerGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerGit)(nil)).Elem()
}

func (i AppSpecWorkerGitArgs) ToAppSpecWorkerGitOutput() AppSpecWorkerGitOutput {
	return i.ToAppSpecWorkerGitOutputWithContext(context.Background())
}

func (i AppSpecWorkerGitArgs) ToAppSpecWorkerGitOutputWithContext(ctx context.Context) AppSpecWorkerGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGitOutput)
}

func (i AppSpecWorkerGitArgs) ToAppSpecWorkerGitPtrOutput() AppSpecWorkerGitPtrOutput {
	return i.ToAppSpecWorkerGitPtrOutputWithContext(context.Background())
}

func (i AppSpecWorkerGitArgs) ToAppSpecWorkerGitPtrOutputWithContext(ctx context.Context) AppSpecWorkerGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGitOutput).ToAppSpecWorkerGitPtrOutputWithContext(ctx)
}

// AppSpecWorkerGitPtrInput is an input type that accepts AppSpecWorkerGitArgs, AppSpecWorkerGitPtr and AppSpecWorkerGitPtrOutput values.
// You can construct a concrete instance of `AppSpecWorkerGitPtrInput` via:
//
//          AppSpecWorkerGitArgs{...}
//
//  or:
//
//          nil
type AppSpecWorkerGitPtrInput interface {
	pulumi.Input

	ToAppSpecWorkerGitPtrOutput() AppSpecWorkerGitPtrOutput
	ToAppSpecWorkerGitPtrOutputWithContext(context.Context) AppSpecWorkerGitPtrOutput
}

type appSpecWorkerGitPtrType AppSpecWorkerGitArgs

func AppSpecWorkerGitPtr(v *AppSpecWorkerGitArgs) AppSpecWorkerGitPtrInput {
	return (*appSpecWorkerGitPtrType)(v)
}

func (*appSpecWorkerGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerGit)(nil)).Elem()
}

func (i *appSpecWorkerGitPtrType) ToAppSpecWorkerGitPtrOutput() AppSpecWorkerGitPtrOutput {
	return i.ToAppSpecWorkerGitPtrOutputWithContext(context.Background())
}

func (i *appSpecWorkerGitPtrType) ToAppSpecWorkerGitPtrOutputWithContext(ctx context.Context) AppSpecWorkerGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGitPtrOutput)
}

type AppSpecWorkerGitOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerGit)(nil)).Elem()
}

func (o AppSpecWorkerGitOutput) ToAppSpecWorkerGitOutput() AppSpecWorkerGitOutput {
	return o
}

func (o AppSpecWorkerGitOutput) ToAppSpecWorkerGitOutputWithContext(ctx context.Context) AppSpecWorkerGitOutput {
	return o
}

func (o AppSpecWorkerGitOutput) ToAppSpecWorkerGitPtrOutput() AppSpecWorkerGitPtrOutput {
	return o.ToAppSpecWorkerGitPtrOutputWithContext(context.Background())
}

func (o AppSpecWorkerGitOutput) ToAppSpecWorkerGitPtrOutputWithContext(ctx context.Context) AppSpecWorkerGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecWorkerGit) *AppSpecWorkerGit {
		return &v
	}).(AppSpecWorkerGitPtrOutput)
}

// The name of the branch to use.
func (o AppSpecWorkerGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o AppSpecWorkerGitOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerGit) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type AppSpecWorkerGitPtrOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerGit)(nil)).Elem()
}

func (o AppSpecWorkerGitPtrOutput) ToAppSpecWorkerGitPtrOutput() AppSpecWorkerGitPtrOutput {
	return o
}

func (o AppSpecWorkerGitPtrOutput) ToAppSpecWorkerGitPtrOutputWithContext(ctx context.Context) AppSpecWorkerGitPtrOutput {
	return o
}

func (o AppSpecWorkerGitPtrOutput) Elem() AppSpecWorkerGitOutput {
	return o.ApplyT(func(v *AppSpecWorkerGit) AppSpecWorkerGit {
		if v != nil {
			return *v
		}
		var ret AppSpecWorkerGit
		return ret
	}).(AppSpecWorkerGitOutput)
}

// The name of the branch to use.
func (o AppSpecWorkerGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o AppSpecWorkerGitPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type AppSpecWorkerGithub struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// AppSpecWorkerGithubInput is an input type that accepts AppSpecWorkerGithubArgs and AppSpecWorkerGithubOutput values.
// You can construct a concrete instance of `AppSpecWorkerGithubInput` via:
//
//          AppSpecWorkerGithubArgs{...}
type AppSpecWorkerGithubInput interface {
	pulumi.Input

	ToAppSpecWorkerGithubOutput() AppSpecWorkerGithubOutput
	ToAppSpecWorkerGithubOutputWithContext(context.Context) AppSpecWorkerGithubOutput
}

type AppSpecWorkerGithubArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppSpecWorkerGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerGithub)(nil)).Elem()
}

func (i AppSpecWorkerGithubArgs) ToAppSpecWorkerGithubOutput() AppSpecWorkerGithubOutput {
	return i.ToAppSpecWorkerGithubOutputWithContext(context.Background())
}

func (i AppSpecWorkerGithubArgs) ToAppSpecWorkerGithubOutputWithContext(ctx context.Context) AppSpecWorkerGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGithubOutput)
}

func (i AppSpecWorkerGithubArgs) ToAppSpecWorkerGithubPtrOutput() AppSpecWorkerGithubPtrOutput {
	return i.ToAppSpecWorkerGithubPtrOutputWithContext(context.Background())
}

func (i AppSpecWorkerGithubArgs) ToAppSpecWorkerGithubPtrOutputWithContext(ctx context.Context) AppSpecWorkerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGithubOutput).ToAppSpecWorkerGithubPtrOutputWithContext(ctx)
}

// AppSpecWorkerGithubPtrInput is an input type that accepts AppSpecWorkerGithubArgs, AppSpecWorkerGithubPtr and AppSpecWorkerGithubPtrOutput values.
// You can construct a concrete instance of `AppSpecWorkerGithubPtrInput` via:
//
//          AppSpecWorkerGithubArgs{...}
//
//  or:
//
//          nil
type AppSpecWorkerGithubPtrInput interface {
	pulumi.Input

	ToAppSpecWorkerGithubPtrOutput() AppSpecWorkerGithubPtrOutput
	ToAppSpecWorkerGithubPtrOutputWithContext(context.Context) AppSpecWorkerGithubPtrOutput
}

type appSpecWorkerGithubPtrType AppSpecWorkerGithubArgs

func AppSpecWorkerGithubPtr(v *AppSpecWorkerGithubArgs) AppSpecWorkerGithubPtrInput {
	return (*appSpecWorkerGithubPtrType)(v)
}

func (*appSpecWorkerGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerGithub)(nil)).Elem()
}

func (i *appSpecWorkerGithubPtrType) ToAppSpecWorkerGithubPtrOutput() AppSpecWorkerGithubPtrOutput {
	return i.ToAppSpecWorkerGithubPtrOutputWithContext(context.Background())
}

func (i *appSpecWorkerGithubPtrType) ToAppSpecWorkerGithubPtrOutputWithContext(ctx context.Context) AppSpecWorkerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGithubPtrOutput)
}

type AppSpecWorkerGithubOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerGithub)(nil)).Elem()
}

func (o AppSpecWorkerGithubOutput) ToAppSpecWorkerGithubOutput() AppSpecWorkerGithubOutput {
	return o
}

func (o AppSpecWorkerGithubOutput) ToAppSpecWorkerGithubOutputWithContext(ctx context.Context) AppSpecWorkerGithubOutput {
	return o
}

func (o AppSpecWorkerGithubOutput) ToAppSpecWorkerGithubPtrOutput() AppSpecWorkerGithubPtrOutput {
	return o.ToAppSpecWorkerGithubPtrOutputWithContext(context.Background())
}

func (o AppSpecWorkerGithubOutput) ToAppSpecWorkerGithubPtrOutputWithContext(ctx context.Context) AppSpecWorkerGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecWorkerGithub) *AppSpecWorkerGithub {
		return &v
	}).(AppSpecWorkerGithubPtrOutput)
}

// The name of the branch to use.
func (o AppSpecWorkerGithubOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerGithub) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecWorkerGithubOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerGithub) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecWorkerGithubOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerGithub) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppSpecWorkerGithubPtrOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerGithub)(nil)).Elem()
}

func (o AppSpecWorkerGithubPtrOutput) ToAppSpecWorkerGithubPtrOutput() AppSpecWorkerGithubPtrOutput {
	return o
}

func (o AppSpecWorkerGithubPtrOutput) ToAppSpecWorkerGithubPtrOutputWithContext(ctx context.Context) AppSpecWorkerGithubPtrOutput {
	return o
}

func (o AppSpecWorkerGithubPtrOutput) Elem() AppSpecWorkerGithubOutput {
	return o.ApplyT(func(v *AppSpecWorkerGithub) AppSpecWorkerGithub {
		if v != nil {
			return *v
		}
		var ret AppSpecWorkerGithub
		return ret
	}).(AppSpecWorkerGithubOutput)
}

// The name of the branch to use.
func (o AppSpecWorkerGithubPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerGithub) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecWorkerGithubPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecWorkerGithubPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppSpecWorkerGitlab struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// AppSpecWorkerGitlabInput is an input type that accepts AppSpecWorkerGitlabArgs and AppSpecWorkerGitlabOutput values.
// You can construct a concrete instance of `AppSpecWorkerGitlabInput` via:
//
//          AppSpecWorkerGitlabArgs{...}
type AppSpecWorkerGitlabInput interface {
	pulumi.Input

	ToAppSpecWorkerGitlabOutput() AppSpecWorkerGitlabOutput
	ToAppSpecWorkerGitlabOutputWithContext(context.Context) AppSpecWorkerGitlabOutput
}

type AppSpecWorkerGitlabArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (AppSpecWorkerGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerGitlab)(nil)).Elem()
}

func (i AppSpecWorkerGitlabArgs) ToAppSpecWorkerGitlabOutput() AppSpecWorkerGitlabOutput {
	return i.ToAppSpecWorkerGitlabOutputWithContext(context.Background())
}

func (i AppSpecWorkerGitlabArgs) ToAppSpecWorkerGitlabOutputWithContext(ctx context.Context) AppSpecWorkerGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGitlabOutput)
}

func (i AppSpecWorkerGitlabArgs) ToAppSpecWorkerGitlabPtrOutput() AppSpecWorkerGitlabPtrOutput {
	return i.ToAppSpecWorkerGitlabPtrOutputWithContext(context.Background())
}

func (i AppSpecWorkerGitlabArgs) ToAppSpecWorkerGitlabPtrOutputWithContext(ctx context.Context) AppSpecWorkerGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGitlabOutput).ToAppSpecWorkerGitlabPtrOutputWithContext(ctx)
}

// AppSpecWorkerGitlabPtrInput is an input type that accepts AppSpecWorkerGitlabArgs, AppSpecWorkerGitlabPtr and AppSpecWorkerGitlabPtrOutput values.
// You can construct a concrete instance of `AppSpecWorkerGitlabPtrInput` via:
//
//          AppSpecWorkerGitlabArgs{...}
//
//  or:
//
//          nil
type AppSpecWorkerGitlabPtrInput interface {
	pulumi.Input

	ToAppSpecWorkerGitlabPtrOutput() AppSpecWorkerGitlabPtrOutput
	ToAppSpecWorkerGitlabPtrOutputWithContext(context.Context) AppSpecWorkerGitlabPtrOutput
}

type appSpecWorkerGitlabPtrType AppSpecWorkerGitlabArgs

func AppSpecWorkerGitlabPtr(v *AppSpecWorkerGitlabArgs) AppSpecWorkerGitlabPtrInput {
	return (*appSpecWorkerGitlabPtrType)(v)
}

func (*appSpecWorkerGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerGitlab)(nil)).Elem()
}

func (i *appSpecWorkerGitlabPtrType) ToAppSpecWorkerGitlabPtrOutput() AppSpecWorkerGitlabPtrOutput {
	return i.ToAppSpecWorkerGitlabPtrOutputWithContext(context.Background())
}

func (i *appSpecWorkerGitlabPtrType) ToAppSpecWorkerGitlabPtrOutputWithContext(ctx context.Context) AppSpecWorkerGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerGitlabPtrOutput)
}

type AppSpecWorkerGitlabOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerGitlab)(nil)).Elem()
}

func (o AppSpecWorkerGitlabOutput) ToAppSpecWorkerGitlabOutput() AppSpecWorkerGitlabOutput {
	return o
}

func (o AppSpecWorkerGitlabOutput) ToAppSpecWorkerGitlabOutputWithContext(ctx context.Context) AppSpecWorkerGitlabOutput {
	return o
}

func (o AppSpecWorkerGitlabOutput) ToAppSpecWorkerGitlabPtrOutput() AppSpecWorkerGitlabPtrOutput {
	return o.ToAppSpecWorkerGitlabPtrOutputWithContext(context.Background())
}

func (o AppSpecWorkerGitlabOutput) ToAppSpecWorkerGitlabPtrOutputWithContext(ctx context.Context) AppSpecWorkerGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecWorkerGitlab) *AppSpecWorkerGitlab {
		return &v
	}).(AppSpecWorkerGitlabPtrOutput)
}

// The name of the branch to use.
func (o AppSpecWorkerGitlabOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerGitlab) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecWorkerGitlabOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerGitlab) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecWorkerGitlabOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerGitlab) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type AppSpecWorkerGitlabPtrOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerGitlab)(nil)).Elem()
}

func (o AppSpecWorkerGitlabPtrOutput) ToAppSpecWorkerGitlabPtrOutput() AppSpecWorkerGitlabPtrOutput {
	return o
}

func (o AppSpecWorkerGitlabPtrOutput) ToAppSpecWorkerGitlabPtrOutputWithContext(ctx context.Context) AppSpecWorkerGitlabPtrOutput {
	return o
}

func (o AppSpecWorkerGitlabPtrOutput) Elem() AppSpecWorkerGitlabOutput {
	return o.ApplyT(func(v *AppSpecWorkerGitlab) AppSpecWorkerGitlab {
		if v != nil {
			return *v
		}
		var ret AppSpecWorkerGitlab
		return ret
	}).(AppSpecWorkerGitlabOutput)
}

// The name of the branch to use.
func (o AppSpecWorkerGitlabPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o AppSpecWorkerGitlabPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o AppSpecWorkerGitlabPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type AppSpecWorkerImage struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry *string `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType string `pulumi:"registryType"`
	// The repository name.
	Repository string `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag *string `pulumi:"tag"`
}

// AppSpecWorkerImageInput is an input type that accepts AppSpecWorkerImageArgs and AppSpecWorkerImageOutput values.
// You can construct a concrete instance of `AppSpecWorkerImageInput` via:
//
//          AppSpecWorkerImageArgs{...}
type AppSpecWorkerImageInput interface {
	pulumi.Input

	ToAppSpecWorkerImageOutput() AppSpecWorkerImageOutput
	ToAppSpecWorkerImageOutputWithContext(context.Context) AppSpecWorkerImageOutput
}

type AppSpecWorkerImageArgs struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType pulumi.StringInput `pulumi:"registryType"`
	// The repository name.
	Repository pulumi.StringInput `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (AppSpecWorkerImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerImage)(nil)).Elem()
}

func (i AppSpecWorkerImageArgs) ToAppSpecWorkerImageOutput() AppSpecWorkerImageOutput {
	return i.ToAppSpecWorkerImageOutputWithContext(context.Background())
}

func (i AppSpecWorkerImageArgs) ToAppSpecWorkerImageOutputWithContext(ctx context.Context) AppSpecWorkerImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerImageOutput)
}

func (i AppSpecWorkerImageArgs) ToAppSpecWorkerImagePtrOutput() AppSpecWorkerImagePtrOutput {
	return i.ToAppSpecWorkerImagePtrOutputWithContext(context.Background())
}

func (i AppSpecWorkerImageArgs) ToAppSpecWorkerImagePtrOutputWithContext(ctx context.Context) AppSpecWorkerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerImageOutput).ToAppSpecWorkerImagePtrOutputWithContext(ctx)
}

// AppSpecWorkerImagePtrInput is an input type that accepts AppSpecWorkerImageArgs, AppSpecWorkerImagePtr and AppSpecWorkerImagePtrOutput values.
// You can construct a concrete instance of `AppSpecWorkerImagePtrInput` via:
//
//          AppSpecWorkerImageArgs{...}
//
//  or:
//
//          nil
type AppSpecWorkerImagePtrInput interface {
	pulumi.Input

	ToAppSpecWorkerImagePtrOutput() AppSpecWorkerImagePtrOutput
	ToAppSpecWorkerImagePtrOutputWithContext(context.Context) AppSpecWorkerImagePtrOutput
}

type appSpecWorkerImagePtrType AppSpecWorkerImageArgs

func AppSpecWorkerImagePtr(v *AppSpecWorkerImageArgs) AppSpecWorkerImagePtrInput {
	return (*appSpecWorkerImagePtrType)(v)
}

func (*appSpecWorkerImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerImage)(nil)).Elem()
}

func (i *appSpecWorkerImagePtrType) ToAppSpecWorkerImagePtrOutput() AppSpecWorkerImagePtrOutput {
	return i.ToAppSpecWorkerImagePtrOutputWithContext(context.Background())
}

func (i *appSpecWorkerImagePtrType) ToAppSpecWorkerImagePtrOutputWithContext(ctx context.Context) AppSpecWorkerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerImagePtrOutput)
}

type AppSpecWorkerImageOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerImage)(nil)).Elem()
}

func (o AppSpecWorkerImageOutput) ToAppSpecWorkerImageOutput() AppSpecWorkerImageOutput {
	return o
}

func (o AppSpecWorkerImageOutput) ToAppSpecWorkerImageOutputWithContext(ctx context.Context) AppSpecWorkerImageOutput {
	return o
}

func (o AppSpecWorkerImageOutput) ToAppSpecWorkerImagePtrOutput() AppSpecWorkerImagePtrOutput {
	return o.ToAppSpecWorkerImagePtrOutputWithContext(context.Background())
}

func (o AppSpecWorkerImageOutput) ToAppSpecWorkerImagePtrOutputWithContext(ctx context.Context) AppSpecWorkerImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecWorkerImage) *AppSpecWorkerImage {
		return &v
	}).(AppSpecWorkerImagePtrOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o AppSpecWorkerImageOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerImage) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o AppSpecWorkerImageOutput) RegistryType() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerImage) string { return v.RegistryType }).(pulumi.StringOutput)
}

// The repository name.
func (o AppSpecWorkerImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o AppSpecWorkerImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type AppSpecWorkerImagePtrOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerImage)(nil)).Elem()
}

func (o AppSpecWorkerImagePtrOutput) ToAppSpecWorkerImagePtrOutput() AppSpecWorkerImagePtrOutput {
	return o
}

func (o AppSpecWorkerImagePtrOutput) ToAppSpecWorkerImagePtrOutputWithContext(ctx context.Context) AppSpecWorkerImagePtrOutput {
	return o
}

func (o AppSpecWorkerImagePtrOutput) Elem() AppSpecWorkerImageOutput {
	return o.ApplyT(func(v *AppSpecWorkerImage) AppSpecWorkerImage {
		if v != nil {
			return *v
		}
		var ret AppSpecWorkerImage
		return ret
	}).(AppSpecWorkerImageOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o AppSpecWorkerImagePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerImage) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o AppSpecWorkerImagePtrOutput) RegistryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerImage) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryType
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o AppSpecWorkerImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o AppSpecWorkerImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type AppSpecWorkerLogDestination struct {
	// Datadog configuration.
	Datadog *AppSpecWorkerLogDestinationDatadog `pulumi:"datadog"`
	// Logtail configuration.
	Logtail *AppSpecWorkerLogDestinationLogtail `pulumi:"logtail"`
	// The name of the component.
	Name string `pulumi:"name"`
	// Papertrail configuration.
	Papertrail *AppSpecWorkerLogDestinationPapertrail `pulumi:"papertrail"`
}

// AppSpecWorkerLogDestinationInput is an input type that accepts AppSpecWorkerLogDestinationArgs and AppSpecWorkerLogDestinationOutput values.
// You can construct a concrete instance of `AppSpecWorkerLogDestinationInput` via:
//
//          AppSpecWorkerLogDestinationArgs{...}
type AppSpecWorkerLogDestinationInput interface {
	pulumi.Input

	ToAppSpecWorkerLogDestinationOutput() AppSpecWorkerLogDestinationOutput
	ToAppSpecWorkerLogDestinationOutputWithContext(context.Context) AppSpecWorkerLogDestinationOutput
}

type AppSpecWorkerLogDestinationArgs struct {
	// Datadog configuration.
	Datadog AppSpecWorkerLogDestinationDatadogPtrInput `pulumi:"datadog"`
	// Logtail configuration.
	Logtail AppSpecWorkerLogDestinationLogtailPtrInput `pulumi:"logtail"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// Papertrail configuration.
	Papertrail AppSpecWorkerLogDestinationPapertrailPtrInput `pulumi:"papertrail"`
}

func (AppSpecWorkerLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerLogDestination)(nil)).Elem()
}

func (i AppSpecWorkerLogDestinationArgs) ToAppSpecWorkerLogDestinationOutput() AppSpecWorkerLogDestinationOutput {
	return i.ToAppSpecWorkerLogDestinationOutputWithContext(context.Background())
}

func (i AppSpecWorkerLogDestinationArgs) ToAppSpecWorkerLogDestinationOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationOutput)
}

// AppSpecWorkerLogDestinationArrayInput is an input type that accepts AppSpecWorkerLogDestinationArray and AppSpecWorkerLogDestinationArrayOutput values.
// You can construct a concrete instance of `AppSpecWorkerLogDestinationArrayInput` via:
//
//          AppSpecWorkerLogDestinationArray{ AppSpecWorkerLogDestinationArgs{...} }
type AppSpecWorkerLogDestinationArrayInput interface {
	pulumi.Input

	ToAppSpecWorkerLogDestinationArrayOutput() AppSpecWorkerLogDestinationArrayOutput
	ToAppSpecWorkerLogDestinationArrayOutputWithContext(context.Context) AppSpecWorkerLogDestinationArrayOutput
}

type AppSpecWorkerLogDestinationArray []AppSpecWorkerLogDestinationInput

func (AppSpecWorkerLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecWorkerLogDestination)(nil)).Elem()
}

func (i AppSpecWorkerLogDestinationArray) ToAppSpecWorkerLogDestinationArrayOutput() AppSpecWorkerLogDestinationArrayOutput {
	return i.ToAppSpecWorkerLogDestinationArrayOutputWithContext(context.Background())
}

func (i AppSpecWorkerLogDestinationArray) ToAppSpecWorkerLogDestinationArrayOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationArrayOutput)
}

type AppSpecWorkerLogDestinationOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerLogDestination)(nil)).Elem()
}

func (o AppSpecWorkerLogDestinationOutput) ToAppSpecWorkerLogDestinationOutput() AppSpecWorkerLogDestinationOutput {
	return o
}

func (o AppSpecWorkerLogDestinationOutput) ToAppSpecWorkerLogDestinationOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationOutput {
	return o
}

// Datadog configuration.
func (o AppSpecWorkerLogDestinationOutput) Datadog() AppSpecWorkerLogDestinationDatadogPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerLogDestination) *AppSpecWorkerLogDestinationDatadog { return v.Datadog }).(AppSpecWorkerLogDestinationDatadogPtrOutput)
}

// Logtail configuration.
func (o AppSpecWorkerLogDestinationOutput) Logtail() AppSpecWorkerLogDestinationLogtailPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerLogDestination) *AppSpecWorkerLogDestinationLogtail { return v.Logtail }).(AppSpecWorkerLogDestinationLogtailPtrOutput)
}

// The name of the component.
func (o AppSpecWorkerLogDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerLogDestination) string { return v.Name }).(pulumi.StringOutput)
}

// Papertrail configuration.
func (o AppSpecWorkerLogDestinationOutput) Papertrail() AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerLogDestination) *AppSpecWorkerLogDestinationPapertrail { return v.Papertrail }).(AppSpecWorkerLogDestinationPapertrailPtrOutput)
}

type AppSpecWorkerLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AppSpecWorkerLogDestination)(nil)).Elem()
}

func (o AppSpecWorkerLogDestinationArrayOutput) ToAppSpecWorkerLogDestinationArrayOutput() AppSpecWorkerLogDestinationArrayOutput {
	return o
}

func (o AppSpecWorkerLogDestinationArrayOutput) ToAppSpecWorkerLogDestinationArrayOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationArrayOutput {
	return o
}

func (o AppSpecWorkerLogDestinationArrayOutput) Index(i pulumi.IntInput) AppSpecWorkerLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AppSpecWorkerLogDestination {
		return vs[0].([]AppSpecWorkerLogDestination)[vs[1].(int)]
	}).(AppSpecWorkerLogDestinationOutput)
}

type AppSpecWorkerLogDestinationDatadog struct {
	// Datadog API key.
	ApiKey string `pulumi:"apiKey"`
	// Datadog HTTP log intake endpoint.
	Endpoint *string `pulumi:"endpoint"`
}

// AppSpecWorkerLogDestinationDatadogInput is an input type that accepts AppSpecWorkerLogDestinationDatadogArgs and AppSpecWorkerLogDestinationDatadogOutput values.
// You can construct a concrete instance of `AppSpecWorkerLogDestinationDatadogInput` via:
//
//          AppSpecWorkerLogDestinationDatadogArgs{...}
type AppSpecWorkerLogDestinationDatadogInput interface {
	pulumi.Input

	ToAppSpecWorkerLogDestinationDatadogOutput() AppSpecWorkerLogDestinationDatadogOutput
	ToAppSpecWorkerLogDestinationDatadogOutputWithContext(context.Context) AppSpecWorkerLogDestinationDatadogOutput
}

type AppSpecWorkerLogDestinationDatadogArgs struct {
	// Datadog API key.
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Datadog HTTP log intake endpoint.
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
}

func (AppSpecWorkerLogDestinationDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerLogDestinationDatadog)(nil)).Elem()
}

func (i AppSpecWorkerLogDestinationDatadogArgs) ToAppSpecWorkerLogDestinationDatadogOutput() AppSpecWorkerLogDestinationDatadogOutput {
	return i.ToAppSpecWorkerLogDestinationDatadogOutputWithContext(context.Background())
}

func (i AppSpecWorkerLogDestinationDatadogArgs) ToAppSpecWorkerLogDestinationDatadogOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationDatadogOutput)
}

func (i AppSpecWorkerLogDestinationDatadogArgs) ToAppSpecWorkerLogDestinationDatadogPtrOutput() AppSpecWorkerLogDestinationDatadogPtrOutput {
	return i.ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i AppSpecWorkerLogDestinationDatadogArgs) ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationDatadogOutput).ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx)
}

// AppSpecWorkerLogDestinationDatadogPtrInput is an input type that accepts AppSpecWorkerLogDestinationDatadogArgs, AppSpecWorkerLogDestinationDatadogPtr and AppSpecWorkerLogDestinationDatadogPtrOutput values.
// You can construct a concrete instance of `AppSpecWorkerLogDestinationDatadogPtrInput` via:
//
//          AppSpecWorkerLogDestinationDatadogArgs{...}
//
//  or:
//
//          nil
type AppSpecWorkerLogDestinationDatadogPtrInput interface {
	pulumi.Input

	ToAppSpecWorkerLogDestinationDatadogPtrOutput() AppSpecWorkerLogDestinationDatadogPtrOutput
	ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(context.Context) AppSpecWorkerLogDestinationDatadogPtrOutput
}

type appSpecWorkerLogDestinationDatadogPtrType AppSpecWorkerLogDestinationDatadogArgs

func AppSpecWorkerLogDestinationDatadogPtr(v *AppSpecWorkerLogDestinationDatadogArgs) AppSpecWorkerLogDestinationDatadogPtrInput {
	return (*appSpecWorkerLogDestinationDatadogPtrType)(v)
}

func (*appSpecWorkerLogDestinationDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerLogDestinationDatadog)(nil)).Elem()
}

func (i *appSpecWorkerLogDestinationDatadogPtrType) ToAppSpecWorkerLogDestinationDatadogPtrOutput() AppSpecWorkerLogDestinationDatadogPtrOutput {
	return i.ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i *appSpecWorkerLogDestinationDatadogPtrType) ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationDatadogPtrOutput)
}

type AppSpecWorkerLogDestinationDatadogOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerLogDestinationDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerLogDestinationDatadog)(nil)).Elem()
}

func (o AppSpecWorkerLogDestinationDatadogOutput) ToAppSpecWorkerLogDestinationDatadogOutput() AppSpecWorkerLogDestinationDatadogOutput {
	return o
}

func (o AppSpecWorkerLogDestinationDatadogOutput) ToAppSpecWorkerLogDestinationDatadogOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationDatadogOutput {
	return o
}

func (o AppSpecWorkerLogDestinationDatadogOutput) ToAppSpecWorkerLogDestinationDatadogPtrOutput() AppSpecWorkerLogDestinationDatadogPtrOutput {
	return o.ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (o AppSpecWorkerLogDestinationDatadogOutput) ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecWorkerLogDestinationDatadog) *AppSpecWorkerLogDestinationDatadog {
		return &v
	}).(AppSpecWorkerLogDestinationDatadogPtrOutput)
}

// Datadog API key.
func (o AppSpecWorkerLogDestinationDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerLogDestinationDatadog) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecWorkerLogDestinationDatadogOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v AppSpecWorkerLogDestinationDatadog) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

type AppSpecWorkerLogDestinationDatadogPtrOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerLogDestinationDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerLogDestinationDatadog)(nil)).Elem()
}

func (o AppSpecWorkerLogDestinationDatadogPtrOutput) ToAppSpecWorkerLogDestinationDatadogPtrOutput() AppSpecWorkerLogDestinationDatadogPtrOutput {
	return o
}

func (o AppSpecWorkerLogDestinationDatadogPtrOutput) ToAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationDatadogPtrOutput {
	return o
}

func (o AppSpecWorkerLogDestinationDatadogPtrOutput) Elem() AppSpecWorkerLogDestinationDatadogOutput {
	return o.ApplyT(func(v *AppSpecWorkerLogDestinationDatadog) AppSpecWorkerLogDestinationDatadog {
		if v != nil {
			return *v
		}
		var ret AppSpecWorkerLogDestinationDatadog
		return ret
	}).(AppSpecWorkerLogDestinationDatadogOutput)
}

// Datadog API key.
func (o AppSpecWorkerLogDestinationDatadogPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecWorkerLogDestinationDatadogPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type AppSpecWorkerLogDestinationLogtail struct {
	// Logtail token.
	Token string `pulumi:"token"`
}

// AppSpecWorkerLogDestinationLogtailInput is an input type that accepts AppSpecWorkerLogDestinationLogtailArgs and AppSpecWorkerLogDestinationLogtailOutput values.
// You can construct a concrete instance of `AppSpecWorkerLogDestinationLogtailInput` via:
//
//          AppSpecWorkerLogDestinationLogtailArgs{...}
type AppSpecWorkerLogDestinationLogtailInput interface {
	pulumi.Input

	ToAppSpecWorkerLogDestinationLogtailOutput() AppSpecWorkerLogDestinationLogtailOutput
	ToAppSpecWorkerLogDestinationLogtailOutputWithContext(context.Context) AppSpecWorkerLogDestinationLogtailOutput
}

type AppSpecWorkerLogDestinationLogtailArgs struct {
	// Logtail token.
	Token pulumi.StringInput `pulumi:"token"`
}

func (AppSpecWorkerLogDestinationLogtailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerLogDestinationLogtail)(nil)).Elem()
}

func (i AppSpecWorkerLogDestinationLogtailArgs) ToAppSpecWorkerLogDestinationLogtailOutput() AppSpecWorkerLogDestinationLogtailOutput {
	return i.ToAppSpecWorkerLogDestinationLogtailOutputWithContext(context.Background())
}

func (i AppSpecWorkerLogDestinationLogtailArgs) ToAppSpecWorkerLogDestinationLogtailOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationLogtailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationLogtailOutput)
}

func (i AppSpecWorkerLogDestinationLogtailArgs) ToAppSpecWorkerLogDestinationLogtailPtrOutput() AppSpecWorkerLogDestinationLogtailPtrOutput {
	return i.ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i AppSpecWorkerLogDestinationLogtailArgs) ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationLogtailOutput).ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx)
}

// AppSpecWorkerLogDestinationLogtailPtrInput is an input type that accepts AppSpecWorkerLogDestinationLogtailArgs, AppSpecWorkerLogDestinationLogtailPtr and AppSpecWorkerLogDestinationLogtailPtrOutput values.
// You can construct a concrete instance of `AppSpecWorkerLogDestinationLogtailPtrInput` via:
//
//          AppSpecWorkerLogDestinationLogtailArgs{...}
//
//  or:
//
//          nil
type AppSpecWorkerLogDestinationLogtailPtrInput interface {
	pulumi.Input

	ToAppSpecWorkerLogDestinationLogtailPtrOutput() AppSpecWorkerLogDestinationLogtailPtrOutput
	ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(context.Context) AppSpecWorkerLogDestinationLogtailPtrOutput
}

type appSpecWorkerLogDestinationLogtailPtrType AppSpecWorkerLogDestinationLogtailArgs

func AppSpecWorkerLogDestinationLogtailPtr(v *AppSpecWorkerLogDestinationLogtailArgs) AppSpecWorkerLogDestinationLogtailPtrInput {
	return (*appSpecWorkerLogDestinationLogtailPtrType)(v)
}

func (*appSpecWorkerLogDestinationLogtailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerLogDestinationLogtail)(nil)).Elem()
}

func (i *appSpecWorkerLogDestinationLogtailPtrType) ToAppSpecWorkerLogDestinationLogtailPtrOutput() AppSpecWorkerLogDestinationLogtailPtrOutput {
	return i.ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i *appSpecWorkerLogDestinationLogtailPtrType) ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationLogtailPtrOutput)
}

type AppSpecWorkerLogDestinationLogtailOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerLogDestinationLogtailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerLogDestinationLogtail)(nil)).Elem()
}

func (o AppSpecWorkerLogDestinationLogtailOutput) ToAppSpecWorkerLogDestinationLogtailOutput() AppSpecWorkerLogDestinationLogtailOutput {
	return o
}

func (o AppSpecWorkerLogDestinationLogtailOutput) ToAppSpecWorkerLogDestinationLogtailOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationLogtailOutput {
	return o
}

func (o AppSpecWorkerLogDestinationLogtailOutput) ToAppSpecWorkerLogDestinationLogtailPtrOutput() AppSpecWorkerLogDestinationLogtailPtrOutput {
	return o.ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (o AppSpecWorkerLogDestinationLogtailOutput) ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationLogtailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecWorkerLogDestinationLogtail) *AppSpecWorkerLogDestinationLogtail {
		return &v
	}).(AppSpecWorkerLogDestinationLogtailPtrOutput)
}

// Logtail token.
func (o AppSpecWorkerLogDestinationLogtailOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerLogDestinationLogtail) string { return v.Token }).(pulumi.StringOutput)
}

type AppSpecWorkerLogDestinationLogtailPtrOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerLogDestinationLogtailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerLogDestinationLogtail)(nil)).Elem()
}

func (o AppSpecWorkerLogDestinationLogtailPtrOutput) ToAppSpecWorkerLogDestinationLogtailPtrOutput() AppSpecWorkerLogDestinationLogtailPtrOutput {
	return o
}

func (o AppSpecWorkerLogDestinationLogtailPtrOutput) ToAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationLogtailPtrOutput {
	return o
}

func (o AppSpecWorkerLogDestinationLogtailPtrOutput) Elem() AppSpecWorkerLogDestinationLogtailOutput {
	return o.ApplyT(func(v *AppSpecWorkerLogDestinationLogtail) AppSpecWorkerLogDestinationLogtail {
		if v != nil {
			return *v
		}
		var ret AppSpecWorkerLogDestinationLogtail
		return ret
	}).(AppSpecWorkerLogDestinationLogtailOutput)
}

// Logtail token.
func (o AppSpecWorkerLogDestinationLogtailPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerLogDestinationLogtail) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type AppSpecWorkerLogDestinationPapertrail struct {
	// Datadog HTTP log intake endpoint.
	Endpoint string `pulumi:"endpoint"`
}

// AppSpecWorkerLogDestinationPapertrailInput is an input type that accepts AppSpecWorkerLogDestinationPapertrailArgs and AppSpecWorkerLogDestinationPapertrailOutput values.
// You can construct a concrete instance of `AppSpecWorkerLogDestinationPapertrailInput` via:
//
//          AppSpecWorkerLogDestinationPapertrailArgs{...}
type AppSpecWorkerLogDestinationPapertrailInput interface {
	pulumi.Input

	ToAppSpecWorkerLogDestinationPapertrailOutput() AppSpecWorkerLogDestinationPapertrailOutput
	ToAppSpecWorkerLogDestinationPapertrailOutputWithContext(context.Context) AppSpecWorkerLogDestinationPapertrailOutput
}

type AppSpecWorkerLogDestinationPapertrailArgs struct {
	// Datadog HTTP log intake endpoint.
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (AppSpecWorkerLogDestinationPapertrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerLogDestinationPapertrail)(nil)).Elem()
}

func (i AppSpecWorkerLogDestinationPapertrailArgs) ToAppSpecWorkerLogDestinationPapertrailOutput() AppSpecWorkerLogDestinationPapertrailOutput {
	return i.ToAppSpecWorkerLogDestinationPapertrailOutputWithContext(context.Background())
}

func (i AppSpecWorkerLogDestinationPapertrailArgs) ToAppSpecWorkerLogDestinationPapertrailOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationPapertrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationPapertrailOutput)
}

func (i AppSpecWorkerLogDestinationPapertrailArgs) ToAppSpecWorkerLogDestinationPapertrailPtrOutput() AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return i.ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i AppSpecWorkerLogDestinationPapertrailArgs) ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationPapertrailOutput).ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx)
}

// AppSpecWorkerLogDestinationPapertrailPtrInput is an input type that accepts AppSpecWorkerLogDestinationPapertrailArgs, AppSpecWorkerLogDestinationPapertrailPtr and AppSpecWorkerLogDestinationPapertrailPtrOutput values.
// You can construct a concrete instance of `AppSpecWorkerLogDestinationPapertrailPtrInput` via:
//
//          AppSpecWorkerLogDestinationPapertrailArgs{...}
//
//  or:
//
//          nil
type AppSpecWorkerLogDestinationPapertrailPtrInput interface {
	pulumi.Input

	ToAppSpecWorkerLogDestinationPapertrailPtrOutput() AppSpecWorkerLogDestinationPapertrailPtrOutput
	ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(context.Context) AppSpecWorkerLogDestinationPapertrailPtrOutput
}

type appSpecWorkerLogDestinationPapertrailPtrType AppSpecWorkerLogDestinationPapertrailArgs

func AppSpecWorkerLogDestinationPapertrailPtr(v *AppSpecWorkerLogDestinationPapertrailArgs) AppSpecWorkerLogDestinationPapertrailPtrInput {
	return (*appSpecWorkerLogDestinationPapertrailPtrType)(v)
}

func (*appSpecWorkerLogDestinationPapertrailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerLogDestinationPapertrail)(nil)).Elem()
}

func (i *appSpecWorkerLogDestinationPapertrailPtrType) ToAppSpecWorkerLogDestinationPapertrailPtrOutput() AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return i.ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i *appSpecWorkerLogDestinationPapertrailPtrType) ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AppSpecWorkerLogDestinationPapertrailPtrOutput)
}

type AppSpecWorkerLogDestinationPapertrailOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerLogDestinationPapertrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AppSpecWorkerLogDestinationPapertrail)(nil)).Elem()
}

func (o AppSpecWorkerLogDestinationPapertrailOutput) ToAppSpecWorkerLogDestinationPapertrailOutput() AppSpecWorkerLogDestinationPapertrailOutput {
	return o
}

func (o AppSpecWorkerLogDestinationPapertrailOutput) ToAppSpecWorkerLogDestinationPapertrailOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationPapertrailOutput {
	return o
}

func (o AppSpecWorkerLogDestinationPapertrailOutput) ToAppSpecWorkerLogDestinationPapertrailPtrOutput() AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o.ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (o AppSpecWorkerLogDestinationPapertrailOutput) ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v AppSpecWorkerLogDestinationPapertrail) *AppSpecWorkerLogDestinationPapertrail {
		return &v
	}).(AppSpecWorkerLogDestinationPapertrailPtrOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecWorkerLogDestinationPapertrailOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v AppSpecWorkerLogDestinationPapertrail) string { return v.Endpoint }).(pulumi.StringOutput)
}

type AppSpecWorkerLogDestinationPapertrailPtrOutput struct{ *pulumi.OutputState }

func (AppSpecWorkerLogDestinationPapertrailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**AppSpecWorkerLogDestinationPapertrail)(nil)).Elem()
}

func (o AppSpecWorkerLogDestinationPapertrailPtrOutput) ToAppSpecWorkerLogDestinationPapertrailPtrOutput() AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o
}

func (o AppSpecWorkerLogDestinationPapertrailPtrOutput) ToAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) AppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o
}

func (o AppSpecWorkerLogDestinationPapertrailPtrOutput) Elem() AppSpecWorkerLogDestinationPapertrailOutput {
	return o.ApplyT(func(v *AppSpecWorkerLogDestinationPapertrail) AppSpecWorkerLogDestinationPapertrail {
		if v != nil {
			return *v
		}
		var ret AppSpecWorkerLogDestinationPapertrail
		return ret
	}).(AppSpecWorkerLogDestinationPapertrailOutput)
}

// Datadog HTTP log intake endpoint.
func (o AppSpecWorkerLogDestinationPapertrailPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *AppSpecWorkerLogDestinationPapertrail) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type DatabaseClusterMaintenanceWindow struct {
	// The day of the week on which to apply maintenance updates.
	Day string `pulumi:"day"`
	// The hour in UTC at which maintenance updates will be applied in 24 hour format.
	Hour string `pulumi:"hour"`
}

// DatabaseClusterMaintenanceWindowInput is an input type that accepts DatabaseClusterMaintenanceWindowArgs and DatabaseClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `DatabaseClusterMaintenanceWindowInput` via:
//
//          DatabaseClusterMaintenanceWindowArgs{...}
type DatabaseClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToDatabaseClusterMaintenanceWindowOutput() DatabaseClusterMaintenanceWindowOutput
	ToDatabaseClusterMaintenanceWindowOutputWithContext(context.Context) DatabaseClusterMaintenanceWindowOutput
}

type DatabaseClusterMaintenanceWindowArgs struct {
	// The day of the week on which to apply maintenance updates.
	Day pulumi.StringInput `pulumi:"day"`
	// The hour in UTC at which maintenance updates will be applied in 24 hour format.
	Hour pulumi.StringInput `pulumi:"hour"`
}

func (DatabaseClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (i DatabaseClusterMaintenanceWindowArgs) ToDatabaseClusterMaintenanceWindowOutput() DatabaseClusterMaintenanceWindowOutput {
	return i.ToDatabaseClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i DatabaseClusterMaintenanceWindowArgs) ToDatabaseClusterMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseClusterMaintenanceWindowOutput)
}

// DatabaseClusterMaintenanceWindowArrayInput is an input type that accepts DatabaseClusterMaintenanceWindowArray and DatabaseClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `DatabaseClusterMaintenanceWindowArrayInput` via:
//
//          DatabaseClusterMaintenanceWindowArray{ DatabaseClusterMaintenanceWindowArgs{...} }
type DatabaseClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToDatabaseClusterMaintenanceWindowArrayOutput() DatabaseClusterMaintenanceWindowArrayOutput
	ToDatabaseClusterMaintenanceWindowArrayOutputWithContext(context.Context) DatabaseClusterMaintenanceWindowArrayOutput
}

type DatabaseClusterMaintenanceWindowArray []DatabaseClusterMaintenanceWindowInput

func (DatabaseClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (i DatabaseClusterMaintenanceWindowArray) ToDatabaseClusterMaintenanceWindowArrayOutput() DatabaseClusterMaintenanceWindowArrayOutput {
	return i.ToDatabaseClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i DatabaseClusterMaintenanceWindowArray) ToDatabaseClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) DatabaseClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseClusterMaintenanceWindowArrayOutput)
}

type DatabaseClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (DatabaseClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseClusterMaintenanceWindowOutput) ToDatabaseClusterMaintenanceWindowOutput() DatabaseClusterMaintenanceWindowOutput {
	return o
}

func (o DatabaseClusterMaintenanceWindowOutput) ToDatabaseClusterMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseClusterMaintenanceWindowOutput {
	return o
}

// The day of the week on which to apply maintenance updates.
func (o DatabaseClusterMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseClusterMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// The hour in UTC at which maintenance updates will be applied in 24 hour format.
func (o DatabaseClusterMaintenanceWindowOutput) Hour() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseClusterMaintenanceWindow) string { return v.Hour }).(pulumi.StringOutput)
}

type DatabaseClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (DatabaseClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseClusterMaintenanceWindowArrayOutput) ToDatabaseClusterMaintenanceWindowArrayOutput() DatabaseClusterMaintenanceWindowArrayOutput {
	return o
}

func (o DatabaseClusterMaintenanceWindowArrayOutput) ToDatabaseClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) DatabaseClusterMaintenanceWindowArrayOutput {
	return o
}

func (o DatabaseClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) DatabaseClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseClusterMaintenanceWindow {
		return vs[0].([]DatabaseClusterMaintenanceWindow)[vs[1].(int)]
	}).(DatabaseClusterMaintenanceWindowOutput)
}

type DatabaseFirewallRule struct {
	// The date and time when the firewall rule was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The type of resource that the firewall rule allows to access the database cluster. The possible values are: `droplet`, `k8s`, `ipAddr`, `tag`, or `app`.
	Type string `pulumi:"type"`
	// A unique identifier for the firewall rule.
	Uuid *string `pulumi:"uuid"`
	// The ID of the specific resource, the name of a tag applied to a group of resources, or the IP address that the firewall rule allows to access the database cluster.
	Value string `pulumi:"value"`
}

// DatabaseFirewallRuleInput is an input type that accepts DatabaseFirewallRuleArgs and DatabaseFirewallRuleOutput values.
// You can construct a concrete instance of `DatabaseFirewallRuleInput` via:
//
//          DatabaseFirewallRuleArgs{...}
type DatabaseFirewallRuleInput interface {
	pulumi.Input

	ToDatabaseFirewallRuleOutput() DatabaseFirewallRuleOutput
	ToDatabaseFirewallRuleOutputWithContext(context.Context) DatabaseFirewallRuleOutput
}

type DatabaseFirewallRuleArgs struct {
	// The date and time when the firewall rule was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The type of resource that the firewall rule allows to access the database cluster. The possible values are: `droplet`, `k8s`, `ipAddr`, `tag`, or `app`.
	Type pulumi.StringInput `pulumi:"type"`
	// A unique identifier for the firewall rule.
	Uuid pulumi.StringPtrInput `pulumi:"uuid"`
	// The ID of the specific resource, the name of a tag applied to a group of resources, or the IP address that the firewall rule allows to access the database cluster.
	Value pulumi.StringInput `pulumi:"value"`
}

func (DatabaseFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFirewallRule)(nil)).Elem()
}

func (i DatabaseFirewallRuleArgs) ToDatabaseFirewallRuleOutput() DatabaseFirewallRuleOutput {
	return i.ToDatabaseFirewallRuleOutputWithContext(context.Background())
}

func (i DatabaseFirewallRuleArgs) ToDatabaseFirewallRuleOutputWithContext(ctx context.Context) DatabaseFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFirewallRuleOutput)
}

// DatabaseFirewallRuleArrayInput is an input type that accepts DatabaseFirewallRuleArray and DatabaseFirewallRuleArrayOutput values.
// You can construct a concrete instance of `DatabaseFirewallRuleArrayInput` via:
//
//          DatabaseFirewallRuleArray{ DatabaseFirewallRuleArgs{...} }
type DatabaseFirewallRuleArrayInput interface {
	pulumi.Input

	ToDatabaseFirewallRuleArrayOutput() DatabaseFirewallRuleArrayOutput
	ToDatabaseFirewallRuleArrayOutputWithContext(context.Context) DatabaseFirewallRuleArrayOutput
}

type DatabaseFirewallRuleArray []DatabaseFirewallRuleInput

func (DatabaseFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFirewallRule)(nil)).Elem()
}

func (i DatabaseFirewallRuleArray) ToDatabaseFirewallRuleArrayOutput() DatabaseFirewallRuleArrayOutput {
	return i.ToDatabaseFirewallRuleArrayOutputWithContext(context.Background())
}

func (i DatabaseFirewallRuleArray) ToDatabaseFirewallRuleArrayOutputWithContext(ctx context.Context) DatabaseFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFirewallRuleArrayOutput)
}

type DatabaseFirewallRuleOutput struct{ *pulumi.OutputState }

func (DatabaseFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFirewallRule)(nil)).Elem()
}

func (o DatabaseFirewallRuleOutput) ToDatabaseFirewallRuleOutput() DatabaseFirewallRuleOutput {
	return o
}

func (o DatabaseFirewallRuleOutput) ToDatabaseFirewallRuleOutputWithContext(ctx context.Context) DatabaseFirewallRuleOutput {
	return o
}

// The date and time when the firewall rule was created.
func (o DatabaseFirewallRuleOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFirewallRule) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The type of resource that the firewall rule allows to access the database cluster. The possible values are: `droplet`, `k8s`, `ipAddr`, `tag`, or `app`.
func (o DatabaseFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseFirewallRule) string { return v.Type }).(pulumi.StringOutput)
}

// A unique identifier for the firewall rule.
func (o DatabaseFirewallRuleOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFirewallRule) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

// The ID of the specific resource, the name of a tag applied to a group of resources, or the IP address that the firewall rule allows to access the database cluster.
func (o DatabaseFirewallRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseFirewallRule) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFirewallRule)(nil)).Elem()
}

func (o DatabaseFirewallRuleArrayOutput) ToDatabaseFirewallRuleArrayOutput() DatabaseFirewallRuleArrayOutput {
	return o
}

func (o DatabaseFirewallRuleArrayOutput) ToDatabaseFirewallRuleArrayOutputWithContext(ctx context.Context) DatabaseFirewallRuleArrayOutput {
	return o
}

func (o DatabaseFirewallRuleArrayOutput) Index(i pulumi.IntInput) DatabaseFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseFirewallRule {
		return vs[0].([]DatabaseFirewallRule)[vs[1].(int)]
	}).(DatabaseFirewallRuleOutput)
}

type FirewallInboundRule struct {
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange *string `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol string `pulumi:"protocol"`
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
	// inbound traffic will be accepted.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// An array containing the IDs of
	// the Droplets from which the inbound traffic will be accepted.
	SourceDropletIds []int `pulumi:"sourceDropletIds"`
	// An array containing the IDs of
	// the Kubernetes clusters from which the inbound traffic will be accepted.
	SourceKubernetesIds []string `pulumi:"sourceKubernetesIds"`
	// An array containing the IDs
	// of the Load Balancers from which the inbound traffic will be accepted.
	SourceLoadBalancerUids []string `pulumi:"sourceLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets from which the inbound traffic
	// will be accepted.
	SourceTags []string `pulumi:"sourceTags"`
}

// FirewallInboundRuleInput is an input type that accepts FirewallInboundRuleArgs and FirewallInboundRuleOutput values.
// You can construct a concrete instance of `FirewallInboundRuleInput` via:
//
//          FirewallInboundRuleArgs{...}
type FirewallInboundRuleInput interface {
	pulumi.Input

	ToFirewallInboundRuleOutput() FirewallInboundRuleOutput
	ToFirewallInboundRuleOutputWithContext(context.Context) FirewallInboundRuleOutput
}

type FirewallInboundRuleArgs struct {
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
	// inbound traffic will be accepted.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// An array containing the IDs of
	// the Droplets from which the inbound traffic will be accepted.
	SourceDropletIds pulumi.IntArrayInput `pulumi:"sourceDropletIds"`
	// An array containing the IDs of
	// the Kubernetes clusters from which the inbound traffic will be accepted.
	SourceKubernetesIds pulumi.StringArrayInput `pulumi:"sourceKubernetesIds"`
	// An array containing the IDs
	// of the Load Balancers from which the inbound traffic will be accepted.
	SourceLoadBalancerUids pulumi.StringArrayInput `pulumi:"sourceLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets from which the inbound traffic
	// will be accepted.
	SourceTags pulumi.StringArrayInput `pulumi:"sourceTags"`
}

func (FirewallInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInboundRule)(nil)).Elem()
}

func (i FirewallInboundRuleArgs) ToFirewallInboundRuleOutput() FirewallInboundRuleOutput {
	return i.ToFirewallInboundRuleOutputWithContext(context.Background())
}

func (i FirewallInboundRuleArgs) ToFirewallInboundRuleOutputWithContext(ctx context.Context) FirewallInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInboundRuleOutput)
}

// FirewallInboundRuleArrayInput is an input type that accepts FirewallInboundRuleArray and FirewallInboundRuleArrayOutput values.
// You can construct a concrete instance of `FirewallInboundRuleArrayInput` via:
//
//          FirewallInboundRuleArray{ FirewallInboundRuleArgs{...} }
type FirewallInboundRuleArrayInput interface {
	pulumi.Input

	ToFirewallInboundRuleArrayOutput() FirewallInboundRuleArrayOutput
	ToFirewallInboundRuleArrayOutputWithContext(context.Context) FirewallInboundRuleArrayOutput
}

type FirewallInboundRuleArray []FirewallInboundRuleInput

func (FirewallInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInboundRule)(nil)).Elem()
}

func (i FirewallInboundRuleArray) ToFirewallInboundRuleArrayOutput() FirewallInboundRuleArrayOutput {
	return i.ToFirewallInboundRuleArrayOutputWithContext(context.Background())
}

func (i FirewallInboundRuleArray) ToFirewallInboundRuleArrayOutputWithContext(ctx context.Context) FirewallInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInboundRuleArrayOutput)
}

type FirewallInboundRuleOutput struct{ *pulumi.OutputState }

func (FirewallInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInboundRule)(nil)).Elem()
}

func (o FirewallInboundRuleOutput) ToFirewallInboundRuleOutput() FirewallInboundRuleOutput {
	return o
}

func (o FirewallInboundRuleOutput) ToFirewallInboundRuleOutputWithContext(ctx context.Context) FirewallInboundRuleOutput {
	return o
}

// The ports on which traffic will be allowed
// specified as a string containing a single port, a range (e.g. "8000-9000"),
// or "1-65535" to open all ports for a protocol. Required for when protocol is
// `tcp` or `udp`.
func (o FirewallInboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The type of traffic to be allowed.
// This may be one of "tcp", "udp", or "icmp".
func (o FirewallInboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// An array of strings containing the IPv4
// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
// inbound traffic will be accepted.
func (o FirewallInboundRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// An array containing the IDs of
// the Droplets from which the inbound traffic will be accepted.
func (o FirewallInboundRuleOutput) SourceDropletIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []int { return v.SourceDropletIds }).(pulumi.IntArrayOutput)
}

// An array containing the IDs of
// the Kubernetes clusters from which the inbound traffic will be accepted.
func (o FirewallInboundRuleOutput) SourceKubernetesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []string { return v.SourceKubernetesIds }).(pulumi.StringArrayOutput)
}

// An array containing the IDs
// of the Load Balancers from which the inbound traffic will be accepted.
func (o FirewallInboundRuleOutput) SourceLoadBalancerUids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []string { return v.SourceLoadBalancerUids }).(pulumi.StringArrayOutput)
}

// An array containing the names of Tags
// corresponding to groups of Droplets from which the inbound traffic
// will be accepted.
func (o FirewallInboundRuleOutput) SourceTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []string { return v.SourceTags }).(pulumi.StringArrayOutput)
}

type FirewallInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInboundRule)(nil)).Elem()
}

func (o FirewallInboundRuleArrayOutput) ToFirewallInboundRuleArrayOutput() FirewallInboundRuleArrayOutput {
	return o
}

func (o FirewallInboundRuleArrayOutput) ToFirewallInboundRuleArrayOutputWithContext(ctx context.Context) FirewallInboundRuleArrayOutput {
	return o
}

func (o FirewallInboundRuleArrayOutput) Index(i pulumi.IntInput) FirewallInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInboundRule {
		return vs[0].([]FirewallInboundRule)[vs[1].(int)]
	}).(FirewallInboundRuleOutput)
}

type FirewallOutboundRule struct {
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
	// outbound traffic will be allowed.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// An array containing the IDs of
	// the Droplets to which the outbound traffic will be allowed.
	DestinationDropletIds []int `pulumi:"destinationDropletIds"`
	// An array containing the IDs of
	// the Kubernetes clusters to which the outbound traffic will be allowed.
	DestinationKubernetesIds []string `pulumi:"destinationKubernetesIds"`
	// An array containing the IDs
	// of the Load Balancers to which the outbound traffic will be allowed.
	DestinationLoadBalancerUids []string `pulumi:"destinationLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets to which the outbound traffic will
	// be allowed.
	DestinationTags []string `pulumi:"destinationTags"`
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange *string `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol string `pulumi:"protocol"`
}

// FirewallOutboundRuleInput is an input type that accepts FirewallOutboundRuleArgs and FirewallOutboundRuleOutput values.
// You can construct a concrete instance of `FirewallOutboundRuleInput` via:
//
//          FirewallOutboundRuleArgs{...}
type FirewallOutboundRuleInput interface {
	pulumi.Input

	ToFirewallOutboundRuleOutput() FirewallOutboundRuleOutput
	ToFirewallOutboundRuleOutputWithContext(context.Context) FirewallOutboundRuleOutput
}

type FirewallOutboundRuleArgs struct {
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
	// outbound traffic will be allowed.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// An array containing the IDs of
	// the Droplets to which the outbound traffic will be allowed.
	DestinationDropletIds pulumi.IntArrayInput `pulumi:"destinationDropletIds"`
	// An array containing the IDs of
	// the Kubernetes clusters to which the outbound traffic will be allowed.
	DestinationKubernetesIds pulumi.StringArrayInput `pulumi:"destinationKubernetesIds"`
	// An array containing the IDs
	// of the Load Balancers to which the outbound traffic will be allowed.
	DestinationLoadBalancerUids pulumi.StringArrayInput `pulumi:"destinationLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets to which the outbound traffic will
	// be allowed.
	DestinationTags pulumi.StringArrayInput `pulumi:"destinationTags"`
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (FirewallOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallOutboundRule)(nil)).Elem()
}

func (i FirewallOutboundRuleArgs) ToFirewallOutboundRuleOutput() FirewallOutboundRuleOutput {
	return i.ToFirewallOutboundRuleOutputWithContext(context.Background())
}

func (i FirewallOutboundRuleArgs) ToFirewallOutboundRuleOutputWithContext(ctx context.Context) FirewallOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutboundRuleOutput)
}

// FirewallOutboundRuleArrayInput is an input type that accepts FirewallOutboundRuleArray and FirewallOutboundRuleArrayOutput values.
// You can construct a concrete instance of `FirewallOutboundRuleArrayInput` via:
//
//          FirewallOutboundRuleArray{ FirewallOutboundRuleArgs{...} }
type FirewallOutboundRuleArrayInput interface {
	pulumi.Input

	ToFirewallOutboundRuleArrayOutput() FirewallOutboundRuleArrayOutput
	ToFirewallOutboundRuleArrayOutputWithContext(context.Context) FirewallOutboundRuleArrayOutput
}

type FirewallOutboundRuleArray []FirewallOutboundRuleInput

func (FirewallOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallOutboundRule)(nil)).Elem()
}

func (i FirewallOutboundRuleArray) ToFirewallOutboundRuleArrayOutput() FirewallOutboundRuleArrayOutput {
	return i.ToFirewallOutboundRuleArrayOutputWithContext(context.Background())
}

func (i FirewallOutboundRuleArray) ToFirewallOutboundRuleArrayOutputWithContext(ctx context.Context) FirewallOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutboundRuleArrayOutput)
}

type FirewallOutboundRuleOutput struct{ *pulumi.OutputState }

func (FirewallOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallOutboundRule)(nil)).Elem()
}

func (o FirewallOutboundRuleOutput) ToFirewallOutboundRuleOutput() FirewallOutboundRuleOutput {
	return o
}

func (o FirewallOutboundRuleOutput) ToFirewallOutboundRuleOutputWithContext(ctx context.Context) FirewallOutboundRuleOutput {
	return o
}

// An array of strings containing the IPv4
// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
// outbound traffic will be allowed.
func (o FirewallOutboundRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// An array containing the IDs of
// the Droplets to which the outbound traffic will be allowed.
func (o FirewallOutboundRuleOutput) DestinationDropletIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []int { return v.DestinationDropletIds }).(pulumi.IntArrayOutput)
}

// An array containing the IDs of
// the Kubernetes clusters to which the outbound traffic will be allowed.
func (o FirewallOutboundRuleOutput) DestinationKubernetesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []string { return v.DestinationKubernetesIds }).(pulumi.StringArrayOutput)
}

// An array containing the IDs
// of the Load Balancers to which the outbound traffic will be allowed.
func (o FirewallOutboundRuleOutput) DestinationLoadBalancerUids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []string { return v.DestinationLoadBalancerUids }).(pulumi.StringArrayOutput)
}

// An array containing the names of Tags
// corresponding to groups of Droplets to which the outbound traffic will
// be allowed.
func (o FirewallOutboundRuleOutput) DestinationTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []string { return v.DestinationTags }).(pulumi.StringArrayOutput)
}

// The ports on which traffic will be allowed
// specified as a string containing a single port, a range (e.g. "8000-9000"),
// or "1-65535" to open all ports for a protocol. Required for when protocol is
// `tcp` or `udp`.
func (o FirewallOutboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallOutboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The type of traffic to be allowed.
// This may be one of "tcp", "udp", or "icmp".
func (o FirewallOutboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallOutboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type FirewallOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallOutboundRule)(nil)).Elem()
}

func (o FirewallOutboundRuleArrayOutput) ToFirewallOutboundRuleArrayOutput() FirewallOutboundRuleArrayOutput {
	return o
}

func (o FirewallOutboundRuleArrayOutput) ToFirewallOutboundRuleArrayOutputWithContext(ctx context.Context) FirewallOutboundRuleArrayOutput {
	return o
}

func (o FirewallOutboundRuleArrayOutput) Index(i pulumi.IntInput) FirewallOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallOutboundRule {
		return vs[0].([]FirewallOutboundRule)[vs[1].(int)]
	}).(FirewallOutboundRuleOutput)
}

type FirewallPendingChange struct {
	DropletId *int  `pulumi:"dropletId"`
	Removing  *bool `pulumi:"removing"`
	// A status string indicating the current state of the Firewall.
	// This can be "waiting", "succeeded", or "failed".
	Status *string `pulumi:"status"`
}

// FirewallPendingChangeInput is an input type that accepts FirewallPendingChangeArgs and FirewallPendingChangeOutput values.
// You can construct a concrete instance of `FirewallPendingChangeInput` via:
//
//          FirewallPendingChangeArgs{...}
type FirewallPendingChangeInput interface {
	pulumi.Input

	ToFirewallPendingChangeOutput() FirewallPendingChangeOutput
	ToFirewallPendingChangeOutputWithContext(context.Context) FirewallPendingChangeOutput
}

type FirewallPendingChangeArgs struct {
	DropletId pulumi.IntPtrInput  `pulumi:"dropletId"`
	Removing  pulumi.BoolPtrInput `pulumi:"removing"`
	// A status string indicating the current state of the Firewall.
	// This can be "waiting", "succeeded", or "failed".
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (FirewallPendingChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPendingChange)(nil)).Elem()
}

func (i FirewallPendingChangeArgs) ToFirewallPendingChangeOutput() FirewallPendingChangeOutput {
	return i.ToFirewallPendingChangeOutputWithContext(context.Background())
}

func (i FirewallPendingChangeArgs) ToFirewallPendingChangeOutputWithContext(ctx context.Context) FirewallPendingChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPendingChangeOutput)
}

// FirewallPendingChangeArrayInput is an input type that accepts FirewallPendingChangeArray and FirewallPendingChangeArrayOutput values.
// You can construct a concrete instance of `FirewallPendingChangeArrayInput` via:
//
//          FirewallPendingChangeArray{ FirewallPendingChangeArgs{...} }
type FirewallPendingChangeArrayInput interface {
	pulumi.Input

	ToFirewallPendingChangeArrayOutput() FirewallPendingChangeArrayOutput
	ToFirewallPendingChangeArrayOutputWithContext(context.Context) FirewallPendingChangeArrayOutput
}

type FirewallPendingChangeArray []FirewallPendingChangeInput

func (FirewallPendingChangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPendingChange)(nil)).Elem()
}

func (i FirewallPendingChangeArray) ToFirewallPendingChangeArrayOutput() FirewallPendingChangeArrayOutput {
	return i.ToFirewallPendingChangeArrayOutputWithContext(context.Background())
}

func (i FirewallPendingChangeArray) ToFirewallPendingChangeArrayOutputWithContext(ctx context.Context) FirewallPendingChangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPendingChangeArrayOutput)
}

type FirewallPendingChangeOutput struct{ *pulumi.OutputState }

func (FirewallPendingChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPendingChange)(nil)).Elem()
}

func (o FirewallPendingChangeOutput) ToFirewallPendingChangeOutput() FirewallPendingChangeOutput {
	return o
}

func (o FirewallPendingChangeOutput) ToFirewallPendingChangeOutputWithContext(ctx context.Context) FirewallPendingChangeOutput {
	return o
}

func (o FirewallPendingChangeOutput) DropletId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPendingChange) *int { return v.DropletId }).(pulumi.IntPtrOutput)
}

func (o FirewallPendingChangeOutput) Removing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPendingChange) *bool { return v.Removing }).(pulumi.BoolPtrOutput)
}

// A status string indicating the current state of the Firewall.
// This can be "waiting", "succeeded", or "failed".
func (o FirewallPendingChangeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPendingChange) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FirewallPendingChangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallPendingChangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPendingChange)(nil)).Elem()
}

func (o FirewallPendingChangeArrayOutput) ToFirewallPendingChangeArrayOutput() FirewallPendingChangeArrayOutput {
	return o
}

func (o FirewallPendingChangeArrayOutput) ToFirewallPendingChangeArrayOutputWithContext(ctx context.Context) FirewallPendingChangeArrayOutput {
	return o
}

func (o FirewallPendingChangeArrayOutput) Index(i pulumi.IntInput) FirewallPendingChangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPendingChange {
		return vs[0].([]FirewallPendingChange)[vs[1].(int)]
	}).(FirewallPendingChangeOutput)
}

type KubernetesClusterKubeConfig struct {
	// The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	ClientCertificate *string `pulumi:"clientCertificate"`
	// The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	ClientKey *string `pulumi:"clientKey"`
	// The base64 encoded public certificate for the cluster's certificate authority.
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	// The date and time when the credentials will expire and need to be regenerated.
	ExpiresAt *string `pulumi:"expiresAt"`
	// The URL of the API server on the Kubernetes master node.
	Host *string `pulumi:"host"`
	// The full contents of the Kubernetes cluster's kubeconfig file.
	RawConfig *string `pulumi:"rawConfig"`
	// The DigitalOcean API access token used by clients to access the cluster.
	Token *string `pulumi:"token"`
}

// KubernetesClusterKubeConfigInput is an input type that accepts KubernetesClusterKubeConfigArgs and KubernetesClusterKubeConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeConfigInput` via:
//
//          KubernetesClusterKubeConfigArgs{...}
type KubernetesClusterKubeConfigInput interface {
	pulumi.Input

	ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput
	ToKubernetesClusterKubeConfigOutputWithContext(context.Context) KubernetesClusterKubeConfigOutput
}

type KubernetesClusterKubeConfigArgs struct {
	// The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	ClientCertificate pulumi.StringPtrInput `pulumi:"clientCertificate"`
	// The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	ClientKey pulumi.StringPtrInput `pulumi:"clientKey"`
	// The base64 encoded public certificate for the cluster's certificate authority.
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	// The date and time when the credentials will expire and need to be regenerated.
	ExpiresAt pulumi.StringPtrInput `pulumi:"expiresAt"`
	// The URL of the API server on the Kubernetes master node.
	Host pulumi.StringPtrInput `pulumi:"host"`
	// The full contents of the Kubernetes cluster's kubeconfig file.
	RawConfig pulumi.StringPtrInput `pulumi:"rawConfig"`
	// The DigitalOcean API access token used by clients to access the cluster.
	Token pulumi.StringPtrInput `pulumi:"token"`
}

func (KubernetesClusterKubeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeConfigArgs) ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput {
	return i.ToKubernetesClusterKubeConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeConfigArgs) ToKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeConfigOutput)
}

// KubernetesClusterKubeConfigArrayInput is an input type that accepts KubernetesClusterKubeConfigArray and KubernetesClusterKubeConfigArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeConfigArrayInput` via:
//
//          KubernetesClusterKubeConfigArray{ KubernetesClusterKubeConfigArgs{...} }
type KubernetesClusterKubeConfigArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput
	ToKubernetesClusterKubeConfigArrayOutputWithContext(context.Context) KubernetesClusterKubeConfigArrayOutput
}

type KubernetesClusterKubeConfigArray []KubernetesClusterKubeConfigInput

func (KubernetesClusterKubeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeConfigArray) ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput {
	return i.ToKubernetesClusterKubeConfigArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeConfigArray) ToKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeConfigArrayOutput)
}

type KubernetesClusterKubeConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeConfigOutput) ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput {
	return o
}

func (o KubernetesClusterKubeConfigOutput) ToKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigOutput {
	return o
}

// The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
func (o KubernetesClusterKubeConfigOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

// The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
func (o KubernetesClusterKubeConfigOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

// The base64 encoded public certificate for the cluster's certificate authority.
func (o KubernetesClusterKubeConfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

// The date and time when the credentials will expire and need to be regenerated.
func (o KubernetesClusterKubeConfigOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

// The URL of the API server on the Kubernetes master node.
func (o KubernetesClusterKubeConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

// The full contents of the Kubernetes cluster's kubeconfig file.
func (o KubernetesClusterKubeConfigOutput) RawConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.RawConfig }).(pulumi.StringPtrOutput)
}

// The DigitalOcean API access token used by clients to access the cluster.
func (o KubernetesClusterKubeConfigOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeConfigArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeConfigArrayOutput) ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeConfigArrayOutput) ToKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeConfigArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeConfig {
		return vs[0].([]KubernetesClusterKubeConfig)[vs[1].(int)]
	}).(KubernetesClusterKubeConfigOutput)
}

type KubernetesClusterMaintenancePolicy struct {
	// The day of the maintenance window policy. May be one of "monday" through "sunday", or "any" to indicate an arbitrary week day.
	Day      *string `pulumi:"day"`
	Duration *string `pulumi:"duration"`
	// The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., 15:00).
	StartTime *string `pulumi:"startTime"`
}

// KubernetesClusterMaintenancePolicyInput is an input type that accepts KubernetesClusterMaintenancePolicyArgs and KubernetesClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenancePolicyInput` via:
//
//          KubernetesClusterMaintenancePolicyArgs{...}
type KubernetesClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenancePolicyOutput() KubernetesClusterMaintenancePolicyOutput
	ToKubernetesClusterMaintenancePolicyOutputWithContext(context.Context) KubernetesClusterMaintenancePolicyOutput
}

type KubernetesClusterMaintenancePolicyArgs struct {
	// The day of the maintenance window policy. May be one of "monday" through "sunday", or "any" to indicate an arbitrary week day.
	Day      pulumi.StringPtrInput `pulumi:"day"`
	Duration pulumi.StringPtrInput `pulumi:"duration"`
	// The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., 15:00).
	StartTime pulumi.StringPtrInput `pulumi:"startTime"`
}

func (KubernetesClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenancePolicy)(nil)).Elem()
}

func (i KubernetesClusterMaintenancePolicyArgs) ToKubernetesClusterMaintenancePolicyOutput() KubernetesClusterMaintenancePolicyOutput {
	return i.ToKubernetesClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenancePolicyArgs) ToKubernetesClusterMaintenancePolicyOutputWithContext(ctx context.Context) KubernetesClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenancePolicyOutput)
}

func (i KubernetesClusterMaintenancePolicyArgs) ToKubernetesClusterMaintenancePolicyPtrOutput() KubernetesClusterMaintenancePolicyPtrOutput {
	return i.ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterMaintenancePolicyArgs) ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenancePolicyOutput).ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(ctx)
}

// KubernetesClusterMaintenancePolicyPtrInput is an input type that accepts KubernetesClusterMaintenancePolicyArgs, KubernetesClusterMaintenancePolicyPtr and KubernetesClusterMaintenancePolicyPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterMaintenancePolicyPtrInput` via:
//
//          KubernetesClusterMaintenancePolicyArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterMaintenancePolicyPtrInput interface {
	pulumi.Input

	ToKubernetesClusterMaintenancePolicyPtrOutput() KubernetesClusterMaintenancePolicyPtrOutput
	ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(context.Context) KubernetesClusterMaintenancePolicyPtrOutput
}

type kubernetesClusterMaintenancePolicyPtrType KubernetesClusterMaintenancePolicyArgs

func KubernetesClusterMaintenancePolicyPtr(v *KubernetesClusterMaintenancePolicyArgs) KubernetesClusterMaintenancePolicyPtrInput {
	return (*kubernetesClusterMaintenancePolicyPtrType)(v)
}

func (*kubernetesClusterMaintenancePolicyPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaintenancePolicy)(nil)).Elem()
}

func (i *kubernetesClusterMaintenancePolicyPtrType) ToKubernetesClusterMaintenancePolicyPtrOutput() KubernetesClusterMaintenancePolicyPtrOutput {
	return i.ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterMaintenancePolicyPtrType) ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenancePolicyPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterMaintenancePolicyPtrOutput)
}

type KubernetesClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterMaintenancePolicy)(nil)).Elem()
}

func (o KubernetesClusterMaintenancePolicyOutput) ToKubernetesClusterMaintenancePolicyOutput() KubernetesClusterMaintenancePolicyOutput {
	return o
}

func (o KubernetesClusterMaintenancePolicyOutput) ToKubernetesClusterMaintenancePolicyOutputWithContext(ctx context.Context) KubernetesClusterMaintenancePolicyOutput {
	return o
}

func (o KubernetesClusterMaintenancePolicyOutput) ToKubernetesClusterMaintenancePolicyPtrOutput() KubernetesClusterMaintenancePolicyPtrOutput {
	return o.ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterMaintenancePolicyOutput) ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenancePolicyPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterMaintenancePolicy) *KubernetesClusterMaintenancePolicy {
		return &v
	}).(KubernetesClusterMaintenancePolicyPtrOutput)
}

// The day of the maintenance window policy. May be one of "monday" through "sunday", or "any" to indicate an arbitrary week day.
func (o KubernetesClusterMaintenancePolicyOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenancePolicy) *string { return v.Day }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterMaintenancePolicyOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenancePolicy) *string { return v.Duration }).(pulumi.StringPtrOutput)
}

// The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., 15:00).
func (o KubernetesClusterMaintenancePolicyOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterMaintenancePolicy) *string { return v.StartTime }).(pulumi.StringPtrOutput)
}

type KubernetesClusterMaintenancePolicyPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterMaintenancePolicyPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterMaintenancePolicy)(nil)).Elem()
}

func (o KubernetesClusterMaintenancePolicyPtrOutput) ToKubernetesClusterMaintenancePolicyPtrOutput() KubernetesClusterMaintenancePolicyPtrOutput {
	return o
}

func (o KubernetesClusterMaintenancePolicyPtrOutput) ToKubernetesClusterMaintenancePolicyPtrOutputWithContext(ctx context.Context) KubernetesClusterMaintenancePolicyPtrOutput {
	return o
}

func (o KubernetesClusterMaintenancePolicyPtrOutput) Elem() KubernetesClusterMaintenancePolicyOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenancePolicy) KubernetesClusterMaintenancePolicy {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterMaintenancePolicy
		return ret
	}).(KubernetesClusterMaintenancePolicyOutput)
}

// The day of the maintenance window policy. May be one of "monday" through "sunday", or "any" to indicate an arbitrary week day.
func (o KubernetesClusterMaintenancePolicyPtrOutput) Day() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Day
	}).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterMaintenancePolicyPtrOutput) Duration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.Duration
	}).(pulumi.StringPtrOutput)
}

// The start time in UTC of the maintenance window policy in 24-hour clock format / HH:MM notation (e.g., 15:00).
func (o KubernetesClusterMaintenancePolicyPtrOutput) StartTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterMaintenancePolicy) *string {
		if v == nil {
			return nil
		}
		return v.StartTime
	}).(pulumi.StringPtrOutput)
}

type KubernetesClusterNodePool struct {
	// A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
	ActualNodeCount *int `pulumi:"actualNodeCount"`
	// Enable auto-scaling of the number of nodes in the node pool within the given min/max range.
	AutoScale *bool `pulumi:"autoScale"`
	// A unique ID that can be used to identify and reference the node.
	Id *string `pulumi:"id"`
	// A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
	Labels map[string]string `pulumi:"labels"`
	// If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
	MaxNodes *int `pulumi:"maxNodes"`
	// If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
	MinNodes *int `pulumi:"minNodes"`
	// A name for the node pool.
	Name string `pulumi:"name"`
	// The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.
	NodeCount *int `pulumi:"nodeCount"`
	// A list of nodes in the pool. Each node exports the following attributes:
	Nodes []KubernetesClusterNodePoolNode `pulumi:"nodes"`
	// The slug identifier for the type of Droplet to be used as workers in the node pool.
	Size string `pulumi:"size"`
	// A list of tag names to be applied to the Kubernetes cluster.
	Tags []string `pulumi:"tags"`
	// A block representing a taint applied to all nodes in the pool. Each taint exports the following attributes (taints must be unique by key and effect pair):
	Taints []KubernetesClusterNodePoolTaint `pulumi:"taints"`
}

// KubernetesClusterNodePoolInput is an input type that accepts KubernetesClusterNodePoolArgs and KubernetesClusterNodePoolOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolInput` via:
//
//          KubernetesClusterNodePoolArgs{...}
type KubernetesClusterNodePoolInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput
	ToKubernetesClusterNodePoolOutputWithContext(context.Context) KubernetesClusterNodePoolOutput
}

type KubernetesClusterNodePoolArgs struct {
	// A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
	ActualNodeCount pulumi.IntPtrInput `pulumi:"actualNodeCount"`
	// Enable auto-scaling of the number of nodes in the node pool within the given min/max range.
	AutoScale pulumi.BoolPtrInput `pulumi:"autoScale"`
	// A unique ID that can be used to identify and reference the node.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
	MaxNodes pulumi.IntPtrInput `pulumi:"maxNodes"`
	// If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
	MinNodes pulumi.IntPtrInput `pulumi:"minNodes"`
	// A name for the node pool.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.
	NodeCount pulumi.IntPtrInput `pulumi:"nodeCount"`
	// A list of nodes in the pool. Each node exports the following attributes:
	Nodes KubernetesClusterNodePoolNodeArrayInput `pulumi:"nodes"`
	// The slug identifier for the type of Droplet to be used as workers in the node pool.
	Size pulumi.StringInput `pulumi:"size"`
	// A list of tag names to be applied to the Kubernetes cluster.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A block representing a taint applied to all nodes in the pool. Each taint exports the following attributes (taints must be unique by key and effect pair):
	Taints KubernetesClusterNodePoolTaintArrayInput `pulumi:"taints"`
}

func (KubernetesClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePool)(nil)).Elem()
}

func (i KubernetesClusterNodePoolArgs) ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput {
	return i.ToKubernetesClusterNodePoolOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolArgs) ToKubernetesClusterNodePoolOutputWithContext(ctx context.Context) KubernetesClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolOutput)
}

func (i KubernetesClusterNodePoolArgs) ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput {
	return i.ToKubernetesClusterNodePoolPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolArgs) ToKubernetesClusterNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolOutput).ToKubernetesClusterNodePoolPtrOutputWithContext(ctx)
}

// KubernetesClusterNodePoolPtrInput is an input type that accepts KubernetesClusterNodePoolArgs, KubernetesClusterNodePoolPtr and KubernetesClusterNodePoolPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolPtrInput` via:
//
//          KubernetesClusterNodePoolArgs{...}
//
//  or:
//
//          nil
type KubernetesClusterNodePoolPtrInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput
	ToKubernetesClusterNodePoolPtrOutputWithContext(context.Context) KubernetesClusterNodePoolPtrOutput
}

type kubernetesClusterNodePoolPtrType KubernetesClusterNodePoolArgs

func KubernetesClusterNodePoolPtr(v *KubernetesClusterNodePoolArgs) KubernetesClusterNodePoolPtrInput {
	return (*kubernetesClusterNodePoolPtrType)(v)
}

func (*kubernetesClusterNodePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePool)(nil)).Elem()
}

func (i *kubernetesClusterNodePoolPtrType) ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput {
	return i.ToKubernetesClusterNodePoolPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNodePoolPtrType) ToKubernetesClusterNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolPtrOutput)
}

type KubernetesClusterNodePoolOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePool)(nil)).Elem()
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput {
	return o
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolOutputWithContext(ctx context.Context) KubernetesClusterNodePoolOutput {
	return o
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput {
	return o.ToKubernetesClusterNodePoolPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v KubernetesClusterNodePool) *KubernetesClusterNodePool {
		return &v
	}).(KubernetesClusterNodePoolPtrOutput)
}

// A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
func (o KubernetesClusterNodePoolOutput) ActualNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.ActualNodeCount }).(pulumi.IntPtrOutput)
}

// Enable auto-scaling of the number of nodes in the node pool within the given min/max range.
func (o KubernetesClusterNodePoolOutput) AutoScale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *bool { return v.AutoScale }).(pulumi.BoolPtrOutput)
}

// A unique ID that can be used to identify and reference the node.
func (o KubernetesClusterNodePoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
func (o KubernetesClusterNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
func (o KubernetesClusterNodePoolOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.MaxNodes }).(pulumi.IntPtrOutput)
}

// If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
func (o KubernetesClusterNodePoolOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.MinNodes }).(pulumi.IntPtrOutput)
}

// A name for the node pool.
func (o KubernetesClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.
func (o KubernetesClusterNodePoolOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

// A list of nodes in the pool. Each node exports the following attributes:
func (o KubernetesClusterNodePoolOutput) Nodes() KubernetesClusterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) []KubernetesClusterNodePoolNode { return v.Nodes }).(KubernetesClusterNodePoolNodeArrayOutput)
}

// The slug identifier for the type of Droplet to be used as workers in the node pool.
func (o KubernetesClusterNodePoolOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) string { return v.Size }).(pulumi.StringOutput)
}

// A list of tag names to be applied to the Kubernetes cluster.
func (o KubernetesClusterNodePoolOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A block representing a taint applied to all nodes in the pool. Each taint exports the following attributes (taints must be unique by key and effect pair):
func (o KubernetesClusterNodePoolOutput) Taints() KubernetesClusterNodePoolTaintArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) []KubernetesClusterNodePoolTaint { return v.Taints }).(KubernetesClusterNodePoolTaintArrayOutput)
}

type KubernetesClusterNodePoolPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePool)(nil)).Elem()
}

func (o KubernetesClusterNodePoolPtrOutput) ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolPtrOutput) ToKubernetesClusterNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolPtrOutput) Elem() KubernetesClusterNodePoolOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) KubernetesClusterNodePool {
		if v != nil {
			return *v
		}
		var ret KubernetesClusterNodePool
		return ret
	}).(KubernetesClusterNodePoolOutput)
}

// A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
func (o KubernetesClusterNodePoolPtrOutput) ActualNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) *int {
		if v == nil {
			return nil
		}
		return v.ActualNodeCount
	}).(pulumi.IntPtrOutput)
}

// Enable auto-scaling of the number of nodes in the node pool within the given min/max range.
func (o KubernetesClusterNodePoolPtrOutput) AutoScale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) *bool {
		if v == nil {
			return nil
		}
		return v.AutoScale
	}).(pulumi.BoolPtrOutput)
}

// A unique ID that can be used to identify and reference the node.
func (o KubernetesClusterNodePoolPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

// A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
func (o KubernetesClusterNodePoolPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) map[string]string {
		if v == nil {
			return nil
		}
		return v.Labels
	}).(pulumi.StringMapOutput)
}

// If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
func (o KubernetesClusterNodePoolPtrOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) *int {
		if v == nil {
			return nil
		}
		return v.MaxNodes
	}).(pulumi.IntPtrOutput)
}

// If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
func (o KubernetesClusterNodePoolPtrOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) *int {
		if v == nil {
			return nil
		}
		return v.MinNodes
	}).(pulumi.IntPtrOutput)
}

// A name for the node pool.
func (o KubernetesClusterNodePoolPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.
func (o KubernetesClusterNodePoolPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) *int {
		if v == nil {
			return nil
		}
		return v.NodeCount
	}).(pulumi.IntPtrOutput)
}

// A list of nodes in the pool. Each node exports the following attributes:
func (o KubernetesClusterNodePoolPtrOutput) Nodes() KubernetesClusterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) []KubernetesClusterNodePoolNode {
		if v == nil {
			return nil
		}
		return v.Nodes
	}).(KubernetesClusterNodePoolNodeArrayOutput)
}

// The slug identifier for the type of Droplet to be used as workers in the node pool.
func (o KubernetesClusterNodePoolPtrOutput) Size() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) *string {
		if v == nil {
			return nil
		}
		return &v.Size
	}).(pulumi.StringPtrOutput)
}

// A list of tag names to be applied to the Kubernetes cluster.
func (o KubernetesClusterNodePoolPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

// A block representing a taint applied to all nodes in the pool. Each taint exports the following attributes (taints must be unique by key and effect pair):
func (o KubernetesClusterNodePoolPtrOutput) Taints() KubernetesClusterNodePoolTaintArrayOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) []KubernetesClusterNodePoolTaint {
		if v == nil {
			return nil
		}
		return v.Taints
	}).(KubernetesClusterNodePoolTaintArrayOutput)
}

type KubernetesClusterNodePoolNode struct {
	// The date and time when the node was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The id of the node's droplet
	DropletId *string `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node.
	Id *string `pulumi:"id"`
	// A name for the node pool.
	Name *string `pulumi:"name"`
	// A string indicating the current status of the individual node.
	Status *string `pulumi:"status"`
	// The date and time when the node was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// KubernetesClusterNodePoolNodeInput is an input type that accepts KubernetesClusterNodePoolNodeArgs and KubernetesClusterNodePoolNodeOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolNodeInput` via:
//
//          KubernetesClusterNodePoolNodeArgs{...}
type KubernetesClusterNodePoolNodeInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolNodeOutput() KubernetesClusterNodePoolNodeOutput
	ToKubernetesClusterNodePoolNodeOutputWithContext(context.Context) KubernetesClusterNodePoolNodeOutput
}

type KubernetesClusterNodePoolNodeArgs struct {
	// The date and time when the node was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The id of the node's droplet
	DropletId pulumi.StringPtrInput `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A name for the node pool.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A string indicating the current status of the individual node.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The date and time when the node was last updated.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (KubernetesClusterNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolNode)(nil)).Elem()
}

func (i KubernetesClusterNodePoolNodeArgs) ToKubernetesClusterNodePoolNodeOutput() KubernetesClusterNodePoolNodeOutput {
	return i.ToKubernetesClusterNodePoolNodeOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolNodeArgs) ToKubernetesClusterNodePoolNodeOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolNodeOutput)
}

// KubernetesClusterNodePoolNodeArrayInput is an input type that accepts KubernetesClusterNodePoolNodeArray and KubernetesClusterNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolNodeArrayInput` via:
//
//          KubernetesClusterNodePoolNodeArray{ KubernetesClusterNodePoolNodeArgs{...} }
type KubernetesClusterNodePoolNodeArrayInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolNodeArrayOutput() KubernetesClusterNodePoolNodeArrayOutput
	ToKubernetesClusterNodePoolNodeArrayOutputWithContext(context.Context) KubernetesClusterNodePoolNodeArrayOutput
}

type KubernetesClusterNodePoolNodeArray []KubernetesClusterNodePoolNodeInput

func (KubernetesClusterNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterNodePoolNode)(nil)).Elem()
}

func (i KubernetesClusterNodePoolNodeArray) ToKubernetesClusterNodePoolNodeArrayOutput() KubernetesClusterNodePoolNodeArrayOutput {
	return i.ToKubernetesClusterNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolNodeArray) ToKubernetesClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolNodeArrayOutput)
}

type KubernetesClusterNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolNode)(nil)).Elem()
}

func (o KubernetesClusterNodePoolNodeOutput) ToKubernetesClusterNodePoolNodeOutput() KubernetesClusterNodePoolNodeOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeOutput) ToKubernetesClusterNodePoolNodeOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeOutput {
	return o
}

// The date and time when the node was created.
func (o KubernetesClusterNodePoolNodeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The id of the node's droplet
func (o KubernetesClusterNodePoolNodeOutput) DropletId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.DropletId }).(pulumi.StringPtrOutput)
}

// A unique ID that can be used to identify and reference the node.
func (o KubernetesClusterNodePoolNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A name for the node pool.
func (o KubernetesClusterNodePoolNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A string indicating the current status of the individual node.
func (o KubernetesClusterNodePoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The date and time when the node was last updated.
func (o KubernetesClusterNodePoolNodeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type KubernetesClusterNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterNodePoolNode)(nil)).Elem()
}

func (o KubernetesClusterNodePoolNodeArrayOutput) ToKubernetesClusterNodePoolNodeArrayOutput() KubernetesClusterNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeArrayOutput) ToKubernetesClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KubernetesClusterNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterNodePoolNode {
		return vs[0].([]KubernetesClusterNodePoolNode)[vs[1].(int)]
	}).(KubernetesClusterNodePoolNodeOutput)
}

type KubernetesClusterNodePoolTaint struct {
	// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
	Effect string `pulumi:"effect"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Key string `pulumi:"key"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Value string `pulumi:"value"`
}

// KubernetesClusterNodePoolTaintInput is an input type that accepts KubernetesClusterNodePoolTaintArgs and KubernetesClusterNodePoolTaintOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolTaintInput` via:
//
//          KubernetesClusterNodePoolTaintArgs{...}
type KubernetesClusterNodePoolTaintInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolTaintOutput() KubernetesClusterNodePoolTaintOutput
	ToKubernetesClusterNodePoolTaintOutputWithContext(context.Context) KubernetesClusterNodePoolTaintOutput
}

type KubernetesClusterNodePoolTaintArgs struct {
	// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
	Effect pulumi.StringInput `pulumi:"effect"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Key pulumi.StringInput `pulumi:"key"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (KubernetesClusterNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolTaint)(nil)).Elem()
}

func (i KubernetesClusterNodePoolTaintArgs) ToKubernetesClusterNodePoolTaintOutput() KubernetesClusterNodePoolTaintOutput {
	return i.ToKubernetesClusterNodePoolTaintOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolTaintArgs) ToKubernetesClusterNodePoolTaintOutputWithContext(ctx context.Context) KubernetesClusterNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolTaintOutput)
}

// KubernetesClusterNodePoolTaintArrayInput is an input type that accepts KubernetesClusterNodePoolTaintArray and KubernetesClusterNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolTaintArrayInput` via:
//
//          KubernetesClusterNodePoolTaintArray{ KubernetesClusterNodePoolTaintArgs{...} }
type KubernetesClusterNodePoolTaintArrayInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolTaintArrayOutput() KubernetesClusterNodePoolTaintArrayOutput
	ToKubernetesClusterNodePoolTaintArrayOutputWithContext(context.Context) KubernetesClusterNodePoolTaintArrayOutput
}

type KubernetesClusterNodePoolTaintArray []KubernetesClusterNodePoolTaintInput

func (KubernetesClusterNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterNodePoolTaint)(nil)).Elem()
}

func (i KubernetesClusterNodePoolTaintArray) ToKubernetesClusterNodePoolTaintArrayOutput() KubernetesClusterNodePoolTaintArrayOutput {
	return i.ToKubernetesClusterNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolTaintArray) ToKubernetesClusterNodePoolTaintArrayOutputWithContext(ctx context.Context) KubernetesClusterNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolTaintArrayOutput)
}

type KubernetesClusterNodePoolTaintOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolTaint)(nil)).Elem()
}

func (o KubernetesClusterNodePoolTaintOutput) ToKubernetesClusterNodePoolTaintOutput() KubernetesClusterNodePoolTaintOutput {
	return o
}

func (o KubernetesClusterNodePoolTaintOutput) ToKubernetesClusterNodePoolTaintOutputWithContext(ctx context.Context) KubernetesClusterNodePoolTaintOutput {
	return o
}

// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
func (o KubernetesClusterNodePoolTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
func (o KubernetesClusterNodePoolTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolTaint) string { return v.Key }).(pulumi.StringOutput)
}

// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
func (o KubernetesClusterNodePoolTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolTaint) string { return v.Value }).(pulumi.StringOutput)
}

type KubernetesClusterNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterNodePoolTaint)(nil)).Elem()
}

func (o KubernetesClusterNodePoolTaintArrayOutput) ToKubernetesClusterNodePoolTaintArrayOutput() KubernetesClusterNodePoolTaintArrayOutput {
	return o
}

func (o KubernetesClusterNodePoolTaintArrayOutput) ToKubernetesClusterNodePoolTaintArrayOutputWithContext(ctx context.Context) KubernetesClusterNodePoolTaintArrayOutput {
	return o
}

func (o KubernetesClusterNodePoolTaintArrayOutput) Index(i pulumi.IntInput) KubernetesClusterNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterNodePoolTaint {
		return vs[0].([]KubernetesClusterNodePoolTaint)[vs[1].(int)]
	}).(KubernetesClusterNodePoolTaintOutput)
}

type KubernetesNodePoolNode struct {
	// The date and time when the node was created.
	CreatedAt *string `pulumi:"createdAt"`
	// The id of the node's droplet
	DropletId *string `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node.
	Id *string `pulumi:"id"`
	// A name for the node pool.
	Name *string `pulumi:"name"`
	// A string indicating the current status of the individual node.
	Status *string `pulumi:"status"`
	// The date and time when the node was last updated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// KubernetesNodePoolNodeInput is an input type that accepts KubernetesNodePoolNodeArgs and KubernetesNodePoolNodeOutput values.
// You can construct a concrete instance of `KubernetesNodePoolNodeInput` via:
//
//          KubernetesNodePoolNodeArgs{...}
type KubernetesNodePoolNodeInput interface {
	pulumi.Input

	ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput
	ToKubernetesNodePoolNodeOutputWithContext(context.Context) KubernetesNodePoolNodeOutput
}

type KubernetesNodePoolNodeArgs struct {
	// The date and time when the node was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	// The id of the node's droplet
	DropletId pulumi.StringPtrInput `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A name for the node pool.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A string indicating the current status of the individual node.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The date and time when the node was last updated.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (KubernetesNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNode)(nil)).Elem()
}

func (i KubernetesNodePoolNodeArgs) ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput {
	return i.ToKubernetesNodePoolNodeOutputWithContext(context.Background())
}

func (i KubernetesNodePoolNodeArgs) ToKubernetesNodePoolNodeOutputWithContext(ctx context.Context) KubernetesNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolNodeOutput)
}

// KubernetesNodePoolNodeArrayInput is an input type that accepts KubernetesNodePoolNodeArray and KubernetesNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `KubernetesNodePoolNodeArrayInput` via:
//
//          KubernetesNodePoolNodeArray{ KubernetesNodePoolNodeArgs{...} }
type KubernetesNodePoolNodeArrayInput interface {
	pulumi.Input

	ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput
	ToKubernetesNodePoolNodeArrayOutputWithContext(context.Context) KubernetesNodePoolNodeArrayOutput
}

type KubernetesNodePoolNodeArray []KubernetesNodePoolNodeInput

func (KubernetesNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNode)(nil)).Elem()
}

func (i KubernetesNodePoolNodeArray) ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput {
	return i.ToKubernetesNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i KubernetesNodePoolNodeArray) ToKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolNodeArrayOutput)
}

type KubernetesNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNode)(nil)).Elem()
}

func (o KubernetesNodePoolNodeOutput) ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput {
	return o
}

func (o KubernetesNodePoolNodeOutput) ToKubernetesNodePoolNodeOutputWithContext(ctx context.Context) KubernetesNodePoolNodeOutput {
	return o
}

// The date and time when the node was created.
func (o KubernetesNodePoolNodeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

// The id of the node's droplet
func (o KubernetesNodePoolNodeOutput) DropletId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.DropletId }).(pulumi.StringPtrOutput)
}

// A unique ID that can be used to identify and reference the node.
func (o KubernetesNodePoolNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A name for the node pool.
func (o KubernetesNodePoolNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A string indicating the current status of the individual node.
func (o KubernetesNodePoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The date and time when the node was last updated.
func (o KubernetesNodePoolNodeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNode)(nil)).Elem()
}

func (o KubernetesNodePoolNodeArrayOutput) ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeArrayOutput) ToKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodePoolNode {
		return vs[0].([]KubernetesNodePoolNode)[vs[1].(int)]
	}).(KubernetesNodePoolNodeOutput)
}

type KubernetesNodePoolTaint struct {
	// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
	Effect string `pulumi:"effect"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Key string `pulumi:"key"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Value string `pulumi:"value"`
}

// KubernetesNodePoolTaintInput is an input type that accepts KubernetesNodePoolTaintArgs and KubernetesNodePoolTaintOutput values.
// You can construct a concrete instance of `KubernetesNodePoolTaintInput` via:
//
//          KubernetesNodePoolTaintArgs{...}
type KubernetesNodePoolTaintInput interface {
	pulumi.Input

	ToKubernetesNodePoolTaintOutput() KubernetesNodePoolTaintOutput
	ToKubernetesNodePoolTaintOutputWithContext(context.Context) KubernetesNodePoolTaintOutput
}

type KubernetesNodePoolTaintArgs struct {
	// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
	Effect pulumi.StringInput `pulumi:"effect"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Key pulumi.StringInput `pulumi:"key"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (KubernetesNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolTaint)(nil)).Elem()
}

func (i KubernetesNodePoolTaintArgs) ToKubernetesNodePoolTaintOutput() KubernetesNodePoolTaintOutput {
	return i.ToKubernetesNodePoolTaintOutputWithContext(context.Background())
}

func (i KubernetesNodePoolTaintArgs) ToKubernetesNodePoolTaintOutputWithContext(ctx context.Context) KubernetesNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolTaintOutput)
}

// KubernetesNodePoolTaintArrayInput is an input type that accepts KubernetesNodePoolTaintArray and KubernetesNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `KubernetesNodePoolTaintArrayInput` via:
//
//          KubernetesNodePoolTaintArray{ KubernetesNodePoolTaintArgs{...} }
type KubernetesNodePoolTaintArrayInput interface {
	pulumi.Input

	ToKubernetesNodePoolTaintArrayOutput() KubernetesNodePoolTaintArrayOutput
	ToKubernetesNodePoolTaintArrayOutputWithContext(context.Context) KubernetesNodePoolTaintArrayOutput
}

type KubernetesNodePoolTaintArray []KubernetesNodePoolTaintInput

func (KubernetesNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolTaint)(nil)).Elem()
}

func (i KubernetesNodePoolTaintArray) ToKubernetesNodePoolTaintArrayOutput() KubernetesNodePoolTaintArrayOutput {
	return i.ToKubernetesNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i KubernetesNodePoolTaintArray) ToKubernetesNodePoolTaintArrayOutputWithContext(ctx context.Context) KubernetesNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolTaintArrayOutput)
}

type KubernetesNodePoolTaintOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolTaint)(nil)).Elem()
}

func (o KubernetesNodePoolTaintOutput) ToKubernetesNodePoolTaintOutput() KubernetesNodePoolTaintOutput {
	return o
}

func (o KubernetesNodePoolTaintOutput) ToKubernetesNodePoolTaintOutputWithContext(ctx context.Context) KubernetesNodePoolTaintOutput {
	return o
}

// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
func (o KubernetesNodePoolTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodePoolTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
func (o KubernetesNodePoolTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodePoolTaint) string { return v.Key }).(pulumi.StringOutput)
}

// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
func (o KubernetesNodePoolTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesNodePoolTaint) string { return v.Value }).(pulumi.StringOutput)
}

type KubernetesNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolTaint)(nil)).Elem()
}

func (o KubernetesNodePoolTaintArrayOutput) ToKubernetesNodePoolTaintArrayOutput() KubernetesNodePoolTaintArrayOutput {
	return o
}

func (o KubernetesNodePoolTaintArrayOutput) ToKubernetesNodePoolTaintArrayOutputWithContext(ctx context.Context) KubernetesNodePoolTaintArrayOutput {
	return o
}

func (o KubernetesNodePoolTaintArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodePoolTaint {
		return vs[0].([]KubernetesNodePoolTaint)[vs[1].(int)]
	}).(KubernetesNodePoolTaintOutput)
}

type LoadBalancerForwardingRule struct {
	// **Deprecated** The ID of the TLS certificate to be used for SSL termination.
	//
	// Deprecated: Certificate IDs may change, for example when a Let's Encrypt certificate is auto-renewed. Please specify 'certificate_name' instead.
	CertificateId *string `pulumi:"certificateId"`
	// The unique name of the TLS certificate to be used for SSL termination.
	CertificateName *string `pulumi:"certificateName"`
	// An integer representing the port on which the Load Balancer instance will listen.
	EntryPort int `pulumi:"entryPort"`
	// The protocol used for traffic to the Load Balancer. The possible values are: `http`, `https`, `http2` or `tcp`.
	EntryProtocol string `pulumi:"entryProtocol"`
	// An integer representing the port on the backend Droplets to which the Load Balancer will send traffic.
	TargetPort int `pulumi:"targetPort"`
	// The protocol used for traffic from the Load Balancer to the backend Droplets. The possible values are: `http`, `https`, `http2` or `tcp`.
	TargetProtocol string `pulumi:"targetProtocol"`
	// A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets. The default value is `false`.
	TlsPassthrough *bool `pulumi:"tlsPassthrough"`
}

// LoadBalancerForwardingRuleInput is an input type that accepts LoadBalancerForwardingRuleArgs and LoadBalancerForwardingRuleOutput values.
// You can construct a concrete instance of `LoadBalancerForwardingRuleInput` via:
//
//          LoadBalancerForwardingRuleArgs{...}
type LoadBalancerForwardingRuleInput interface {
	pulumi.Input

	ToLoadBalancerForwardingRuleOutput() LoadBalancerForwardingRuleOutput
	ToLoadBalancerForwardingRuleOutputWithContext(context.Context) LoadBalancerForwardingRuleOutput
}

type LoadBalancerForwardingRuleArgs struct {
	// **Deprecated** The ID of the TLS certificate to be used for SSL termination.
	//
	// Deprecated: Certificate IDs may change, for example when a Let's Encrypt certificate is auto-renewed. Please specify 'certificate_name' instead.
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
	// The unique name of the TLS certificate to be used for SSL termination.
	CertificateName pulumi.StringPtrInput `pulumi:"certificateName"`
	// An integer representing the port on which the Load Balancer instance will listen.
	EntryPort pulumi.IntInput `pulumi:"entryPort"`
	// The protocol used for traffic to the Load Balancer. The possible values are: `http`, `https`, `http2` or `tcp`.
	EntryProtocol pulumi.StringInput `pulumi:"entryProtocol"`
	// An integer representing the port on the backend Droplets to which the Load Balancer will send traffic.
	TargetPort pulumi.IntInput `pulumi:"targetPort"`
	// The protocol used for traffic from the Load Balancer to the backend Droplets. The possible values are: `http`, `https`, `http2` or `tcp`.
	TargetProtocol pulumi.StringInput `pulumi:"targetProtocol"`
	// A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets. The default value is `false`.
	TlsPassthrough pulumi.BoolPtrInput `pulumi:"tlsPassthrough"`
}

func (LoadBalancerForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerForwardingRule)(nil)).Elem()
}

func (i LoadBalancerForwardingRuleArgs) ToLoadBalancerForwardingRuleOutput() LoadBalancerForwardingRuleOutput {
	return i.ToLoadBalancerForwardingRuleOutputWithContext(context.Background())
}

func (i LoadBalancerForwardingRuleArgs) ToLoadBalancerForwardingRuleOutputWithContext(ctx context.Context) LoadBalancerForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerForwardingRuleOutput)
}

// LoadBalancerForwardingRuleArrayInput is an input type that accepts LoadBalancerForwardingRuleArray and LoadBalancerForwardingRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancerForwardingRuleArrayInput` via:
//
//          LoadBalancerForwardingRuleArray{ LoadBalancerForwardingRuleArgs{...} }
type LoadBalancerForwardingRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancerForwardingRuleArrayOutput() LoadBalancerForwardingRuleArrayOutput
	ToLoadBalancerForwardingRuleArrayOutputWithContext(context.Context) LoadBalancerForwardingRuleArrayOutput
}

type LoadBalancerForwardingRuleArray []LoadBalancerForwardingRuleInput

func (LoadBalancerForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerForwardingRule)(nil)).Elem()
}

func (i LoadBalancerForwardingRuleArray) ToLoadBalancerForwardingRuleArrayOutput() LoadBalancerForwardingRuleArrayOutput {
	return i.ToLoadBalancerForwardingRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancerForwardingRuleArray) ToLoadBalancerForwardingRuleArrayOutputWithContext(ctx context.Context) LoadBalancerForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerForwardingRuleArrayOutput)
}

type LoadBalancerForwardingRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancerForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerForwardingRule)(nil)).Elem()
}

func (o LoadBalancerForwardingRuleOutput) ToLoadBalancerForwardingRuleOutput() LoadBalancerForwardingRuleOutput {
	return o
}

func (o LoadBalancerForwardingRuleOutput) ToLoadBalancerForwardingRuleOutputWithContext(ctx context.Context) LoadBalancerForwardingRuleOutput {
	return o
}

// **Deprecated** The ID of the TLS certificate to be used for SSL termination.
//
// Deprecated: Certificate IDs may change, for example when a Let's Encrypt certificate is auto-renewed. Please specify 'certificate_name' instead.
func (o LoadBalancerForwardingRuleOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// The unique name of the TLS certificate to be used for SSL termination.
func (o LoadBalancerForwardingRuleOutput) CertificateName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) *string { return v.CertificateName }).(pulumi.StringPtrOutput)
}

// An integer representing the port on which the Load Balancer instance will listen.
func (o LoadBalancerForwardingRuleOutput) EntryPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) int { return v.EntryPort }).(pulumi.IntOutput)
}

// The protocol used for traffic to the Load Balancer. The possible values are: `http`, `https`, `http2` or `tcp`.
func (o LoadBalancerForwardingRuleOutput) EntryProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) string { return v.EntryProtocol }).(pulumi.StringOutput)
}

// An integer representing the port on the backend Droplets to which the Load Balancer will send traffic.
func (o LoadBalancerForwardingRuleOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) int { return v.TargetPort }).(pulumi.IntOutput)
}

// The protocol used for traffic from the Load Balancer to the backend Droplets. The possible values are: `http`, `https`, `http2` or `tcp`.
func (o LoadBalancerForwardingRuleOutput) TargetProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) string { return v.TargetProtocol }).(pulumi.StringOutput)
}

// A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets. The default value is `false`.
func (o LoadBalancerForwardingRuleOutput) TlsPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) *bool { return v.TlsPassthrough }).(pulumi.BoolPtrOutput)
}

type LoadBalancerForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerForwardingRule)(nil)).Elem()
}

func (o LoadBalancerForwardingRuleArrayOutput) ToLoadBalancerForwardingRuleArrayOutput() LoadBalancerForwardingRuleArrayOutput {
	return o
}

func (o LoadBalancerForwardingRuleArrayOutput) ToLoadBalancerForwardingRuleArrayOutputWithContext(ctx context.Context) LoadBalancerForwardingRuleArrayOutput {
	return o
}

func (o LoadBalancerForwardingRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancerForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerForwardingRule {
		return vs[0].([]LoadBalancerForwardingRule)[vs[1].(int)]
	}).(LoadBalancerForwardingRuleOutput)
}

type LoadBalancerHealthcheck struct {
	// The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.
	CheckIntervalSeconds *int `pulumi:"checkIntervalSeconds"`
	// The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool. If not specified, the default value is `5`.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// The path on the backend Droplets to which the Load Balancer instance will send a request.
	Path *string `pulumi:"path"`
	// An integer representing the port on the backend Droplets on which the health check will attempt a connection.
	Port int `pulumi:"port"`
	// The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https` or `tcp`.
	Protocol string `pulumi:"protocol"`
	// The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.
	ResponseTimeoutSeconds *int `pulumi:"responseTimeoutSeconds"`
	// The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool. If not specified, the default value is `3`.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// LoadBalancerHealthcheckInput is an input type that accepts LoadBalancerHealthcheckArgs and LoadBalancerHealthcheckOutput values.
// You can construct a concrete instance of `LoadBalancerHealthcheckInput` via:
//
//          LoadBalancerHealthcheckArgs{...}
type LoadBalancerHealthcheckInput interface {
	pulumi.Input

	ToLoadBalancerHealthcheckOutput() LoadBalancerHealthcheckOutput
	ToLoadBalancerHealthcheckOutputWithContext(context.Context) LoadBalancerHealthcheckOutput
}

type LoadBalancerHealthcheckArgs struct {
	// The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.
	CheckIntervalSeconds pulumi.IntPtrInput `pulumi:"checkIntervalSeconds"`
	// The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool. If not specified, the default value is `5`.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// The path on the backend Droplets to which the Load Balancer instance will send a request.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// An integer representing the port on the backend Droplets on which the health check will attempt a connection.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https` or `tcp`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.
	ResponseTimeoutSeconds pulumi.IntPtrInput `pulumi:"responseTimeoutSeconds"`
	// The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool. If not specified, the default value is `3`.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (LoadBalancerHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerHealthcheck)(nil)).Elem()
}

func (i LoadBalancerHealthcheckArgs) ToLoadBalancerHealthcheckOutput() LoadBalancerHealthcheckOutput {
	return i.ToLoadBalancerHealthcheckOutputWithContext(context.Background())
}

func (i LoadBalancerHealthcheckArgs) ToLoadBalancerHealthcheckOutputWithContext(ctx context.Context) LoadBalancerHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerHealthcheckOutput)
}

func (i LoadBalancerHealthcheckArgs) ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput {
	return i.ToLoadBalancerHealthcheckPtrOutputWithContext(context.Background())
}

func (i LoadBalancerHealthcheckArgs) ToLoadBalancerHealthcheckPtrOutputWithContext(ctx context.Context) LoadBalancerHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerHealthcheckOutput).ToLoadBalancerHealthcheckPtrOutputWithContext(ctx)
}

// LoadBalancerHealthcheckPtrInput is an input type that accepts LoadBalancerHealthcheckArgs, LoadBalancerHealthcheckPtr and LoadBalancerHealthcheckPtrOutput values.
// You can construct a concrete instance of `LoadBalancerHealthcheckPtrInput` via:
//
//          LoadBalancerHealthcheckArgs{...}
//
//  or:
//
//          nil
type LoadBalancerHealthcheckPtrInput interface {
	pulumi.Input

	ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput
	ToLoadBalancerHealthcheckPtrOutputWithContext(context.Context) LoadBalancerHealthcheckPtrOutput
}

type loadBalancerHealthcheckPtrType LoadBalancerHealthcheckArgs

func LoadBalancerHealthcheckPtr(v *LoadBalancerHealthcheckArgs) LoadBalancerHealthcheckPtrInput {
	return (*loadBalancerHealthcheckPtrType)(v)
}

func (*loadBalancerHealthcheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerHealthcheck)(nil)).Elem()
}

func (i *loadBalancerHealthcheckPtrType) ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput {
	return i.ToLoadBalancerHealthcheckPtrOutputWithContext(context.Background())
}

func (i *loadBalancerHealthcheckPtrType) ToLoadBalancerHealthcheckPtrOutputWithContext(ctx context.Context) LoadBalancerHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerHealthcheckPtrOutput)
}

type LoadBalancerHealthcheckOutput struct{ *pulumi.OutputState }

func (LoadBalancerHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerHealthcheck)(nil)).Elem()
}

func (o LoadBalancerHealthcheckOutput) ToLoadBalancerHealthcheckOutput() LoadBalancerHealthcheckOutput {
	return o
}

func (o LoadBalancerHealthcheckOutput) ToLoadBalancerHealthcheckOutputWithContext(ctx context.Context) LoadBalancerHealthcheckOutput {
	return o
}

func (o LoadBalancerHealthcheckOutput) ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput {
	return o.ToLoadBalancerHealthcheckPtrOutputWithContext(context.Background())
}

func (o LoadBalancerHealthcheckOutput) ToLoadBalancerHealthcheckPtrOutputWithContext(ctx context.Context) LoadBalancerHealthcheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerHealthcheck) *LoadBalancerHealthcheck {
		return &v
	}).(LoadBalancerHealthcheckPtrOutput)
}

// The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.
func (o LoadBalancerHealthcheckOutput) CheckIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.CheckIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool. If not specified, the default value is `5`.
func (o LoadBalancerHealthcheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The path on the backend Droplets to which the Load Balancer instance will send a request.
func (o LoadBalancerHealthcheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// An integer representing the port on the backend Droplets on which the health check will attempt a connection.
func (o LoadBalancerHealthcheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https` or `tcp`.
func (o LoadBalancerHealthcheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.
func (o LoadBalancerHealthcheckOutput) ResponseTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.ResponseTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool. If not specified, the default value is `3`.
func (o LoadBalancerHealthcheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type LoadBalancerHealthcheckPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerHealthcheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerHealthcheck)(nil)).Elem()
}

func (o LoadBalancerHealthcheckPtrOutput) ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput {
	return o
}

func (o LoadBalancerHealthcheckPtrOutput) ToLoadBalancerHealthcheckPtrOutputWithContext(ctx context.Context) LoadBalancerHealthcheckPtrOutput {
	return o
}

func (o LoadBalancerHealthcheckPtrOutput) Elem() LoadBalancerHealthcheckOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) LoadBalancerHealthcheck {
		if v != nil {
			return *v
		}
		var ret LoadBalancerHealthcheck
		return ret
	}).(LoadBalancerHealthcheckOutput)
}

// The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.
func (o LoadBalancerHealthcheckPtrOutput) CheckIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) *int {
		if v == nil {
			return nil
		}
		return v.CheckIntervalSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool. If not specified, the default value is `5`.
func (o LoadBalancerHealthcheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) *int {
		if v == nil {
			return nil
		}
		return v.HealthyThreshold
	}).(pulumi.IntPtrOutput)
}

// The path on the backend Droplets to which the Load Balancer instance will send a request.
func (o LoadBalancerHealthcheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// An integer representing the port on the backend Droplets on which the health check will attempt a connection.
func (o LoadBalancerHealthcheckPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) *int {
		if v == nil {
			return nil
		}
		return &v.Port
	}).(pulumi.IntPtrOutput)
}

// The protocol used for health checks sent to the backend Droplets. The possible values are `http`, `https` or `tcp`.
func (o LoadBalancerHealthcheckPtrOutput) Protocol() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) *string {
		if v == nil {
			return nil
		}
		return &v.Protocol
	}).(pulumi.StringPtrOutput)
}

// The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.
func (o LoadBalancerHealthcheckPtrOutput) ResponseTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) *int {
		if v == nil {
			return nil
		}
		return v.ResponseTimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool. If not specified, the default value is `3`.
func (o LoadBalancerHealthcheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) *int {
		if v == nil {
			return nil
		}
		return v.UnhealthyThreshold
	}).(pulumi.IntPtrOutput)
}

type LoadBalancerStickySessions struct {
	// The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.
	CookieName *string `pulumi:"cookieName"`
	// The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.
	CookieTtlSeconds *int `pulumi:"cookieTtlSeconds"`
	// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.
	Type *string `pulumi:"type"`
}

// LoadBalancerStickySessionsInput is an input type that accepts LoadBalancerStickySessionsArgs and LoadBalancerStickySessionsOutput values.
// You can construct a concrete instance of `LoadBalancerStickySessionsInput` via:
//
//          LoadBalancerStickySessionsArgs{...}
type LoadBalancerStickySessionsInput interface {
	pulumi.Input

	ToLoadBalancerStickySessionsOutput() LoadBalancerStickySessionsOutput
	ToLoadBalancerStickySessionsOutputWithContext(context.Context) LoadBalancerStickySessionsOutput
}

type LoadBalancerStickySessionsArgs struct {
	// The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.
	CookieTtlSeconds pulumi.IntPtrInput `pulumi:"cookieTtlSeconds"`
	// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LoadBalancerStickySessionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerStickySessions)(nil)).Elem()
}

func (i LoadBalancerStickySessionsArgs) ToLoadBalancerStickySessionsOutput() LoadBalancerStickySessionsOutput {
	return i.ToLoadBalancerStickySessionsOutputWithContext(context.Background())
}

func (i LoadBalancerStickySessionsArgs) ToLoadBalancerStickySessionsOutputWithContext(ctx context.Context) LoadBalancerStickySessionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerStickySessionsOutput)
}

func (i LoadBalancerStickySessionsArgs) ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput {
	return i.ToLoadBalancerStickySessionsPtrOutputWithContext(context.Background())
}

func (i LoadBalancerStickySessionsArgs) ToLoadBalancerStickySessionsPtrOutputWithContext(ctx context.Context) LoadBalancerStickySessionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerStickySessionsOutput).ToLoadBalancerStickySessionsPtrOutputWithContext(ctx)
}

// LoadBalancerStickySessionsPtrInput is an input type that accepts LoadBalancerStickySessionsArgs, LoadBalancerStickySessionsPtr and LoadBalancerStickySessionsPtrOutput values.
// You can construct a concrete instance of `LoadBalancerStickySessionsPtrInput` via:
//
//          LoadBalancerStickySessionsArgs{...}
//
//  or:
//
//          nil
type LoadBalancerStickySessionsPtrInput interface {
	pulumi.Input

	ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput
	ToLoadBalancerStickySessionsPtrOutputWithContext(context.Context) LoadBalancerStickySessionsPtrOutput
}

type loadBalancerStickySessionsPtrType LoadBalancerStickySessionsArgs

func LoadBalancerStickySessionsPtr(v *LoadBalancerStickySessionsArgs) LoadBalancerStickySessionsPtrInput {
	return (*loadBalancerStickySessionsPtrType)(v)
}

func (*loadBalancerStickySessionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerStickySessions)(nil)).Elem()
}

func (i *loadBalancerStickySessionsPtrType) ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput {
	return i.ToLoadBalancerStickySessionsPtrOutputWithContext(context.Background())
}

func (i *loadBalancerStickySessionsPtrType) ToLoadBalancerStickySessionsPtrOutputWithContext(ctx context.Context) LoadBalancerStickySessionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerStickySessionsPtrOutput)
}

type LoadBalancerStickySessionsOutput struct{ *pulumi.OutputState }

func (LoadBalancerStickySessionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerStickySessions)(nil)).Elem()
}

func (o LoadBalancerStickySessionsOutput) ToLoadBalancerStickySessionsOutput() LoadBalancerStickySessionsOutput {
	return o
}

func (o LoadBalancerStickySessionsOutput) ToLoadBalancerStickySessionsOutputWithContext(ctx context.Context) LoadBalancerStickySessionsOutput {
	return o
}

func (o LoadBalancerStickySessionsOutput) ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput {
	return o.ToLoadBalancerStickySessionsPtrOutputWithContext(context.Background())
}

func (o LoadBalancerStickySessionsOutput) ToLoadBalancerStickySessionsPtrOutputWithContext(ctx context.Context) LoadBalancerStickySessionsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v LoadBalancerStickySessions) *LoadBalancerStickySessions {
		return &v
	}).(LoadBalancerStickySessionsPtrOutput)
}

// The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.
func (o LoadBalancerStickySessionsOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.
func (o LoadBalancerStickySessionsOutput) CookieTtlSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *int { return v.CookieTtlSeconds }).(pulumi.IntPtrOutput)
}

// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.
func (o LoadBalancerStickySessionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type LoadBalancerStickySessionsPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerStickySessionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerStickySessions)(nil)).Elem()
}

func (o LoadBalancerStickySessionsPtrOutput) ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput {
	return o
}

func (o LoadBalancerStickySessionsPtrOutput) ToLoadBalancerStickySessionsPtrOutputWithContext(ctx context.Context) LoadBalancerStickySessionsPtrOutput {
	return o
}

func (o LoadBalancerStickySessionsPtrOutput) Elem() LoadBalancerStickySessionsOutput {
	return o.ApplyT(func(v *LoadBalancerStickySessions) LoadBalancerStickySessions {
		if v != nil {
			return *v
		}
		var ret LoadBalancerStickySessions
		return ret
	}).(LoadBalancerStickySessionsOutput)
}

// The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.
func (o LoadBalancerStickySessionsPtrOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerStickySessions) *string {
		if v == nil {
			return nil
		}
		return v.CookieName
	}).(pulumi.StringPtrOutput)
}

// The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.
func (o LoadBalancerStickySessionsPtrOutput) CookieTtlSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *LoadBalancerStickySessions) *int {
		if v == nil {
			return nil
		}
		return v.CookieTtlSeconds
	}).(pulumi.IntPtrOutput)
}

// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.
func (o LoadBalancerStickySessionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *LoadBalancerStickySessions) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

type MonitorAlertAlerts struct {
	Emails []string                  `pulumi:"emails"`
	Slacks []MonitorAlertAlertsSlack `pulumi:"slacks"`
}

// MonitorAlertAlertsInput is an input type that accepts MonitorAlertAlertsArgs and MonitorAlertAlertsOutput values.
// You can construct a concrete instance of `MonitorAlertAlertsInput` via:
//
//          MonitorAlertAlertsArgs{...}
type MonitorAlertAlertsInput interface {
	pulumi.Input

	ToMonitorAlertAlertsOutput() MonitorAlertAlertsOutput
	ToMonitorAlertAlertsOutputWithContext(context.Context) MonitorAlertAlertsOutput
}

type MonitorAlertAlertsArgs struct {
	Emails pulumi.StringArrayInput           `pulumi:"emails"`
	Slacks MonitorAlertAlertsSlackArrayInput `pulumi:"slacks"`
}

func (MonitorAlertAlertsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorAlertAlerts)(nil)).Elem()
}

func (i MonitorAlertAlertsArgs) ToMonitorAlertAlertsOutput() MonitorAlertAlertsOutput {
	return i.ToMonitorAlertAlertsOutputWithContext(context.Background())
}

func (i MonitorAlertAlertsArgs) ToMonitorAlertAlertsOutputWithContext(ctx context.Context) MonitorAlertAlertsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorAlertAlertsOutput)
}

func (i MonitorAlertAlertsArgs) ToMonitorAlertAlertsPtrOutput() MonitorAlertAlertsPtrOutput {
	return i.ToMonitorAlertAlertsPtrOutputWithContext(context.Background())
}

func (i MonitorAlertAlertsArgs) ToMonitorAlertAlertsPtrOutputWithContext(ctx context.Context) MonitorAlertAlertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorAlertAlertsOutput).ToMonitorAlertAlertsPtrOutputWithContext(ctx)
}

// MonitorAlertAlertsPtrInput is an input type that accepts MonitorAlertAlertsArgs, MonitorAlertAlertsPtr and MonitorAlertAlertsPtrOutput values.
// You can construct a concrete instance of `MonitorAlertAlertsPtrInput` via:
//
//          MonitorAlertAlertsArgs{...}
//
//  or:
//
//          nil
type MonitorAlertAlertsPtrInput interface {
	pulumi.Input

	ToMonitorAlertAlertsPtrOutput() MonitorAlertAlertsPtrOutput
	ToMonitorAlertAlertsPtrOutputWithContext(context.Context) MonitorAlertAlertsPtrOutput
}

type monitorAlertAlertsPtrType MonitorAlertAlertsArgs

func MonitorAlertAlertsPtr(v *MonitorAlertAlertsArgs) MonitorAlertAlertsPtrInput {
	return (*monitorAlertAlertsPtrType)(v)
}

func (*monitorAlertAlertsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorAlertAlerts)(nil)).Elem()
}

func (i *monitorAlertAlertsPtrType) ToMonitorAlertAlertsPtrOutput() MonitorAlertAlertsPtrOutput {
	return i.ToMonitorAlertAlertsPtrOutputWithContext(context.Background())
}

func (i *monitorAlertAlertsPtrType) ToMonitorAlertAlertsPtrOutputWithContext(ctx context.Context) MonitorAlertAlertsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorAlertAlertsPtrOutput)
}

type MonitorAlertAlertsOutput struct{ *pulumi.OutputState }

func (MonitorAlertAlertsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorAlertAlerts)(nil)).Elem()
}

func (o MonitorAlertAlertsOutput) ToMonitorAlertAlertsOutput() MonitorAlertAlertsOutput {
	return o
}

func (o MonitorAlertAlertsOutput) ToMonitorAlertAlertsOutputWithContext(ctx context.Context) MonitorAlertAlertsOutput {
	return o
}

func (o MonitorAlertAlertsOutput) ToMonitorAlertAlertsPtrOutput() MonitorAlertAlertsPtrOutput {
	return o.ToMonitorAlertAlertsPtrOutputWithContext(context.Background())
}

func (o MonitorAlertAlertsOutput) ToMonitorAlertAlertsPtrOutputWithContext(ctx context.Context) MonitorAlertAlertsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v MonitorAlertAlerts) *MonitorAlertAlerts {
		return &v
	}).(MonitorAlertAlertsPtrOutput)
}

func (o MonitorAlertAlertsOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v MonitorAlertAlerts) []string { return v.Emails }).(pulumi.StringArrayOutput)
}

func (o MonitorAlertAlertsOutput) Slacks() MonitorAlertAlertsSlackArrayOutput {
	return o.ApplyT(func(v MonitorAlertAlerts) []MonitorAlertAlertsSlack { return v.Slacks }).(MonitorAlertAlertsSlackArrayOutput)
}

type MonitorAlertAlertsPtrOutput struct{ *pulumi.OutputState }

func (MonitorAlertAlertsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MonitorAlertAlerts)(nil)).Elem()
}

func (o MonitorAlertAlertsPtrOutput) ToMonitorAlertAlertsPtrOutput() MonitorAlertAlertsPtrOutput {
	return o
}

func (o MonitorAlertAlertsPtrOutput) ToMonitorAlertAlertsPtrOutputWithContext(ctx context.Context) MonitorAlertAlertsPtrOutput {
	return o
}

func (o MonitorAlertAlertsPtrOutput) Elem() MonitorAlertAlertsOutput {
	return o.ApplyT(func(v *MonitorAlertAlerts) MonitorAlertAlerts {
		if v != nil {
			return *v
		}
		var ret MonitorAlertAlerts
		return ret
	}).(MonitorAlertAlertsOutput)
}

func (o MonitorAlertAlertsPtrOutput) Emails() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *MonitorAlertAlerts) []string {
		if v == nil {
			return nil
		}
		return v.Emails
	}).(pulumi.StringArrayOutput)
}

func (o MonitorAlertAlertsPtrOutput) Slacks() MonitorAlertAlertsSlackArrayOutput {
	return o.ApplyT(func(v *MonitorAlertAlerts) []MonitorAlertAlertsSlack {
		if v == nil {
			return nil
		}
		return v.Slacks
	}).(MonitorAlertAlertsSlackArrayOutput)
}

type MonitorAlertAlertsSlack struct {
	Channel string `pulumi:"channel"`
	Url     string `pulumi:"url"`
}

// MonitorAlertAlertsSlackInput is an input type that accepts MonitorAlertAlertsSlackArgs and MonitorAlertAlertsSlackOutput values.
// You can construct a concrete instance of `MonitorAlertAlertsSlackInput` via:
//
//          MonitorAlertAlertsSlackArgs{...}
type MonitorAlertAlertsSlackInput interface {
	pulumi.Input

	ToMonitorAlertAlertsSlackOutput() MonitorAlertAlertsSlackOutput
	ToMonitorAlertAlertsSlackOutputWithContext(context.Context) MonitorAlertAlertsSlackOutput
}

type MonitorAlertAlertsSlackArgs struct {
	Channel pulumi.StringInput `pulumi:"channel"`
	Url     pulumi.StringInput `pulumi:"url"`
}

func (MonitorAlertAlertsSlackArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorAlertAlertsSlack)(nil)).Elem()
}

func (i MonitorAlertAlertsSlackArgs) ToMonitorAlertAlertsSlackOutput() MonitorAlertAlertsSlackOutput {
	return i.ToMonitorAlertAlertsSlackOutputWithContext(context.Background())
}

func (i MonitorAlertAlertsSlackArgs) ToMonitorAlertAlertsSlackOutputWithContext(ctx context.Context) MonitorAlertAlertsSlackOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorAlertAlertsSlackOutput)
}

// MonitorAlertAlertsSlackArrayInput is an input type that accepts MonitorAlertAlertsSlackArray and MonitorAlertAlertsSlackArrayOutput values.
// You can construct a concrete instance of `MonitorAlertAlertsSlackArrayInput` via:
//
//          MonitorAlertAlertsSlackArray{ MonitorAlertAlertsSlackArgs{...} }
type MonitorAlertAlertsSlackArrayInput interface {
	pulumi.Input

	ToMonitorAlertAlertsSlackArrayOutput() MonitorAlertAlertsSlackArrayOutput
	ToMonitorAlertAlertsSlackArrayOutputWithContext(context.Context) MonitorAlertAlertsSlackArrayOutput
}

type MonitorAlertAlertsSlackArray []MonitorAlertAlertsSlackInput

func (MonitorAlertAlertsSlackArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorAlertAlertsSlack)(nil)).Elem()
}

func (i MonitorAlertAlertsSlackArray) ToMonitorAlertAlertsSlackArrayOutput() MonitorAlertAlertsSlackArrayOutput {
	return i.ToMonitorAlertAlertsSlackArrayOutputWithContext(context.Background())
}

func (i MonitorAlertAlertsSlackArray) ToMonitorAlertAlertsSlackArrayOutputWithContext(ctx context.Context) MonitorAlertAlertsSlackArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MonitorAlertAlertsSlackArrayOutput)
}

type MonitorAlertAlertsSlackOutput struct{ *pulumi.OutputState }

func (MonitorAlertAlertsSlackOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*MonitorAlertAlertsSlack)(nil)).Elem()
}

func (o MonitorAlertAlertsSlackOutput) ToMonitorAlertAlertsSlackOutput() MonitorAlertAlertsSlackOutput {
	return o
}

func (o MonitorAlertAlertsSlackOutput) ToMonitorAlertAlertsSlackOutputWithContext(ctx context.Context) MonitorAlertAlertsSlackOutput {
	return o
}

func (o MonitorAlertAlertsSlackOutput) Channel() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorAlertAlertsSlack) string { return v.Channel }).(pulumi.StringOutput)
}

func (o MonitorAlertAlertsSlackOutput) Url() pulumi.StringOutput {
	return o.ApplyT(func(v MonitorAlertAlertsSlack) string { return v.Url }).(pulumi.StringOutput)
}

type MonitorAlertAlertsSlackArrayOutput struct{ *pulumi.OutputState }

func (MonitorAlertAlertsSlackArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]MonitorAlertAlertsSlack)(nil)).Elem()
}

func (o MonitorAlertAlertsSlackArrayOutput) ToMonitorAlertAlertsSlackArrayOutput() MonitorAlertAlertsSlackArrayOutput {
	return o
}

func (o MonitorAlertAlertsSlackArrayOutput) ToMonitorAlertAlertsSlackArrayOutputWithContext(ctx context.Context) MonitorAlertAlertsSlackArrayOutput {
	return o
}

func (o MonitorAlertAlertsSlackArrayOutput) Index(i pulumi.IntInput) MonitorAlertAlertsSlackOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) MonitorAlertAlertsSlack {
		return vs[0].([]MonitorAlertAlertsSlack)[vs[1].(int)]
	}).(MonitorAlertAlertsSlackOutput)
}

type SpacesBucketCorsRule struct {
	// A list of headers that will be included in the CORS preflight request's `Access-Control-Request-Headers`. A header may contain one wildcard (e.g. `x-amz-*`).
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// A list of HTTP methods (e.g. `GET`) which are allowed from the specified origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// A list of hosts from which requests using the specified methods are allowed. A host may contain one wildcard (e.g. http://*.example.com).
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// The time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
}

// SpacesBucketCorsRuleInput is an input type that accepts SpacesBucketCorsRuleArgs and SpacesBucketCorsRuleOutput values.
// You can construct a concrete instance of `SpacesBucketCorsRuleInput` via:
//
//          SpacesBucketCorsRuleArgs{...}
type SpacesBucketCorsRuleInput interface {
	pulumi.Input

	ToSpacesBucketCorsRuleOutput() SpacesBucketCorsRuleOutput
	ToSpacesBucketCorsRuleOutputWithContext(context.Context) SpacesBucketCorsRuleOutput
}

type SpacesBucketCorsRuleArgs struct {
	// A list of headers that will be included in the CORS preflight request's `Access-Control-Request-Headers`. A header may contain one wildcard (e.g. `x-amz-*`).
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// A list of HTTP methods (e.g. `GET`) which are allowed from the specified origin.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// A list of hosts from which requests using the specified methods are allowed. A host may contain one wildcard (e.g. http://*.example.com).
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// The time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
}

func (SpacesBucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketCorsRule)(nil)).Elem()
}

func (i SpacesBucketCorsRuleArgs) ToSpacesBucketCorsRuleOutput() SpacesBucketCorsRuleOutput {
	return i.ToSpacesBucketCorsRuleOutputWithContext(context.Background())
}

func (i SpacesBucketCorsRuleArgs) ToSpacesBucketCorsRuleOutputWithContext(ctx context.Context) SpacesBucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketCorsRuleOutput)
}

// SpacesBucketCorsRuleArrayInput is an input type that accepts SpacesBucketCorsRuleArray and SpacesBucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `SpacesBucketCorsRuleArrayInput` via:
//
//          SpacesBucketCorsRuleArray{ SpacesBucketCorsRuleArgs{...} }
type SpacesBucketCorsRuleArrayInput interface {
	pulumi.Input

	ToSpacesBucketCorsRuleArrayOutput() SpacesBucketCorsRuleArrayOutput
	ToSpacesBucketCorsRuleArrayOutputWithContext(context.Context) SpacesBucketCorsRuleArrayOutput
}

type SpacesBucketCorsRuleArray []SpacesBucketCorsRuleInput

func (SpacesBucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacesBucketCorsRule)(nil)).Elem()
}

func (i SpacesBucketCorsRuleArray) ToSpacesBucketCorsRuleArrayOutput() SpacesBucketCorsRuleArrayOutput {
	return i.ToSpacesBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i SpacesBucketCorsRuleArray) ToSpacesBucketCorsRuleArrayOutputWithContext(ctx context.Context) SpacesBucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketCorsRuleArrayOutput)
}

type SpacesBucketCorsRuleOutput struct{ *pulumi.OutputState }

func (SpacesBucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketCorsRule)(nil)).Elem()
}

func (o SpacesBucketCorsRuleOutput) ToSpacesBucketCorsRuleOutput() SpacesBucketCorsRuleOutput {
	return o
}

func (o SpacesBucketCorsRuleOutput) ToSpacesBucketCorsRuleOutputWithContext(ctx context.Context) SpacesBucketCorsRuleOutput {
	return o
}

// A list of headers that will be included in the CORS preflight request's `Access-Control-Request-Headers`. A header may contain one wildcard (e.g. `x-amz-*`).
func (o SpacesBucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpacesBucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// A list of HTTP methods (e.g. `GET`) which are allowed from the specified origin.
func (o SpacesBucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpacesBucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// A list of hosts from which requests using the specified methods are allowed. A host may contain one wildcard (e.g. http://*.example.com).
func (o SpacesBucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpacesBucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// The time in seconds that browser can cache the response for a preflight request.
func (o SpacesBucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpacesBucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type SpacesBucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (SpacesBucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacesBucketCorsRule)(nil)).Elem()
}

func (o SpacesBucketCorsRuleArrayOutput) ToSpacesBucketCorsRuleArrayOutput() SpacesBucketCorsRuleArrayOutput {
	return o
}

func (o SpacesBucketCorsRuleArrayOutput) ToSpacesBucketCorsRuleArrayOutputWithContext(ctx context.Context) SpacesBucketCorsRuleArrayOutput {
	return o
}

func (o SpacesBucketCorsRuleArrayOutput) Index(i pulumi.IntInput) SpacesBucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpacesBucketCorsRule {
		return vs[0].([]SpacesBucketCorsRule)[vs[1].(int)]
	}).(SpacesBucketCorsRuleOutput)
}

type SpacesBucketLifecycleRule struct {
	// Specifies the number of days after initiating a multipart
	// upload when the multipart upload must be completed or else Spaces will abort the upload.
	AbortIncompleteMultipartUploadDays *int `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies lifecycle rule status.
	Enabled bool `pulumi:"enabled"`
	// Specifies a time period after which applicable objects expire (documented below).
	Expiration *SpacesBucketLifecycleRuleExpiration `pulumi:"expiration"`
	// Unique identifier for the rule.
	Id *string `pulumi:"id"`
	// Specifies when non-current object versions expire (documented below).
	NoncurrentVersionExpiration *SpacesBucketLifecycleRuleNoncurrentVersionExpiration `pulumi:"noncurrentVersionExpiration"`
	// Object key prefix identifying one or more objects to which the rule applies.
	Prefix *string `pulumi:"prefix"`
}

// SpacesBucketLifecycleRuleInput is an input type that accepts SpacesBucketLifecycleRuleArgs and SpacesBucketLifecycleRuleOutput values.
// You can construct a concrete instance of `SpacesBucketLifecycleRuleInput` via:
//
//          SpacesBucketLifecycleRuleArgs{...}
type SpacesBucketLifecycleRuleInput interface {
	pulumi.Input

	ToSpacesBucketLifecycleRuleOutput() SpacesBucketLifecycleRuleOutput
	ToSpacesBucketLifecycleRuleOutputWithContext(context.Context) SpacesBucketLifecycleRuleOutput
}

type SpacesBucketLifecycleRuleArgs struct {
	// Specifies the number of days after initiating a multipart
	// upload when the multipart upload must be completed or else Spaces will abort the upload.
	AbortIncompleteMultipartUploadDays pulumi.IntPtrInput `pulumi:"abortIncompleteMultipartUploadDays"`
	// Specifies lifecycle rule status.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Specifies a time period after which applicable objects expire (documented below).
	Expiration SpacesBucketLifecycleRuleExpirationPtrInput `pulumi:"expiration"`
	// Unique identifier for the rule.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// Specifies when non-current object versions expire (documented below).
	NoncurrentVersionExpiration SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrInput `pulumi:"noncurrentVersionExpiration"`
	// Object key prefix identifying one or more objects to which the rule applies.
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
}

func (SpacesBucketLifecycleRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketLifecycleRule)(nil)).Elem()
}

func (i SpacesBucketLifecycleRuleArgs) ToSpacesBucketLifecycleRuleOutput() SpacesBucketLifecycleRuleOutput {
	return i.ToSpacesBucketLifecycleRuleOutputWithContext(context.Background())
}

func (i SpacesBucketLifecycleRuleArgs) ToSpacesBucketLifecycleRuleOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketLifecycleRuleOutput)
}

// SpacesBucketLifecycleRuleArrayInput is an input type that accepts SpacesBucketLifecycleRuleArray and SpacesBucketLifecycleRuleArrayOutput values.
// You can construct a concrete instance of `SpacesBucketLifecycleRuleArrayInput` via:
//
//          SpacesBucketLifecycleRuleArray{ SpacesBucketLifecycleRuleArgs{...} }
type SpacesBucketLifecycleRuleArrayInput interface {
	pulumi.Input

	ToSpacesBucketLifecycleRuleArrayOutput() SpacesBucketLifecycleRuleArrayOutput
	ToSpacesBucketLifecycleRuleArrayOutputWithContext(context.Context) SpacesBucketLifecycleRuleArrayOutput
}

type SpacesBucketLifecycleRuleArray []SpacesBucketLifecycleRuleInput

func (SpacesBucketLifecycleRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacesBucketLifecycleRule)(nil)).Elem()
}

func (i SpacesBucketLifecycleRuleArray) ToSpacesBucketLifecycleRuleArrayOutput() SpacesBucketLifecycleRuleArrayOutput {
	return i.ToSpacesBucketLifecycleRuleArrayOutputWithContext(context.Background())
}

func (i SpacesBucketLifecycleRuleArray) ToSpacesBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketLifecycleRuleArrayOutput)
}

type SpacesBucketLifecycleRuleOutput struct{ *pulumi.OutputState }

func (SpacesBucketLifecycleRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketLifecycleRule)(nil)).Elem()
}

func (o SpacesBucketLifecycleRuleOutput) ToSpacesBucketLifecycleRuleOutput() SpacesBucketLifecycleRuleOutput {
	return o
}

func (o SpacesBucketLifecycleRuleOutput) ToSpacesBucketLifecycleRuleOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleOutput {
	return o
}

// Specifies the number of days after initiating a multipart
// upload when the multipart upload must be completed or else Spaces will abort the upload.
func (o SpacesBucketLifecycleRuleOutput) AbortIncompleteMultipartUploadDays() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRule) *int { return v.AbortIncompleteMultipartUploadDays }).(pulumi.IntPtrOutput)
}

// Specifies lifecycle rule status.
func (o SpacesBucketLifecycleRuleOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRule) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Specifies a time period after which applicable objects expire (documented below).
func (o SpacesBucketLifecycleRuleOutput) Expiration() SpacesBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRule) *SpacesBucketLifecycleRuleExpiration { return v.Expiration }).(SpacesBucketLifecycleRuleExpirationPtrOutput)
}

// Unique identifier for the rule.
func (o SpacesBucketLifecycleRuleOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRule) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// Specifies when non-current object versions expire (documented below).
func (o SpacesBucketLifecycleRuleOutput) NoncurrentVersionExpiration() SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRule) *SpacesBucketLifecycleRuleNoncurrentVersionExpiration {
		return v.NoncurrentVersionExpiration
	}).(SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

// Object key prefix identifying one or more objects to which the rule applies.
func (o SpacesBucketLifecycleRuleOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRule) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

type SpacesBucketLifecycleRuleArrayOutput struct{ *pulumi.OutputState }

func (SpacesBucketLifecycleRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacesBucketLifecycleRule)(nil)).Elem()
}

func (o SpacesBucketLifecycleRuleArrayOutput) ToSpacesBucketLifecycleRuleArrayOutput() SpacesBucketLifecycleRuleArrayOutput {
	return o
}

func (o SpacesBucketLifecycleRuleArrayOutput) ToSpacesBucketLifecycleRuleArrayOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleArrayOutput {
	return o
}

func (o SpacesBucketLifecycleRuleArrayOutput) Index(i pulumi.IntInput) SpacesBucketLifecycleRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpacesBucketLifecycleRule {
		return vs[0].([]SpacesBucketLifecycleRule)[vs[1].(int)]
	}).(SpacesBucketLifecycleRuleOutput)
}

type SpacesBucketLifecycleRuleExpiration struct {
	// Specifies the date/time after which you want applicable objects to expire. The argument uses
	// RFC3339 format, e.g. "2020-03-22T15:03:55Z" or parts thereof e.g. "2019-02-28".
	Date *string `pulumi:"date"`
	// Specifies the number of days after object creation when the applicable objects will expire.
	Days *int `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended
	// bucket), setting this to true directs Spaces to delete expired object delete markers.
	ExpiredObjectDeleteMarker *bool `pulumi:"expiredObjectDeleteMarker"`
}

// SpacesBucketLifecycleRuleExpirationInput is an input type that accepts SpacesBucketLifecycleRuleExpirationArgs and SpacesBucketLifecycleRuleExpirationOutput values.
// You can construct a concrete instance of `SpacesBucketLifecycleRuleExpirationInput` via:
//
//          SpacesBucketLifecycleRuleExpirationArgs{...}
type SpacesBucketLifecycleRuleExpirationInput interface {
	pulumi.Input

	ToSpacesBucketLifecycleRuleExpirationOutput() SpacesBucketLifecycleRuleExpirationOutput
	ToSpacesBucketLifecycleRuleExpirationOutputWithContext(context.Context) SpacesBucketLifecycleRuleExpirationOutput
}

type SpacesBucketLifecycleRuleExpirationArgs struct {
	// Specifies the date/time after which you want applicable objects to expire. The argument uses
	// RFC3339 format, e.g. "2020-03-22T15:03:55Z" or parts thereof e.g. "2019-02-28".
	Date pulumi.StringPtrInput `pulumi:"date"`
	// Specifies the number of days after object creation when the applicable objects will expire.
	Days pulumi.IntPtrInput `pulumi:"days"`
	// On a versioned bucket (versioning-enabled or versioning-suspended
	// bucket), setting this to true directs Spaces to delete expired object delete markers.
	ExpiredObjectDeleteMarker pulumi.BoolPtrInput `pulumi:"expiredObjectDeleteMarker"`
}

func (SpacesBucketLifecycleRuleExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i SpacesBucketLifecycleRuleExpirationArgs) ToSpacesBucketLifecycleRuleExpirationOutput() SpacesBucketLifecycleRuleExpirationOutput {
	return i.ToSpacesBucketLifecycleRuleExpirationOutputWithContext(context.Background())
}

func (i SpacesBucketLifecycleRuleExpirationArgs) ToSpacesBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketLifecycleRuleExpirationOutput)
}

func (i SpacesBucketLifecycleRuleExpirationArgs) ToSpacesBucketLifecycleRuleExpirationPtrOutput() SpacesBucketLifecycleRuleExpirationPtrOutput {
	return i.ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i SpacesBucketLifecycleRuleExpirationArgs) ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketLifecycleRuleExpirationOutput).ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(ctx)
}

// SpacesBucketLifecycleRuleExpirationPtrInput is an input type that accepts SpacesBucketLifecycleRuleExpirationArgs, SpacesBucketLifecycleRuleExpirationPtr and SpacesBucketLifecycleRuleExpirationPtrOutput values.
// You can construct a concrete instance of `SpacesBucketLifecycleRuleExpirationPtrInput` via:
//
//          SpacesBucketLifecycleRuleExpirationArgs{...}
//
//  or:
//
//          nil
type SpacesBucketLifecycleRuleExpirationPtrInput interface {
	pulumi.Input

	ToSpacesBucketLifecycleRuleExpirationPtrOutput() SpacesBucketLifecycleRuleExpirationPtrOutput
	ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(context.Context) SpacesBucketLifecycleRuleExpirationPtrOutput
}

type spacesBucketLifecycleRuleExpirationPtrType SpacesBucketLifecycleRuleExpirationArgs

func SpacesBucketLifecycleRuleExpirationPtr(v *SpacesBucketLifecycleRuleExpirationArgs) SpacesBucketLifecycleRuleExpirationPtrInput {
	return (*spacesBucketLifecycleRuleExpirationPtrType)(v)
}

func (*spacesBucketLifecycleRuleExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpacesBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (i *spacesBucketLifecycleRuleExpirationPtrType) ToSpacesBucketLifecycleRuleExpirationPtrOutput() SpacesBucketLifecycleRuleExpirationPtrOutput {
	return i.ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (i *spacesBucketLifecycleRuleExpirationPtrType) ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketLifecycleRuleExpirationPtrOutput)
}

type SpacesBucketLifecycleRuleExpirationOutput struct{ *pulumi.OutputState }

func (SpacesBucketLifecycleRuleExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o SpacesBucketLifecycleRuleExpirationOutput) ToSpacesBucketLifecycleRuleExpirationOutput() SpacesBucketLifecycleRuleExpirationOutput {
	return o
}

func (o SpacesBucketLifecycleRuleExpirationOutput) ToSpacesBucketLifecycleRuleExpirationOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleExpirationOutput {
	return o
}

func (o SpacesBucketLifecycleRuleExpirationOutput) ToSpacesBucketLifecycleRuleExpirationPtrOutput() SpacesBucketLifecycleRuleExpirationPtrOutput {
	return o.ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(context.Background())
}

func (o SpacesBucketLifecycleRuleExpirationOutput) ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpacesBucketLifecycleRuleExpiration) *SpacesBucketLifecycleRuleExpiration {
		return &v
	}).(SpacesBucketLifecycleRuleExpirationPtrOutput)
}

// Specifies the date/time after which you want applicable objects to expire. The argument uses
// RFC3339 format, e.g. "2020-03-22T15:03:55Z" or parts thereof e.g. "2019-02-28".
func (o SpacesBucketLifecycleRuleExpirationOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRuleExpiration) *string { return v.Date }).(pulumi.StringPtrOutput)
}

// Specifies the number of days after object creation when the applicable objects will expire.
func (o SpacesBucketLifecycleRuleExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRuleExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended
// bucket), setting this to true directs Spaces to delete expired object delete markers.
func (o SpacesBucketLifecycleRuleExpirationOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRuleExpiration) *bool { return v.ExpiredObjectDeleteMarker }).(pulumi.BoolPtrOutput)
}

type SpacesBucketLifecycleRuleExpirationPtrOutput struct{ *pulumi.OutputState }

func (SpacesBucketLifecycleRuleExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpacesBucketLifecycleRuleExpiration)(nil)).Elem()
}

func (o SpacesBucketLifecycleRuleExpirationPtrOutput) ToSpacesBucketLifecycleRuleExpirationPtrOutput() SpacesBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o SpacesBucketLifecycleRuleExpirationPtrOutput) ToSpacesBucketLifecycleRuleExpirationPtrOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleExpirationPtrOutput {
	return o
}

func (o SpacesBucketLifecycleRuleExpirationPtrOutput) Elem() SpacesBucketLifecycleRuleExpirationOutput {
	return o.ApplyT(func(v *SpacesBucketLifecycleRuleExpiration) SpacesBucketLifecycleRuleExpiration {
		if v != nil {
			return *v
		}
		var ret SpacesBucketLifecycleRuleExpiration
		return ret
	}).(SpacesBucketLifecycleRuleExpirationOutput)
}

// Specifies the date/time after which you want applicable objects to expire. The argument uses
// RFC3339 format, e.g. "2020-03-22T15:03:55Z" or parts thereof e.g. "2019-02-28".
func (o SpacesBucketLifecycleRuleExpirationPtrOutput) Date() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpacesBucketLifecycleRuleExpiration) *string {
		if v == nil {
			return nil
		}
		return v.Date
	}).(pulumi.StringPtrOutput)
}

// Specifies the number of days after object creation when the applicable objects will expire.
func (o SpacesBucketLifecycleRuleExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpacesBucketLifecycleRuleExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

// On a versioned bucket (versioning-enabled or versioning-suspended
// bucket), setting this to true directs Spaces to delete expired object delete markers.
func (o SpacesBucketLifecycleRuleExpirationPtrOutput) ExpiredObjectDeleteMarker() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpacesBucketLifecycleRuleExpiration) *bool {
		if v == nil {
			return nil
		}
		return v.ExpiredObjectDeleteMarker
	}).(pulumi.BoolPtrOutput)
}

type SpacesBucketLifecycleRuleNoncurrentVersionExpiration struct {
	// Specifies the number of days after which an object's non-current versions expire.
	Days *int `pulumi:"days"`
}

// SpacesBucketLifecycleRuleNoncurrentVersionExpirationInput is an input type that accepts SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs and SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput values.
// You can construct a concrete instance of `SpacesBucketLifecycleRuleNoncurrentVersionExpirationInput` via:
//
//          SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
type SpacesBucketLifecycleRuleNoncurrentVersionExpirationInput interface {
	pulumi.Input

	ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput() SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput
	ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Context) SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput
}

type SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs struct {
	// Specifies the number of days after which an object's non-current versions expire.
	Days pulumi.IntPtrInput `pulumi:"days"`
}

func (SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput() SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return i.ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(context.Background())
}

func (i SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

func (i SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput).ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx)
}

// SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrInput is an input type that accepts SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs, SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtr and SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput values.
// You can construct a concrete instance of `SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrInput` via:
//
//          SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs{...}
//
//  or:
//
//          nil
type SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrInput interface {
	pulumi.Input

	ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
	ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Context) SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput
}

type spacesBucketLifecycleRuleNoncurrentVersionExpirationPtrType SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs

func SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtr(v *SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs) SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrInput {
	return (*spacesBucketLifecycleRuleNoncurrentVersionExpirationPtrType)(v)
}

func (*spacesBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpacesBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (i *spacesBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return i.ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (i *spacesBucketLifecycleRuleNoncurrentVersionExpirationPtrType) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

type SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput struct{ *pulumi.OutputState }

func (SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput() SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o
}

func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(context.Background())
}

func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpacesBucketLifecycleRuleNoncurrentVersionExpiration) *SpacesBucketLifecycleRuleNoncurrentVersionExpiration {
		return &v
	}).(SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput)
}

// Specifies the number of days after which an object's non-current versions expire.
func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpacesBucketLifecycleRuleNoncurrentVersionExpiration) *int { return v.Days }).(pulumi.IntPtrOutput)
}

type SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput struct{ *pulumi.OutputState }

func (SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpacesBucketLifecycleRuleNoncurrentVersionExpiration)(nil)).Elem()
}

func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput() SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) ToSpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutputWithContext(ctx context.Context) SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput {
	return o
}

func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Elem() SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput {
	return o.ApplyT(func(v *SpacesBucketLifecycleRuleNoncurrentVersionExpiration) SpacesBucketLifecycleRuleNoncurrentVersionExpiration {
		if v != nil {
			return *v
		}
		var ret SpacesBucketLifecycleRuleNoncurrentVersionExpiration
		return ret
	}).(SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput)
}

// Specifies the number of days after which an object's non-current versions expire.
func (o SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput) Days() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *SpacesBucketLifecycleRuleNoncurrentVersionExpiration) *int {
		if v == nil {
			return nil
		}
		return v.Days
	}).(pulumi.IntPtrOutput)
}

type SpacesBucketVersioning struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned
	// state. You can, however, suspend versioning on that bucket.
	Enabled *bool `pulumi:"enabled"`
}

// SpacesBucketVersioningInput is an input type that accepts SpacesBucketVersioningArgs and SpacesBucketVersioningOutput values.
// You can construct a concrete instance of `SpacesBucketVersioningInput` via:
//
//          SpacesBucketVersioningArgs{...}
type SpacesBucketVersioningInput interface {
	pulumi.Input

	ToSpacesBucketVersioningOutput() SpacesBucketVersioningOutput
	ToSpacesBucketVersioningOutputWithContext(context.Context) SpacesBucketVersioningOutput
}

type SpacesBucketVersioningArgs struct {
	// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned
	// state. You can, however, suspend versioning on that bucket.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
}

func (SpacesBucketVersioningArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketVersioning)(nil)).Elem()
}

func (i SpacesBucketVersioningArgs) ToSpacesBucketVersioningOutput() SpacesBucketVersioningOutput {
	return i.ToSpacesBucketVersioningOutputWithContext(context.Background())
}

func (i SpacesBucketVersioningArgs) ToSpacesBucketVersioningOutputWithContext(ctx context.Context) SpacesBucketVersioningOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketVersioningOutput)
}

func (i SpacesBucketVersioningArgs) ToSpacesBucketVersioningPtrOutput() SpacesBucketVersioningPtrOutput {
	return i.ToSpacesBucketVersioningPtrOutputWithContext(context.Background())
}

func (i SpacesBucketVersioningArgs) ToSpacesBucketVersioningPtrOutputWithContext(ctx context.Context) SpacesBucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketVersioningOutput).ToSpacesBucketVersioningPtrOutputWithContext(ctx)
}

// SpacesBucketVersioningPtrInput is an input type that accepts SpacesBucketVersioningArgs, SpacesBucketVersioningPtr and SpacesBucketVersioningPtrOutput values.
// You can construct a concrete instance of `SpacesBucketVersioningPtrInput` via:
//
//          SpacesBucketVersioningArgs{...}
//
//  or:
//
//          nil
type SpacesBucketVersioningPtrInput interface {
	pulumi.Input

	ToSpacesBucketVersioningPtrOutput() SpacesBucketVersioningPtrOutput
	ToSpacesBucketVersioningPtrOutputWithContext(context.Context) SpacesBucketVersioningPtrOutput
}

type spacesBucketVersioningPtrType SpacesBucketVersioningArgs

func SpacesBucketVersioningPtr(v *SpacesBucketVersioningArgs) SpacesBucketVersioningPtrInput {
	return (*spacesBucketVersioningPtrType)(v)
}

func (*spacesBucketVersioningPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpacesBucketVersioning)(nil)).Elem()
}

func (i *spacesBucketVersioningPtrType) ToSpacesBucketVersioningPtrOutput() SpacesBucketVersioningPtrOutput {
	return i.ToSpacesBucketVersioningPtrOutputWithContext(context.Background())
}

func (i *spacesBucketVersioningPtrType) ToSpacesBucketVersioningPtrOutputWithContext(ctx context.Context) SpacesBucketVersioningPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketVersioningPtrOutput)
}

type SpacesBucketVersioningOutput struct{ *pulumi.OutputState }

func (SpacesBucketVersioningOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketVersioning)(nil)).Elem()
}

func (o SpacesBucketVersioningOutput) ToSpacesBucketVersioningOutput() SpacesBucketVersioningOutput {
	return o
}

func (o SpacesBucketVersioningOutput) ToSpacesBucketVersioningOutputWithContext(ctx context.Context) SpacesBucketVersioningOutput {
	return o
}

func (o SpacesBucketVersioningOutput) ToSpacesBucketVersioningPtrOutput() SpacesBucketVersioningPtrOutput {
	return o.ToSpacesBucketVersioningPtrOutputWithContext(context.Background())
}

func (o SpacesBucketVersioningOutput) ToSpacesBucketVersioningPtrOutputWithContext(ctx context.Context) SpacesBucketVersioningPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpacesBucketVersioning) *SpacesBucketVersioning {
		return &v
	}).(SpacesBucketVersioningPtrOutput)
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned
// state. You can, however, suspend versioning on that bucket.
func (o SpacesBucketVersioningOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpacesBucketVersioning) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

type SpacesBucketVersioningPtrOutput struct{ *pulumi.OutputState }

func (SpacesBucketVersioningPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpacesBucketVersioning)(nil)).Elem()
}

func (o SpacesBucketVersioningPtrOutput) ToSpacesBucketVersioningPtrOutput() SpacesBucketVersioningPtrOutput {
	return o
}

func (o SpacesBucketVersioningPtrOutput) ToSpacesBucketVersioningPtrOutputWithContext(ctx context.Context) SpacesBucketVersioningPtrOutput {
	return o
}

func (o SpacesBucketVersioningPtrOutput) Elem() SpacesBucketVersioningOutput {
	return o.ApplyT(func(v *SpacesBucketVersioning) SpacesBucketVersioning {
		if v != nil {
			return *v
		}
		var ret SpacesBucketVersioning
		return ret
	}).(SpacesBucketVersioningOutput)
}

// Enable versioning. Once you version-enable a bucket, it can never return to an unversioned
// state. You can, however, suspend versioning on that bucket.
func (o SpacesBucketVersioningPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpacesBucketVersioning) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

type GetAppSpec struct {
	Alerts    []GetAppSpecAlert    `pulumi:"alerts"`
	Databases []GetAppSpecDatabase `pulumi:"databases"`
	// Deprecated: This attribute has been replaced by `domain` which supports additional functionality.
	Domains []string `pulumi:"domains"`
	// Describes an environment variable made available to an app competent.
	Envs []GetAppSpecEnv `pulumi:"envs"`
	Jobs []GetAppSpecJob `pulumi:"jobs"`
	// The name of the component.
	Name        string                 `pulumi:"name"`
	Region      *string                `pulumi:"region"`
	Services    []GetAppSpecService    `pulumi:"services"`
	StaticSites []GetAppSpecStaticSite `pulumi:"staticSites"`
	Workers     []GetAppSpecWorker     `pulumi:"workers"`
}

// GetAppSpecInput is an input type that accepts GetAppSpecArgs and GetAppSpecOutput values.
// You can construct a concrete instance of `GetAppSpecInput` via:
//
//          GetAppSpecArgs{...}
type GetAppSpecInput interface {
	pulumi.Input

	ToGetAppSpecOutput() GetAppSpecOutput
	ToGetAppSpecOutputWithContext(context.Context) GetAppSpecOutput
}

type GetAppSpecArgs struct {
	Alerts    GetAppSpecAlertArrayInput    `pulumi:"alerts"`
	Databases GetAppSpecDatabaseArrayInput `pulumi:"databases"`
	// Deprecated: This attribute has been replaced by `domain` which supports additional functionality.
	Domains pulumi.StringArrayInput `pulumi:"domains"`
	// Describes an environment variable made available to an app competent.
	Envs GetAppSpecEnvArrayInput `pulumi:"envs"`
	Jobs GetAppSpecJobArrayInput `pulumi:"jobs"`
	// The name of the component.
	Name        pulumi.StringInput             `pulumi:"name"`
	Region      pulumi.StringPtrInput          `pulumi:"region"`
	Services    GetAppSpecServiceArrayInput    `pulumi:"services"`
	StaticSites GetAppSpecStaticSiteArrayInput `pulumi:"staticSites"`
	Workers     GetAppSpecWorkerArrayInput     `pulumi:"workers"`
}

func (GetAppSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpec)(nil)).Elem()
}

func (i GetAppSpecArgs) ToGetAppSpecOutput() GetAppSpecOutput {
	return i.ToGetAppSpecOutputWithContext(context.Background())
}

func (i GetAppSpecArgs) ToGetAppSpecOutputWithContext(ctx context.Context) GetAppSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecOutput)
}

// GetAppSpecArrayInput is an input type that accepts GetAppSpecArray and GetAppSpecArrayOutput values.
// You can construct a concrete instance of `GetAppSpecArrayInput` via:
//
//          GetAppSpecArray{ GetAppSpecArgs{...} }
type GetAppSpecArrayInput interface {
	pulumi.Input

	ToGetAppSpecArrayOutput() GetAppSpecArrayOutput
	ToGetAppSpecArrayOutputWithContext(context.Context) GetAppSpecArrayOutput
}

type GetAppSpecArray []GetAppSpecInput

func (GetAppSpecArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpec)(nil)).Elem()
}

func (i GetAppSpecArray) ToGetAppSpecArrayOutput() GetAppSpecArrayOutput {
	return i.ToGetAppSpecArrayOutputWithContext(context.Background())
}

func (i GetAppSpecArray) ToGetAppSpecArrayOutputWithContext(ctx context.Context) GetAppSpecArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecArrayOutput)
}

type GetAppSpecOutput struct{ *pulumi.OutputState }

func (GetAppSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpec)(nil)).Elem()
}

func (o GetAppSpecOutput) ToGetAppSpecOutput() GetAppSpecOutput {
	return o
}

func (o GetAppSpecOutput) ToGetAppSpecOutputWithContext(ctx context.Context) GetAppSpecOutput {
	return o
}

func (o GetAppSpecOutput) Alerts() GetAppSpecAlertArrayOutput {
	return o.ApplyT(func(v GetAppSpec) []GetAppSpecAlert { return v.Alerts }).(GetAppSpecAlertArrayOutput)
}

func (o GetAppSpecOutput) Databases() GetAppSpecDatabaseArrayOutput {
	return o.ApplyT(func(v GetAppSpec) []GetAppSpecDatabase { return v.Databases }).(GetAppSpecDatabaseArrayOutput)
}

// Deprecated: This attribute has been replaced by `domain` which supports additional functionality.
func (o GetAppSpecOutput) Domains() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSpec) []string { return v.Domains }).(pulumi.StringArrayOutput)
}

// Describes an environment variable made available to an app competent.
func (o GetAppSpecOutput) Envs() GetAppSpecEnvArrayOutput {
	return o.ApplyT(func(v GetAppSpec) []GetAppSpecEnv { return v.Envs }).(GetAppSpecEnvArrayOutput)
}

func (o GetAppSpecOutput) Jobs() GetAppSpecJobArrayOutput {
	return o.ApplyT(func(v GetAppSpec) []GetAppSpecJob { return v.Jobs }).(GetAppSpecJobArrayOutput)
}

// The name of the component.
func (o GetAppSpecOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpec) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAppSpecOutput) Region() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpec) *string { return v.Region }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecOutput) Services() GetAppSpecServiceArrayOutput {
	return o.ApplyT(func(v GetAppSpec) []GetAppSpecService { return v.Services }).(GetAppSpecServiceArrayOutput)
}

func (o GetAppSpecOutput) StaticSites() GetAppSpecStaticSiteArrayOutput {
	return o.ApplyT(func(v GetAppSpec) []GetAppSpecStaticSite { return v.StaticSites }).(GetAppSpecStaticSiteArrayOutput)
}

func (o GetAppSpecOutput) Workers() GetAppSpecWorkerArrayOutput {
	return o.ApplyT(func(v GetAppSpec) []GetAppSpecWorker { return v.Workers }).(GetAppSpecWorkerArrayOutput)
}

type GetAppSpecArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpec)(nil)).Elem()
}

func (o GetAppSpecArrayOutput) ToGetAppSpecArrayOutput() GetAppSpecArrayOutput {
	return o
}

func (o GetAppSpecArrayOutput) ToGetAppSpecArrayOutputWithContext(ctx context.Context) GetAppSpecArrayOutput {
	return o
}

func (o GetAppSpecArrayOutput) Index(i pulumi.IntInput) GetAppSpecOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpec {
		return vs[0].([]GetAppSpec)[vs[1].(int)]
	}).(GetAppSpecOutput)
}

type GetAppSpecAlert struct {
	Disabled *bool  `pulumi:"disabled"`
	Rule     string `pulumi:"rule"`
}

// GetAppSpecAlertInput is an input type that accepts GetAppSpecAlertArgs and GetAppSpecAlertOutput values.
// You can construct a concrete instance of `GetAppSpecAlertInput` via:
//
//          GetAppSpecAlertArgs{...}
type GetAppSpecAlertInput interface {
	pulumi.Input

	ToGetAppSpecAlertOutput() GetAppSpecAlertOutput
	ToGetAppSpecAlertOutputWithContext(context.Context) GetAppSpecAlertOutput
}

type GetAppSpecAlertArgs struct {
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	Rule     pulumi.StringInput  `pulumi:"rule"`
}

func (GetAppSpecAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecAlert)(nil)).Elem()
}

func (i GetAppSpecAlertArgs) ToGetAppSpecAlertOutput() GetAppSpecAlertOutput {
	return i.ToGetAppSpecAlertOutputWithContext(context.Background())
}

func (i GetAppSpecAlertArgs) ToGetAppSpecAlertOutputWithContext(ctx context.Context) GetAppSpecAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecAlertOutput)
}

// GetAppSpecAlertArrayInput is an input type that accepts GetAppSpecAlertArray and GetAppSpecAlertArrayOutput values.
// You can construct a concrete instance of `GetAppSpecAlertArrayInput` via:
//
//          GetAppSpecAlertArray{ GetAppSpecAlertArgs{...} }
type GetAppSpecAlertArrayInput interface {
	pulumi.Input

	ToGetAppSpecAlertArrayOutput() GetAppSpecAlertArrayOutput
	ToGetAppSpecAlertArrayOutputWithContext(context.Context) GetAppSpecAlertArrayOutput
}

type GetAppSpecAlertArray []GetAppSpecAlertInput

func (GetAppSpecAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecAlert)(nil)).Elem()
}

func (i GetAppSpecAlertArray) ToGetAppSpecAlertArrayOutput() GetAppSpecAlertArrayOutput {
	return i.ToGetAppSpecAlertArrayOutputWithContext(context.Background())
}

func (i GetAppSpecAlertArray) ToGetAppSpecAlertArrayOutputWithContext(ctx context.Context) GetAppSpecAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecAlertArrayOutput)
}

type GetAppSpecAlertOutput struct{ *pulumi.OutputState }

func (GetAppSpecAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecAlert)(nil)).Elem()
}

func (o GetAppSpecAlertOutput) ToGetAppSpecAlertOutput() GetAppSpecAlertOutput {
	return o
}

func (o GetAppSpecAlertOutput) ToGetAppSpecAlertOutputWithContext(ctx context.Context) GetAppSpecAlertOutput {
	return o
}

func (o GetAppSpecAlertOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecAlert) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o GetAppSpecAlertOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecAlert) string { return v.Rule }).(pulumi.StringOutput)
}

type GetAppSpecAlertArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecAlert)(nil)).Elem()
}

func (o GetAppSpecAlertArrayOutput) ToGetAppSpecAlertArrayOutput() GetAppSpecAlertArrayOutput {
	return o
}

func (o GetAppSpecAlertArrayOutput) ToGetAppSpecAlertArrayOutputWithContext(ctx context.Context) GetAppSpecAlertArrayOutput {
	return o
}

func (o GetAppSpecAlertArrayOutput) Index(i pulumi.IntInput) GetAppSpecAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecAlert {
		return vs[0].([]GetAppSpecAlert)[vs[1].(int)]
	}).(GetAppSpecAlertOutput)
}

type GetAppSpecDatabase struct {
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if `clusterName` is not set, a new cluster will be provisioned.
	ClusterName *string `pulumi:"clusterName"`
	// The name of the MySQL or PostgreSQL database to configure.
	DbName *string `pulumi:"dbName"`
	// The name of the MySQL or PostgreSQL user to configure.
	DbUser *string `pulumi:"dbUser"`
	// The database engine to use (`MYSQL`, `PG`, `REDIS`, or `MONGODB`).
	Engine *string `pulumi:"engine"`
	// The name of the component.
	Name *string `pulumi:"name"`
	// Whether this is a production or dev database.
	Production *bool `pulumi:"production"`
	// The version of the database engine.
	Version *string `pulumi:"version"`
}

// GetAppSpecDatabaseInput is an input type that accepts GetAppSpecDatabaseArgs and GetAppSpecDatabaseOutput values.
// You can construct a concrete instance of `GetAppSpecDatabaseInput` via:
//
//          GetAppSpecDatabaseArgs{...}
type GetAppSpecDatabaseInput interface {
	pulumi.Input

	ToGetAppSpecDatabaseOutput() GetAppSpecDatabaseOutput
	ToGetAppSpecDatabaseOutputWithContext(context.Context) GetAppSpecDatabaseOutput
}

type GetAppSpecDatabaseArgs struct {
	// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if `clusterName` is not set, a new cluster will be provisioned.
	ClusterName pulumi.StringPtrInput `pulumi:"clusterName"`
	// The name of the MySQL or PostgreSQL database to configure.
	DbName pulumi.StringPtrInput `pulumi:"dbName"`
	// The name of the MySQL or PostgreSQL user to configure.
	DbUser pulumi.StringPtrInput `pulumi:"dbUser"`
	// The database engine to use (`MYSQL`, `PG`, `REDIS`, or `MONGODB`).
	Engine pulumi.StringPtrInput `pulumi:"engine"`
	// The name of the component.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Whether this is a production or dev database.
	Production pulumi.BoolPtrInput `pulumi:"production"`
	// The version of the database engine.
	Version pulumi.StringPtrInput `pulumi:"version"`
}

func (GetAppSpecDatabaseArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecDatabase)(nil)).Elem()
}

func (i GetAppSpecDatabaseArgs) ToGetAppSpecDatabaseOutput() GetAppSpecDatabaseOutput {
	return i.ToGetAppSpecDatabaseOutputWithContext(context.Background())
}

func (i GetAppSpecDatabaseArgs) ToGetAppSpecDatabaseOutputWithContext(ctx context.Context) GetAppSpecDatabaseOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecDatabaseOutput)
}

// GetAppSpecDatabaseArrayInput is an input type that accepts GetAppSpecDatabaseArray and GetAppSpecDatabaseArrayOutput values.
// You can construct a concrete instance of `GetAppSpecDatabaseArrayInput` via:
//
//          GetAppSpecDatabaseArray{ GetAppSpecDatabaseArgs{...} }
type GetAppSpecDatabaseArrayInput interface {
	pulumi.Input

	ToGetAppSpecDatabaseArrayOutput() GetAppSpecDatabaseArrayOutput
	ToGetAppSpecDatabaseArrayOutputWithContext(context.Context) GetAppSpecDatabaseArrayOutput
}

type GetAppSpecDatabaseArray []GetAppSpecDatabaseInput

func (GetAppSpecDatabaseArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecDatabase)(nil)).Elem()
}

func (i GetAppSpecDatabaseArray) ToGetAppSpecDatabaseArrayOutput() GetAppSpecDatabaseArrayOutput {
	return i.ToGetAppSpecDatabaseArrayOutputWithContext(context.Background())
}

func (i GetAppSpecDatabaseArray) ToGetAppSpecDatabaseArrayOutputWithContext(ctx context.Context) GetAppSpecDatabaseArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecDatabaseArrayOutput)
}

type GetAppSpecDatabaseOutput struct{ *pulumi.OutputState }

func (GetAppSpecDatabaseOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecDatabase)(nil)).Elem()
}

func (o GetAppSpecDatabaseOutput) ToGetAppSpecDatabaseOutput() GetAppSpecDatabaseOutput {
	return o
}

func (o GetAppSpecDatabaseOutput) ToGetAppSpecDatabaseOutputWithContext(ctx context.Context) GetAppSpecDatabaseOutput {
	return o
}

// The name of the underlying DigitalOcean DBaaS cluster. This is required for production databases. For dev databases, if `clusterName` is not set, a new cluster will be provisioned.
func (o GetAppSpecDatabaseOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecDatabase) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

// The name of the MySQL or PostgreSQL database to configure.
func (o GetAppSpecDatabaseOutput) DbName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecDatabase) *string { return v.DbName }).(pulumi.StringPtrOutput)
}

// The name of the MySQL or PostgreSQL user to configure.
func (o GetAppSpecDatabaseOutput) DbUser() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecDatabase) *string { return v.DbUser }).(pulumi.StringPtrOutput)
}

// The database engine to use (`MYSQL`, `PG`, `REDIS`, or `MONGODB`).
func (o GetAppSpecDatabaseOutput) Engine() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecDatabase) *string { return v.Engine }).(pulumi.StringPtrOutput)
}

// The name of the component.
func (o GetAppSpecDatabaseOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecDatabase) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// Whether this is a production or dev database.
func (o GetAppSpecDatabaseOutput) Production() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecDatabase) *bool { return v.Production }).(pulumi.BoolPtrOutput)
}

// The version of the database engine.
func (o GetAppSpecDatabaseOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecDatabase) *string { return v.Version }).(pulumi.StringPtrOutput)
}

type GetAppSpecDatabaseArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecDatabaseArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecDatabase)(nil)).Elem()
}

func (o GetAppSpecDatabaseArrayOutput) ToGetAppSpecDatabaseArrayOutput() GetAppSpecDatabaseArrayOutput {
	return o
}

func (o GetAppSpecDatabaseArrayOutput) ToGetAppSpecDatabaseArrayOutputWithContext(ctx context.Context) GetAppSpecDatabaseArrayOutput {
	return o
}

func (o GetAppSpecDatabaseArrayOutput) Index(i pulumi.IntInput) GetAppSpecDatabaseOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecDatabase {
		return vs[0].([]GetAppSpecDatabase)[vs[1].(int)]
	}).(GetAppSpecDatabaseOutput)
}

type GetAppSpecDomain struct {
	// The name of the component.
	Name string `pulumi:"name"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type     string  `pulumi:"type"`
	Wildcard bool    `pulumi:"wildcard"`
	Zone     *string `pulumi:"zone"`
}

// GetAppSpecDomainInput is an input type that accepts GetAppSpecDomainArgs and GetAppSpecDomainOutput values.
// You can construct a concrete instance of `GetAppSpecDomainInput` via:
//
//          GetAppSpecDomainArgs{...}
type GetAppSpecDomainInput interface {
	pulumi.Input

	ToGetAppSpecDomainOutput() GetAppSpecDomainOutput
	ToGetAppSpecDomainOutputWithContext(context.Context) GetAppSpecDomainOutput
}

type GetAppSpecDomainArgs struct {
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type     pulumi.StringInput    `pulumi:"type"`
	Wildcard pulumi.BoolInput      `pulumi:"wildcard"`
	Zone     pulumi.StringPtrInput `pulumi:"zone"`
}

func (GetAppSpecDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecDomain)(nil)).Elem()
}

func (i GetAppSpecDomainArgs) ToGetAppSpecDomainOutput() GetAppSpecDomainOutput {
	return i.ToGetAppSpecDomainOutputWithContext(context.Background())
}

func (i GetAppSpecDomainArgs) ToGetAppSpecDomainOutputWithContext(ctx context.Context) GetAppSpecDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecDomainOutput)
}

type GetAppSpecDomainOutput struct{ *pulumi.OutputState }

func (GetAppSpecDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecDomain)(nil)).Elem()
}

func (o GetAppSpecDomainOutput) ToGetAppSpecDomainOutput() GetAppSpecDomainOutput {
	return o
}

func (o GetAppSpecDomainOutput) ToGetAppSpecDomainOutputWithContext(ctx context.Context) GetAppSpecDomainOutput {
	return o
}

// The name of the component.
func (o GetAppSpecDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecDomain) string { return v.Name }).(pulumi.StringOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o GetAppSpecDomainOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecDomain) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetAppSpecDomainOutput) Wildcard() pulumi.BoolOutput {
	return o.ApplyT(func(v GetAppSpecDomain) bool { return v.Wildcard }).(pulumi.BoolOutput)
}

func (o GetAppSpecDomainOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecDomain) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type GetAppSpecEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type string `pulumi:"type"`
	// The value of the environment variable.
	Value *string `pulumi:"value"`
}

// GetAppSpecEnvInput is an input type that accepts GetAppSpecEnvArgs and GetAppSpecEnvOutput values.
// You can construct a concrete instance of `GetAppSpecEnvInput` via:
//
//          GetAppSpecEnvArgs{...}
type GetAppSpecEnvInput interface {
	pulumi.Input

	ToGetAppSpecEnvOutput() GetAppSpecEnvOutput
	ToGetAppSpecEnvOutputWithContext(context.Context) GetAppSpecEnvOutput
}

type GetAppSpecEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetAppSpecEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecEnv)(nil)).Elem()
}

func (i GetAppSpecEnvArgs) ToGetAppSpecEnvOutput() GetAppSpecEnvOutput {
	return i.ToGetAppSpecEnvOutputWithContext(context.Background())
}

func (i GetAppSpecEnvArgs) ToGetAppSpecEnvOutputWithContext(ctx context.Context) GetAppSpecEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecEnvOutput)
}

// GetAppSpecEnvArrayInput is an input type that accepts GetAppSpecEnvArray and GetAppSpecEnvArrayOutput values.
// You can construct a concrete instance of `GetAppSpecEnvArrayInput` via:
//
//          GetAppSpecEnvArray{ GetAppSpecEnvArgs{...} }
type GetAppSpecEnvArrayInput interface {
	pulumi.Input

	ToGetAppSpecEnvArrayOutput() GetAppSpecEnvArrayOutput
	ToGetAppSpecEnvArrayOutputWithContext(context.Context) GetAppSpecEnvArrayOutput
}

type GetAppSpecEnvArray []GetAppSpecEnvInput

func (GetAppSpecEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecEnv)(nil)).Elem()
}

func (i GetAppSpecEnvArray) ToGetAppSpecEnvArrayOutput() GetAppSpecEnvArrayOutput {
	return i.ToGetAppSpecEnvArrayOutputWithContext(context.Background())
}

func (i GetAppSpecEnvArray) ToGetAppSpecEnvArrayOutputWithContext(ctx context.Context) GetAppSpecEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecEnvArrayOutput)
}

type GetAppSpecEnvOutput struct{ *pulumi.OutputState }

func (GetAppSpecEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecEnv)(nil)).Elem()
}

func (o GetAppSpecEnvOutput) ToGetAppSpecEnvOutput() GetAppSpecEnvOutput {
	return o
}

func (o GetAppSpecEnvOutput) ToGetAppSpecEnvOutputWithContext(ctx context.Context) GetAppSpecEnvOutput {
	return o
}

// The name of the environment variable.
func (o GetAppSpecEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o GetAppSpecEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o GetAppSpecEnvOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecEnv) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetAppSpecEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetAppSpecEnvArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecEnv)(nil)).Elem()
}

func (o GetAppSpecEnvArrayOutput) ToGetAppSpecEnvArrayOutput() GetAppSpecEnvArrayOutput {
	return o
}

func (o GetAppSpecEnvArrayOutput) ToGetAppSpecEnvArrayOutputWithContext(ctx context.Context) GetAppSpecEnvArrayOutput {
	return o
}

func (o GetAppSpecEnvArrayOutput) Index(i pulumi.IntInput) GetAppSpecEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecEnv {
		return vs[0].([]GetAppSpecEnv)[vs[1].(int)]
	}).(GetAppSpecEnvOutput)
}

type GetAppSpecJob struct {
	Alerts []GetAppSpecJobAlert `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs []GetAppSpecJobEnv `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
	Git *GetAppSpecJobGit `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github *GetAppSpecJobGithub `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab *GetAppSpecJobGitlab `pulumi:"gitlab"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image *GetAppSpecJobImage `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component.
	InstanceSizeSlug *string `pulumi:"instanceSizeSlug"`
	// The type of job and when it will be run during the deployment process. It may be one of:
	// - `UNSPECIFIED`: Default job type, will auto-complete to POST_DEPLOY kind.
	// - `PRE_DEPLOY`: Indicates a job that runs before an app deployment.
	// - `POST_DEPLOY`: Indicates a job that runs after an app deployment.
	// - `FAILED_DEPLOY`: Indicates a job that runs after a component fails to deploy.
	Kind            *string                       `pulumi:"kind"`
	LogDestinations []GetAppSpecJobLogDestination `pulumi:"logDestinations"`
	// The name of the component.
	Name string `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir *string `pulumi:"sourceDir"`
}

// GetAppSpecJobInput is an input type that accepts GetAppSpecJobArgs and GetAppSpecJobOutput values.
// You can construct a concrete instance of `GetAppSpecJobInput` via:
//
//          GetAppSpecJobArgs{...}
type GetAppSpecJobInput interface {
	pulumi.Input

	ToGetAppSpecJobOutput() GetAppSpecJobOutput
	ToGetAppSpecJobOutputWithContext(context.Context) GetAppSpecJobOutput
}

type GetAppSpecJobArgs struct {
	Alerts GetAppSpecJobAlertArrayInput `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs GetAppSpecJobEnvArrayInput `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
	Git GetAppSpecJobGitPtrInput `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github GetAppSpecJobGithubPtrInput `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab GetAppSpecJobGitlabPtrInput `pulumi:"gitlab"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image GetAppSpecJobImagePtrInput `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component.
	InstanceSizeSlug pulumi.StringPtrInput `pulumi:"instanceSizeSlug"`
	// The type of job and when it will be run during the deployment process. It may be one of:
	// - `UNSPECIFIED`: Default job type, will auto-complete to POST_DEPLOY kind.
	// - `PRE_DEPLOY`: Indicates a job that runs before an app deployment.
	// - `POST_DEPLOY`: Indicates a job that runs after an app deployment.
	// - `FAILED_DEPLOY`: Indicates a job that runs after a component fails to deploy.
	Kind            pulumi.StringPtrInput                 `pulumi:"kind"`
	LogDestinations GetAppSpecJobLogDestinationArrayInput `pulumi:"logDestinations"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (GetAppSpecJobArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJob)(nil)).Elem()
}

func (i GetAppSpecJobArgs) ToGetAppSpecJobOutput() GetAppSpecJobOutput {
	return i.ToGetAppSpecJobOutputWithContext(context.Background())
}

func (i GetAppSpecJobArgs) ToGetAppSpecJobOutputWithContext(ctx context.Context) GetAppSpecJobOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobOutput)
}

// GetAppSpecJobArrayInput is an input type that accepts GetAppSpecJobArray and GetAppSpecJobArrayOutput values.
// You can construct a concrete instance of `GetAppSpecJobArrayInput` via:
//
//          GetAppSpecJobArray{ GetAppSpecJobArgs{...} }
type GetAppSpecJobArrayInput interface {
	pulumi.Input

	ToGetAppSpecJobArrayOutput() GetAppSpecJobArrayOutput
	ToGetAppSpecJobArrayOutputWithContext(context.Context) GetAppSpecJobArrayOutput
}

type GetAppSpecJobArray []GetAppSpecJobInput

func (GetAppSpecJobArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecJob)(nil)).Elem()
}

func (i GetAppSpecJobArray) ToGetAppSpecJobArrayOutput() GetAppSpecJobArrayOutput {
	return i.ToGetAppSpecJobArrayOutputWithContext(context.Background())
}

func (i GetAppSpecJobArray) ToGetAppSpecJobArrayOutputWithContext(ctx context.Context) GetAppSpecJobArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobArrayOutput)
}

type GetAppSpecJobOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJob)(nil)).Elem()
}

func (o GetAppSpecJobOutput) ToGetAppSpecJobOutput() GetAppSpecJobOutput {
	return o
}

func (o GetAppSpecJobOutput) ToGetAppSpecJobOutputWithContext(ctx context.Context) GetAppSpecJobOutput {
	return o
}

func (o GetAppSpecJobOutput) Alerts() GetAppSpecJobAlertArrayOutput {
	return o.ApplyT(func(v GetAppSpecJob) []GetAppSpecJobAlert { return v.Alerts }).(GetAppSpecJobAlertArrayOutput)
}

// An optional build command to run while building this component from source.
func (o GetAppSpecJobOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
func (o GetAppSpecJobOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app.
func (o GetAppSpecJobOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// Describes an environment variable made available to an app competent.
func (o GetAppSpecJobOutput) Envs() GetAppSpecJobEnvArrayOutput {
	return o.ApplyT(func(v GetAppSpecJob) []GetAppSpecJobEnv { return v.Envs }).(GetAppSpecJobEnvArrayOutput)
}

// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
func (o GetAppSpecJobOutput) Git() GetAppSpecJobGitPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *GetAppSpecJobGit { return v.Git }).(GetAppSpecJobGitPtrOutput)
}

// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecJobOutput) Github() GetAppSpecJobGithubPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *GetAppSpecJobGithub { return v.Github }).(GetAppSpecJobGithubPtrOutput)
}

// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecJobOutput) Gitlab() GetAppSpecJobGitlabPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *GetAppSpecJobGitlab { return v.Gitlab }).(GetAppSpecJobGitlabPtrOutput)
}

// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecJobOutput) Image() GetAppSpecJobImagePtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *GetAppSpecJobImage { return v.Image }).(GetAppSpecJobImagePtrOutput)
}

// The amount of instances that this component should be scaled to.
func (o GetAppSpecJobOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component.
func (o GetAppSpecJobOutput) InstanceSizeSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *string { return v.InstanceSizeSlug }).(pulumi.StringPtrOutput)
}

// The type of job and when it will be run during the deployment process. It may be one of:
// - `UNSPECIFIED`: Default job type, will auto-complete to POST_DEPLOY kind.
// - `PRE_DEPLOY`: Indicates a job that runs before an app deployment.
// - `POST_DEPLOY`: Indicates a job that runs after an app deployment.
// - `FAILED_DEPLOY`: Indicates a job that runs after a component fails to deploy.
func (o GetAppSpecJobOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecJobOutput) LogDestinations() GetAppSpecJobLogDestinationArrayOutput {
	return o.ApplyT(func(v GetAppSpecJob) []GetAppSpecJobLogDestination { return v.LogDestinations }).(GetAppSpecJobLogDestinationArrayOutput)
}

// The name of the component.
func (o GetAppSpecJobOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJob) string { return v.Name }).(pulumi.StringOutput)
}

// An optional run command to override the component's default.
func (o GetAppSpecJobOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build.
func (o GetAppSpecJobOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJob) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type GetAppSpecJobArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecJob)(nil)).Elem()
}

func (o GetAppSpecJobArrayOutput) ToGetAppSpecJobArrayOutput() GetAppSpecJobArrayOutput {
	return o
}

func (o GetAppSpecJobArrayOutput) ToGetAppSpecJobArrayOutputWithContext(ctx context.Context) GetAppSpecJobArrayOutput {
	return o
}

func (o GetAppSpecJobArrayOutput) Index(i pulumi.IntInput) GetAppSpecJobOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecJob {
		return vs[0].([]GetAppSpecJob)[vs[1].(int)]
	}).(GetAppSpecJobOutput)
}

type GetAppSpecJobAlert struct {
	Disabled *bool  `pulumi:"disabled"`
	Operator string `pulumi:"operator"`
	Rule     string `pulumi:"rule"`
	// The value of the environment variable.
	Value  float64 `pulumi:"value"`
	Window string  `pulumi:"window"`
}

// GetAppSpecJobAlertInput is an input type that accepts GetAppSpecJobAlertArgs and GetAppSpecJobAlertOutput values.
// You can construct a concrete instance of `GetAppSpecJobAlertInput` via:
//
//          GetAppSpecJobAlertArgs{...}
type GetAppSpecJobAlertInput interface {
	pulumi.Input

	ToGetAppSpecJobAlertOutput() GetAppSpecJobAlertOutput
	ToGetAppSpecJobAlertOutputWithContext(context.Context) GetAppSpecJobAlertOutput
}

type GetAppSpecJobAlertArgs struct {
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	Rule     pulumi.StringInput  `pulumi:"rule"`
	// The value of the environment variable.
	Value  pulumi.Float64Input `pulumi:"value"`
	Window pulumi.StringInput  `pulumi:"window"`
}

func (GetAppSpecJobAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobAlert)(nil)).Elem()
}

func (i GetAppSpecJobAlertArgs) ToGetAppSpecJobAlertOutput() GetAppSpecJobAlertOutput {
	return i.ToGetAppSpecJobAlertOutputWithContext(context.Background())
}

func (i GetAppSpecJobAlertArgs) ToGetAppSpecJobAlertOutputWithContext(ctx context.Context) GetAppSpecJobAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobAlertOutput)
}

// GetAppSpecJobAlertArrayInput is an input type that accepts GetAppSpecJobAlertArray and GetAppSpecJobAlertArrayOutput values.
// You can construct a concrete instance of `GetAppSpecJobAlertArrayInput` via:
//
//          GetAppSpecJobAlertArray{ GetAppSpecJobAlertArgs{...} }
type GetAppSpecJobAlertArrayInput interface {
	pulumi.Input

	ToGetAppSpecJobAlertArrayOutput() GetAppSpecJobAlertArrayOutput
	ToGetAppSpecJobAlertArrayOutputWithContext(context.Context) GetAppSpecJobAlertArrayOutput
}

type GetAppSpecJobAlertArray []GetAppSpecJobAlertInput

func (GetAppSpecJobAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecJobAlert)(nil)).Elem()
}

func (i GetAppSpecJobAlertArray) ToGetAppSpecJobAlertArrayOutput() GetAppSpecJobAlertArrayOutput {
	return i.ToGetAppSpecJobAlertArrayOutputWithContext(context.Background())
}

func (i GetAppSpecJobAlertArray) ToGetAppSpecJobAlertArrayOutputWithContext(ctx context.Context) GetAppSpecJobAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobAlertArrayOutput)
}

type GetAppSpecJobAlertOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobAlert)(nil)).Elem()
}

func (o GetAppSpecJobAlertOutput) ToGetAppSpecJobAlertOutput() GetAppSpecJobAlertOutput {
	return o
}

func (o GetAppSpecJobAlertOutput) ToGetAppSpecJobAlertOutputWithContext(ctx context.Context) GetAppSpecJobAlertOutput {
	return o
}

func (o GetAppSpecJobAlertOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobAlert) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o GetAppSpecJobAlertOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobAlert) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAppSpecJobAlertOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobAlert) string { return v.Rule }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetAppSpecJobAlertOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetAppSpecJobAlert) float64 { return v.Value }).(pulumi.Float64Output)
}

func (o GetAppSpecJobAlertOutput) Window() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobAlert) string { return v.Window }).(pulumi.StringOutput)
}

type GetAppSpecJobAlertArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecJobAlert)(nil)).Elem()
}

func (o GetAppSpecJobAlertArrayOutput) ToGetAppSpecJobAlertArrayOutput() GetAppSpecJobAlertArrayOutput {
	return o
}

func (o GetAppSpecJobAlertArrayOutput) ToGetAppSpecJobAlertArrayOutputWithContext(ctx context.Context) GetAppSpecJobAlertArrayOutput {
	return o
}

func (o GetAppSpecJobAlertArrayOutput) Index(i pulumi.IntInput) GetAppSpecJobAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecJobAlert {
		return vs[0].([]GetAppSpecJobAlert)[vs[1].(int)]
	}).(GetAppSpecJobAlertOutput)
}

type GetAppSpecJobEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type string `pulumi:"type"`
	// The value of the environment variable.
	Value *string `pulumi:"value"`
}

// GetAppSpecJobEnvInput is an input type that accepts GetAppSpecJobEnvArgs and GetAppSpecJobEnvOutput values.
// You can construct a concrete instance of `GetAppSpecJobEnvInput` via:
//
//          GetAppSpecJobEnvArgs{...}
type GetAppSpecJobEnvInput interface {
	pulumi.Input

	ToGetAppSpecJobEnvOutput() GetAppSpecJobEnvOutput
	ToGetAppSpecJobEnvOutputWithContext(context.Context) GetAppSpecJobEnvOutput
}

type GetAppSpecJobEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetAppSpecJobEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobEnv)(nil)).Elem()
}

func (i GetAppSpecJobEnvArgs) ToGetAppSpecJobEnvOutput() GetAppSpecJobEnvOutput {
	return i.ToGetAppSpecJobEnvOutputWithContext(context.Background())
}

func (i GetAppSpecJobEnvArgs) ToGetAppSpecJobEnvOutputWithContext(ctx context.Context) GetAppSpecJobEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobEnvOutput)
}

// GetAppSpecJobEnvArrayInput is an input type that accepts GetAppSpecJobEnvArray and GetAppSpecJobEnvArrayOutput values.
// You can construct a concrete instance of `GetAppSpecJobEnvArrayInput` via:
//
//          GetAppSpecJobEnvArray{ GetAppSpecJobEnvArgs{...} }
type GetAppSpecJobEnvArrayInput interface {
	pulumi.Input

	ToGetAppSpecJobEnvArrayOutput() GetAppSpecJobEnvArrayOutput
	ToGetAppSpecJobEnvArrayOutputWithContext(context.Context) GetAppSpecJobEnvArrayOutput
}

type GetAppSpecJobEnvArray []GetAppSpecJobEnvInput

func (GetAppSpecJobEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecJobEnv)(nil)).Elem()
}

func (i GetAppSpecJobEnvArray) ToGetAppSpecJobEnvArrayOutput() GetAppSpecJobEnvArrayOutput {
	return i.ToGetAppSpecJobEnvArrayOutputWithContext(context.Background())
}

func (i GetAppSpecJobEnvArray) ToGetAppSpecJobEnvArrayOutputWithContext(ctx context.Context) GetAppSpecJobEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobEnvArrayOutput)
}

type GetAppSpecJobEnvOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobEnv)(nil)).Elem()
}

func (o GetAppSpecJobEnvOutput) ToGetAppSpecJobEnvOutput() GetAppSpecJobEnvOutput {
	return o
}

func (o GetAppSpecJobEnvOutput) ToGetAppSpecJobEnvOutputWithContext(ctx context.Context) GetAppSpecJobEnvOutput {
	return o
}

// The name of the environment variable.
func (o GetAppSpecJobEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o GetAppSpecJobEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o GetAppSpecJobEnvOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobEnv) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetAppSpecJobEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetAppSpecJobEnvArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecJobEnv)(nil)).Elem()
}

func (o GetAppSpecJobEnvArrayOutput) ToGetAppSpecJobEnvArrayOutput() GetAppSpecJobEnvArrayOutput {
	return o
}

func (o GetAppSpecJobEnvArrayOutput) ToGetAppSpecJobEnvArrayOutputWithContext(ctx context.Context) GetAppSpecJobEnvArrayOutput {
	return o
}

func (o GetAppSpecJobEnvArrayOutput) Index(i pulumi.IntInput) GetAppSpecJobEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecJobEnv {
		return vs[0].([]GetAppSpecJobEnv)[vs[1].(int)]
	}).(GetAppSpecJobEnvOutput)
}

type GetAppSpecJobGit struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// GetAppSpecJobGitInput is an input type that accepts GetAppSpecJobGitArgs and GetAppSpecJobGitOutput values.
// You can construct a concrete instance of `GetAppSpecJobGitInput` via:
//
//          GetAppSpecJobGitArgs{...}
type GetAppSpecJobGitInput interface {
	pulumi.Input

	ToGetAppSpecJobGitOutput() GetAppSpecJobGitOutput
	ToGetAppSpecJobGitOutputWithContext(context.Context) GetAppSpecJobGitOutput
}

type GetAppSpecJobGitArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (GetAppSpecJobGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobGit)(nil)).Elem()
}

func (i GetAppSpecJobGitArgs) ToGetAppSpecJobGitOutput() GetAppSpecJobGitOutput {
	return i.ToGetAppSpecJobGitOutputWithContext(context.Background())
}

func (i GetAppSpecJobGitArgs) ToGetAppSpecJobGitOutputWithContext(ctx context.Context) GetAppSpecJobGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGitOutput)
}

func (i GetAppSpecJobGitArgs) ToGetAppSpecJobGitPtrOutput() GetAppSpecJobGitPtrOutput {
	return i.ToGetAppSpecJobGitPtrOutputWithContext(context.Background())
}

func (i GetAppSpecJobGitArgs) ToGetAppSpecJobGitPtrOutputWithContext(ctx context.Context) GetAppSpecJobGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGitOutput).ToGetAppSpecJobGitPtrOutputWithContext(ctx)
}

// GetAppSpecJobGitPtrInput is an input type that accepts GetAppSpecJobGitArgs, GetAppSpecJobGitPtr and GetAppSpecJobGitPtrOutput values.
// You can construct a concrete instance of `GetAppSpecJobGitPtrInput` via:
//
//          GetAppSpecJobGitArgs{...}
//
//  or:
//
//          nil
type GetAppSpecJobGitPtrInput interface {
	pulumi.Input

	ToGetAppSpecJobGitPtrOutput() GetAppSpecJobGitPtrOutput
	ToGetAppSpecJobGitPtrOutputWithContext(context.Context) GetAppSpecJobGitPtrOutput
}

type getAppSpecJobGitPtrType GetAppSpecJobGitArgs

func GetAppSpecJobGitPtr(v *GetAppSpecJobGitArgs) GetAppSpecJobGitPtrInput {
	return (*getAppSpecJobGitPtrType)(v)
}

func (*getAppSpecJobGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobGit)(nil)).Elem()
}

func (i *getAppSpecJobGitPtrType) ToGetAppSpecJobGitPtrOutput() GetAppSpecJobGitPtrOutput {
	return i.ToGetAppSpecJobGitPtrOutputWithContext(context.Background())
}

func (i *getAppSpecJobGitPtrType) ToGetAppSpecJobGitPtrOutputWithContext(ctx context.Context) GetAppSpecJobGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGitPtrOutput)
}

type GetAppSpecJobGitOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobGit)(nil)).Elem()
}

func (o GetAppSpecJobGitOutput) ToGetAppSpecJobGitOutput() GetAppSpecJobGitOutput {
	return o
}

func (o GetAppSpecJobGitOutput) ToGetAppSpecJobGitOutputWithContext(ctx context.Context) GetAppSpecJobGitOutput {
	return o
}

func (o GetAppSpecJobGitOutput) ToGetAppSpecJobGitPtrOutput() GetAppSpecJobGitPtrOutput {
	return o.ToGetAppSpecJobGitPtrOutputWithContext(context.Background())
}

func (o GetAppSpecJobGitOutput) ToGetAppSpecJobGitPtrOutputWithContext(ctx context.Context) GetAppSpecJobGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecJobGit) *GetAppSpecJobGit {
		return &v
	}).(GetAppSpecJobGitPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecJobGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o GetAppSpecJobGitOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobGit) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type GetAppSpecJobGitPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobGit)(nil)).Elem()
}

func (o GetAppSpecJobGitPtrOutput) ToGetAppSpecJobGitPtrOutput() GetAppSpecJobGitPtrOutput {
	return o
}

func (o GetAppSpecJobGitPtrOutput) ToGetAppSpecJobGitPtrOutputWithContext(ctx context.Context) GetAppSpecJobGitPtrOutput {
	return o
}

func (o GetAppSpecJobGitPtrOutput) Elem() GetAppSpecJobGitOutput {
	return o.ApplyT(func(v *GetAppSpecJobGit) GetAppSpecJobGit {
		if v != nil {
			return *v
		}
		var ret GetAppSpecJobGit
		return ret
	}).(GetAppSpecJobGitOutput)
}

// The name of the branch to use.
func (o GetAppSpecJobGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o GetAppSpecJobGitPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecJobGithub struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// GetAppSpecJobGithubInput is an input type that accepts GetAppSpecJobGithubArgs and GetAppSpecJobGithubOutput values.
// You can construct a concrete instance of `GetAppSpecJobGithubInput` via:
//
//          GetAppSpecJobGithubArgs{...}
type GetAppSpecJobGithubInput interface {
	pulumi.Input

	ToGetAppSpecJobGithubOutput() GetAppSpecJobGithubOutput
	ToGetAppSpecJobGithubOutputWithContext(context.Context) GetAppSpecJobGithubOutput
}

type GetAppSpecJobGithubArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (GetAppSpecJobGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobGithub)(nil)).Elem()
}

func (i GetAppSpecJobGithubArgs) ToGetAppSpecJobGithubOutput() GetAppSpecJobGithubOutput {
	return i.ToGetAppSpecJobGithubOutputWithContext(context.Background())
}

func (i GetAppSpecJobGithubArgs) ToGetAppSpecJobGithubOutputWithContext(ctx context.Context) GetAppSpecJobGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGithubOutput)
}

func (i GetAppSpecJobGithubArgs) ToGetAppSpecJobGithubPtrOutput() GetAppSpecJobGithubPtrOutput {
	return i.ToGetAppSpecJobGithubPtrOutputWithContext(context.Background())
}

func (i GetAppSpecJobGithubArgs) ToGetAppSpecJobGithubPtrOutputWithContext(ctx context.Context) GetAppSpecJobGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGithubOutput).ToGetAppSpecJobGithubPtrOutputWithContext(ctx)
}

// GetAppSpecJobGithubPtrInput is an input type that accepts GetAppSpecJobGithubArgs, GetAppSpecJobGithubPtr and GetAppSpecJobGithubPtrOutput values.
// You can construct a concrete instance of `GetAppSpecJobGithubPtrInput` via:
//
//          GetAppSpecJobGithubArgs{...}
//
//  or:
//
//          nil
type GetAppSpecJobGithubPtrInput interface {
	pulumi.Input

	ToGetAppSpecJobGithubPtrOutput() GetAppSpecJobGithubPtrOutput
	ToGetAppSpecJobGithubPtrOutputWithContext(context.Context) GetAppSpecJobGithubPtrOutput
}

type getAppSpecJobGithubPtrType GetAppSpecJobGithubArgs

func GetAppSpecJobGithubPtr(v *GetAppSpecJobGithubArgs) GetAppSpecJobGithubPtrInput {
	return (*getAppSpecJobGithubPtrType)(v)
}

func (*getAppSpecJobGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobGithub)(nil)).Elem()
}

func (i *getAppSpecJobGithubPtrType) ToGetAppSpecJobGithubPtrOutput() GetAppSpecJobGithubPtrOutput {
	return i.ToGetAppSpecJobGithubPtrOutputWithContext(context.Background())
}

func (i *getAppSpecJobGithubPtrType) ToGetAppSpecJobGithubPtrOutputWithContext(ctx context.Context) GetAppSpecJobGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGithubPtrOutput)
}

type GetAppSpecJobGithubOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobGithub)(nil)).Elem()
}

func (o GetAppSpecJobGithubOutput) ToGetAppSpecJobGithubOutput() GetAppSpecJobGithubOutput {
	return o
}

func (o GetAppSpecJobGithubOutput) ToGetAppSpecJobGithubOutputWithContext(ctx context.Context) GetAppSpecJobGithubOutput {
	return o
}

func (o GetAppSpecJobGithubOutput) ToGetAppSpecJobGithubPtrOutput() GetAppSpecJobGithubPtrOutput {
	return o.ToGetAppSpecJobGithubPtrOutputWithContext(context.Background())
}

func (o GetAppSpecJobGithubOutput) ToGetAppSpecJobGithubPtrOutputWithContext(ctx context.Context) GetAppSpecJobGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecJobGithub) *GetAppSpecJobGithub {
		return &v
	}).(GetAppSpecJobGithubPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecJobGithubOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobGithub) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecJobGithubOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobGithub) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecJobGithubOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobGithub) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type GetAppSpecJobGithubPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobGithub)(nil)).Elem()
}

func (o GetAppSpecJobGithubPtrOutput) ToGetAppSpecJobGithubPtrOutput() GetAppSpecJobGithubPtrOutput {
	return o
}

func (o GetAppSpecJobGithubPtrOutput) ToGetAppSpecJobGithubPtrOutputWithContext(ctx context.Context) GetAppSpecJobGithubPtrOutput {
	return o
}

func (o GetAppSpecJobGithubPtrOutput) Elem() GetAppSpecJobGithubOutput {
	return o.ApplyT(func(v *GetAppSpecJobGithub) GetAppSpecJobGithub {
		if v != nil {
			return *v
		}
		var ret GetAppSpecJobGithub
		return ret
	}).(GetAppSpecJobGithubOutput)
}

// The name of the branch to use.
func (o GetAppSpecJobGithubPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobGithub) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecJobGithubPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecJobGithubPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecJobGitlab struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// GetAppSpecJobGitlabInput is an input type that accepts GetAppSpecJobGitlabArgs and GetAppSpecJobGitlabOutput values.
// You can construct a concrete instance of `GetAppSpecJobGitlabInput` via:
//
//          GetAppSpecJobGitlabArgs{...}
type GetAppSpecJobGitlabInput interface {
	pulumi.Input

	ToGetAppSpecJobGitlabOutput() GetAppSpecJobGitlabOutput
	ToGetAppSpecJobGitlabOutputWithContext(context.Context) GetAppSpecJobGitlabOutput
}

type GetAppSpecJobGitlabArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (GetAppSpecJobGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobGitlab)(nil)).Elem()
}

func (i GetAppSpecJobGitlabArgs) ToGetAppSpecJobGitlabOutput() GetAppSpecJobGitlabOutput {
	return i.ToGetAppSpecJobGitlabOutputWithContext(context.Background())
}

func (i GetAppSpecJobGitlabArgs) ToGetAppSpecJobGitlabOutputWithContext(ctx context.Context) GetAppSpecJobGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGitlabOutput)
}

func (i GetAppSpecJobGitlabArgs) ToGetAppSpecJobGitlabPtrOutput() GetAppSpecJobGitlabPtrOutput {
	return i.ToGetAppSpecJobGitlabPtrOutputWithContext(context.Background())
}

func (i GetAppSpecJobGitlabArgs) ToGetAppSpecJobGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecJobGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGitlabOutput).ToGetAppSpecJobGitlabPtrOutputWithContext(ctx)
}

// GetAppSpecJobGitlabPtrInput is an input type that accepts GetAppSpecJobGitlabArgs, GetAppSpecJobGitlabPtr and GetAppSpecJobGitlabPtrOutput values.
// You can construct a concrete instance of `GetAppSpecJobGitlabPtrInput` via:
//
//          GetAppSpecJobGitlabArgs{...}
//
//  or:
//
//          nil
type GetAppSpecJobGitlabPtrInput interface {
	pulumi.Input

	ToGetAppSpecJobGitlabPtrOutput() GetAppSpecJobGitlabPtrOutput
	ToGetAppSpecJobGitlabPtrOutputWithContext(context.Context) GetAppSpecJobGitlabPtrOutput
}

type getAppSpecJobGitlabPtrType GetAppSpecJobGitlabArgs

func GetAppSpecJobGitlabPtr(v *GetAppSpecJobGitlabArgs) GetAppSpecJobGitlabPtrInput {
	return (*getAppSpecJobGitlabPtrType)(v)
}

func (*getAppSpecJobGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobGitlab)(nil)).Elem()
}

func (i *getAppSpecJobGitlabPtrType) ToGetAppSpecJobGitlabPtrOutput() GetAppSpecJobGitlabPtrOutput {
	return i.ToGetAppSpecJobGitlabPtrOutputWithContext(context.Background())
}

func (i *getAppSpecJobGitlabPtrType) ToGetAppSpecJobGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecJobGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobGitlabPtrOutput)
}

type GetAppSpecJobGitlabOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobGitlab)(nil)).Elem()
}

func (o GetAppSpecJobGitlabOutput) ToGetAppSpecJobGitlabOutput() GetAppSpecJobGitlabOutput {
	return o
}

func (o GetAppSpecJobGitlabOutput) ToGetAppSpecJobGitlabOutputWithContext(ctx context.Context) GetAppSpecJobGitlabOutput {
	return o
}

func (o GetAppSpecJobGitlabOutput) ToGetAppSpecJobGitlabPtrOutput() GetAppSpecJobGitlabPtrOutput {
	return o.ToGetAppSpecJobGitlabPtrOutputWithContext(context.Background())
}

func (o GetAppSpecJobGitlabOutput) ToGetAppSpecJobGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecJobGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecJobGitlab) *GetAppSpecJobGitlab {
		return &v
	}).(GetAppSpecJobGitlabPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecJobGitlabOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobGitlab) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecJobGitlabOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobGitlab) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecJobGitlabOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobGitlab) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type GetAppSpecJobGitlabPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobGitlab)(nil)).Elem()
}

func (o GetAppSpecJobGitlabPtrOutput) ToGetAppSpecJobGitlabPtrOutput() GetAppSpecJobGitlabPtrOutput {
	return o
}

func (o GetAppSpecJobGitlabPtrOutput) ToGetAppSpecJobGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecJobGitlabPtrOutput {
	return o
}

func (o GetAppSpecJobGitlabPtrOutput) Elem() GetAppSpecJobGitlabOutput {
	return o.ApplyT(func(v *GetAppSpecJobGitlab) GetAppSpecJobGitlab {
		if v != nil {
			return *v
		}
		var ret GetAppSpecJobGitlab
		return ret
	}).(GetAppSpecJobGitlabOutput)
}

// The name of the branch to use.
func (o GetAppSpecJobGitlabPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecJobGitlabPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecJobGitlabPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecJobImage struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry *string `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType string `pulumi:"registryType"`
	// The repository name.
	Repository string `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag *string `pulumi:"tag"`
}

// GetAppSpecJobImageInput is an input type that accepts GetAppSpecJobImageArgs and GetAppSpecJobImageOutput values.
// You can construct a concrete instance of `GetAppSpecJobImageInput` via:
//
//          GetAppSpecJobImageArgs{...}
type GetAppSpecJobImageInput interface {
	pulumi.Input

	ToGetAppSpecJobImageOutput() GetAppSpecJobImageOutput
	ToGetAppSpecJobImageOutputWithContext(context.Context) GetAppSpecJobImageOutput
}

type GetAppSpecJobImageArgs struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType pulumi.StringInput `pulumi:"registryType"`
	// The repository name.
	Repository pulumi.StringInput `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (GetAppSpecJobImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobImage)(nil)).Elem()
}

func (i GetAppSpecJobImageArgs) ToGetAppSpecJobImageOutput() GetAppSpecJobImageOutput {
	return i.ToGetAppSpecJobImageOutputWithContext(context.Background())
}

func (i GetAppSpecJobImageArgs) ToGetAppSpecJobImageOutputWithContext(ctx context.Context) GetAppSpecJobImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobImageOutput)
}

func (i GetAppSpecJobImageArgs) ToGetAppSpecJobImagePtrOutput() GetAppSpecJobImagePtrOutput {
	return i.ToGetAppSpecJobImagePtrOutputWithContext(context.Background())
}

func (i GetAppSpecJobImageArgs) ToGetAppSpecJobImagePtrOutputWithContext(ctx context.Context) GetAppSpecJobImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobImageOutput).ToGetAppSpecJobImagePtrOutputWithContext(ctx)
}

// GetAppSpecJobImagePtrInput is an input type that accepts GetAppSpecJobImageArgs, GetAppSpecJobImagePtr and GetAppSpecJobImagePtrOutput values.
// You can construct a concrete instance of `GetAppSpecJobImagePtrInput` via:
//
//          GetAppSpecJobImageArgs{...}
//
//  or:
//
//          nil
type GetAppSpecJobImagePtrInput interface {
	pulumi.Input

	ToGetAppSpecJobImagePtrOutput() GetAppSpecJobImagePtrOutput
	ToGetAppSpecJobImagePtrOutputWithContext(context.Context) GetAppSpecJobImagePtrOutput
}

type getAppSpecJobImagePtrType GetAppSpecJobImageArgs

func GetAppSpecJobImagePtr(v *GetAppSpecJobImageArgs) GetAppSpecJobImagePtrInput {
	return (*getAppSpecJobImagePtrType)(v)
}

func (*getAppSpecJobImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobImage)(nil)).Elem()
}

func (i *getAppSpecJobImagePtrType) ToGetAppSpecJobImagePtrOutput() GetAppSpecJobImagePtrOutput {
	return i.ToGetAppSpecJobImagePtrOutputWithContext(context.Background())
}

func (i *getAppSpecJobImagePtrType) ToGetAppSpecJobImagePtrOutputWithContext(ctx context.Context) GetAppSpecJobImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobImagePtrOutput)
}

type GetAppSpecJobImageOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobImage)(nil)).Elem()
}

func (o GetAppSpecJobImageOutput) ToGetAppSpecJobImageOutput() GetAppSpecJobImageOutput {
	return o
}

func (o GetAppSpecJobImageOutput) ToGetAppSpecJobImageOutputWithContext(ctx context.Context) GetAppSpecJobImageOutput {
	return o
}

func (o GetAppSpecJobImageOutput) ToGetAppSpecJobImagePtrOutput() GetAppSpecJobImagePtrOutput {
	return o.ToGetAppSpecJobImagePtrOutputWithContext(context.Background())
}

func (o GetAppSpecJobImageOutput) ToGetAppSpecJobImagePtrOutputWithContext(ctx context.Context) GetAppSpecJobImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecJobImage) *GetAppSpecJobImage {
		return &v
	}).(GetAppSpecJobImagePtrOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o GetAppSpecJobImageOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobImage) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o GetAppSpecJobImageOutput) RegistryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobImage) string { return v.RegistryType }).(pulumi.StringOutput)
}

// The repository name.
func (o GetAppSpecJobImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o GetAppSpecJobImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type GetAppSpecJobImagePtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobImage)(nil)).Elem()
}

func (o GetAppSpecJobImagePtrOutput) ToGetAppSpecJobImagePtrOutput() GetAppSpecJobImagePtrOutput {
	return o
}

func (o GetAppSpecJobImagePtrOutput) ToGetAppSpecJobImagePtrOutputWithContext(ctx context.Context) GetAppSpecJobImagePtrOutput {
	return o
}

func (o GetAppSpecJobImagePtrOutput) Elem() GetAppSpecJobImageOutput {
	return o.ApplyT(func(v *GetAppSpecJobImage) GetAppSpecJobImage {
		if v != nil {
			return *v
		}
		var ret GetAppSpecJobImage
		return ret
	}).(GetAppSpecJobImageOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o GetAppSpecJobImagePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobImage) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o GetAppSpecJobImagePtrOutput) RegistryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobImage) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryType
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o GetAppSpecJobImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o GetAppSpecJobImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecJobLogDestination struct {
	Datadog *GetAppSpecJobLogDestinationDatadog `pulumi:"datadog"`
	Logtail *GetAppSpecJobLogDestinationLogtail `pulumi:"logtail"`
	// The name of the component.
	Name       string                                 `pulumi:"name"`
	Papertrail *GetAppSpecJobLogDestinationPapertrail `pulumi:"papertrail"`
}

// GetAppSpecJobLogDestinationInput is an input type that accepts GetAppSpecJobLogDestinationArgs and GetAppSpecJobLogDestinationOutput values.
// You can construct a concrete instance of `GetAppSpecJobLogDestinationInput` via:
//
//          GetAppSpecJobLogDestinationArgs{...}
type GetAppSpecJobLogDestinationInput interface {
	pulumi.Input

	ToGetAppSpecJobLogDestinationOutput() GetAppSpecJobLogDestinationOutput
	ToGetAppSpecJobLogDestinationOutputWithContext(context.Context) GetAppSpecJobLogDestinationOutput
}

type GetAppSpecJobLogDestinationArgs struct {
	Datadog GetAppSpecJobLogDestinationDatadogPtrInput `pulumi:"datadog"`
	Logtail GetAppSpecJobLogDestinationLogtailPtrInput `pulumi:"logtail"`
	// The name of the component.
	Name       pulumi.StringInput                            `pulumi:"name"`
	Papertrail GetAppSpecJobLogDestinationPapertrailPtrInput `pulumi:"papertrail"`
}

func (GetAppSpecJobLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobLogDestination)(nil)).Elem()
}

func (i GetAppSpecJobLogDestinationArgs) ToGetAppSpecJobLogDestinationOutput() GetAppSpecJobLogDestinationOutput {
	return i.ToGetAppSpecJobLogDestinationOutputWithContext(context.Background())
}

func (i GetAppSpecJobLogDestinationArgs) ToGetAppSpecJobLogDestinationOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationOutput)
}

// GetAppSpecJobLogDestinationArrayInput is an input type that accepts GetAppSpecJobLogDestinationArray and GetAppSpecJobLogDestinationArrayOutput values.
// You can construct a concrete instance of `GetAppSpecJobLogDestinationArrayInput` via:
//
//          GetAppSpecJobLogDestinationArray{ GetAppSpecJobLogDestinationArgs{...} }
type GetAppSpecJobLogDestinationArrayInput interface {
	pulumi.Input

	ToGetAppSpecJobLogDestinationArrayOutput() GetAppSpecJobLogDestinationArrayOutput
	ToGetAppSpecJobLogDestinationArrayOutputWithContext(context.Context) GetAppSpecJobLogDestinationArrayOutput
}

type GetAppSpecJobLogDestinationArray []GetAppSpecJobLogDestinationInput

func (GetAppSpecJobLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecJobLogDestination)(nil)).Elem()
}

func (i GetAppSpecJobLogDestinationArray) ToGetAppSpecJobLogDestinationArrayOutput() GetAppSpecJobLogDestinationArrayOutput {
	return i.ToGetAppSpecJobLogDestinationArrayOutputWithContext(context.Background())
}

func (i GetAppSpecJobLogDestinationArray) ToGetAppSpecJobLogDestinationArrayOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationArrayOutput)
}

type GetAppSpecJobLogDestinationOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobLogDestination)(nil)).Elem()
}

func (o GetAppSpecJobLogDestinationOutput) ToGetAppSpecJobLogDestinationOutput() GetAppSpecJobLogDestinationOutput {
	return o
}

func (o GetAppSpecJobLogDestinationOutput) ToGetAppSpecJobLogDestinationOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationOutput {
	return o
}

func (o GetAppSpecJobLogDestinationOutput) Datadog() GetAppSpecJobLogDestinationDatadogPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobLogDestination) *GetAppSpecJobLogDestinationDatadog { return v.Datadog }).(GetAppSpecJobLogDestinationDatadogPtrOutput)
}

func (o GetAppSpecJobLogDestinationOutput) Logtail() GetAppSpecJobLogDestinationLogtailPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobLogDestination) *GetAppSpecJobLogDestinationLogtail { return v.Logtail }).(GetAppSpecJobLogDestinationLogtailPtrOutput)
}

// The name of the component.
func (o GetAppSpecJobLogDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobLogDestination) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAppSpecJobLogDestinationOutput) Papertrail() GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobLogDestination) *GetAppSpecJobLogDestinationPapertrail { return v.Papertrail }).(GetAppSpecJobLogDestinationPapertrailPtrOutput)
}

type GetAppSpecJobLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecJobLogDestination)(nil)).Elem()
}

func (o GetAppSpecJobLogDestinationArrayOutput) ToGetAppSpecJobLogDestinationArrayOutput() GetAppSpecJobLogDestinationArrayOutput {
	return o
}

func (o GetAppSpecJobLogDestinationArrayOutput) ToGetAppSpecJobLogDestinationArrayOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationArrayOutput {
	return o
}

func (o GetAppSpecJobLogDestinationArrayOutput) Index(i pulumi.IntInput) GetAppSpecJobLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecJobLogDestination {
		return vs[0].([]GetAppSpecJobLogDestination)[vs[1].(int)]
	}).(GetAppSpecJobLogDestinationOutput)
}

type GetAppSpecJobLogDestinationDatadog struct {
	ApiKey   string  `pulumi:"apiKey"`
	Endpoint *string `pulumi:"endpoint"`
}

// GetAppSpecJobLogDestinationDatadogInput is an input type that accepts GetAppSpecJobLogDestinationDatadogArgs and GetAppSpecJobLogDestinationDatadogOutput values.
// You can construct a concrete instance of `GetAppSpecJobLogDestinationDatadogInput` via:
//
//          GetAppSpecJobLogDestinationDatadogArgs{...}
type GetAppSpecJobLogDestinationDatadogInput interface {
	pulumi.Input

	ToGetAppSpecJobLogDestinationDatadogOutput() GetAppSpecJobLogDestinationDatadogOutput
	ToGetAppSpecJobLogDestinationDatadogOutputWithContext(context.Context) GetAppSpecJobLogDestinationDatadogOutput
}

type GetAppSpecJobLogDestinationDatadogArgs struct {
	ApiKey   pulumi.StringInput    `pulumi:"apiKey"`
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
}

func (GetAppSpecJobLogDestinationDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobLogDestinationDatadog)(nil)).Elem()
}

func (i GetAppSpecJobLogDestinationDatadogArgs) ToGetAppSpecJobLogDestinationDatadogOutput() GetAppSpecJobLogDestinationDatadogOutput {
	return i.ToGetAppSpecJobLogDestinationDatadogOutputWithContext(context.Background())
}

func (i GetAppSpecJobLogDestinationDatadogArgs) ToGetAppSpecJobLogDestinationDatadogOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationDatadogOutput)
}

func (i GetAppSpecJobLogDestinationDatadogArgs) ToGetAppSpecJobLogDestinationDatadogPtrOutput() GetAppSpecJobLogDestinationDatadogPtrOutput {
	return i.ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i GetAppSpecJobLogDestinationDatadogArgs) ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationDatadogOutput).ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx)
}

// GetAppSpecJobLogDestinationDatadogPtrInput is an input type that accepts GetAppSpecJobLogDestinationDatadogArgs, GetAppSpecJobLogDestinationDatadogPtr and GetAppSpecJobLogDestinationDatadogPtrOutput values.
// You can construct a concrete instance of `GetAppSpecJobLogDestinationDatadogPtrInput` via:
//
//          GetAppSpecJobLogDestinationDatadogArgs{...}
//
//  or:
//
//          nil
type GetAppSpecJobLogDestinationDatadogPtrInput interface {
	pulumi.Input

	ToGetAppSpecJobLogDestinationDatadogPtrOutput() GetAppSpecJobLogDestinationDatadogPtrOutput
	ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(context.Context) GetAppSpecJobLogDestinationDatadogPtrOutput
}

type getAppSpecJobLogDestinationDatadogPtrType GetAppSpecJobLogDestinationDatadogArgs

func GetAppSpecJobLogDestinationDatadogPtr(v *GetAppSpecJobLogDestinationDatadogArgs) GetAppSpecJobLogDestinationDatadogPtrInput {
	return (*getAppSpecJobLogDestinationDatadogPtrType)(v)
}

func (*getAppSpecJobLogDestinationDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobLogDestinationDatadog)(nil)).Elem()
}

func (i *getAppSpecJobLogDestinationDatadogPtrType) ToGetAppSpecJobLogDestinationDatadogPtrOutput() GetAppSpecJobLogDestinationDatadogPtrOutput {
	return i.ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i *getAppSpecJobLogDestinationDatadogPtrType) ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationDatadogPtrOutput)
}

type GetAppSpecJobLogDestinationDatadogOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobLogDestinationDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobLogDestinationDatadog)(nil)).Elem()
}

func (o GetAppSpecJobLogDestinationDatadogOutput) ToGetAppSpecJobLogDestinationDatadogOutput() GetAppSpecJobLogDestinationDatadogOutput {
	return o
}

func (o GetAppSpecJobLogDestinationDatadogOutput) ToGetAppSpecJobLogDestinationDatadogOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationDatadogOutput {
	return o
}

func (o GetAppSpecJobLogDestinationDatadogOutput) ToGetAppSpecJobLogDestinationDatadogPtrOutput() GetAppSpecJobLogDestinationDatadogPtrOutput {
	return o.ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (o GetAppSpecJobLogDestinationDatadogOutput) ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecJobLogDestinationDatadog) *GetAppSpecJobLogDestinationDatadog {
		return &v
	}).(GetAppSpecJobLogDestinationDatadogPtrOutput)
}

func (o GetAppSpecJobLogDestinationDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobLogDestinationDatadog) string { return v.ApiKey }).(pulumi.StringOutput)
}

func (o GetAppSpecJobLogDestinationDatadogOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecJobLogDestinationDatadog) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

type GetAppSpecJobLogDestinationDatadogPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobLogDestinationDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobLogDestinationDatadog)(nil)).Elem()
}

func (o GetAppSpecJobLogDestinationDatadogPtrOutput) ToGetAppSpecJobLogDestinationDatadogPtrOutput() GetAppSpecJobLogDestinationDatadogPtrOutput {
	return o
}

func (o GetAppSpecJobLogDestinationDatadogPtrOutput) ToGetAppSpecJobLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationDatadogPtrOutput {
	return o
}

func (o GetAppSpecJobLogDestinationDatadogPtrOutput) Elem() GetAppSpecJobLogDestinationDatadogOutput {
	return o.ApplyT(func(v *GetAppSpecJobLogDestinationDatadog) GetAppSpecJobLogDestinationDatadog {
		if v != nil {
			return *v
		}
		var ret GetAppSpecJobLogDestinationDatadog
		return ret
	}).(GetAppSpecJobLogDestinationDatadogOutput)
}

func (o GetAppSpecJobLogDestinationDatadogPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

func (o GetAppSpecJobLogDestinationDatadogPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecJobLogDestinationLogtail struct {
	Token string `pulumi:"token"`
}

// GetAppSpecJobLogDestinationLogtailInput is an input type that accepts GetAppSpecJobLogDestinationLogtailArgs and GetAppSpecJobLogDestinationLogtailOutput values.
// You can construct a concrete instance of `GetAppSpecJobLogDestinationLogtailInput` via:
//
//          GetAppSpecJobLogDestinationLogtailArgs{...}
type GetAppSpecJobLogDestinationLogtailInput interface {
	pulumi.Input

	ToGetAppSpecJobLogDestinationLogtailOutput() GetAppSpecJobLogDestinationLogtailOutput
	ToGetAppSpecJobLogDestinationLogtailOutputWithContext(context.Context) GetAppSpecJobLogDestinationLogtailOutput
}

type GetAppSpecJobLogDestinationLogtailArgs struct {
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetAppSpecJobLogDestinationLogtailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobLogDestinationLogtail)(nil)).Elem()
}

func (i GetAppSpecJobLogDestinationLogtailArgs) ToGetAppSpecJobLogDestinationLogtailOutput() GetAppSpecJobLogDestinationLogtailOutput {
	return i.ToGetAppSpecJobLogDestinationLogtailOutputWithContext(context.Background())
}

func (i GetAppSpecJobLogDestinationLogtailArgs) ToGetAppSpecJobLogDestinationLogtailOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationLogtailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationLogtailOutput)
}

func (i GetAppSpecJobLogDestinationLogtailArgs) ToGetAppSpecJobLogDestinationLogtailPtrOutput() GetAppSpecJobLogDestinationLogtailPtrOutput {
	return i.ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i GetAppSpecJobLogDestinationLogtailArgs) ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationLogtailOutput).ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx)
}

// GetAppSpecJobLogDestinationLogtailPtrInput is an input type that accepts GetAppSpecJobLogDestinationLogtailArgs, GetAppSpecJobLogDestinationLogtailPtr and GetAppSpecJobLogDestinationLogtailPtrOutput values.
// You can construct a concrete instance of `GetAppSpecJobLogDestinationLogtailPtrInput` via:
//
//          GetAppSpecJobLogDestinationLogtailArgs{...}
//
//  or:
//
//          nil
type GetAppSpecJobLogDestinationLogtailPtrInput interface {
	pulumi.Input

	ToGetAppSpecJobLogDestinationLogtailPtrOutput() GetAppSpecJobLogDestinationLogtailPtrOutput
	ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(context.Context) GetAppSpecJobLogDestinationLogtailPtrOutput
}

type getAppSpecJobLogDestinationLogtailPtrType GetAppSpecJobLogDestinationLogtailArgs

func GetAppSpecJobLogDestinationLogtailPtr(v *GetAppSpecJobLogDestinationLogtailArgs) GetAppSpecJobLogDestinationLogtailPtrInput {
	return (*getAppSpecJobLogDestinationLogtailPtrType)(v)
}

func (*getAppSpecJobLogDestinationLogtailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobLogDestinationLogtail)(nil)).Elem()
}

func (i *getAppSpecJobLogDestinationLogtailPtrType) ToGetAppSpecJobLogDestinationLogtailPtrOutput() GetAppSpecJobLogDestinationLogtailPtrOutput {
	return i.ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i *getAppSpecJobLogDestinationLogtailPtrType) ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationLogtailPtrOutput)
}

type GetAppSpecJobLogDestinationLogtailOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobLogDestinationLogtailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobLogDestinationLogtail)(nil)).Elem()
}

func (o GetAppSpecJobLogDestinationLogtailOutput) ToGetAppSpecJobLogDestinationLogtailOutput() GetAppSpecJobLogDestinationLogtailOutput {
	return o
}

func (o GetAppSpecJobLogDestinationLogtailOutput) ToGetAppSpecJobLogDestinationLogtailOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationLogtailOutput {
	return o
}

func (o GetAppSpecJobLogDestinationLogtailOutput) ToGetAppSpecJobLogDestinationLogtailPtrOutput() GetAppSpecJobLogDestinationLogtailPtrOutput {
	return o.ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (o GetAppSpecJobLogDestinationLogtailOutput) ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationLogtailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecJobLogDestinationLogtail) *GetAppSpecJobLogDestinationLogtail {
		return &v
	}).(GetAppSpecJobLogDestinationLogtailPtrOutput)
}

func (o GetAppSpecJobLogDestinationLogtailOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobLogDestinationLogtail) string { return v.Token }).(pulumi.StringOutput)
}

type GetAppSpecJobLogDestinationLogtailPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobLogDestinationLogtailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobLogDestinationLogtail)(nil)).Elem()
}

func (o GetAppSpecJobLogDestinationLogtailPtrOutput) ToGetAppSpecJobLogDestinationLogtailPtrOutput() GetAppSpecJobLogDestinationLogtailPtrOutput {
	return o
}

func (o GetAppSpecJobLogDestinationLogtailPtrOutput) ToGetAppSpecJobLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationLogtailPtrOutput {
	return o
}

func (o GetAppSpecJobLogDestinationLogtailPtrOutput) Elem() GetAppSpecJobLogDestinationLogtailOutput {
	return o.ApplyT(func(v *GetAppSpecJobLogDestinationLogtail) GetAppSpecJobLogDestinationLogtail {
		if v != nil {
			return *v
		}
		var ret GetAppSpecJobLogDestinationLogtail
		return ret
	}).(GetAppSpecJobLogDestinationLogtailOutput)
}

func (o GetAppSpecJobLogDestinationLogtailPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobLogDestinationLogtail) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecJobLogDestinationPapertrail struct {
	Endpoint string `pulumi:"endpoint"`
}

// GetAppSpecJobLogDestinationPapertrailInput is an input type that accepts GetAppSpecJobLogDestinationPapertrailArgs and GetAppSpecJobLogDestinationPapertrailOutput values.
// You can construct a concrete instance of `GetAppSpecJobLogDestinationPapertrailInput` via:
//
//          GetAppSpecJobLogDestinationPapertrailArgs{...}
type GetAppSpecJobLogDestinationPapertrailInput interface {
	pulumi.Input

	ToGetAppSpecJobLogDestinationPapertrailOutput() GetAppSpecJobLogDestinationPapertrailOutput
	ToGetAppSpecJobLogDestinationPapertrailOutputWithContext(context.Context) GetAppSpecJobLogDestinationPapertrailOutput
}

type GetAppSpecJobLogDestinationPapertrailArgs struct {
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (GetAppSpecJobLogDestinationPapertrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobLogDestinationPapertrail)(nil)).Elem()
}

func (i GetAppSpecJobLogDestinationPapertrailArgs) ToGetAppSpecJobLogDestinationPapertrailOutput() GetAppSpecJobLogDestinationPapertrailOutput {
	return i.ToGetAppSpecJobLogDestinationPapertrailOutputWithContext(context.Background())
}

func (i GetAppSpecJobLogDestinationPapertrailArgs) ToGetAppSpecJobLogDestinationPapertrailOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationPapertrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationPapertrailOutput)
}

func (i GetAppSpecJobLogDestinationPapertrailArgs) ToGetAppSpecJobLogDestinationPapertrailPtrOutput() GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return i.ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i GetAppSpecJobLogDestinationPapertrailArgs) ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationPapertrailOutput).ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx)
}

// GetAppSpecJobLogDestinationPapertrailPtrInput is an input type that accepts GetAppSpecJobLogDestinationPapertrailArgs, GetAppSpecJobLogDestinationPapertrailPtr and GetAppSpecJobLogDestinationPapertrailPtrOutput values.
// You can construct a concrete instance of `GetAppSpecJobLogDestinationPapertrailPtrInput` via:
//
//          GetAppSpecJobLogDestinationPapertrailArgs{...}
//
//  or:
//
//          nil
type GetAppSpecJobLogDestinationPapertrailPtrInput interface {
	pulumi.Input

	ToGetAppSpecJobLogDestinationPapertrailPtrOutput() GetAppSpecJobLogDestinationPapertrailPtrOutput
	ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(context.Context) GetAppSpecJobLogDestinationPapertrailPtrOutput
}

type getAppSpecJobLogDestinationPapertrailPtrType GetAppSpecJobLogDestinationPapertrailArgs

func GetAppSpecJobLogDestinationPapertrailPtr(v *GetAppSpecJobLogDestinationPapertrailArgs) GetAppSpecJobLogDestinationPapertrailPtrInput {
	return (*getAppSpecJobLogDestinationPapertrailPtrType)(v)
}

func (*getAppSpecJobLogDestinationPapertrailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobLogDestinationPapertrail)(nil)).Elem()
}

func (i *getAppSpecJobLogDestinationPapertrailPtrType) ToGetAppSpecJobLogDestinationPapertrailPtrOutput() GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return i.ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i *getAppSpecJobLogDestinationPapertrailPtrType) ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecJobLogDestinationPapertrailPtrOutput)
}

type GetAppSpecJobLogDestinationPapertrailOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobLogDestinationPapertrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecJobLogDestinationPapertrail)(nil)).Elem()
}

func (o GetAppSpecJobLogDestinationPapertrailOutput) ToGetAppSpecJobLogDestinationPapertrailOutput() GetAppSpecJobLogDestinationPapertrailOutput {
	return o
}

func (o GetAppSpecJobLogDestinationPapertrailOutput) ToGetAppSpecJobLogDestinationPapertrailOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationPapertrailOutput {
	return o
}

func (o GetAppSpecJobLogDestinationPapertrailOutput) ToGetAppSpecJobLogDestinationPapertrailPtrOutput() GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return o.ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (o GetAppSpecJobLogDestinationPapertrailOutput) ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecJobLogDestinationPapertrail) *GetAppSpecJobLogDestinationPapertrail {
		return &v
	}).(GetAppSpecJobLogDestinationPapertrailPtrOutput)
}

func (o GetAppSpecJobLogDestinationPapertrailOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecJobLogDestinationPapertrail) string { return v.Endpoint }).(pulumi.StringOutput)
}

type GetAppSpecJobLogDestinationPapertrailPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecJobLogDestinationPapertrailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecJobLogDestinationPapertrail)(nil)).Elem()
}

func (o GetAppSpecJobLogDestinationPapertrailPtrOutput) ToGetAppSpecJobLogDestinationPapertrailPtrOutput() GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return o
}

func (o GetAppSpecJobLogDestinationPapertrailPtrOutput) ToGetAppSpecJobLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecJobLogDestinationPapertrailPtrOutput {
	return o
}

func (o GetAppSpecJobLogDestinationPapertrailPtrOutput) Elem() GetAppSpecJobLogDestinationPapertrailOutput {
	return o.ApplyT(func(v *GetAppSpecJobLogDestinationPapertrail) GetAppSpecJobLogDestinationPapertrail {
		if v != nil {
			return *v
		}
		var ret GetAppSpecJobLogDestinationPapertrail
		return ret
	}).(GetAppSpecJobLogDestinationPapertrailOutput)
}

func (o GetAppSpecJobLogDestinationPapertrailPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecJobLogDestinationPapertrail) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecService struct {
	Alerts []GetAppSpecServiceAlert `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand *string                `pulumi:"buildCommand"`
	Cors         *GetAppSpecServiceCors `pulumi:"cors"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs []GetAppSpecServiceEnv `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
	Git *GetAppSpecServiceGit `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github *GetAppSpecServiceGithub `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab *GetAppSpecServiceGitlab `pulumi:"gitlab"`
	// A health check to determine the availability of this component.
	HealthCheck *GetAppSpecServiceHealthCheck `pulumi:"healthCheck"`
	// The internal port on which this service's run command will listen.
	HttpPort int `pulumi:"httpPort"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image *GetAppSpecServiceImage `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component.
	InstanceSizeSlug *string `pulumi:"instanceSizeSlug"`
	// A list of ports on which this service will listen for internal traffic.
	InternalPorts   []int                             `pulumi:"internalPorts"`
	LogDestinations []GetAppSpecServiceLogDestination `pulumi:"logDestinations"`
	// The name of the component.
	Name   string                   `pulumi:"name"`
	Routes []GetAppSpecServiceRoute `pulumi:"routes"`
	// An optional run command to override the component's default.
	RunCommand string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir *string `pulumi:"sourceDir"`
}

// GetAppSpecServiceInput is an input type that accepts GetAppSpecServiceArgs and GetAppSpecServiceOutput values.
// You can construct a concrete instance of `GetAppSpecServiceInput` via:
//
//          GetAppSpecServiceArgs{...}
type GetAppSpecServiceInput interface {
	pulumi.Input

	ToGetAppSpecServiceOutput() GetAppSpecServiceOutput
	ToGetAppSpecServiceOutputWithContext(context.Context) GetAppSpecServiceOutput
}

type GetAppSpecServiceArgs struct {
	Alerts GetAppSpecServiceAlertArrayInput `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput         `pulumi:"buildCommand"`
	Cors         GetAppSpecServiceCorsPtrInput `pulumi:"cors"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs GetAppSpecServiceEnvArrayInput `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
	Git GetAppSpecServiceGitPtrInput `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github GetAppSpecServiceGithubPtrInput `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab GetAppSpecServiceGitlabPtrInput `pulumi:"gitlab"`
	// A health check to determine the availability of this component.
	HealthCheck GetAppSpecServiceHealthCheckPtrInput `pulumi:"healthCheck"`
	// The internal port on which this service's run command will listen.
	HttpPort pulumi.IntInput `pulumi:"httpPort"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image GetAppSpecServiceImagePtrInput `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component.
	InstanceSizeSlug pulumi.StringPtrInput `pulumi:"instanceSizeSlug"`
	// A list of ports on which this service will listen for internal traffic.
	InternalPorts   pulumi.IntArrayInput                      `pulumi:"internalPorts"`
	LogDestinations GetAppSpecServiceLogDestinationArrayInput `pulumi:"logDestinations"`
	// The name of the component.
	Name   pulumi.StringInput               `pulumi:"name"`
	Routes GetAppSpecServiceRouteArrayInput `pulumi:"routes"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (GetAppSpecServiceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecService)(nil)).Elem()
}

func (i GetAppSpecServiceArgs) ToGetAppSpecServiceOutput() GetAppSpecServiceOutput {
	return i.ToGetAppSpecServiceOutputWithContext(context.Background())
}

func (i GetAppSpecServiceArgs) ToGetAppSpecServiceOutputWithContext(ctx context.Context) GetAppSpecServiceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceOutput)
}

// GetAppSpecServiceArrayInput is an input type that accepts GetAppSpecServiceArray and GetAppSpecServiceArrayOutput values.
// You can construct a concrete instance of `GetAppSpecServiceArrayInput` via:
//
//          GetAppSpecServiceArray{ GetAppSpecServiceArgs{...} }
type GetAppSpecServiceArrayInput interface {
	pulumi.Input

	ToGetAppSpecServiceArrayOutput() GetAppSpecServiceArrayOutput
	ToGetAppSpecServiceArrayOutputWithContext(context.Context) GetAppSpecServiceArrayOutput
}

type GetAppSpecServiceArray []GetAppSpecServiceInput

func (GetAppSpecServiceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecService)(nil)).Elem()
}

func (i GetAppSpecServiceArray) ToGetAppSpecServiceArrayOutput() GetAppSpecServiceArrayOutput {
	return i.ToGetAppSpecServiceArrayOutputWithContext(context.Background())
}

func (i GetAppSpecServiceArray) ToGetAppSpecServiceArrayOutputWithContext(ctx context.Context) GetAppSpecServiceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceArrayOutput)
}

type GetAppSpecServiceOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecService)(nil)).Elem()
}

func (o GetAppSpecServiceOutput) ToGetAppSpecServiceOutput() GetAppSpecServiceOutput {
	return o
}

func (o GetAppSpecServiceOutput) ToGetAppSpecServiceOutputWithContext(ctx context.Context) GetAppSpecServiceOutput {
	return o
}

func (o GetAppSpecServiceOutput) Alerts() GetAppSpecServiceAlertArrayOutput {
	return o.ApplyT(func(v GetAppSpecService) []GetAppSpecServiceAlert { return v.Alerts }).(GetAppSpecServiceAlertArrayOutput)
}

// An optional build command to run while building this component from source.
func (o GetAppSpecServiceOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecServiceOutput) Cors() GetAppSpecServiceCorsPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *GetAppSpecServiceCors { return v.Cors }).(GetAppSpecServiceCorsPtrOutput)
}

// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
func (o GetAppSpecServiceOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app.
func (o GetAppSpecServiceOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// Describes an environment variable made available to an app competent.
func (o GetAppSpecServiceOutput) Envs() GetAppSpecServiceEnvArrayOutput {
	return o.ApplyT(func(v GetAppSpecService) []GetAppSpecServiceEnv { return v.Envs }).(GetAppSpecServiceEnvArrayOutput)
}

// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
func (o GetAppSpecServiceOutput) Git() GetAppSpecServiceGitPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *GetAppSpecServiceGit { return v.Git }).(GetAppSpecServiceGitPtrOutput)
}

// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecServiceOutput) Github() GetAppSpecServiceGithubPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *GetAppSpecServiceGithub { return v.Github }).(GetAppSpecServiceGithubPtrOutput)
}

// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecServiceOutput) Gitlab() GetAppSpecServiceGitlabPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *GetAppSpecServiceGitlab { return v.Gitlab }).(GetAppSpecServiceGitlabPtrOutput)
}

// A health check to determine the availability of this component.
func (o GetAppSpecServiceOutput) HealthCheck() GetAppSpecServiceHealthCheckPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *GetAppSpecServiceHealthCheck { return v.HealthCheck }).(GetAppSpecServiceHealthCheckPtrOutput)
}

// The internal port on which this service's run command will listen.
func (o GetAppSpecServiceOutput) HttpPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetAppSpecService) int { return v.HttpPort }).(pulumi.IntOutput)
}

// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecServiceOutput) Image() GetAppSpecServiceImagePtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *GetAppSpecServiceImage { return v.Image }).(GetAppSpecServiceImagePtrOutput)
}

// The amount of instances that this component should be scaled to.
func (o GetAppSpecServiceOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component.
func (o GetAppSpecServiceOutput) InstanceSizeSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *string { return v.InstanceSizeSlug }).(pulumi.StringPtrOutput)
}

// A list of ports on which this service will listen for internal traffic.
func (o GetAppSpecServiceOutput) InternalPorts() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetAppSpecService) []int { return v.InternalPorts }).(pulumi.IntArrayOutput)
}

func (o GetAppSpecServiceOutput) LogDestinations() GetAppSpecServiceLogDestinationArrayOutput {
	return o.ApplyT(func(v GetAppSpecService) []GetAppSpecServiceLogDestination { return v.LogDestinations }).(GetAppSpecServiceLogDestinationArrayOutput)
}

// The name of the component.
func (o GetAppSpecServiceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecService) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAppSpecServiceOutput) Routes() GetAppSpecServiceRouteArrayOutput {
	return o.ApplyT(func(v GetAppSpecService) []GetAppSpecServiceRoute { return v.Routes }).(GetAppSpecServiceRouteArrayOutput)
}

// An optional run command to override the component's default.
func (o GetAppSpecServiceOutput) RunCommand() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecService) string { return v.RunCommand }).(pulumi.StringOutput)
}

// An optional path to the working directory to use for the build.
func (o GetAppSpecServiceOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecService) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecService)(nil)).Elem()
}

func (o GetAppSpecServiceArrayOutput) ToGetAppSpecServiceArrayOutput() GetAppSpecServiceArrayOutput {
	return o
}

func (o GetAppSpecServiceArrayOutput) ToGetAppSpecServiceArrayOutputWithContext(ctx context.Context) GetAppSpecServiceArrayOutput {
	return o
}

func (o GetAppSpecServiceArrayOutput) Index(i pulumi.IntInput) GetAppSpecServiceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecService {
		return vs[0].([]GetAppSpecService)[vs[1].(int)]
	}).(GetAppSpecServiceOutput)
}

type GetAppSpecServiceAlert struct {
	Disabled *bool  `pulumi:"disabled"`
	Operator string `pulumi:"operator"`
	Rule     string `pulumi:"rule"`
	// The value of the environment variable.
	Value  float64 `pulumi:"value"`
	Window string  `pulumi:"window"`
}

// GetAppSpecServiceAlertInput is an input type that accepts GetAppSpecServiceAlertArgs and GetAppSpecServiceAlertOutput values.
// You can construct a concrete instance of `GetAppSpecServiceAlertInput` via:
//
//          GetAppSpecServiceAlertArgs{...}
type GetAppSpecServiceAlertInput interface {
	pulumi.Input

	ToGetAppSpecServiceAlertOutput() GetAppSpecServiceAlertOutput
	ToGetAppSpecServiceAlertOutputWithContext(context.Context) GetAppSpecServiceAlertOutput
}

type GetAppSpecServiceAlertArgs struct {
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	Rule     pulumi.StringInput  `pulumi:"rule"`
	// The value of the environment variable.
	Value  pulumi.Float64Input `pulumi:"value"`
	Window pulumi.StringInput  `pulumi:"window"`
}

func (GetAppSpecServiceAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceAlert)(nil)).Elem()
}

func (i GetAppSpecServiceAlertArgs) ToGetAppSpecServiceAlertOutput() GetAppSpecServiceAlertOutput {
	return i.ToGetAppSpecServiceAlertOutputWithContext(context.Background())
}

func (i GetAppSpecServiceAlertArgs) ToGetAppSpecServiceAlertOutputWithContext(ctx context.Context) GetAppSpecServiceAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceAlertOutput)
}

// GetAppSpecServiceAlertArrayInput is an input type that accepts GetAppSpecServiceAlertArray and GetAppSpecServiceAlertArrayOutput values.
// You can construct a concrete instance of `GetAppSpecServiceAlertArrayInput` via:
//
//          GetAppSpecServiceAlertArray{ GetAppSpecServiceAlertArgs{...} }
type GetAppSpecServiceAlertArrayInput interface {
	pulumi.Input

	ToGetAppSpecServiceAlertArrayOutput() GetAppSpecServiceAlertArrayOutput
	ToGetAppSpecServiceAlertArrayOutputWithContext(context.Context) GetAppSpecServiceAlertArrayOutput
}

type GetAppSpecServiceAlertArray []GetAppSpecServiceAlertInput

func (GetAppSpecServiceAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecServiceAlert)(nil)).Elem()
}

func (i GetAppSpecServiceAlertArray) ToGetAppSpecServiceAlertArrayOutput() GetAppSpecServiceAlertArrayOutput {
	return i.ToGetAppSpecServiceAlertArrayOutputWithContext(context.Background())
}

func (i GetAppSpecServiceAlertArray) ToGetAppSpecServiceAlertArrayOutputWithContext(ctx context.Context) GetAppSpecServiceAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceAlertArrayOutput)
}

type GetAppSpecServiceAlertOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceAlert)(nil)).Elem()
}

func (o GetAppSpecServiceAlertOutput) ToGetAppSpecServiceAlertOutput() GetAppSpecServiceAlertOutput {
	return o
}

func (o GetAppSpecServiceAlertOutput) ToGetAppSpecServiceAlertOutputWithContext(ctx context.Context) GetAppSpecServiceAlertOutput {
	return o
}

func (o GetAppSpecServiceAlertOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceAlert) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o GetAppSpecServiceAlertOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceAlert) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAppSpecServiceAlertOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceAlert) string { return v.Rule }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetAppSpecServiceAlertOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetAppSpecServiceAlert) float64 { return v.Value }).(pulumi.Float64Output)
}

func (o GetAppSpecServiceAlertOutput) Window() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceAlert) string { return v.Window }).(pulumi.StringOutput)
}

type GetAppSpecServiceAlertArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecServiceAlert)(nil)).Elem()
}

func (o GetAppSpecServiceAlertArrayOutput) ToGetAppSpecServiceAlertArrayOutput() GetAppSpecServiceAlertArrayOutput {
	return o
}

func (o GetAppSpecServiceAlertArrayOutput) ToGetAppSpecServiceAlertArrayOutputWithContext(ctx context.Context) GetAppSpecServiceAlertArrayOutput {
	return o
}

func (o GetAppSpecServiceAlertArrayOutput) Index(i pulumi.IntInput) GetAppSpecServiceAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecServiceAlert {
		return vs[0].([]GetAppSpecServiceAlert)[vs[1].(int)]
	}).(GetAppSpecServiceAlertOutput)
}

type GetAppSpecServiceCors struct {
	AllowCredentials *bool                              `pulumi:"allowCredentials"`
	AllowHeaders     []string                           `pulumi:"allowHeaders"`
	AllowMethods     []string                           `pulumi:"allowMethods"`
	AllowOrigins     *GetAppSpecServiceCorsAllowOrigins `pulumi:"allowOrigins"`
	ExposeHeaders    []string                           `pulumi:"exposeHeaders"`
	MaxAge           *string                            `pulumi:"maxAge"`
}

// GetAppSpecServiceCorsInput is an input type that accepts GetAppSpecServiceCorsArgs and GetAppSpecServiceCorsOutput values.
// You can construct a concrete instance of `GetAppSpecServiceCorsInput` via:
//
//          GetAppSpecServiceCorsArgs{...}
type GetAppSpecServiceCorsInput interface {
	pulumi.Input

	ToGetAppSpecServiceCorsOutput() GetAppSpecServiceCorsOutput
	ToGetAppSpecServiceCorsOutputWithContext(context.Context) GetAppSpecServiceCorsOutput
}

type GetAppSpecServiceCorsArgs struct {
	AllowCredentials pulumi.BoolPtrInput                       `pulumi:"allowCredentials"`
	AllowHeaders     pulumi.StringArrayInput                   `pulumi:"allowHeaders"`
	AllowMethods     pulumi.StringArrayInput                   `pulumi:"allowMethods"`
	AllowOrigins     GetAppSpecServiceCorsAllowOriginsPtrInput `pulumi:"allowOrigins"`
	ExposeHeaders    pulumi.StringArrayInput                   `pulumi:"exposeHeaders"`
	MaxAge           pulumi.StringPtrInput                     `pulumi:"maxAge"`
}

func (GetAppSpecServiceCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceCors)(nil)).Elem()
}

func (i GetAppSpecServiceCorsArgs) ToGetAppSpecServiceCorsOutput() GetAppSpecServiceCorsOutput {
	return i.ToGetAppSpecServiceCorsOutputWithContext(context.Background())
}

func (i GetAppSpecServiceCorsArgs) ToGetAppSpecServiceCorsOutputWithContext(ctx context.Context) GetAppSpecServiceCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceCorsOutput)
}

func (i GetAppSpecServiceCorsArgs) ToGetAppSpecServiceCorsPtrOutput() GetAppSpecServiceCorsPtrOutput {
	return i.ToGetAppSpecServiceCorsPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceCorsArgs) ToGetAppSpecServiceCorsPtrOutputWithContext(ctx context.Context) GetAppSpecServiceCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceCorsOutput).ToGetAppSpecServiceCorsPtrOutputWithContext(ctx)
}

// GetAppSpecServiceCorsPtrInput is an input type that accepts GetAppSpecServiceCorsArgs, GetAppSpecServiceCorsPtr and GetAppSpecServiceCorsPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceCorsPtrInput` via:
//
//          GetAppSpecServiceCorsArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceCorsPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceCorsPtrOutput() GetAppSpecServiceCorsPtrOutput
	ToGetAppSpecServiceCorsPtrOutputWithContext(context.Context) GetAppSpecServiceCorsPtrOutput
}

type getAppSpecServiceCorsPtrType GetAppSpecServiceCorsArgs

func GetAppSpecServiceCorsPtr(v *GetAppSpecServiceCorsArgs) GetAppSpecServiceCorsPtrInput {
	return (*getAppSpecServiceCorsPtrType)(v)
}

func (*getAppSpecServiceCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceCors)(nil)).Elem()
}

func (i *getAppSpecServiceCorsPtrType) ToGetAppSpecServiceCorsPtrOutput() GetAppSpecServiceCorsPtrOutput {
	return i.ToGetAppSpecServiceCorsPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceCorsPtrType) ToGetAppSpecServiceCorsPtrOutputWithContext(ctx context.Context) GetAppSpecServiceCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceCorsPtrOutput)
}

type GetAppSpecServiceCorsOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceCors)(nil)).Elem()
}

func (o GetAppSpecServiceCorsOutput) ToGetAppSpecServiceCorsOutput() GetAppSpecServiceCorsOutput {
	return o
}

func (o GetAppSpecServiceCorsOutput) ToGetAppSpecServiceCorsOutputWithContext(ctx context.Context) GetAppSpecServiceCorsOutput {
	return o
}

func (o GetAppSpecServiceCorsOutput) ToGetAppSpecServiceCorsPtrOutput() GetAppSpecServiceCorsPtrOutput {
	return o.ToGetAppSpecServiceCorsPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceCorsOutput) ToGetAppSpecServiceCorsPtrOutputWithContext(ctx context.Context) GetAppSpecServiceCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceCors) *GetAppSpecServiceCors {
		return &v
	}).(GetAppSpecServiceCorsPtrOutput)
}

func (o GetAppSpecServiceCorsOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceCors) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

func (o GetAppSpecServiceCorsOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSpecServiceCors) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

func (o GetAppSpecServiceCorsOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSpecServiceCors) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

func (o GetAppSpecServiceCorsOutput) AllowOrigins() GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceCors) *GetAppSpecServiceCorsAllowOrigins { return v.AllowOrigins }).(GetAppSpecServiceCorsAllowOriginsPtrOutput)
}

func (o GetAppSpecServiceCorsOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSpecServiceCors) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o GetAppSpecServiceCorsOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceCors) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceCorsPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceCors)(nil)).Elem()
}

func (o GetAppSpecServiceCorsPtrOutput) ToGetAppSpecServiceCorsPtrOutput() GetAppSpecServiceCorsPtrOutput {
	return o
}

func (o GetAppSpecServiceCorsPtrOutput) ToGetAppSpecServiceCorsPtrOutputWithContext(ctx context.Context) GetAppSpecServiceCorsPtrOutput {
	return o
}

func (o GetAppSpecServiceCorsPtrOutput) Elem() GetAppSpecServiceCorsOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCors) GetAppSpecServiceCors {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceCors
		return ret
	}).(GetAppSpecServiceCorsOutput)
}

func (o GetAppSpecServiceCorsPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCors) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

func (o GetAppSpecServiceCorsPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

func (o GetAppSpecServiceCorsPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

func (o GetAppSpecServiceCorsPtrOutput) AllowOrigins() GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCors) *GetAppSpecServiceCorsAllowOrigins {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(GetAppSpecServiceCorsAllowOriginsPtrOutput)
}

func (o GetAppSpecServiceCorsPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCors) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

func (o GetAppSpecServiceCorsPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCors) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceCorsAllowOrigins struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	Regex  *string `pulumi:"regex"`
}

// GetAppSpecServiceCorsAllowOriginsInput is an input type that accepts GetAppSpecServiceCorsAllowOriginsArgs and GetAppSpecServiceCorsAllowOriginsOutput values.
// You can construct a concrete instance of `GetAppSpecServiceCorsAllowOriginsInput` via:
//
//          GetAppSpecServiceCorsAllowOriginsArgs{...}
type GetAppSpecServiceCorsAllowOriginsInput interface {
	pulumi.Input

	ToGetAppSpecServiceCorsAllowOriginsOutput() GetAppSpecServiceCorsAllowOriginsOutput
	ToGetAppSpecServiceCorsAllowOriginsOutputWithContext(context.Context) GetAppSpecServiceCorsAllowOriginsOutput
}

type GetAppSpecServiceCorsAllowOriginsArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	Regex  pulumi.StringPtrInput `pulumi:"regex"`
}

func (GetAppSpecServiceCorsAllowOriginsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceCorsAllowOrigins)(nil)).Elem()
}

func (i GetAppSpecServiceCorsAllowOriginsArgs) ToGetAppSpecServiceCorsAllowOriginsOutput() GetAppSpecServiceCorsAllowOriginsOutput {
	return i.ToGetAppSpecServiceCorsAllowOriginsOutputWithContext(context.Background())
}

func (i GetAppSpecServiceCorsAllowOriginsArgs) ToGetAppSpecServiceCorsAllowOriginsOutputWithContext(ctx context.Context) GetAppSpecServiceCorsAllowOriginsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceCorsAllowOriginsOutput)
}

func (i GetAppSpecServiceCorsAllowOriginsArgs) ToGetAppSpecServiceCorsAllowOriginsPtrOutput() GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return i.ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceCorsAllowOriginsArgs) ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx context.Context) GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceCorsAllowOriginsOutput).ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx)
}

// GetAppSpecServiceCorsAllowOriginsPtrInput is an input type that accepts GetAppSpecServiceCorsAllowOriginsArgs, GetAppSpecServiceCorsAllowOriginsPtr and GetAppSpecServiceCorsAllowOriginsPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceCorsAllowOriginsPtrInput` via:
//
//          GetAppSpecServiceCorsAllowOriginsArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceCorsAllowOriginsPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceCorsAllowOriginsPtrOutput() GetAppSpecServiceCorsAllowOriginsPtrOutput
	ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(context.Context) GetAppSpecServiceCorsAllowOriginsPtrOutput
}

type getAppSpecServiceCorsAllowOriginsPtrType GetAppSpecServiceCorsAllowOriginsArgs

func GetAppSpecServiceCorsAllowOriginsPtr(v *GetAppSpecServiceCorsAllowOriginsArgs) GetAppSpecServiceCorsAllowOriginsPtrInput {
	return (*getAppSpecServiceCorsAllowOriginsPtrType)(v)
}

func (*getAppSpecServiceCorsAllowOriginsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceCorsAllowOrigins)(nil)).Elem()
}

func (i *getAppSpecServiceCorsAllowOriginsPtrType) ToGetAppSpecServiceCorsAllowOriginsPtrOutput() GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return i.ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceCorsAllowOriginsPtrType) ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx context.Context) GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceCorsAllowOriginsPtrOutput)
}

type GetAppSpecServiceCorsAllowOriginsOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceCorsAllowOriginsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceCorsAllowOrigins)(nil)).Elem()
}

func (o GetAppSpecServiceCorsAllowOriginsOutput) ToGetAppSpecServiceCorsAllowOriginsOutput() GetAppSpecServiceCorsAllowOriginsOutput {
	return o
}

func (o GetAppSpecServiceCorsAllowOriginsOutput) ToGetAppSpecServiceCorsAllowOriginsOutputWithContext(ctx context.Context) GetAppSpecServiceCorsAllowOriginsOutput {
	return o
}

func (o GetAppSpecServiceCorsAllowOriginsOutput) ToGetAppSpecServiceCorsAllowOriginsPtrOutput() GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return o.ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceCorsAllowOriginsOutput) ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx context.Context) GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceCorsAllowOrigins) *GetAppSpecServiceCorsAllowOrigins {
		return &v
	}).(GetAppSpecServiceCorsAllowOriginsPtrOutput)
}

func (o GetAppSpecServiceCorsAllowOriginsOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceCorsAllowOrigins) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecServiceCorsAllowOriginsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceCorsAllowOrigins) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecServiceCorsAllowOriginsOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceCorsAllowOrigins) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceCorsAllowOriginsPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceCorsAllowOriginsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceCorsAllowOrigins)(nil)).Elem()
}

func (o GetAppSpecServiceCorsAllowOriginsPtrOutput) ToGetAppSpecServiceCorsAllowOriginsPtrOutput() GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return o
}

func (o GetAppSpecServiceCorsAllowOriginsPtrOutput) ToGetAppSpecServiceCorsAllowOriginsPtrOutputWithContext(ctx context.Context) GetAppSpecServiceCorsAllowOriginsPtrOutput {
	return o
}

func (o GetAppSpecServiceCorsAllowOriginsPtrOutput) Elem() GetAppSpecServiceCorsAllowOriginsOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCorsAllowOrigins) GetAppSpecServiceCorsAllowOrigins {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceCorsAllowOrigins
		return ret
	}).(GetAppSpecServiceCorsAllowOriginsOutput)
}

func (o GetAppSpecServiceCorsAllowOriginsPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o GetAppSpecServiceCorsAllowOriginsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o GetAppSpecServiceCorsAllowOriginsPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type string `pulumi:"type"`
	// The value of the environment variable.
	Value *string `pulumi:"value"`
}

// GetAppSpecServiceEnvInput is an input type that accepts GetAppSpecServiceEnvArgs and GetAppSpecServiceEnvOutput values.
// You can construct a concrete instance of `GetAppSpecServiceEnvInput` via:
//
//          GetAppSpecServiceEnvArgs{...}
type GetAppSpecServiceEnvInput interface {
	pulumi.Input

	ToGetAppSpecServiceEnvOutput() GetAppSpecServiceEnvOutput
	ToGetAppSpecServiceEnvOutputWithContext(context.Context) GetAppSpecServiceEnvOutput
}

type GetAppSpecServiceEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetAppSpecServiceEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceEnv)(nil)).Elem()
}

func (i GetAppSpecServiceEnvArgs) ToGetAppSpecServiceEnvOutput() GetAppSpecServiceEnvOutput {
	return i.ToGetAppSpecServiceEnvOutputWithContext(context.Background())
}

func (i GetAppSpecServiceEnvArgs) ToGetAppSpecServiceEnvOutputWithContext(ctx context.Context) GetAppSpecServiceEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceEnvOutput)
}

// GetAppSpecServiceEnvArrayInput is an input type that accepts GetAppSpecServiceEnvArray and GetAppSpecServiceEnvArrayOutput values.
// You can construct a concrete instance of `GetAppSpecServiceEnvArrayInput` via:
//
//          GetAppSpecServiceEnvArray{ GetAppSpecServiceEnvArgs{...} }
type GetAppSpecServiceEnvArrayInput interface {
	pulumi.Input

	ToGetAppSpecServiceEnvArrayOutput() GetAppSpecServiceEnvArrayOutput
	ToGetAppSpecServiceEnvArrayOutputWithContext(context.Context) GetAppSpecServiceEnvArrayOutput
}

type GetAppSpecServiceEnvArray []GetAppSpecServiceEnvInput

func (GetAppSpecServiceEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecServiceEnv)(nil)).Elem()
}

func (i GetAppSpecServiceEnvArray) ToGetAppSpecServiceEnvArrayOutput() GetAppSpecServiceEnvArrayOutput {
	return i.ToGetAppSpecServiceEnvArrayOutputWithContext(context.Background())
}

func (i GetAppSpecServiceEnvArray) ToGetAppSpecServiceEnvArrayOutputWithContext(ctx context.Context) GetAppSpecServiceEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceEnvArrayOutput)
}

type GetAppSpecServiceEnvOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceEnv)(nil)).Elem()
}

func (o GetAppSpecServiceEnvOutput) ToGetAppSpecServiceEnvOutput() GetAppSpecServiceEnvOutput {
	return o
}

func (o GetAppSpecServiceEnvOutput) ToGetAppSpecServiceEnvOutputWithContext(ctx context.Context) GetAppSpecServiceEnvOutput {
	return o
}

// The name of the environment variable.
func (o GetAppSpecServiceEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o GetAppSpecServiceEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o GetAppSpecServiceEnvOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceEnv) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetAppSpecServiceEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceEnvArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecServiceEnv)(nil)).Elem()
}

func (o GetAppSpecServiceEnvArrayOutput) ToGetAppSpecServiceEnvArrayOutput() GetAppSpecServiceEnvArrayOutput {
	return o
}

func (o GetAppSpecServiceEnvArrayOutput) ToGetAppSpecServiceEnvArrayOutputWithContext(ctx context.Context) GetAppSpecServiceEnvArrayOutput {
	return o
}

func (o GetAppSpecServiceEnvArrayOutput) Index(i pulumi.IntInput) GetAppSpecServiceEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecServiceEnv {
		return vs[0].([]GetAppSpecServiceEnv)[vs[1].(int)]
	}).(GetAppSpecServiceEnvOutput)
}

type GetAppSpecServiceGit struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// GetAppSpecServiceGitInput is an input type that accepts GetAppSpecServiceGitArgs and GetAppSpecServiceGitOutput values.
// You can construct a concrete instance of `GetAppSpecServiceGitInput` via:
//
//          GetAppSpecServiceGitArgs{...}
type GetAppSpecServiceGitInput interface {
	pulumi.Input

	ToGetAppSpecServiceGitOutput() GetAppSpecServiceGitOutput
	ToGetAppSpecServiceGitOutputWithContext(context.Context) GetAppSpecServiceGitOutput
}

type GetAppSpecServiceGitArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (GetAppSpecServiceGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceGit)(nil)).Elem()
}

func (i GetAppSpecServiceGitArgs) ToGetAppSpecServiceGitOutput() GetAppSpecServiceGitOutput {
	return i.ToGetAppSpecServiceGitOutputWithContext(context.Background())
}

func (i GetAppSpecServiceGitArgs) ToGetAppSpecServiceGitOutputWithContext(ctx context.Context) GetAppSpecServiceGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGitOutput)
}

func (i GetAppSpecServiceGitArgs) ToGetAppSpecServiceGitPtrOutput() GetAppSpecServiceGitPtrOutput {
	return i.ToGetAppSpecServiceGitPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceGitArgs) ToGetAppSpecServiceGitPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGitOutput).ToGetAppSpecServiceGitPtrOutputWithContext(ctx)
}

// GetAppSpecServiceGitPtrInput is an input type that accepts GetAppSpecServiceGitArgs, GetAppSpecServiceGitPtr and GetAppSpecServiceGitPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceGitPtrInput` via:
//
//          GetAppSpecServiceGitArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceGitPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceGitPtrOutput() GetAppSpecServiceGitPtrOutput
	ToGetAppSpecServiceGitPtrOutputWithContext(context.Context) GetAppSpecServiceGitPtrOutput
}

type getAppSpecServiceGitPtrType GetAppSpecServiceGitArgs

func GetAppSpecServiceGitPtr(v *GetAppSpecServiceGitArgs) GetAppSpecServiceGitPtrInput {
	return (*getAppSpecServiceGitPtrType)(v)
}

func (*getAppSpecServiceGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceGit)(nil)).Elem()
}

func (i *getAppSpecServiceGitPtrType) ToGetAppSpecServiceGitPtrOutput() GetAppSpecServiceGitPtrOutput {
	return i.ToGetAppSpecServiceGitPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceGitPtrType) ToGetAppSpecServiceGitPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGitPtrOutput)
}

type GetAppSpecServiceGitOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceGit)(nil)).Elem()
}

func (o GetAppSpecServiceGitOutput) ToGetAppSpecServiceGitOutput() GetAppSpecServiceGitOutput {
	return o
}

func (o GetAppSpecServiceGitOutput) ToGetAppSpecServiceGitOutputWithContext(ctx context.Context) GetAppSpecServiceGitOutput {
	return o
}

func (o GetAppSpecServiceGitOutput) ToGetAppSpecServiceGitPtrOutput() GetAppSpecServiceGitPtrOutput {
	return o.ToGetAppSpecServiceGitPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceGitOutput) ToGetAppSpecServiceGitPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceGit) *GetAppSpecServiceGit {
		return &v
	}).(GetAppSpecServiceGitPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecServiceGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o GetAppSpecServiceGitOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceGit) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceGitPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceGit)(nil)).Elem()
}

func (o GetAppSpecServiceGitPtrOutput) ToGetAppSpecServiceGitPtrOutput() GetAppSpecServiceGitPtrOutput {
	return o
}

func (o GetAppSpecServiceGitPtrOutput) ToGetAppSpecServiceGitPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGitPtrOutput {
	return o
}

func (o GetAppSpecServiceGitPtrOutput) Elem() GetAppSpecServiceGitOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGit) GetAppSpecServiceGit {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceGit
		return ret
	}).(GetAppSpecServiceGitOutput)
}

// The name of the branch to use.
func (o GetAppSpecServiceGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o GetAppSpecServiceGitPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceGithub struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// GetAppSpecServiceGithubInput is an input type that accepts GetAppSpecServiceGithubArgs and GetAppSpecServiceGithubOutput values.
// You can construct a concrete instance of `GetAppSpecServiceGithubInput` via:
//
//          GetAppSpecServiceGithubArgs{...}
type GetAppSpecServiceGithubInput interface {
	pulumi.Input

	ToGetAppSpecServiceGithubOutput() GetAppSpecServiceGithubOutput
	ToGetAppSpecServiceGithubOutputWithContext(context.Context) GetAppSpecServiceGithubOutput
}

type GetAppSpecServiceGithubArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (GetAppSpecServiceGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceGithub)(nil)).Elem()
}

func (i GetAppSpecServiceGithubArgs) ToGetAppSpecServiceGithubOutput() GetAppSpecServiceGithubOutput {
	return i.ToGetAppSpecServiceGithubOutputWithContext(context.Background())
}

func (i GetAppSpecServiceGithubArgs) ToGetAppSpecServiceGithubOutputWithContext(ctx context.Context) GetAppSpecServiceGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGithubOutput)
}

func (i GetAppSpecServiceGithubArgs) ToGetAppSpecServiceGithubPtrOutput() GetAppSpecServiceGithubPtrOutput {
	return i.ToGetAppSpecServiceGithubPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceGithubArgs) ToGetAppSpecServiceGithubPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGithubOutput).ToGetAppSpecServiceGithubPtrOutputWithContext(ctx)
}

// GetAppSpecServiceGithubPtrInput is an input type that accepts GetAppSpecServiceGithubArgs, GetAppSpecServiceGithubPtr and GetAppSpecServiceGithubPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceGithubPtrInput` via:
//
//          GetAppSpecServiceGithubArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceGithubPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceGithubPtrOutput() GetAppSpecServiceGithubPtrOutput
	ToGetAppSpecServiceGithubPtrOutputWithContext(context.Context) GetAppSpecServiceGithubPtrOutput
}

type getAppSpecServiceGithubPtrType GetAppSpecServiceGithubArgs

func GetAppSpecServiceGithubPtr(v *GetAppSpecServiceGithubArgs) GetAppSpecServiceGithubPtrInput {
	return (*getAppSpecServiceGithubPtrType)(v)
}

func (*getAppSpecServiceGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceGithub)(nil)).Elem()
}

func (i *getAppSpecServiceGithubPtrType) ToGetAppSpecServiceGithubPtrOutput() GetAppSpecServiceGithubPtrOutput {
	return i.ToGetAppSpecServiceGithubPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceGithubPtrType) ToGetAppSpecServiceGithubPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGithubPtrOutput)
}

type GetAppSpecServiceGithubOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceGithub)(nil)).Elem()
}

func (o GetAppSpecServiceGithubOutput) ToGetAppSpecServiceGithubOutput() GetAppSpecServiceGithubOutput {
	return o
}

func (o GetAppSpecServiceGithubOutput) ToGetAppSpecServiceGithubOutputWithContext(ctx context.Context) GetAppSpecServiceGithubOutput {
	return o
}

func (o GetAppSpecServiceGithubOutput) ToGetAppSpecServiceGithubPtrOutput() GetAppSpecServiceGithubPtrOutput {
	return o.ToGetAppSpecServiceGithubPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceGithubOutput) ToGetAppSpecServiceGithubPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceGithub) *GetAppSpecServiceGithub {
		return &v
	}).(GetAppSpecServiceGithubPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecServiceGithubOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceGithub) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecServiceGithubOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceGithub) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecServiceGithubOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceGithub) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceGithubPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceGithub)(nil)).Elem()
}

func (o GetAppSpecServiceGithubPtrOutput) ToGetAppSpecServiceGithubPtrOutput() GetAppSpecServiceGithubPtrOutput {
	return o
}

func (o GetAppSpecServiceGithubPtrOutput) ToGetAppSpecServiceGithubPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGithubPtrOutput {
	return o
}

func (o GetAppSpecServiceGithubPtrOutput) Elem() GetAppSpecServiceGithubOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGithub) GetAppSpecServiceGithub {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceGithub
		return ret
	}).(GetAppSpecServiceGithubOutput)
}

// The name of the branch to use.
func (o GetAppSpecServiceGithubPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGithub) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecServiceGithubPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecServiceGithubPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceGitlab struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// GetAppSpecServiceGitlabInput is an input type that accepts GetAppSpecServiceGitlabArgs and GetAppSpecServiceGitlabOutput values.
// You can construct a concrete instance of `GetAppSpecServiceGitlabInput` via:
//
//          GetAppSpecServiceGitlabArgs{...}
type GetAppSpecServiceGitlabInput interface {
	pulumi.Input

	ToGetAppSpecServiceGitlabOutput() GetAppSpecServiceGitlabOutput
	ToGetAppSpecServiceGitlabOutputWithContext(context.Context) GetAppSpecServiceGitlabOutput
}

type GetAppSpecServiceGitlabArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (GetAppSpecServiceGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceGitlab)(nil)).Elem()
}

func (i GetAppSpecServiceGitlabArgs) ToGetAppSpecServiceGitlabOutput() GetAppSpecServiceGitlabOutput {
	return i.ToGetAppSpecServiceGitlabOutputWithContext(context.Background())
}

func (i GetAppSpecServiceGitlabArgs) ToGetAppSpecServiceGitlabOutputWithContext(ctx context.Context) GetAppSpecServiceGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGitlabOutput)
}

func (i GetAppSpecServiceGitlabArgs) ToGetAppSpecServiceGitlabPtrOutput() GetAppSpecServiceGitlabPtrOutput {
	return i.ToGetAppSpecServiceGitlabPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceGitlabArgs) ToGetAppSpecServiceGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGitlabOutput).ToGetAppSpecServiceGitlabPtrOutputWithContext(ctx)
}

// GetAppSpecServiceGitlabPtrInput is an input type that accepts GetAppSpecServiceGitlabArgs, GetAppSpecServiceGitlabPtr and GetAppSpecServiceGitlabPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceGitlabPtrInput` via:
//
//          GetAppSpecServiceGitlabArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceGitlabPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceGitlabPtrOutput() GetAppSpecServiceGitlabPtrOutput
	ToGetAppSpecServiceGitlabPtrOutputWithContext(context.Context) GetAppSpecServiceGitlabPtrOutput
}

type getAppSpecServiceGitlabPtrType GetAppSpecServiceGitlabArgs

func GetAppSpecServiceGitlabPtr(v *GetAppSpecServiceGitlabArgs) GetAppSpecServiceGitlabPtrInput {
	return (*getAppSpecServiceGitlabPtrType)(v)
}

func (*getAppSpecServiceGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceGitlab)(nil)).Elem()
}

func (i *getAppSpecServiceGitlabPtrType) ToGetAppSpecServiceGitlabPtrOutput() GetAppSpecServiceGitlabPtrOutput {
	return i.ToGetAppSpecServiceGitlabPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceGitlabPtrType) ToGetAppSpecServiceGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceGitlabPtrOutput)
}

type GetAppSpecServiceGitlabOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceGitlab)(nil)).Elem()
}

func (o GetAppSpecServiceGitlabOutput) ToGetAppSpecServiceGitlabOutput() GetAppSpecServiceGitlabOutput {
	return o
}

func (o GetAppSpecServiceGitlabOutput) ToGetAppSpecServiceGitlabOutputWithContext(ctx context.Context) GetAppSpecServiceGitlabOutput {
	return o
}

func (o GetAppSpecServiceGitlabOutput) ToGetAppSpecServiceGitlabPtrOutput() GetAppSpecServiceGitlabPtrOutput {
	return o.ToGetAppSpecServiceGitlabPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceGitlabOutput) ToGetAppSpecServiceGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceGitlab) *GetAppSpecServiceGitlab {
		return &v
	}).(GetAppSpecServiceGitlabPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecServiceGitlabOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceGitlab) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecServiceGitlabOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceGitlab) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecServiceGitlabOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceGitlab) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceGitlabPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceGitlab)(nil)).Elem()
}

func (o GetAppSpecServiceGitlabPtrOutput) ToGetAppSpecServiceGitlabPtrOutput() GetAppSpecServiceGitlabPtrOutput {
	return o
}

func (o GetAppSpecServiceGitlabPtrOutput) ToGetAppSpecServiceGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecServiceGitlabPtrOutput {
	return o
}

func (o GetAppSpecServiceGitlabPtrOutput) Elem() GetAppSpecServiceGitlabOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGitlab) GetAppSpecServiceGitlab {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceGitlab
		return ret
	}).(GetAppSpecServiceGitlabOutput)
}

// The name of the branch to use.
func (o GetAppSpecServiceGitlabPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecServiceGitlabPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecServiceGitlabPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceHealthCheck struct {
	// The number of failed health checks before considered unhealthy.
	FailureThreshold *int `pulumi:"failureThreshold"`
	// The route path used for the HTTP health check ping.
	HttpPath *string `pulumi:"httpPath"`
	// The number of seconds to wait before beginning health checks.
	InitialDelaySeconds *int `pulumi:"initialDelaySeconds"`
	// The number of seconds to wait between health checks.
	PeriodSeconds *int `pulumi:"periodSeconds"`
	// The number of successful health checks before considered healthy.
	SuccessThreshold *int `pulumi:"successThreshold"`
	// The number of seconds after which the check times out.
	TimeoutSeconds *int `pulumi:"timeoutSeconds"`
}

// GetAppSpecServiceHealthCheckInput is an input type that accepts GetAppSpecServiceHealthCheckArgs and GetAppSpecServiceHealthCheckOutput values.
// You can construct a concrete instance of `GetAppSpecServiceHealthCheckInput` via:
//
//          GetAppSpecServiceHealthCheckArgs{...}
type GetAppSpecServiceHealthCheckInput interface {
	pulumi.Input

	ToGetAppSpecServiceHealthCheckOutput() GetAppSpecServiceHealthCheckOutput
	ToGetAppSpecServiceHealthCheckOutputWithContext(context.Context) GetAppSpecServiceHealthCheckOutput
}

type GetAppSpecServiceHealthCheckArgs struct {
	// The number of failed health checks before considered unhealthy.
	FailureThreshold pulumi.IntPtrInput `pulumi:"failureThreshold"`
	// The route path used for the HTTP health check ping.
	HttpPath pulumi.StringPtrInput `pulumi:"httpPath"`
	// The number of seconds to wait before beginning health checks.
	InitialDelaySeconds pulumi.IntPtrInput `pulumi:"initialDelaySeconds"`
	// The number of seconds to wait between health checks.
	PeriodSeconds pulumi.IntPtrInput `pulumi:"periodSeconds"`
	// The number of successful health checks before considered healthy.
	SuccessThreshold pulumi.IntPtrInput `pulumi:"successThreshold"`
	// The number of seconds after which the check times out.
	TimeoutSeconds pulumi.IntPtrInput `pulumi:"timeoutSeconds"`
}

func (GetAppSpecServiceHealthCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceHealthCheck)(nil)).Elem()
}

func (i GetAppSpecServiceHealthCheckArgs) ToGetAppSpecServiceHealthCheckOutput() GetAppSpecServiceHealthCheckOutput {
	return i.ToGetAppSpecServiceHealthCheckOutputWithContext(context.Background())
}

func (i GetAppSpecServiceHealthCheckArgs) ToGetAppSpecServiceHealthCheckOutputWithContext(ctx context.Context) GetAppSpecServiceHealthCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceHealthCheckOutput)
}

func (i GetAppSpecServiceHealthCheckArgs) ToGetAppSpecServiceHealthCheckPtrOutput() GetAppSpecServiceHealthCheckPtrOutput {
	return i.ToGetAppSpecServiceHealthCheckPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceHealthCheckArgs) ToGetAppSpecServiceHealthCheckPtrOutputWithContext(ctx context.Context) GetAppSpecServiceHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceHealthCheckOutput).ToGetAppSpecServiceHealthCheckPtrOutputWithContext(ctx)
}

// GetAppSpecServiceHealthCheckPtrInput is an input type that accepts GetAppSpecServiceHealthCheckArgs, GetAppSpecServiceHealthCheckPtr and GetAppSpecServiceHealthCheckPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceHealthCheckPtrInput` via:
//
//          GetAppSpecServiceHealthCheckArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceHealthCheckPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceHealthCheckPtrOutput() GetAppSpecServiceHealthCheckPtrOutput
	ToGetAppSpecServiceHealthCheckPtrOutputWithContext(context.Context) GetAppSpecServiceHealthCheckPtrOutput
}

type getAppSpecServiceHealthCheckPtrType GetAppSpecServiceHealthCheckArgs

func GetAppSpecServiceHealthCheckPtr(v *GetAppSpecServiceHealthCheckArgs) GetAppSpecServiceHealthCheckPtrInput {
	return (*getAppSpecServiceHealthCheckPtrType)(v)
}

func (*getAppSpecServiceHealthCheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceHealthCheck)(nil)).Elem()
}

func (i *getAppSpecServiceHealthCheckPtrType) ToGetAppSpecServiceHealthCheckPtrOutput() GetAppSpecServiceHealthCheckPtrOutput {
	return i.ToGetAppSpecServiceHealthCheckPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceHealthCheckPtrType) ToGetAppSpecServiceHealthCheckPtrOutputWithContext(ctx context.Context) GetAppSpecServiceHealthCheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceHealthCheckPtrOutput)
}

type GetAppSpecServiceHealthCheckOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceHealthCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceHealthCheck)(nil)).Elem()
}

func (o GetAppSpecServiceHealthCheckOutput) ToGetAppSpecServiceHealthCheckOutput() GetAppSpecServiceHealthCheckOutput {
	return o
}

func (o GetAppSpecServiceHealthCheckOutput) ToGetAppSpecServiceHealthCheckOutputWithContext(ctx context.Context) GetAppSpecServiceHealthCheckOutput {
	return o
}

func (o GetAppSpecServiceHealthCheckOutput) ToGetAppSpecServiceHealthCheckPtrOutput() GetAppSpecServiceHealthCheckPtrOutput {
	return o.ToGetAppSpecServiceHealthCheckPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceHealthCheckOutput) ToGetAppSpecServiceHealthCheckPtrOutputWithContext(ctx context.Context) GetAppSpecServiceHealthCheckPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceHealthCheck) *GetAppSpecServiceHealthCheck {
		return &v
	}).(GetAppSpecServiceHealthCheckPtrOutput)
}

// The number of failed health checks before considered unhealthy.
func (o GetAppSpecServiceHealthCheckOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceHealthCheck) *int { return v.FailureThreshold }).(pulumi.IntPtrOutput)
}

// The route path used for the HTTP health check ping.
func (o GetAppSpecServiceHealthCheckOutput) HttpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceHealthCheck) *string { return v.HttpPath }).(pulumi.StringPtrOutput)
}

// The number of seconds to wait before beginning health checks.
func (o GetAppSpecServiceHealthCheckOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceHealthCheck) *int { return v.InitialDelaySeconds }).(pulumi.IntPtrOutput)
}

// The number of seconds to wait between health checks.
func (o GetAppSpecServiceHealthCheckOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceHealthCheck) *int { return v.PeriodSeconds }).(pulumi.IntPtrOutput)
}

// The number of successful health checks before considered healthy.
func (o GetAppSpecServiceHealthCheckOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceHealthCheck) *int { return v.SuccessThreshold }).(pulumi.IntPtrOutput)
}

// The number of seconds after which the check times out.
func (o GetAppSpecServiceHealthCheckOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceHealthCheck) *int { return v.TimeoutSeconds }).(pulumi.IntPtrOutput)
}

type GetAppSpecServiceHealthCheckPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceHealthCheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceHealthCheck)(nil)).Elem()
}

func (o GetAppSpecServiceHealthCheckPtrOutput) ToGetAppSpecServiceHealthCheckPtrOutput() GetAppSpecServiceHealthCheckPtrOutput {
	return o
}

func (o GetAppSpecServiceHealthCheckPtrOutput) ToGetAppSpecServiceHealthCheckPtrOutputWithContext(ctx context.Context) GetAppSpecServiceHealthCheckPtrOutput {
	return o
}

func (o GetAppSpecServiceHealthCheckPtrOutput) Elem() GetAppSpecServiceHealthCheckOutput {
	return o.ApplyT(func(v *GetAppSpecServiceHealthCheck) GetAppSpecServiceHealthCheck {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceHealthCheck
		return ret
	}).(GetAppSpecServiceHealthCheckOutput)
}

// The number of failed health checks before considered unhealthy.
func (o GetAppSpecServiceHealthCheckPtrOutput) FailureThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.FailureThreshold
	}).(pulumi.IntPtrOutput)
}

// The route path used for the HTTP health check ping.
func (o GetAppSpecServiceHealthCheckPtrOutput) HttpPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceHealthCheck) *string {
		if v == nil {
			return nil
		}
		return v.HttpPath
	}).(pulumi.StringPtrOutput)
}

// The number of seconds to wait before beginning health checks.
func (o GetAppSpecServiceHealthCheckPtrOutput) InitialDelaySeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.InitialDelaySeconds
	}).(pulumi.IntPtrOutput)
}

// The number of seconds to wait between health checks.
func (o GetAppSpecServiceHealthCheckPtrOutput) PeriodSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.PeriodSeconds
	}).(pulumi.IntPtrOutput)
}

// The number of successful health checks before considered healthy.
func (o GetAppSpecServiceHealthCheckPtrOutput) SuccessThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.SuccessThreshold
	}).(pulumi.IntPtrOutput)
}

// The number of seconds after which the check times out.
func (o GetAppSpecServiceHealthCheckPtrOutput) TimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceHealthCheck) *int {
		if v == nil {
			return nil
		}
		return v.TimeoutSeconds
	}).(pulumi.IntPtrOutput)
}

type GetAppSpecServiceImage struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry *string `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType string `pulumi:"registryType"`
	// The repository name.
	Repository string `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag *string `pulumi:"tag"`
}

// GetAppSpecServiceImageInput is an input type that accepts GetAppSpecServiceImageArgs and GetAppSpecServiceImageOutput values.
// You can construct a concrete instance of `GetAppSpecServiceImageInput` via:
//
//          GetAppSpecServiceImageArgs{...}
type GetAppSpecServiceImageInput interface {
	pulumi.Input

	ToGetAppSpecServiceImageOutput() GetAppSpecServiceImageOutput
	ToGetAppSpecServiceImageOutputWithContext(context.Context) GetAppSpecServiceImageOutput
}

type GetAppSpecServiceImageArgs struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType pulumi.StringInput `pulumi:"registryType"`
	// The repository name.
	Repository pulumi.StringInput `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (GetAppSpecServiceImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceImage)(nil)).Elem()
}

func (i GetAppSpecServiceImageArgs) ToGetAppSpecServiceImageOutput() GetAppSpecServiceImageOutput {
	return i.ToGetAppSpecServiceImageOutputWithContext(context.Background())
}

func (i GetAppSpecServiceImageArgs) ToGetAppSpecServiceImageOutputWithContext(ctx context.Context) GetAppSpecServiceImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceImageOutput)
}

func (i GetAppSpecServiceImageArgs) ToGetAppSpecServiceImagePtrOutput() GetAppSpecServiceImagePtrOutput {
	return i.ToGetAppSpecServiceImagePtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceImageArgs) ToGetAppSpecServiceImagePtrOutputWithContext(ctx context.Context) GetAppSpecServiceImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceImageOutput).ToGetAppSpecServiceImagePtrOutputWithContext(ctx)
}

// GetAppSpecServiceImagePtrInput is an input type that accepts GetAppSpecServiceImageArgs, GetAppSpecServiceImagePtr and GetAppSpecServiceImagePtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceImagePtrInput` via:
//
//          GetAppSpecServiceImageArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceImagePtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceImagePtrOutput() GetAppSpecServiceImagePtrOutput
	ToGetAppSpecServiceImagePtrOutputWithContext(context.Context) GetAppSpecServiceImagePtrOutput
}

type getAppSpecServiceImagePtrType GetAppSpecServiceImageArgs

func GetAppSpecServiceImagePtr(v *GetAppSpecServiceImageArgs) GetAppSpecServiceImagePtrInput {
	return (*getAppSpecServiceImagePtrType)(v)
}

func (*getAppSpecServiceImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceImage)(nil)).Elem()
}

func (i *getAppSpecServiceImagePtrType) ToGetAppSpecServiceImagePtrOutput() GetAppSpecServiceImagePtrOutput {
	return i.ToGetAppSpecServiceImagePtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceImagePtrType) ToGetAppSpecServiceImagePtrOutputWithContext(ctx context.Context) GetAppSpecServiceImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceImagePtrOutput)
}

type GetAppSpecServiceImageOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceImage)(nil)).Elem()
}

func (o GetAppSpecServiceImageOutput) ToGetAppSpecServiceImageOutput() GetAppSpecServiceImageOutput {
	return o
}

func (o GetAppSpecServiceImageOutput) ToGetAppSpecServiceImageOutputWithContext(ctx context.Context) GetAppSpecServiceImageOutput {
	return o
}

func (o GetAppSpecServiceImageOutput) ToGetAppSpecServiceImagePtrOutput() GetAppSpecServiceImagePtrOutput {
	return o.ToGetAppSpecServiceImagePtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceImageOutput) ToGetAppSpecServiceImagePtrOutputWithContext(ctx context.Context) GetAppSpecServiceImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceImage) *GetAppSpecServiceImage {
		return &v
	}).(GetAppSpecServiceImagePtrOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o GetAppSpecServiceImageOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceImage) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o GetAppSpecServiceImageOutput) RegistryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceImage) string { return v.RegistryType }).(pulumi.StringOutput)
}

// The repository name.
func (o GetAppSpecServiceImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o GetAppSpecServiceImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceImagePtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceImage)(nil)).Elem()
}

func (o GetAppSpecServiceImagePtrOutput) ToGetAppSpecServiceImagePtrOutput() GetAppSpecServiceImagePtrOutput {
	return o
}

func (o GetAppSpecServiceImagePtrOutput) ToGetAppSpecServiceImagePtrOutputWithContext(ctx context.Context) GetAppSpecServiceImagePtrOutput {
	return o
}

func (o GetAppSpecServiceImagePtrOutput) Elem() GetAppSpecServiceImageOutput {
	return o.ApplyT(func(v *GetAppSpecServiceImage) GetAppSpecServiceImage {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceImage
		return ret
	}).(GetAppSpecServiceImageOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o GetAppSpecServiceImagePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceImage) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o GetAppSpecServiceImagePtrOutput) RegistryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceImage) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryType
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o GetAppSpecServiceImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o GetAppSpecServiceImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceLogDestination struct {
	Datadog *GetAppSpecServiceLogDestinationDatadog `pulumi:"datadog"`
	Logtail *GetAppSpecServiceLogDestinationLogtail `pulumi:"logtail"`
	// The name of the component.
	Name       string                                     `pulumi:"name"`
	Papertrail *GetAppSpecServiceLogDestinationPapertrail `pulumi:"papertrail"`
}

// GetAppSpecServiceLogDestinationInput is an input type that accepts GetAppSpecServiceLogDestinationArgs and GetAppSpecServiceLogDestinationOutput values.
// You can construct a concrete instance of `GetAppSpecServiceLogDestinationInput` via:
//
//          GetAppSpecServiceLogDestinationArgs{...}
type GetAppSpecServiceLogDestinationInput interface {
	pulumi.Input

	ToGetAppSpecServiceLogDestinationOutput() GetAppSpecServiceLogDestinationOutput
	ToGetAppSpecServiceLogDestinationOutputWithContext(context.Context) GetAppSpecServiceLogDestinationOutput
}

type GetAppSpecServiceLogDestinationArgs struct {
	Datadog GetAppSpecServiceLogDestinationDatadogPtrInput `pulumi:"datadog"`
	Logtail GetAppSpecServiceLogDestinationLogtailPtrInput `pulumi:"logtail"`
	// The name of the component.
	Name       pulumi.StringInput                                `pulumi:"name"`
	Papertrail GetAppSpecServiceLogDestinationPapertrailPtrInput `pulumi:"papertrail"`
}

func (GetAppSpecServiceLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceLogDestination)(nil)).Elem()
}

func (i GetAppSpecServiceLogDestinationArgs) ToGetAppSpecServiceLogDestinationOutput() GetAppSpecServiceLogDestinationOutput {
	return i.ToGetAppSpecServiceLogDestinationOutputWithContext(context.Background())
}

func (i GetAppSpecServiceLogDestinationArgs) ToGetAppSpecServiceLogDestinationOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationOutput)
}

// GetAppSpecServiceLogDestinationArrayInput is an input type that accepts GetAppSpecServiceLogDestinationArray and GetAppSpecServiceLogDestinationArrayOutput values.
// You can construct a concrete instance of `GetAppSpecServiceLogDestinationArrayInput` via:
//
//          GetAppSpecServiceLogDestinationArray{ GetAppSpecServiceLogDestinationArgs{...} }
type GetAppSpecServiceLogDestinationArrayInput interface {
	pulumi.Input

	ToGetAppSpecServiceLogDestinationArrayOutput() GetAppSpecServiceLogDestinationArrayOutput
	ToGetAppSpecServiceLogDestinationArrayOutputWithContext(context.Context) GetAppSpecServiceLogDestinationArrayOutput
}

type GetAppSpecServiceLogDestinationArray []GetAppSpecServiceLogDestinationInput

func (GetAppSpecServiceLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecServiceLogDestination)(nil)).Elem()
}

func (i GetAppSpecServiceLogDestinationArray) ToGetAppSpecServiceLogDestinationArrayOutput() GetAppSpecServiceLogDestinationArrayOutput {
	return i.ToGetAppSpecServiceLogDestinationArrayOutputWithContext(context.Background())
}

func (i GetAppSpecServiceLogDestinationArray) ToGetAppSpecServiceLogDestinationArrayOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationArrayOutput)
}

type GetAppSpecServiceLogDestinationOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceLogDestination)(nil)).Elem()
}

func (o GetAppSpecServiceLogDestinationOutput) ToGetAppSpecServiceLogDestinationOutput() GetAppSpecServiceLogDestinationOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationOutput) ToGetAppSpecServiceLogDestinationOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationOutput) Datadog() GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceLogDestination) *GetAppSpecServiceLogDestinationDatadog { return v.Datadog }).(GetAppSpecServiceLogDestinationDatadogPtrOutput)
}

func (o GetAppSpecServiceLogDestinationOutput) Logtail() GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceLogDestination) *GetAppSpecServiceLogDestinationLogtail { return v.Logtail }).(GetAppSpecServiceLogDestinationLogtailPtrOutput)
}

// The name of the component.
func (o GetAppSpecServiceLogDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceLogDestination) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAppSpecServiceLogDestinationOutput) Papertrail() GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceLogDestination) *GetAppSpecServiceLogDestinationPapertrail {
		return v.Papertrail
	}).(GetAppSpecServiceLogDestinationPapertrailPtrOutput)
}

type GetAppSpecServiceLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecServiceLogDestination)(nil)).Elem()
}

func (o GetAppSpecServiceLogDestinationArrayOutput) ToGetAppSpecServiceLogDestinationArrayOutput() GetAppSpecServiceLogDestinationArrayOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationArrayOutput) ToGetAppSpecServiceLogDestinationArrayOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationArrayOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationArrayOutput) Index(i pulumi.IntInput) GetAppSpecServiceLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecServiceLogDestination {
		return vs[0].([]GetAppSpecServiceLogDestination)[vs[1].(int)]
	}).(GetAppSpecServiceLogDestinationOutput)
}

type GetAppSpecServiceLogDestinationDatadog struct {
	ApiKey   string  `pulumi:"apiKey"`
	Endpoint *string `pulumi:"endpoint"`
}

// GetAppSpecServiceLogDestinationDatadogInput is an input type that accepts GetAppSpecServiceLogDestinationDatadogArgs and GetAppSpecServiceLogDestinationDatadogOutput values.
// You can construct a concrete instance of `GetAppSpecServiceLogDestinationDatadogInput` via:
//
//          GetAppSpecServiceLogDestinationDatadogArgs{...}
type GetAppSpecServiceLogDestinationDatadogInput interface {
	pulumi.Input

	ToGetAppSpecServiceLogDestinationDatadogOutput() GetAppSpecServiceLogDestinationDatadogOutput
	ToGetAppSpecServiceLogDestinationDatadogOutputWithContext(context.Context) GetAppSpecServiceLogDestinationDatadogOutput
}

type GetAppSpecServiceLogDestinationDatadogArgs struct {
	ApiKey   pulumi.StringInput    `pulumi:"apiKey"`
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
}

func (GetAppSpecServiceLogDestinationDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceLogDestinationDatadog)(nil)).Elem()
}

func (i GetAppSpecServiceLogDestinationDatadogArgs) ToGetAppSpecServiceLogDestinationDatadogOutput() GetAppSpecServiceLogDestinationDatadogOutput {
	return i.ToGetAppSpecServiceLogDestinationDatadogOutputWithContext(context.Background())
}

func (i GetAppSpecServiceLogDestinationDatadogArgs) ToGetAppSpecServiceLogDestinationDatadogOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationDatadogOutput)
}

func (i GetAppSpecServiceLogDestinationDatadogArgs) ToGetAppSpecServiceLogDestinationDatadogPtrOutput() GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return i.ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceLogDestinationDatadogArgs) ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationDatadogOutput).ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx)
}

// GetAppSpecServiceLogDestinationDatadogPtrInput is an input type that accepts GetAppSpecServiceLogDestinationDatadogArgs, GetAppSpecServiceLogDestinationDatadogPtr and GetAppSpecServiceLogDestinationDatadogPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceLogDestinationDatadogPtrInput` via:
//
//          GetAppSpecServiceLogDestinationDatadogArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceLogDestinationDatadogPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceLogDestinationDatadogPtrOutput() GetAppSpecServiceLogDestinationDatadogPtrOutput
	ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(context.Context) GetAppSpecServiceLogDestinationDatadogPtrOutput
}

type getAppSpecServiceLogDestinationDatadogPtrType GetAppSpecServiceLogDestinationDatadogArgs

func GetAppSpecServiceLogDestinationDatadogPtr(v *GetAppSpecServiceLogDestinationDatadogArgs) GetAppSpecServiceLogDestinationDatadogPtrInput {
	return (*getAppSpecServiceLogDestinationDatadogPtrType)(v)
}

func (*getAppSpecServiceLogDestinationDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceLogDestinationDatadog)(nil)).Elem()
}

func (i *getAppSpecServiceLogDestinationDatadogPtrType) ToGetAppSpecServiceLogDestinationDatadogPtrOutput() GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return i.ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceLogDestinationDatadogPtrType) ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationDatadogPtrOutput)
}

type GetAppSpecServiceLogDestinationDatadogOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceLogDestinationDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceLogDestinationDatadog)(nil)).Elem()
}

func (o GetAppSpecServiceLogDestinationDatadogOutput) ToGetAppSpecServiceLogDestinationDatadogOutput() GetAppSpecServiceLogDestinationDatadogOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationDatadogOutput) ToGetAppSpecServiceLogDestinationDatadogOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationDatadogOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationDatadogOutput) ToGetAppSpecServiceLogDestinationDatadogPtrOutput() GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return o.ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceLogDestinationDatadogOutput) ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceLogDestinationDatadog) *GetAppSpecServiceLogDestinationDatadog {
		return &v
	}).(GetAppSpecServiceLogDestinationDatadogPtrOutput)
}

func (o GetAppSpecServiceLogDestinationDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceLogDestinationDatadog) string { return v.ApiKey }).(pulumi.StringOutput)
}

func (o GetAppSpecServiceLogDestinationDatadogOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceLogDestinationDatadog) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceLogDestinationDatadogPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceLogDestinationDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceLogDestinationDatadog)(nil)).Elem()
}

func (o GetAppSpecServiceLogDestinationDatadogPtrOutput) ToGetAppSpecServiceLogDestinationDatadogPtrOutput() GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationDatadogPtrOutput) ToGetAppSpecServiceLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationDatadogPtrOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationDatadogPtrOutput) Elem() GetAppSpecServiceLogDestinationDatadogOutput {
	return o.ApplyT(func(v *GetAppSpecServiceLogDestinationDatadog) GetAppSpecServiceLogDestinationDatadog {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceLogDestinationDatadog
		return ret
	}).(GetAppSpecServiceLogDestinationDatadogOutput)
}

func (o GetAppSpecServiceLogDestinationDatadogPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

func (o GetAppSpecServiceLogDestinationDatadogPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceLogDestinationLogtail struct {
	Token string `pulumi:"token"`
}

// GetAppSpecServiceLogDestinationLogtailInput is an input type that accepts GetAppSpecServiceLogDestinationLogtailArgs and GetAppSpecServiceLogDestinationLogtailOutput values.
// You can construct a concrete instance of `GetAppSpecServiceLogDestinationLogtailInput` via:
//
//          GetAppSpecServiceLogDestinationLogtailArgs{...}
type GetAppSpecServiceLogDestinationLogtailInput interface {
	pulumi.Input

	ToGetAppSpecServiceLogDestinationLogtailOutput() GetAppSpecServiceLogDestinationLogtailOutput
	ToGetAppSpecServiceLogDestinationLogtailOutputWithContext(context.Context) GetAppSpecServiceLogDestinationLogtailOutput
}

type GetAppSpecServiceLogDestinationLogtailArgs struct {
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetAppSpecServiceLogDestinationLogtailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceLogDestinationLogtail)(nil)).Elem()
}

func (i GetAppSpecServiceLogDestinationLogtailArgs) ToGetAppSpecServiceLogDestinationLogtailOutput() GetAppSpecServiceLogDestinationLogtailOutput {
	return i.ToGetAppSpecServiceLogDestinationLogtailOutputWithContext(context.Background())
}

func (i GetAppSpecServiceLogDestinationLogtailArgs) ToGetAppSpecServiceLogDestinationLogtailOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationLogtailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationLogtailOutput)
}

func (i GetAppSpecServiceLogDestinationLogtailArgs) ToGetAppSpecServiceLogDestinationLogtailPtrOutput() GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return i.ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceLogDestinationLogtailArgs) ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationLogtailOutput).ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx)
}

// GetAppSpecServiceLogDestinationLogtailPtrInput is an input type that accepts GetAppSpecServiceLogDestinationLogtailArgs, GetAppSpecServiceLogDestinationLogtailPtr and GetAppSpecServiceLogDestinationLogtailPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceLogDestinationLogtailPtrInput` via:
//
//          GetAppSpecServiceLogDestinationLogtailArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceLogDestinationLogtailPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceLogDestinationLogtailPtrOutput() GetAppSpecServiceLogDestinationLogtailPtrOutput
	ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(context.Context) GetAppSpecServiceLogDestinationLogtailPtrOutput
}

type getAppSpecServiceLogDestinationLogtailPtrType GetAppSpecServiceLogDestinationLogtailArgs

func GetAppSpecServiceLogDestinationLogtailPtr(v *GetAppSpecServiceLogDestinationLogtailArgs) GetAppSpecServiceLogDestinationLogtailPtrInput {
	return (*getAppSpecServiceLogDestinationLogtailPtrType)(v)
}

func (*getAppSpecServiceLogDestinationLogtailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceLogDestinationLogtail)(nil)).Elem()
}

func (i *getAppSpecServiceLogDestinationLogtailPtrType) ToGetAppSpecServiceLogDestinationLogtailPtrOutput() GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return i.ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceLogDestinationLogtailPtrType) ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationLogtailPtrOutput)
}

type GetAppSpecServiceLogDestinationLogtailOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceLogDestinationLogtailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceLogDestinationLogtail)(nil)).Elem()
}

func (o GetAppSpecServiceLogDestinationLogtailOutput) ToGetAppSpecServiceLogDestinationLogtailOutput() GetAppSpecServiceLogDestinationLogtailOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationLogtailOutput) ToGetAppSpecServiceLogDestinationLogtailOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationLogtailOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationLogtailOutput) ToGetAppSpecServiceLogDestinationLogtailPtrOutput() GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return o.ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceLogDestinationLogtailOutput) ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceLogDestinationLogtail) *GetAppSpecServiceLogDestinationLogtail {
		return &v
	}).(GetAppSpecServiceLogDestinationLogtailPtrOutput)
}

func (o GetAppSpecServiceLogDestinationLogtailOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceLogDestinationLogtail) string { return v.Token }).(pulumi.StringOutput)
}

type GetAppSpecServiceLogDestinationLogtailPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceLogDestinationLogtailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceLogDestinationLogtail)(nil)).Elem()
}

func (o GetAppSpecServiceLogDestinationLogtailPtrOutput) ToGetAppSpecServiceLogDestinationLogtailPtrOutput() GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationLogtailPtrOutput) ToGetAppSpecServiceLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationLogtailPtrOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationLogtailPtrOutput) Elem() GetAppSpecServiceLogDestinationLogtailOutput {
	return o.ApplyT(func(v *GetAppSpecServiceLogDestinationLogtail) GetAppSpecServiceLogDestinationLogtail {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceLogDestinationLogtail
		return ret
	}).(GetAppSpecServiceLogDestinationLogtailOutput)
}

func (o GetAppSpecServiceLogDestinationLogtailPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceLogDestinationLogtail) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceLogDestinationPapertrail struct {
	Endpoint string `pulumi:"endpoint"`
}

// GetAppSpecServiceLogDestinationPapertrailInput is an input type that accepts GetAppSpecServiceLogDestinationPapertrailArgs and GetAppSpecServiceLogDestinationPapertrailOutput values.
// You can construct a concrete instance of `GetAppSpecServiceLogDestinationPapertrailInput` via:
//
//          GetAppSpecServiceLogDestinationPapertrailArgs{...}
type GetAppSpecServiceLogDestinationPapertrailInput interface {
	pulumi.Input

	ToGetAppSpecServiceLogDestinationPapertrailOutput() GetAppSpecServiceLogDestinationPapertrailOutput
	ToGetAppSpecServiceLogDestinationPapertrailOutputWithContext(context.Context) GetAppSpecServiceLogDestinationPapertrailOutput
}

type GetAppSpecServiceLogDestinationPapertrailArgs struct {
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (GetAppSpecServiceLogDestinationPapertrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceLogDestinationPapertrail)(nil)).Elem()
}

func (i GetAppSpecServiceLogDestinationPapertrailArgs) ToGetAppSpecServiceLogDestinationPapertrailOutput() GetAppSpecServiceLogDestinationPapertrailOutput {
	return i.ToGetAppSpecServiceLogDestinationPapertrailOutputWithContext(context.Background())
}

func (i GetAppSpecServiceLogDestinationPapertrailArgs) ToGetAppSpecServiceLogDestinationPapertrailOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationPapertrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationPapertrailOutput)
}

func (i GetAppSpecServiceLogDestinationPapertrailArgs) ToGetAppSpecServiceLogDestinationPapertrailPtrOutput() GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return i.ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i GetAppSpecServiceLogDestinationPapertrailArgs) ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationPapertrailOutput).ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx)
}

// GetAppSpecServiceLogDestinationPapertrailPtrInput is an input type that accepts GetAppSpecServiceLogDestinationPapertrailArgs, GetAppSpecServiceLogDestinationPapertrailPtr and GetAppSpecServiceLogDestinationPapertrailPtrOutput values.
// You can construct a concrete instance of `GetAppSpecServiceLogDestinationPapertrailPtrInput` via:
//
//          GetAppSpecServiceLogDestinationPapertrailArgs{...}
//
//  or:
//
//          nil
type GetAppSpecServiceLogDestinationPapertrailPtrInput interface {
	pulumi.Input

	ToGetAppSpecServiceLogDestinationPapertrailPtrOutput() GetAppSpecServiceLogDestinationPapertrailPtrOutput
	ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(context.Context) GetAppSpecServiceLogDestinationPapertrailPtrOutput
}

type getAppSpecServiceLogDestinationPapertrailPtrType GetAppSpecServiceLogDestinationPapertrailArgs

func GetAppSpecServiceLogDestinationPapertrailPtr(v *GetAppSpecServiceLogDestinationPapertrailArgs) GetAppSpecServiceLogDestinationPapertrailPtrInput {
	return (*getAppSpecServiceLogDestinationPapertrailPtrType)(v)
}

func (*getAppSpecServiceLogDestinationPapertrailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceLogDestinationPapertrail)(nil)).Elem()
}

func (i *getAppSpecServiceLogDestinationPapertrailPtrType) ToGetAppSpecServiceLogDestinationPapertrailPtrOutput() GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return i.ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i *getAppSpecServiceLogDestinationPapertrailPtrType) ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceLogDestinationPapertrailPtrOutput)
}

type GetAppSpecServiceLogDestinationPapertrailOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceLogDestinationPapertrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceLogDestinationPapertrail)(nil)).Elem()
}

func (o GetAppSpecServiceLogDestinationPapertrailOutput) ToGetAppSpecServiceLogDestinationPapertrailOutput() GetAppSpecServiceLogDestinationPapertrailOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationPapertrailOutput) ToGetAppSpecServiceLogDestinationPapertrailOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationPapertrailOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationPapertrailOutput) ToGetAppSpecServiceLogDestinationPapertrailPtrOutput() GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return o.ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (o GetAppSpecServiceLogDestinationPapertrailOutput) ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecServiceLogDestinationPapertrail) *GetAppSpecServiceLogDestinationPapertrail {
		return &v
	}).(GetAppSpecServiceLogDestinationPapertrailPtrOutput)
}

func (o GetAppSpecServiceLogDestinationPapertrailOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecServiceLogDestinationPapertrail) string { return v.Endpoint }).(pulumi.StringOutput)
}

type GetAppSpecServiceLogDestinationPapertrailPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceLogDestinationPapertrailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecServiceLogDestinationPapertrail)(nil)).Elem()
}

func (o GetAppSpecServiceLogDestinationPapertrailPtrOutput) ToGetAppSpecServiceLogDestinationPapertrailPtrOutput() GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationPapertrailPtrOutput) ToGetAppSpecServiceLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecServiceLogDestinationPapertrailPtrOutput {
	return o
}

func (o GetAppSpecServiceLogDestinationPapertrailPtrOutput) Elem() GetAppSpecServiceLogDestinationPapertrailOutput {
	return o.ApplyT(func(v *GetAppSpecServiceLogDestinationPapertrail) GetAppSpecServiceLogDestinationPapertrail {
		if v != nil {
			return *v
		}
		var ret GetAppSpecServiceLogDestinationPapertrail
		return ret
	}).(GetAppSpecServiceLogDestinationPapertrailOutput)
}

func (o GetAppSpecServiceLogDestinationPapertrailPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecServiceLogDestinationPapertrail) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecServiceRoute struct {
	// Paths must start with `/` and must be unique within the app.
	Path *string `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `pulumi:"preservePathPrefix"`
}

// GetAppSpecServiceRouteInput is an input type that accepts GetAppSpecServiceRouteArgs and GetAppSpecServiceRouteOutput values.
// You can construct a concrete instance of `GetAppSpecServiceRouteInput` via:
//
//          GetAppSpecServiceRouteArgs{...}
type GetAppSpecServiceRouteInput interface {
	pulumi.Input

	ToGetAppSpecServiceRouteOutput() GetAppSpecServiceRouteOutput
	ToGetAppSpecServiceRouteOutputWithContext(context.Context) GetAppSpecServiceRouteOutput
}

type GetAppSpecServiceRouteArgs struct {
	// Paths must start with `/` and must be unique within the app.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix pulumi.BoolPtrInput `pulumi:"preservePathPrefix"`
}

func (GetAppSpecServiceRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceRoute)(nil)).Elem()
}

func (i GetAppSpecServiceRouteArgs) ToGetAppSpecServiceRouteOutput() GetAppSpecServiceRouteOutput {
	return i.ToGetAppSpecServiceRouteOutputWithContext(context.Background())
}

func (i GetAppSpecServiceRouteArgs) ToGetAppSpecServiceRouteOutputWithContext(ctx context.Context) GetAppSpecServiceRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceRouteOutput)
}

// GetAppSpecServiceRouteArrayInput is an input type that accepts GetAppSpecServiceRouteArray and GetAppSpecServiceRouteArrayOutput values.
// You can construct a concrete instance of `GetAppSpecServiceRouteArrayInput` via:
//
//          GetAppSpecServiceRouteArray{ GetAppSpecServiceRouteArgs{...} }
type GetAppSpecServiceRouteArrayInput interface {
	pulumi.Input

	ToGetAppSpecServiceRouteArrayOutput() GetAppSpecServiceRouteArrayOutput
	ToGetAppSpecServiceRouteArrayOutputWithContext(context.Context) GetAppSpecServiceRouteArrayOutput
}

type GetAppSpecServiceRouteArray []GetAppSpecServiceRouteInput

func (GetAppSpecServiceRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecServiceRoute)(nil)).Elem()
}

func (i GetAppSpecServiceRouteArray) ToGetAppSpecServiceRouteArrayOutput() GetAppSpecServiceRouteArrayOutput {
	return i.ToGetAppSpecServiceRouteArrayOutputWithContext(context.Background())
}

func (i GetAppSpecServiceRouteArray) ToGetAppSpecServiceRouteArrayOutputWithContext(ctx context.Context) GetAppSpecServiceRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecServiceRouteArrayOutput)
}

type GetAppSpecServiceRouteOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecServiceRoute)(nil)).Elem()
}

func (o GetAppSpecServiceRouteOutput) ToGetAppSpecServiceRouteOutput() GetAppSpecServiceRouteOutput {
	return o
}

func (o GetAppSpecServiceRouteOutput) ToGetAppSpecServiceRouteOutputWithContext(ctx context.Context) GetAppSpecServiceRouteOutput {
	return o
}

// Paths must start with `/` and must be unique within the app.
func (o GetAppSpecServiceRouteOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceRoute) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// An optional flag to preserve the path that is forwarded to the backend service.
func (o GetAppSpecServiceRouteOutput) PreservePathPrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecServiceRoute) *bool { return v.PreservePathPrefix }).(pulumi.BoolPtrOutput)
}

type GetAppSpecServiceRouteArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecServiceRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecServiceRoute)(nil)).Elem()
}

func (o GetAppSpecServiceRouteArrayOutput) ToGetAppSpecServiceRouteArrayOutput() GetAppSpecServiceRouteArrayOutput {
	return o
}

func (o GetAppSpecServiceRouteArrayOutput) ToGetAppSpecServiceRouteArrayOutputWithContext(ctx context.Context) GetAppSpecServiceRouteArrayOutput {
	return o
}

func (o GetAppSpecServiceRouteArrayOutput) Index(i pulumi.IntInput) GetAppSpecServiceRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecServiceRoute {
		return vs[0].([]GetAppSpecServiceRoute)[vs[1].(int)]
	}).(GetAppSpecServiceRouteOutput)
}

type GetAppSpecStaticSite struct {
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	CatchallDocument *string                   `pulumi:"catchallDocument"`
	Cors             *GetAppSpecStaticSiteCors `pulumi:"cors"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs []GetAppSpecStaticSiteEnv `pulumi:"envs"`
	// The name of the error document to use when serving this static site.
	ErrorDocument *string `pulumi:"errorDocument"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
	Git *GetAppSpecStaticSiteGit `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github *GetAppSpecStaticSiteGithub `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab *GetAppSpecStaticSiteGitlab `pulumi:"gitlab"`
	// The name of the index document to use when serving this static site.
	IndexDocument *string `pulumi:"indexDocument"`
	// The name of the component.
	Name string `pulumi:"name"`
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
	OutputDir *string                     `pulumi:"outputDir"`
	Routes    []GetAppSpecStaticSiteRoute `pulumi:"routes"`
	// An optional path to the working directory to use for the build.
	SourceDir *string `pulumi:"sourceDir"`
}

// GetAppSpecStaticSiteInput is an input type that accepts GetAppSpecStaticSiteArgs and GetAppSpecStaticSiteOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteInput` via:
//
//          GetAppSpecStaticSiteArgs{...}
type GetAppSpecStaticSiteInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteOutput() GetAppSpecStaticSiteOutput
	ToGetAppSpecStaticSiteOutputWithContext(context.Context) GetAppSpecStaticSiteOutput
}

type GetAppSpecStaticSiteArgs struct {
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
	CatchallDocument pulumi.StringPtrInput            `pulumi:"catchallDocument"`
	Cors             GetAppSpecStaticSiteCorsPtrInput `pulumi:"cors"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs GetAppSpecStaticSiteEnvArrayInput `pulumi:"envs"`
	// The name of the error document to use when serving this static site.
	ErrorDocument pulumi.StringPtrInput `pulumi:"errorDocument"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
	Git GetAppSpecStaticSiteGitPtrInput `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github GetAppSpecStaticSiteGithubPtrInput `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab GetAppSpecStaticSiteGitlabPtrInput `pulumi:"gitlab"`
	// The name of the index document to use when serving this static site.
	IndexDocument pulumi.StringPtrInput `pulumi:"indexDocument"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
	OutputDir pulumi.StringPtrInput               `pulumi:"outputDir"`
	Routes    GetAppSpecStaticSiteRouteArrayInput `pulumi:"routes"`
	// An optional path to the working directory to use for the build.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (GetAppSpecStaticSiteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSite)(nil)).Elem()
}

func (i GetAppSpecStaticSiteArgs) ToGetAppSpecStaticSiteOutput() GetAppSpecStaticSiteOutput {
	return i.ToGetAppSpecStaticSiteOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteArgs) ToGetAppSpecStaticSiteOutputWithContext(ctx context.Context) GetAppSpecStaticSiteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteOutput)
}

// GetAppSpecStaticSiteArrayInput is an input type that accepts GetAppSpecStaticSiteArray and GetAppSpecStaticSiteArrayOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteArrayInput` via:
//
//          GetAppSpecStaticSiteArray{ GetAppSpecStaticSiteArgs{...} }
type GetAppSpecStaticSiteArrayInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteArrayOutput() GetAppSpecStaticSiteArrayOutput
	ToGetAppSpecStaticSiteArrayOutputWithContext(context.Context) GetAppSpecStaticSiteArrayOutput
}

type GetAppSpecStaticSiteArray []GetAppSpecStaticSiteInput

func (GetAppSpecStaticSiteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecStaticSite)(nil)).Elem()
}

func (i GetAppSpecStaticSiteArray) ToGetAppSpecStaticSiteArrayOutput() GetAppSpecStaticSiteArrayOutput {
	return i.ToGetAppSpecStaticSiteArrayOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteArray) ToGetAppSpecStaticSiteArrayOutputWithContext(ctx context.Context) GetAppSpecStaticSiteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteArrayOutput)
}

type GetAppSpecStaticSiteOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSite)(nil)).Elem()
}

func (o GetAppSpecStaticSiteOutput) ToGetAppSpecStaticSiteOutput() GetAppSpecStaticSiteOutput {
	return o
}

func (o GetAppSpecStaticSiteOutput) ToGetAppSpecStaticSiteOutputWithContext(ctx context.Context) GetAppSpecStaticSiteOutput {
	return o
}

// An optional build command to run while building this component from source.
func (o GetAppSpecStaticSiteOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The name of the document to use as the fallback for any requests to documents that are not found when serving this static site.
func (o GetAppSpecStaticSiteOutput) CatchallDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *string { return v.CatchallDocument }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecStaticSiteOutput) Cors() GetAppSpecStaticSiteCorsPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *GetAppSpecStaticSiteCors { return v.Cors }).(GetAppSpecStaticSiteCorsPtrOutput)
}

// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
func (o GetAppSpecStaticSiteOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app.
func (o GetAppSpecStaticSiteOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// Describes an environment variable made available to an app competent.
func (o GetAppSpecStaticSiteOutput) Envs() GetAppSpecStaticSiteEnvArrayOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) []GetAppSpecStaticSiteEnv { return v.Envs }).(GetAppSpecStaticSiteEnvArrayOutput)
}

// The name of the error document to use when serving this static site.
func (o GetAppSpecStaticSiteOutput) ErrorDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *string { return v.ErrorDocument }).(pulumi.StringPtrOutput)
}

// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
func (o GetAppSpecStaticSiteOutput) Git() GetAppSpecStaticSiteGitPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *GetAppSpecStaticSiteGit { return v.Git }).(GetAppSpecStaticSiteGitPtrOutput)
}

// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecStaticSiteOutput) Github() GetAppSpecStaticSiteGithubPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *GetAppSpecStaticSiteGithub { return v.Github }).(GetAppSpecStaticSiteGithubPtrOutput)
}

// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecStaticSiteOutput) Gitlab() GetAppSpecStaticSiteGitlabPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *GetAppSpecStaticSiteGitlab { return v.Gitlab }).(GetAppSpecStaticSiteGitlabPtrOutput)
}

// The name of the index document to use when serving this static site.
func (o GetAppSpecStaticSiteOutput) IndexDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *string { return v.IndexDocument }).(pulumi.StringPtrOutput)
}

// The name of the component.
func (o GetAppSpecStaticSiteOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) string { return v.Name }).(pulumi.StringOutput)
}

// An optional path to where the built assets will be located, relative to the build context. If not set, App Platform will automatically scan for these directory names: `_static`, `dist`, `public`.
func (o GetAppSpecStaticSiteOutput) OutputDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *string { return v.OutputDir }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecStaticSiteOutput) Routes() GetAppSpecStaticSiteRouteArrayOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) []GetAppSpecStaticSiteRoute { return v.Routes }).(GetAppSpecStaticSiteRouteArrayOutput)
}

// An optional path to the working directory to use for the build.
func (o GetAppSpecStaticSiteOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSite) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecStaticSite)(nil)).Elem()
}

func (o GetAppSpecStaticSiteArrayOutput) ToGetAppSpecStaticSiteArrayOutput() GetAppSpecStaticSiteArrayOutput {
	return o
}

func (o GetAppSpecStaticSiteArrayOutput) ToGetAppSpecStaticSiteArrayOutputWithContext(ctx context.Context) GetAppSpecStaticSiteArrayOutput {
	return o
}

func (o GetAppSpecStaticSiteArrayOutput) Index(i pulumi.IntInput) GetAppSpecStaticSiteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecStaticSite {
		return vs[0].([]GetAppSpecStaticSite)[vs[1].(int)]
	}).(GetAppSpecStaticSiteOutput)
}

type GetAppSpecStaticSiteCors struct {
	AllowCredentials *bool                                 `pulumi:"allowCredentials"`
	AllowHeaders     []string                              `pulumi:"allowHeaders"`
	AllowMethods     []string                              `pulumi:"allowMethods"`
	AllowOrigins     *GetAppSpecStaticSiteCorsAllowOrigins `pulumi:"allowOrigins"`
	ExposeHeaders    []string                              `pulumi:"exposeHeaders"`
	MaxAge           *string                               `pulumi:"maxAge"`
}

// GetAppSpecStaticSiteCorsInput is an input type that accepts GetAppSpecStaticSiteCorsArgs and GetAppSpecStaticSiteCorsOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteCorsInput` via:
//
//          GetAppSpecStaticSiteCorsArgs{...}
type GetAppSpecStaticSiteCorsInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteCorsOutput() GetAppSpecStaticSiteCorsOutput
	ToGetAppSpecStaticSiteCorsOutputWithContext(context.Context) GetAppSpecStaticSiteCorsOutput
}

type GetAppSpecStaticSiteCorsArgs struct {
	AllowCredentials pulumi.BoolPtrInput                          `pulumi:"allowCredentials"`
	AllowHeaders     pulumi.StringArrayInput                      `pulumi:"allowHeaders"`
	AllowMethods     pulumi.StringArrayInput                      `pulumi:"allowMethods"`
	AllowOrigins     GetAppSpecStaticSiteCorsAllowOriginsPtrInput `pulumi:"allowOrigins"`
	ExposeHeaders    pulumi.StringArrayInput                      `pulumi:"exposeHeaders"`
	MaxAge           pulumi.StringPtrInput                        `pulumi:"maxAge"`
}

func (GetAppSpecStaticSiteCorsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteCors)(nil)).Elem()
}

func (i GetAppSpecStaticSiteCorsArgs) ToGetAppSpecStaticSiteCorsOutput() GetAppSpecStaticSiteCorsOutput {
	return i.ToGetAppSpecStaticSiteCorsOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteCorsArgs) ToGetAppSpecStaticSiteCorsOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteCorsOutput)
}

func (i GetAppSpecStaticSiteCorsArgs) ToGetAppSpecStaticSiteCorsPtrOutput() GetAppSpecStaticSiteCorsPtrOutput {
	return i.ToGetAppSpecStaticSiteCorsPtrOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteCorsArgs) ToGetAppSpecStaticSiteCorsPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteCorsOutput).ToGetAppSpecStaticSiteCorsPtrOutputWithContext(ctx)
}

// GetAppSpecStaticSiteCorsPtrInput is an input type that accepts GetAppSpecStaticSiteCorsArgs, GetAppSpecStaticSiteCorsPtr and GetAppSpecStaticSiteCorsPtrOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteCorsPtrInput` via:
//
//          GetAppSpecStaticSiteCorsArgs{...}
//
//  or:
//
//          nil
type GetAppSpecStaticSiteCorsPtrInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteCorsPtrOutput() GetAppSpecStaticSiteCorsPtrOutput
	ToGetAppSpecStaticSiteCorsPtrOutputWithContext(context.Context) GetAppSpecStaticSiteCorsPtrOutput
}

type getAppSpecStaticSiteCorsPtrType GetAppSpecStaticSiteCorsArgs

func GetAppSpecStaticSiteCorsPtr(v *GetAppSpecStaticSiteCorsArgs) GetAppSpecStaticSiteCorsPtrInput {
	return (*getAppSpecStaticSiteCorsPtrType)(v)
}

func (*getAppSpecStaticSiteCorsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteCors)(nil)).Elem()
}

func (i *getAppSpecStaticSiteCorsPtrType) ToGetAppSpecStaticSiteCorsPtrOutput() GetAppSpecStaticSiteCorsPtrOutput {
	return i.ToGetAppSpecStaticSiteCorsPtrOutputWithContext(context.Background())
}

func (i *getAppSpecStaticSiteCorsPtrType) ToGetAppSpecStaticSiteCorsPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteCorsPtrOutput)
}

type GetAppSpecStaticSiteCorsOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteCorsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteCors)(nil)).Elem()
}

func (o GetAppSpecStaticSiteCorsOutput) ToGetAppSpecStaticSiteCorsOutput() GetAppSpecStaticSiteCorsOutput {
	return o
}

func (o GetAppSpecStaticSiteCorsOutput) ToGetAppSpecStaticSiteCorsOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsOutput {
	return o
}

func (o GetAppSpecStaticSiteCorsOutput) ToGetAppSpecStaticSiteCorsPtrOutput() GetAppSpecStaticSiteCorsPtrOutput {
	return o.ToGetAppSpecStaticSiteCorsPtrOutputWithContext(context.Background())
}

func (o GetAppSpecStaticSiteCorsOutput) ToGetAppSpecStaticSiteCorsPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecStaticSiteCors) *GetAppSpecStaticSiteCors {
		return &v
	}).(GetAppSpecStaticSiteCorsPtrOutput)
}

func (o GetAppSpecStaticSiteCorsOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCors) *bool { return v.AllowCredentials }).(pulumi.BoolPtrOutput)
}

func (o GetAppSpecStaticSiteCorsOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCors) []string { return v.AllowHeaders }).(pulumi.StringArrayOutput)
}

func (o GetAppSpecStaticSiteCorsOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCors) []string { return v.AllowMethods }).(pulumi.StringArrayOutput)
}

func (o GetAppSpecStaticSiteCorsOutput) AllowOrigins() GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCors) *GetAppSpecStaticSiteCorsAllowOrigins { return v.AllowOrigins }).(GetAppSpecStaticSiteCorsAllowOriginsPtrOutput)
}

func (o GetAppSpecStaticSiteCorsOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCors) []string { return v.ExposeHeaders }).(pulumi.StringArrayOutput)
}

func (o GetAppSpecStaticSiteCorsOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCors) *string { return v.MaxAge }).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteCorsPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteCorsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteCors)(nil)).Elem()
}

func (o GetAppSpecStaticSiteCorsPtrOutput) ToGetAppSpecStaticSiteCorsPtrOutput() GetAppSpecStaticSiteCorsPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteCorsPtrOutput) ToGetAppSpecStaticSiteCorsPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteCorsPtrOutput) Elem() GetAppSpecStaticSiteCorsOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCors) GetAppSpecStaticSiteCors {
		if v != nil {
			return *v
		}
		var ret GetAppSpecStaticSiteCors
		return ret
	}).(GetAppSpecStaticSiteCorsOutput)
}

func (o GetAppSpecStaticSiteCorsPtrOutput) AllowCredentials() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCors) *bool {
		if v == nil {
			return nil
		}
		return v.AllowCredentials
	}).(pulumi.BoolPtrOutput)
}

func (o GetAppSpecStaticSiteCorsPtrOutput) AllowHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowHeaders
	}).(pulumi.StringArrayOutput)
}

func (o GetAppSpecStaticSiteCorsPtrOutput) AllowMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCors) []string {
		if v == nil {
			return nil
		}
		return v.AllowMethods
	}).(pulumi.StringArrayOutput)
}

func (o GetAppSpecStaticSiteCorsPtrOutput) AllowOrigins() GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCors) *GetAppSpecStaticSiteCorsAllowOrigins {
		if v == nil {
			return nil
		}
		return v.AllowOrigins
	}).(GetAppSpecStaticSiteCorsAllowOriginsPtrOutput)
}

func (o GetAppSpecStaticSiteCorsPtrOutput) ExposeHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCors) []string {
		if v == nil {
			return nil
		}
		return v.ExposeHeaders
	}).(pulumi.StringArrayOutput)
}

func (o GetAppSpecStaticSiteCorsPtrOutput) MaxAge() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCors) *string {
		if v == nil {
			return nil
		}
		return v.MaxAge
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteCorsAllowOrigins struct {
	Exact  *string `pulumi:"exact"`
	Prefix *string `pulumi:"prefix"`
	Regex  *string `pulumi:"regex"`
}

// GetAppSpecStaticSiteCorsAllowOriginsInput is an input type that accepts GetAppSpecStaticSiteCorsAllowOriginsArgs and GetAppSpecStaticSiteCorsAllowOriginsOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteCorsAllowOriginsInput` via:
//
//          GetAppSpecStaticSiteCorsAllowOriginsArgs{...}
type GetAppSpecStaticSiteCorsAllowOriginsInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteCorsAllowOriginsOutput() GetAppSpecStaticSiteCorsAllowOriginsOutput
	ToGetAppSpecStaticSiteCorsAllowOriginsOutputWithContext(context.Context) GetAppSpecStaticSiteCorsAllowOriginsOutput
}

type GetAppSpecStaticSiteCorsAllowOriginsArgs struct {
	Exact  pulumi.StringPtrInput `pulumi:"exact"`
	Prefix pulumi.StringPtrInput `pulumi:"prefix"`
	Regex  pulumi.StringPtrInput `pulumi:"regex"`
}

func (GetAppSpecStaticSiteCorsAllowOriginsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteCorsAllowOrigins)(nil)).Elem()
}

func (i GetAppSpecStaticSiteCorsAllowOriginsArgs) ToGetAppSpecStaticSiteCorsAllowOriginsOutput() GetAppSpecStaticSiteCorsAllowOriginsOutput {
	return i.ToGetAppSpecStaticSiteCorsAllowOriginsOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteCorsAllowOriginsArgs) ToGetAppSpecStaticSiteCorsAllowOriginsOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsAllowOriginsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteCorsAllowOriginsOutput)
}

func (i GetAppSpecStaticSiteCorsAllowOriginsArgs) ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutput() GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return i.ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteCorsAllowOriginsArgs) ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteCorsAllowOriginsOutput).ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx)
}

// GetAppSpecStaticSiteCorsAllowOriginsPtrInput is an input type that accepts GetAppSpecStaticSiteCorsAllowOriginsArgs, GetAppSpecStaticSiteCorsAllowOriginsPtr and GetAppSpecStaticSiteCorsAllowOriginsPtrOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteCorsAllowOriginsPtrInput` via:
//
//          GetAppSpecStaticSiteCorsAllowOriginsArgs{...}
//
//  or:
//
//          nil
type GetAppSpecStaticSiteCorsAllowOriginsPtrInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutput() GetAppSpecStaticSiteCorsAllowOriginsPtrOutput
	ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(context.Context) GetAppSpecStaticSiteCorsAllowOriginsPtrOutput
}

type getAppSpecStaticSiteCorsAllowOriginsPtrType GetAppSpecStaticSiteCorsAllowOriginsArgs

func GetAppSpecStaticSiteCorsAllowOriginsPtr(v *GetAppSpecStaticSiteCorsAllowOriginsArgs) GetAppSpecStaticSiteCorsAllowOriginsPtrInput {
	return (*getAppSpecStaticSiteCorsAllowOriginsPtrType)(v)
}

func (*getAppSpecStaticSiteCorsAllowOriginsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteCorsAllowOrigins)(nil)).Elem()
}

func (i *getAppSpecStaticSiteCorsAllowOriginsPtrType) ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutput() GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return i.ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (i *getAppSpecStaticSiteCorsAllowOriginsPtrType) ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteCorsAllowOriginsPtrOutput)
}

type GetAppSpecStaticSiteCorsAllowOriginsOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteCorsAllowOriginsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteCorsAllowOrigins)(nil)).Elem()
}

func (o GetAppSpecStaticSiteCorsAllowOriginsOutput) ToGetAppSpecStaticSiteCorsAllowOriginsOutput() GetAppSpecStaticSiteCorsAllowOriginsOutput {
	return o
}

func (o GetAppSpecStaticSiteCorsAllowOriginsOutput) ToGetAppSpecStaticSiteCorsAllowOriginsOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsAllowOriginsOutput {
	return o
}

func (o GetAppSpecStaticSiteCorsAllowOriginsOutput) ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutput() GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o.ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(context.Background())
}

func (o GetAppSpecStaticSiteCorsAllowOriginsOutput) ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecStaticSiteCorsAllowOrigins) *GetAppSpecStaticSiteCorsAllowOrigins {
		return &v
	}).(GetAppSpecStaticSiteCorsAllowOriginsPtrOutput)
}

func (o GetAppSpecStaticSiteCorsAllowOriginsOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCorsAllowOrigins) *string { return v.Exact }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecStaticSiteCorsAllowOriginsOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCorsAllowOrigins) *string { return v.Prefix }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecStaticSiteCorsAllowOriginsOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteCorsAllowOrigins) *string { return v.Regex }).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteCorsAllowOriginsPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteCorsAllowOriginsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteCorsAllowOrigins)(nil)).Elem()
}

func (o GetAppSpecStaticSiteCorsAllowOriginsPtrOutput) ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutput() GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteCorsAllowOriginsPtrOutput) ToGetAppSpecStaticSiteCorsAllowOriginsPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteCorsAllowOriginsPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteCorsAllowOriginsPtrOutput) Elem() GetAppSpecStaticSiteCorsAllowOriginsOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCorsAllowOrigins) GetAppSpecStaticSiteCorsAllowOrigins {
		if v != nil {
			return *v
		}
		var ret GetAppSpecStaticSiteCorsAllowOrigins
		return ret
	}).(GetAppSpecStaticSiteCorsAllowOriginsOutput)
}

func (o GetAppSpecStaticSiteCorsAllowOriginsPtrOutput) Exact() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Exact
	}).(pulumi.StringPtrOutput)
}

func (o GetAppSpecStaticSiteCorsAllowOriginsPtrOutput) Prefix() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Prefix
	}).(pulumi.StringPtrOutput)
}

func (o GetAppSpecStaticSiteCorsAllowOriginsPtrOutput) Regex() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteCorsAllowOrigins) *string {
		if v == nil {
			return nil
		}
		return v.Regex
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type string `pulumi:"type"`
	// The value of the environment variable.
	Value *string `pulumi:"value"`
}

// GetAppSpecStaticSiteEnvInput is an input type that accepts GetAppSpecStaticSiteEnvArgs and GetAppSpecStaticSiteEnvOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteEnvInput` via:
//
//          GetAppSpecStaticSiteEnvArgs{...}
type GetAppSpecStaticSiteEnvInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteEnvOutput() GetAppSpecStaticSiteEnvOutput
	ToGetAppSpecStaticSiteEnvOutputWithContext(context.Context) GetAppSpecStaticSiteEnvOutput
}

type GetAppSpecStaticSiteEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetAppSpecStaticSiteEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteEnv)(nil)).Elem()
}

func (i GetAppSpecStaticSiteEnvArgs) ToGetAppSpecStaticSiteEnvOutput() GetAppSpecStaticSiteEnvOutput {
	return i.ToGetAppSpecStaticSiteEnvOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteEnvArgs) ToGetAppSpecStaticSiteEnvOutputWithContext(ctx context.Context) GetAppSpecStaticSiteEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteEnvOutput)
}

// GetAppSpecStaticSiteEnvArrayInput is an input type that accepts GetAppSpecStaticSiteEnvArray and GetAppSpecStaticSiteEnvArrayOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteEnvArrayInput` via:
//
//          GetAppSpecStaticSiteEnvArray{ GetAppSpecStaticSiteEnvArgs{...} }
type GetAppSpecStaticSiteEnvArrayInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteEnvArrayOutput() GetAppSpecStaticSiteEnvArrayOutput
	ToGetAppSpecStaticSiteEnvArrayOutputWithContext(context.Context) GetAppSpecStaticSiteEnvArrayOutput
}

type GetAppSpecStaticSiteEnvArray []GetAppSpecStaticSiteEnvInput

func (GetAppSpecStaticSiteEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecStaticSiteEnv)(nil)).Elem()
}

func (i GetAppSpecStaticSiteEnvArray) ToGetAppSpecStaticSiteEnvArrayOutput() GetAppSpecStaticSiteEnvArrayOutput {
	return i.ToGetAppSpecStaticSiteEnvArrayOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteEnvArray) ToGetAppSpecStaticSiteEnvArrayOutputWithContext(ctx context.Context) GetAppSpecStaticSiteEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteEnvArrayOutput)
}

type GetAppSpecStaticSiteEnvOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteEnv)(nil)).Elem()
}

func (o GetAppSpecStaticSiteEnvOutput) ToGetAppSpecStaticSiteEnvOutput() GetAppSpecStaticSiteEnvOutput {
	return o
}

func (o GetAppSpecStaticSiteEnvOutput) ToGetAppSpecStaticSiteEnvOutputWithContext(ctx context.Context) GetAppSpecStaticSiteEnvOutput {
	return o
}

// The name of the environment variable.
func (o GetAppSpecStaticSiteEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o GetAppSpecStaticSiteEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o GetAppSpecStaticSiteEnvOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteEnv) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetAppSpecStaticSiteEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteEnvArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecStaticSiteEnv)(nil)).Elem()
}

func (o GetAppSpecStaticSiteEnvArrayOutput) ToGetAppSpecStaticSiteEnvArrayOutput() GetAppSpecStaticSiteEnvArrayOutput {
	return o
}

func (o GetAppSpecStaticSiteEnvArrayOutput) ToGetAppSpecStaticSiteEnvArrayOutputWithContext(ctx context.Context) GetAppSpecStaticSiteEnvArrayOutput {
	return o
}

func (o GetAppSpecStaticSiteEnvArrayOutput) Index(i pulumi.IntInput) GetAppSpecStaticSiteEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecStaticSiteEnv {
		return vs[0].([]GetAppSpecStaticSiteEnv)[vs[1].(int)]
	}).(GetAppSpecStaticSiteEnvOutput)
}

type GetAppSpecStaticSiteGit struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// GetAppSpecStaticSiteGitInput is an input type that accepts GetAppSpecStaticSiteGitArgs and GetAppSpecStaticSiteGitOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteGitInput` via:
//
//          GetAppSpecStaticSiteGitArgs{...}
type GetAppSpecStaticSiteGitInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteGitOutput() GetAppSpecStaticSiteGitOutput
	ToGetAppSpecStaticSiteGitOutputWithContext(context.Context) GetAppSpecStaticSiteGitOutput
}

type GetAppSpecStaticSiteGitArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (GetAppSpecStaticSiteGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteGit)(nil)).Elem()
}

func (i GetAppSpecStaticSiteGitArgs) ToGetAppSpecStaticSiteGitOutput() GetAppSpecStaticSiteGitOutput {
	return i.ToGetAppSpecStaticSiteGitOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteGitArgs) ToGetAppSpecStaticSiteGitOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGitOutput)
}

func (i GetAppSpecStaticSiteGitArgs) ToGetAppSpecStaticSiteGitPtrOutput() GetAppSpecStaticSiteGitPtrOutput {
	return i.ToGetAppSpecStaticSiteGitPtrOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteGitArgs) ToGetAppSpecStaticSiteGitPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGitOutput).ToGetAppSpecStaticSiteGitPtrOutputWithContext(ctx)
}

// GetAppSpecStaticSiteGitPtrInput is an input type that accepts GetAppSpecStaticSiteGitArgs, GetAppSpecStaticSiteGitPtr and GetAppSpecStaticSiteGitPtrOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteGitPtrInput` via:
//
//          GetAppSpecStaticSiteGitArgs{...}
//
//  or:
//
//          nil
type GetAppSpecStaticSiteGitPtrInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteGitPtrOutput() GetAppSpecStaticSiteGitPtrOutput
	ToGetAppSpecStaticSiteGitPtrOutputWithContext(context.Context) GetAppSpecStaticSiteGitPtrOutput
}

type getAppSpecStaticSiteGitPtrType GetAppSpecStaticSiteGitArgs

func GetAppSpecStaticSiteGitPtr(v *GetAppSpecStaticSiteGitArgs) GetAppSpecStaticSiteGitPtrInput {
	return (*getAppSpecStaticSiteGitPtrType)(v)
}

func (*getAppSpecStaticSiteGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteGit)(nil)).Elem()
}

func (i *getAppSpecStaticSiteGitPtrType) ToGetAppSpecStaticSiteGitPtrOutput() GetAppSpecStaticSiteGitPtrOutput {
	return i.ToGetAppSpecStaticSiteGitPtrOutputWithContext(context.Background())
}

func (i *getAppSpecStaticSiteGitPtrType) ToGetAppSpecStaticSiteGitPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGitPtrOutput)
}

type GetAppSpecStaticSiteGitOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteGit)(nil)).Elem()
}

func (o GetAppSpecStaticSiteGitOutput) ToGetAppSpecStaticSiteGitOutput() GetAppSpecStaticSiteGitOutput {
	return o
}

func (o GetAppSpecStaticSiteGitOutput) ToGetAppSpecStaticSiteGitOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitOutput {
	return o
}

func (o GetAppSpecStaticSiteGitOutput) ToGetAppSpecStaticSiteGitPtrOutput() GetAppSpecStaticSiteGitPtrOutput {
	return o.ToGetAppSpecStaticSiteGitPtrOutputWithContext(context.Background())
}

func (o GetAppSpecStaticSiteGitOutput) ToGetAppSpecStaticSiteGitPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecStaticSiteGit) *GetAppSpecStaticSiteGit {
		return &v
	}).(GetAppSpecStaticSiteGitPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecStaticSiteGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o GetAppSpecStaticSiteGitOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteGit) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteGitPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteGit)(nil)).Elem()
}

func (o GetAppSpecStaticSiteGitPtrOutput) ToGetAppSpecStaticSiteGitPtrOutput() GetAppSpecStaticSiteGitPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteGitPtrOutput) ToGetAppSpecStaticSiteGitPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteGitPtrOutput) Elem() GetAppSpecStaticSiteGitOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGit) GetAppSpecStaticSiteGit {
		if v != nil {
			return *v
		}
		var ret GetAppSpecStaticSiteGit
		return ret
	}).(GetAppSpecStaticSiteGitOutput)
}

// The name of the branch to use.
func (o GetAppSpecStaticSiteGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o GetAppSpecStaticSiteGitPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteGithub struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// GetAppSpecStaticSiteGithubInput is an input type that accepts GetAppSpecStaticSiteGithubArgs and GetAppSpecStaticSiteGithubOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteGithubInput` via:
//
//          GetAppSpecStaticSiteGithubArgs{...}
type GetAppSpecStaticSiteGithubInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteGithubOutput() GetAppSpecStaticSiteGithubOutput
	ToGetAppSpecStaticSiteGithubOutputWithContext(context.Context) GetAppSpecStaticSiteGithubOutput
}

type GetAppSpecStaticSiteGithubArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (GetAppSpecStaticSiteGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteGithub)(nil)).Elem()
}

func (i GetAppSpecStaticSiteGithubArgs) ToGetAppSpecStaticSiteGithubOutput() GetAppSpecStaticSiteGithubOutput {
	return i.ToGetAppSpecStaticSiteGithubOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteGithubArgs) ToGetAppSpecStaticSiteGithubOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGithubOutput)
}

func (i GetAppSpecStaticSiteGithubArgs) ToGetAppSpecStaticSiteGithubPtrOutput() GetAppSpecStaticSiteGithubPtrOutput {
	return i.ToGetAppSpecStaticSiteGithubPtrOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteGithubArgs) ToGetAppSpecStaticSiteGithubPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGithubOutput).ToGetAppSpecStaticSiteGithubPtrOutputWithContext(ctx)
}

// GetAppSpecStaticSiteGithubPtrInput is an input type that accepts GetAppSpecStaticSiteGithubArgs, GetAppSpecStaticSiteGithubPtr and GetAppSpecStaticSiteGithubPtrOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteGithubPtrInput` via:
//
//          GetAppSpecStaticSiteGithubArgs{...}
//
//  or:
//
//          nil
type GetAppSpecStaticSiteGithubPtrInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteGithubPtrOutput() GetAppSpecStaticSiteGithubPtrOutput
	ToGetAppSpecStaticSiteGithubPtrOutputWithContext(context.Context) GetAppSpecStaticSiteGithubPtrOutput
}

type getAppSpecStaticSiteGithubPtrType GetAppSpecStaticSiteGithubArgs

func GetAppSpecStaticSiteGithubPtr(v *GetAppSpecStaticSiteGithubArgs) GetAppSpecStaticSiteGithubPtrInput {
	return (*getAppSpecStaticSiteGithubPtrType)(v)
}

func (*getAppSpecStaticSiteGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteGithub)(nil)).Elem()
}

func (i *getAppSpecStaticSiteGithubPtrType) ToGetAppSpecStaticSiteGithubPtrOutput() GetAppSpecStaticSiteGithubPtrOutput {
	return i.ToGetAppSpecStaticSiteGithubPtrOutputWithContext(context.Background())
}

func (i *getAppSpecStaticSiteGithubPtrType) ToGetAppSpecStaticSiteGithubPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGithubPtrOutput)
}

type GetAppSpecStaticSiteGithubOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteGithub)(nil)).Elem()
}

func (o GetAppSpecStaticSiteGithubOutput) ToGetAppSpecStaticSiteGithubOutput() GetAppSpecStaticSiteGithubOutput {
	return o
}

func (o GetAppSpecStaticSiteGithubOutput) ToGetAppSpecStaticSiteGithubOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGithubOutput {
	return o
}

func (o GetAppSpecStaticSiteGithubOutput) ToGetAppSpecStaticSiteGithubPtrOutput() GetAppSpecStaticSiteGithubPtrOutput {
	return o.ToGetAppSpecStaticSiteGithubPtrOutputWithContext(context.Background())
}

func (o GetAppSpecStaticSiteGithubOutput) ToGetAppSpecStaticSiteGithubPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecStaticSiteGithub) *GetAppSpecStaticSiteGithub {
		return &v
	}).(GetAppSpecStaticSiteGithubPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecStaticSiteGithubOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteGithub) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecStaticSiteGithubOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteGithub) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecStaticSiteGithubOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteGithub) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteGithubPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteGithub)(nil)).Elem()
}

func (o GetAppSpecStaticSiteGithubPtrOutput) ToGetAppSpecStaticSiteGithubPtrOutput() GetAppSpecStaticSiteGithubPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteGithubPtrOutput) ToGetAppSpecStaticSiteGithubPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGithubPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteGithubPtrOutput) Elem() GetAppSpecStaticSiteGithubOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGithub) GetAppSpecStaticSiteGithub {
		if v != nil {
			return *v
		}
		var ret GetAppSpecStaticSiteGithub
		return ret
	}).(GetAppSpecStaticSiteGithubOutput)
}

// The name of the branch to use.
func (o GetAppSpecStaticSiteGithubPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGithub) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecStaticSiteGithubPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecStaticSiteGithubPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteGitlab struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// GetAppSpecStaticSiteGitlabInput is an input type that accepts GetAppSpecStaticSiteGitlabArgs and GetAppSpecStaticSiteGitlabOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteGitlabInput` via:
//
//          GetAppSpecStaticSiteGitlabArgs{...}
type GetAppSpecStaticSiteGitlabInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteGitlabOutput() GetAppSpecStaticSiteGitlabOutput
	ToGetAppSpecStaticSiteGitlabOutputWithContext(context.Context) GetAppSpecStaticSiteGitlabOutput
}

type GetAppSpecStaticSiteGitlabArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (GetAppSpecStaticSiteGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteGitlab)(nil)).Elem()
}

func (i GetAppSpecStaticSiteGitlabArgs) ToGetAppSpecStaticSiteGitlabOutput() GetAppSpecStaticSiteGitlabOutput {
	return i.ToGetAppSpecStaticSiteGitlabOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteGitlabArgs) ToGetAppSpecStaticSiteGitlabOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGitlabOutput)
}

func (i GetAppSpecStaticSiteGitlabArgs) ToGetAppSpecStaticSiteGitlabPtrOutput() GetAppSpecStaticSiteGitlabPtrOutput {
	return i.ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteGitlabArgs) ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGitlabOutput).ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(ctx)
}

// GetAppSpecStaticSiteGitlabPtrInput is an input type that accepts GetAppSpecStaticSiteGitlabArgs, GetAppSpecStaticSiteGitlabPtr and GetAppSpecStaticSiteGitlabPtrOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteGitlabPtrInput` via:
//
//          GetAppSpecStaticSiteGitlabArgs{...}
//
//  or:
//
//          nil
type GetAppSpecStaticSiteGitlabPtrInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteGitlabPtrOutput() GetAppSpecStaticSiteGitlabPtrOutput
	ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(context.Context) GetAppSpecStaticSiteGitlabPtrOutput
}

type getAppSpecStaticSiteGitlabPtrType GetAppSpecStaticSiteGitlabArgs

func GetAppSpecStaticSiteGitlabPtr(v *GetAppSpecStaticSiteGitlabArgs) GetAppSpecStaticSiteGitlabPtrInput {
	return (*getAppSpecStaticSiteGitlabPtrType)(v)
}

func (*getAppSpecStaticSiteGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteGitlab)(nil)).Elem()
}

func (i *getAppSpecStaticSiteGitlabPtrType) ToGetAppSpecStaticSiteGitlabPtrOutput() GetAppSpecStaticSiteGitlabPtrOutput {
	return i.ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(context.Background())
}

func (i *getAppSpecStaticSiteGitlabPtrType) ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteGitlabPtrOutput)
}

type GetAppSpecStaticSiteGitlabOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteGitlab)(nil)).Elem()
}

func (o GetAppSpecStaticSiteGitlabOutput) ToGetAppSpecStaticSiteGitlabOutput() GetAppSpecStaticSiteGitlabOutput {
	return o
}

func (o GetAppSpecStaticSiteGitlabOutput) ToGetAppSpecStaticSiteGitlabOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitlabOutput {
	return o
}

func (o GetAppSpecStaticSiteGitlabOutput) ToGetAppSpecStaticSiteGitlabPtrOutput() GetAppSpecStaticSiteGitlabPtrOutput {
	return o.ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(context.Background())
}

func (o GetAppSpecStaticSiteGitlabOutput) ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecStaticSiteGitlab) *GetAppSpecStaticSiteGitlab {
		return &v
	}).(GetAppSpecStaticSiteGitlabPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecStaticSiteGitlabOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteGitlab) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecStaticSiteGitlabOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteGitlab) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecStaticSiteGitlabOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteGitlab) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteGitlabPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecStaticSiteGitlab)(nil)).Elem()
}

func (o GetAppSpecStaticSiteGitlabPtrOutput) ToGetAppSpecStaticSiteGitlabPtrOutput() GetAppSpecStaticSiteGitlabPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteGitlabPtrOutput) ToGetAppSpecStaticSiteGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecStaticSiteGitlabPtrOutput {
	return o
}

func (o GetAppSpecStaticSiteGitlabPtrOutput) Elem() GetAppSpecStaticSiteGitlabOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGitlab) GetAppSpecStaticSiteGitlab {
		if v != nil {
			return *v
		}
		var ret GetAppSpecStaticSiteGitlab
		return ret
	}).(GetAppSpecStaticSiteGitlabOutput)
}

// The name of the branch to use.
func (o GetAppSpecStaticSiteGitlabPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecStaticSiteGitlabPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecStaticSiteGitlabPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecStaticSiteGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecStaticSiteRoute struct {
	// Paths must start with `/` and must be unique within the app.
	Path *string `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix *bool `pulumi:"preservePathPrefix"`
}

// GetAppSpecStaticSiteRouteInput is an input type that accepts GetAppSpecStaticSiteRouteArgs and GetAppSpecStaticSiteRouteOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteRouteInput` via:
//
//          GetAppSpecStaticSiteRouteArgs{...}
type GetAppSpecStaticSiteRouteInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteRouteOutput() GetAppSpecStaticSiteRouteOutput
	ToGetAppSpecStaticSiteRouteOutputWithContext(context.Context) GetAppSpecStaticSiteRouteOutput
}

type GetAppSpecStaticSiteRouteArgs struct {
	// Paths must start with `/` and must be unique within the app.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// An optional flag to preserve the path that is forwarded to the backend service.
	PreservePathPrefix pulumi.BoolPtrInput `pulumi:"preservePathPrefix"`
}

func (GetAppSpecStaticSiteRouteArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteRoute)(nil)).Elem()
}

func (i GetAppSpecStaticSiteRouteArgs) ToGetAppSpecStaticSiteRouteOutput() GetAppSpecStaticSiteRouteOutput {
	return i.ToGetAppSpecStaticSiteRouteOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteRouteArgs) ToGetAppSpecStaticSiteRouteOutputWithContext(ctx context.Context) GetAppSpecStaticSiteRouteOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteRouteOutput)
}

// GetAppSpecStaticSiteRouteArrayInput is an input type that accepts GetAppSpecStaticSiteRouteArray and GetAppSpecStaticSiteRouteArrayOutput values.
// You can construct a concrete instance of `GetAppSpecStaticSiteRouteArrayInput` via:
//
//          GetAppSpecStaticSiteRouteArray{ GetAppSpecStaticSiteRouteArgs{...} }
type GetAppSpecStaticSiteRouteArrayInput interface {
	pulumi.Input

	ToGetAppSpecStaticSiteRouteArrayOutput() GetAppSpecStaticSiteRouteArrayOutput
	ToGetAppSpecStaticSiteRouteArrayOutputWithContext(context.Context) GetAppSpecStaticSiteRouteArrayOutput
}

type GetAppSpecStaticSiteRouteArray []GetAppSpecStaticSiteRouteInput

func (GetAppSpecStaticSiteRouteArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecStaticSiteRoute)(nil)).Elem()
}

func (i GetAppSpecStaticSiteRouteArray) ToGetAppSpecStaticSiteRouteArrayOutput() GetAppSpecStaticSiteRouteArrayOutput {
	return i.ToGetAppSpecStaticSiteRouteArrayOutputWithContext(context.Background())
}

func (i GetAppSpecStaticSiteRouteArray) ToGetAppSpecStaticSiteRouteArrayOutputWithContext(ctx context.Context) GetAppSpecStaticSiteRouteArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecStaticSiteRouteArrayOutput)
}

type GetAppSpecStaticSiteRouteOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteRouteOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecStaticSiteRoute)(nil)).Elem()
}

func (o GetAppSpecStaticSiteRouteOutput) ToGetAppSpecStaticSiteRouteOutput() GetAppSpecStaticSiteRouteOutput {
	return o
}

func (o GetAppSpecStaticSiteRouteOutput) ToGetAppSpecStaticSiteRouteOutputWithContext(ctx context.Context) GetAppSpecStaticSiteRouteOutput {
	return o
}

// Paths must start with `/` and must be unique within the app.
func (o GetAppSpecStaticSiteRouteOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteRoute) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// An optional flag to preserve the path that is forwarded to the backend service.
func (o GetAppSpecStaticSiteRouteOutput) PreservePathPrefix() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecStaticSiteRoute) *bool { return v.PreservePathPrefix }).(pulumi.BoolPtrOutput)
}

type GetAppSpecStaticSiteRouteArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecStaticSiteRouteArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecStaticSiteRoute)(nil)).Elem()
}

func (o GetAppSpecStaticSiteRouteArrayOutput) ToGetAppSpecStaticSiteRouteArrayOutput() GetAppSpecStaticSiteRouteArrayOutput {
	return o
}

func (o GetAppSpecStaticSiteRouteArrayOutput) ToGetAppSpecStaticSiteRouteArrayOutputWithContext(ctx context.Context) GetAppSpecStaticSiteRouteArrayOutput {
	return o
}

func (o GetAppSpecStaticSiteRouteArrayOutput) Index(i pulumi.IntInput) GetAppSpecStaticSiteRouteOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecStaticSiteRoute {
		return vs[0].([]GetAppSpecStaticSiteRoute)[vs[1].(int)]
	}).(GetAppSpecStaticSiteRouteOutput)
}

type GetAppSpecWorker struct {
	Alerts []GetAppSpecWorkerAlert `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand *string `pulumi:"buildCommand"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath *string `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug *string `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs []GetAppSpecWorkerEnv `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
	Git *GetAppSpecWorkerGit `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github *GetAppSpecWorkerGithub `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab *GetAppSpecWorkerGitlab `pulumi:"gitlab"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image *GetAppSpecWorkerImage `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount *int `pulumi:"instanceCount"`
	// The instance size to use for this component.
	InstanceSizeSlug *string                          `pulumi:"instanceSizeSlug"`
	LogDestinations  []GetAppSpecWorkerLogDestination `pulumi:"logDestinations"`
	// The name of the component.
	Name string `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand *string `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir *string `pulumi:"sourceDir"`
}

// GetAppSpecWorkerInput is an input type that accepts GetAppSpecWorkerArgs and GetAppSpecWorkerOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerInput` via:
//
//          GetAppSpecWorkerArgs{...}
type GetAppSpecWorkerInput interface {
	pulumi.Input

	ToGetAppSpecWorkerOutput() GetAppSpecWorkerOutput
	ToGetAppSpecWorkerOutputWithContext(context.Context) GetAppSpecWorkerOutput
}

type GetAppSpecWorkerArgs struct {
	Alerts GetAppSpecWorkerAlertArrayInput `pulumi:"alerts"`
	// An optional build command to run while building this component from source.
	BuildCommand pulumi.StringPtrInput `pulumi:"buildCommand"`
	// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
	DockerfilePath pulumi.StringPtrInput `pulumi:"dockerfilePath"`
	// An environment slug describing the type of this app.
	EnvironmentSlug pulumi.StringPtrInput `pulumi:"environmentSlug"`
	// Describes an environment variable made available to an app competent.
	Envs GetAppSpecWorkerEnvArrayInput `pulumi:"envs"`
	// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
	Git GetAppSpecWorkerGitPtrInput `pulumi:"git"`
	// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Github GetAppSpecWorkerGithubPtrInput `pulumi:"github"`
	// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Gitlab GetAppSpecWorkerGitlabPtrInput `pulumi:"gitlab"`
	// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
	Image GetAppSpecWorkerImagePtrInput `pulumi:"image"`
	// The amount of instances that this component should be scaled to.
	InstanceCount pulumi.IntPtrInput `pulumi:"instanceCount"`
	// The instance size to use for this component.
	InstanceSizeSlug pulumi.StringPtrInput                    `pulumi:"instanceSizeSlug"`
	LogDestinations  GetAppSpecWorkerLogDestinationArrayInput `pulumi:"logDestinations"`
	// The name of the component.
	Name pulumi.StringInput `pulumi:"name"`
	// An optional run command to override the component's default.
	RunCommand pulumi.StringPtrInput `pulumi:"runCommand"`
	// An optional path to the working directory to use for the build.
	SourceDir pulumi.StringPtrInput `pulumi:"sourceDir"`
}

func (GetAppSpecWorkerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorker)(nil)).Elem()
}

func (i GetAppSpecWorkerArgs) ToGetAppSpecWorkerOutput() GetAppSpecWorkerOutput {
	return i.ToGetAppSpecWorkerOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerArgs) ToGetAppSpecWorkerOutputWithContext(ctx context.Context) GetAppSpecWorkerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerOutput)
}

// GetAppSpecWorkerArrayInput is an input type that accepts GetAppSpecWorkerArray and GetAppSpecWorkerArrayOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerArrayInput` via:
//
//          GetAppSpecWorkerArray{ GetAppSpecWorkerArgs{...} }
type GetAppSpecWorkerArrayInput interface {
	pulumi.Input

	ToGetAppSpecWorkerArrayOutput() GetAppSpecWorkerArrayOutput
	ToGetAppSpecWorkerArrayOutputWithContext(context.Context) GetAppSpecWorkerArrayOutput
}

type GetAppSpecWorkerArray []GetAppSpecWorkerInput

func (GetAppSpecWorkerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecWorker)(nil)).Elem()
}

func (i GetAppSpecWorkerArray) ToGetAppSpecWorkerArrayOutput() GetAppSpecWorkerArrayOutput {
	return i.ToGetAppSpecWorkerArrayOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerArray) ToGetAppSpecWorkerArrayOutputWithContext(ctx context.Context) GetAppSpecWorkerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerArrayOutput)
}

type GetAppSpecWorkerOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorker)(nil)).Elem()
}

func (o GetAppSpecWorkerOutput) ToGetAppSpecWorkerOutput() GetAppSpecWorkerOutput {
	return o
}

func (o GetAppSpecWorkerOutput) ToGetAppSpecWorkerOutputWithContext(ctx context.Context) GetAppSpecWorkerOutput {
	return o
}

func (o GetAppSpecWorkerOutput) Alerts() GetAppSpecWorkerAlertArrayOutput {
	return o.ApplyT(func(v GetAppSpecWorker) []GetAppSpecWorkerAlert { return v.Alerts }).(GetAppSpecWorkerAlertArrayOutput)
}

// An optional build command to run while building this component from source.
func (o GetAppSpecWorkerOutput) BuildCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *string { return v.BuildCommand }).(pulumi.StringPtrOutput)
}

// The path to a Dockerfile relative to the root of the repo. If set, overrides usage of buildpacks.
func (o GetAppSpecWorkerOutput) DockerfilePath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *string { return v.DockerfilePath }).(pulumi.StringPtrOutput)
}

// An environment slug describing the type of this app.
func (o GetAppSpecWorkerOutput) EnvironmentSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *string { return v.EnvironmentSlug }).(pulumi.StringPtrOutput)
}

// Describes an environment variable made available to an app competent.
func (o GetAppSpecWorkerOutput) Envs() GetAppSpecWorkerEnvArrayOutput {
	return o.ApplyT(func(v GetAppSpecWorker) []GetAppSpecWorkerEnv { return v.Envs }).(GetAppSpecWorkerEnvArrayOutput)
}

// A Git repo to use as the component's source. The repository must be able to be cloned without authentication.  Only one of `git`, `github` or `gitlab`  may be set.
func (o GetAppSpecWorkerOutput) Git() GetAppSpecWorkerGitPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *GetAppSpecWorkerGit { return v.Git }).(GetAppSpecWorkerGitPtrOutput)
}

// A GitHub repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/github/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecWorkerOutput) Github() GetAppSpecWorkerGithubPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *GetAppSpecWorkerGithub { return v.Github }).(GetAppSpecWorkerGithubPtrOutput)
}

// A Gitlab repo to use as the component's source. DigitalOcean App Platform must have [access to the repository](https://cloud.digitalocean.com/apps/gitlab/install). Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecWorkerOutput) Gitlab() GetAppSpecWorkerGitlabPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *GetAppSpecWorkerGitlab { return v.Gitlab }).(GetAppSpecWorkerGitlabPtrOutput)
}

// An image to use as the component's source. Only one of `git`, `github`, `gitlab`, or `image` may be set.
func (o GetAppSpecWorkerOutput) Image() GetAppSpecWorkerImagePtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *GetAppSpecWorkerImage { return v.Image }).(GetAppSpecWorkerImagePtrOutput)
}

// The amount of instances that this component should be scaled to.
func (o GetAppSpecWorkerOutput) InstanceCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *int { return v.InstanceCount }).(pulumi.IntPtrOutput)
}

// The instance size to use for this component.
func (o GetAppSpecWorkerOutput) InstanceSizeSlug() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *string { return v.InstanceSizeSlug }).(pulumi.StringPtrOutput)
}

func (o GetAppSpecWorkerOutput) LogDestinations() GetAppSpecWorkerLogDestinationArrayOutput {
	return o.ApplyT(func(v GetAppSpecWorker) []GetAppSpecWorkerLogDestination { return v.LogDestinations }).(GetAppSpecWorkerLogDestinationArrayOutput)
}

// The name of the component.
func (o GetAppSpecWorkerOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorker) string { return v.Name }).(pulumi.StringOutput)
}

// An optional run command to override the component's default.
func (o GetAppSpecWorkerOutput) RunCommand() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *string { return v.RunCommand }).(pulumi.StringPtrOutput)
}

// An optional path to the working directory to use for the build.
func (o GetAppSpecWorkerOutput) SourceDir() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorker) *string { return v.SourceDir }).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecWorker)(nil)).Elem()
}

func (o GetAppSpecWorkerArrayOutput) ToGetAppSpecWorkerArrayOutput() GetAppSpecWorkerArrayOutput {
	return o
}

func (o GetAppSpecWorkerArrayOutput) ToGetAppSpecWorkerArrayOutputWithContext(ctx context.Context) GetAppSpecWorkerArrayOutput {
	return o
}

func (o GetAppSpecWorkerArrayOutput) Index(i pulumi.IntInput) GetAppSpecWorkerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecWorker {
		return vs[0].([]GetAppSpecWorker)[vs[1].(int)]
	}).(GetAppSpecWorkerOutput)
}

type GetAppSpecWorkerAlert struct {
	Disabled *bool  `pulumi:"disabled"`
	Operator string `pulumi:"operator"`
	Rule     string `pulumi:"rule"`
	// The value of the environment variable.
	Value  float64 `pulumi:"value"`
	Window string  `pulumi:"window"`
}

// GetAppSpecWorkerAlertInput is an input type that accepts GetAppSpecWorkerAlertArgs and GetAppSpecWorkerAlertOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerAlertInput` via:
//
//          GetAppSpecWorkerAlertArgs{...}
type GetAppSpecWorkerAlertInput interface {
	pulumi.Input

	ToGetAppSpecWorkerAlertOutput() GetAppSpecWorkerAlertOutput
	ToGetAppSpecWorkerAlertOutputWithContext(context.Context) GetAppSpecWorkerAlertOutput
}

type GetAppSpecWorkerAlertArgs struct {
	Disabled pulumi.BoolPtrInput `pulumi:"disabled"`
	Operator pulumi.StringInput  `pulumi:"operator"`
	Rule     pulumi.StringInput  `pulumi:"rule"`
	// The value of the environment variable.
	Value  pulumi.Float64Input `pulumi:"value"`
	Window pulumi.StringInput  `pulumi:"window"`
}

func (GetAppSpecWorkerAlertArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerAlert)(nil)).Elem()
}

func (i GetAppSpecWorkerAlertArgs) ToGetAppSpecWorkerAlertOutput() GetAppSpecWorkerAlertOutput {
	return i.ToGetAppSpecWorkerAlertOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerAlertArgs) ToGetAppSpecWorkerAlertOutputWithContext(ctx context.Context) GetAppSpecWorkerAlertOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerAlertOutput)
}

// GetAppSpecWorkerAlertArrayInput is an input type that accepts GetAppSpecWorkerAlertArray and GetAppSpecWorkerAlertArrayOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerAlertArrayInput` via:
//
//          GetAppSpecWorkerAlertArray{ GetAppSpecWorkerAlertArgs{...} }
type GetAppSpecWorkerAlertArrayInput interface {
	pulumi.Input

	ToGetAppSpecWorkerAlertArrayOutput() GetAppSpecWorkerAlertArrayOutput
	ToGetAppSpecWorkerAlertArrayOutputWithContext(context.Context) GetAppSpecWorkerAlertArrayOutput
}

type GetAppSpecWorkerAlertArray []GetAppSpecWorkerAlertInput

func (GetAppSpecWorkerAlertArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecWorkerAlert)(nil)).Elem()
}

func (i GetAppSpecWorkerAlertArray) ToGetAppSpecWorkerAlertArrayOutput() GetAppSpecWorkerAlertArrayOutput {
	return i.ToGetAppSpecWorkerAlertArrayOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerAlertArray) ToGetAppSpecWorkerAlertArrayOutputWithContext(ctx context.Context) GetAppSpecWorkerAlertArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerAlertArrayOutput)
}

type GetAppSpecWorkerAlertOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerAlertOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerAlert)(nil)).Elem()
}

func (o GetAppSpecWorkerAlertOutput) ToGetAppSpecWorkerAlertOutput() GetAppSpecWorkerAlertOutput {
	return o
}

func (o GetAppSpecWorkerAlertOutput) ToGetAppSpecWorkerAlertOutputWithContext(ctx context.Context) GetAppSpecWorkerAlertOutput {
	return o
}

func (o GetAppSpecWorkerAlertOutput) Disabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerAlert) *bool { return v.Disabled }).(pulumi.BoolPtrOutput)
}

func (o GetAppSpecWorkerAlertOutput) Operator() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerAlert) string { return v.Operator }).(pulumi.StringOutput)
}

func (o GetAppSpecWorkerAlertOutput) Rule() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerAlert) string { return v.Rule }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetAppSpecWorkerAlertOutput) Value() pulumi.Float64Output {
	return o.ApplyT(func(v GetAppSpecWorkerAlert) float64 { return v.Value }).(pulumi.Float64Output)
}

func (o GetAppSpecWorkerAlertOutput) Window() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerAlert) string { return v.Window }).(pulumi.StringOutput)
}

type GetAppSpecWorkerAlertArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerAlertArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecWorkerAlert)(nil)).Elem()
}

func (o GetAppSpecWorkerAlertArrayOutput) ToGetAppSpecWorkerAlertArrayOutput() GetAppSpecWorkerAlertArrayOutput {
	return o
}

func (o GetAppSpecWorkerAlertArrayOutput) ToGetAppSpecWorkerAlertArrayOutputWithContext(ctx context.Context) GetAppSpecWorkerAlertArrayOutput {
	return o
}

func (o GetAppSpecWorkerAlertArrayOutput) Index(i pulumi.IntInput) GetAppSpecWorkerAlertOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecWorkerAlert {
		return vs[0].([]GetAppSpecWorkerAlert)[vs[1].(int)]
	}).(GetAppSpecWorkerAlertOutput)
}

type GetAppSpecWorkerEnv struct {
	// The name of the environment variable.
	Key *string `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope *string `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type string `pulumi:"type"`
	// The value of the environment variable.
	Value *string `pulumi:"value"`
}

// GetAppSpecWorkerEnvInput is an input type that accepts GetAppSpecWorkerEnvArgs and GetAppSpecWorkerEnvOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerEnvInput` via:
//
//          GetAppSpecWorkerEnvArgs{...}
type GetAppSpecWorkerEnvInput interface {
	pulumi.Input

	ToGetAppSpecWorkerEnvOutput() GetAppSpecWorkerEnvOutput
	ToGetAppSpecWorkerEnvOutputWithContext(context.Context) GetAppSpecWorkerEnvOutput
}

type GetAppSpecWorkerEnvArgs struct {
	// The name of the environment variable.
	Key pulumi.StringPtrInput `pulumi:"key"`
	// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// The type of the environment variable, `GENERAL` or `SECRET`.
	Type pulumi.StringInput `pulumi:"type"`
	// The value of the environment variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (GetAppSpecWorkerEnvArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerEnv)(nil)).Elem()
}

func (i GetAppSpecWorkerEnvArgs) ToGetAppSpecWorkerEnvOutput() GetAppSpecWorkerEnvOutput {
	return i.ToGetAppSpecWorkerEnvOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerEnvArgs) ToGetAppSpecWorkerEnvOutputWithContext(ctx context.Context) GetAppSpecWorkerEnvOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerEnvOutput)
}

// GetAppSpecWorkerEnvArrayInput is an input type that accepts GetAppSpecWorkerEnvArray and GetAppSpecWorkerEnvArrayOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerEnvArrayInput` via:
//
//          GetAppSpecWorkerEnvArray{ GetAppSpecWorkerEnvArgs{...} }
type GetAppSpecWorkerEnvArrayInput interface {
	pulumi.Input

	ToGetAppSpecWorkerEnvArrayOutput() GetAppSpecWorkerEnvArrayOutput
	ToGetAppSpecWorkerEnvArrayOutputWithContext(context.Context) GetAppSpecWorkerEnvArrayOutput
}

type GetAppSpecWorkerEnvArray []GetAppSpecWorkerEnvInput

func (GetAppSpecWorkerEnvArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecWorkerEnv)(nil)).Elem()
}

func (i GetAppSpecWorkerEnvArray) ToGetAppSpecWorkerEnvArrayOutput() GetAppSpecWorkerEnvArrayOutput {
	return i.ToGetAppSpecWorkerEnvArrayOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerEnvArray) ToGetAppSpecWorkerEnvArrayOutputWithContext(ctx context.Context) GetAppSpecWorkerEnvArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerEnvArrayOutput)
}

type GetAppSpecWorkerEnvOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerEnvOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerEnv)(nil)).Elem()
}

func (o GetAppSpecWorkerEnvOutput) ToGetAppSpecWorkerEnvOutput() GetAppSpecWorkerEnvOutput {
	return o
}

func (o GetAppSpecWorkerEnvOutput) ToGetAppSpecWorkerEnvOutputWithContext(ctx context.Context) GetAppSpecWorkerEnvOutput {
	return o
}

// The name of the environment variable.
func (o GetAppSpecWorkerEnvOutput) Key() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerEnv) *string { return v.Key }).(pulumi.StringPtrOutput)
}

// The visibility scope of the environment variable. One of `RUN_TIME`, `BUILD_TIME`, or `RUN_AND_BUILD_TIME` (default).
func (o GetAppSpecWorkerEnvOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerEnv) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// The type of the environment variable, `GENERAL` or `SECRET`.
func (o GetAppSpecWorkerEnvOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerEnv) string { return v.Type }).(pulumi.StringOutput)
}

// The value of the environment variable.
func (o GetAppSpecWorkerEnvOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerEnv) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerEnvArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerEnvArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecWorkerEnv)(nil)).Elem()
}

func (o GetAppSpecWorkerEnvArrayOutput) ToGetAppSpecWorkerEnvArrayOutput() GetAppSpecWorkerEnvArrayOutput {
	return o
}

func (o GetAppSpecWorkerEnvArrayOutput) ToGetAppSpecWorkerEnvArrayOutputWithContext(ctx context.Context) GetAppSpecWorkerEnvArrayOutput {
	return o
}

func (o GetAppSpecWorkerEnvArrayOutput) Index(i pulumi.IntInput) GetAppSpecWorkerEnvOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecWorkerEnv {
		return vs[0].([]GetAppSpecWorkerEnv)[vs[1].(int)]
	}).(GetAppSpecWorkerEnvOutput)
}

type GetAppSpecWorkerGit struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl *string `pulumi:"repoCloneUrl"`
}

// GetAppSpecWorkerGitInput is an input type that accepts GetAppSpecWorkerGitArgs and GetAppSpecWorkerGitOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerGitInput` via:
//
//          GetAppSpecWorkerGitArgs{...}
type GetAppSpecWorkerGitInput interface {
	pulumi.Input

	ToGetAppSpecWorkerGitOutput() GetAppSpecWorkerGitOutput
	ToGetAppSpecWorkerGitOutputWithContext(context.Context) GetAppSpecWorkerGitOutput
}

type GetAppSpecWorkerGitArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// The clone URL of the repo.
	RepoCloneUrl pulumi.StringPtrInput `pulumi:"repoCloneUrl"`
}

func (GetAppSpecWorkerGitArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerGit)(nil)).Elem()
}

func (i GetAppSpecWorkerGitArgs) ToGetAppSpecWorkerGitOutput() GetAppSpecWorkerGitOutput {
	return i.ToGetAppSpecWorkerGitOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerGitArgs) ToGetAppSpecWorkerGitOutputWithContext(ctx context.Context) GetAppSpecWorkerGitOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGitOutput)
}

func (i GetAppSpecWorkerGitArgs) ToGetAppSpecWorkerGitPtrOutput() GetAppSpecWorkerGitPtrOutput {
	return i.ToGetAppSpecWorkerGitPtrOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerGitArgs) ToGetAppSpecWorkerGitPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGitOutput).ToGetAppSpecWorkerGitPtrOutputWithContext(ctx)
}

// GetAppSpecWorkerGitPtrInput is an input type that accepts GetAppSpecWorkerGitArgs, GetAppSpecWorkerGitPtr and GetAppSpecWorkerGitPtrOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerGitPtrInput` via:
//
//          GetAppSpecWorkerGitArgs{...}
//
//  or:
//
//          nil
type GetAppSpecWorkerGitPtrInput interface {
	pulumi.Input

	ToGetAppSpecWorkerGitPtrOutput() GetAppSpecWorkerGitPtrOutput
	ToGetAppSpecWorkerGitPtrOutputWithContext(context.Context) GetAppSpecWorkerGitPtrOutput
}

type getAppSpecWorkerGitPtrType GetAppSpecWorkerGitArgs

func GetAppSpecWorkerGitPtr(v *GetAppSpecWorkerGitArgs) GetAppSpecWorkerGitPtrInput {
	return (*getAppSpecWorkerGitPtrType)(v)
}

func (*getAppSpecWorkerGitPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerGit)(nil)).Elem()
}

func (i *getAppSpecWorkerGitPtrType) ToGetAppSpecWorkerGitPtrOutput() GetAppSpecWorkerGitPtrOutput {
	return i.ToGetAppSpecWorkerGitPtrOutputWithContext(context.Background())
}

func (i *getAppSpecWorkerGitPtrType) ToGetAppSpecWorkerGitPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGitPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGitPtrOutput)
}

type GetAppSpecWorkerGitOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerGitOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerGit)(nil)).Elem()
}

func (o GetAppSpecWorkerGitOutput) ToGetAppSpecWorkerGitOutput() GetAppSpecWorkerGitOutput {
	return o
}

func (o GetAppSpecWorkerGitOutput) ToGetAppSpecWorkerGitOutputWithContext(ctx context.Context) GetAppSpecWorkerGitOutput {
	return o
}

func (o GetAppSpecWorkerGitOutput) ToGetAppSpecWorkerGitPtrOutput() GetAppSpecWorkerGitPtrOutput {
	return o.ToGetAppSpecWorkerGitPtrOutputWithContext(context.Background())
}

func (o GetAppSpecWorkerGitOutput) ToGetAppSpecWorkerGitPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGitPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecWorkerGit) *GetAppSpecWorkerGit {
		return &v
	}).(GetAppSpecWorkerGitPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecWorkerGitOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerGit) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o GetAppSpecWorkerGitOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerGit) *string { return v.RepoCloneUrl }).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerGitPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerGitPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerGit)(nil)).Elem()
}

func (o GetAppSpecWorkerGitPtrOutput) ToGetAppSpecWorkerGitPtrOutput() GetAppSpecWorkerGitPtrOutput {
	return o
}

func (o GetAppSpecWorkerGitPtrOutput) ToGetAppSpecWorkerGitPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGitPtrOutput {
	return o
}

func (o GetAppSpecWorkerGitPtrOutput) Elem() GetAppSpecWorkerGitOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGit) GetAppSpecWorkerGit {
		if v != nil {
			return *v
		}
		var ret GetAppSpecWorkerGit
		return ret
	}).(GetAppSpecWorkerGitOutput)
}

// The name of the branch to use.
func (o GetAppSpecWorkerGitPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGit) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// The clone URL of the repo.
func (o GetAppSpecWorkerGitPtrOutput) RepoCloneUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGit) *string {
		if v == nil {
			return nil
		}
		return v.RepoCloneUrl
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerGithub struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// GetAppSpecWorkerGithubInput is an input type that accepts GetAppSpecWorkerGithubArgs and GetAppSpecWorkerGithubOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerGithubInput` via:
//
//          GetAppSpecWorkerGithubArgs{...}
type GetAppSpecWorkerGithubInput interface {
	pulumi.Input

	ToGetAppSpecWorkerGithubOutput() GetAppSpecWorkerGithubOutput
	ToGetAppSpecWorkerGithubOutputWithContext(context.Context) GetAppSpecWorkerGithubOutput
}

type GetAppSpecWorkerGithubArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (GetAppSpecWorkerGithubArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerGithub)(nil)).Elem()
}

func (i GetAppSpecWorkerGithubArgs) ToGetAppSpecWorkerGithubOutput() GetAppSpecWorkerGithubOutput {
	return i.ToGetAppSpecWorkerGithubOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerGithubArgs) ToGetAppSpecWorkerGithubOutputWithContext(ctx context.Context) GetAppSpecWorkerGithubOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGithubOutput)
}

func (i GetAppSpecWorkerGithubArgs) ToGetAppSpecWorkerGithubPtrOutput() GetAppSpecWorkerGithubPtrOutput {
	return i.ToGetAppSpecWorkerGithubPtrOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerGithubArgs) ToGetAppSpecWorkerGithubPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGithubOutput).ToGetAppSpecWorkerGithubPtrOutputWithContext(ctx)
}

// GetAppSpecWorkerGithubPtrInput is an input type that accepts GetAppSpecWorkerGithubArgs, GetAppSpecWorkerGithubPtr and GetAppSpecWorkerGithubPtrOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerGithubPtrInput` via:
//
//          GetAppSpecWorkerGithubArgs{...}
//
//  or:
//
//          nil
type GetAppSpecWorkerGithubPtrInput interface {
	pulumi.Input

	ToGetAppSpecWorkerGithubPtrOutput() GetAppSpecWorkerGithubPtrOutput
	ToGetAppSpecWorkerGithubPtrOutputWithContext(context.Context) GetAppSpecWorkerGithubPtrOutput
}

type getAppSpecWorkerGithubPtrType GetAppSpecWorkerGithubArgs

func GetAppSpecWorkerGithubPtr(v *GetAppSpecWorkerGithubArgs) GetAppSpecWorkerGithubPtrInput {
	return (*getAppSpecWorkerGithubPtrType)(v)
}

func (*getAppSpecWorkerGithubPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerGithub)(nil)).Elem()
}

func (i *getAppSpecWorkerGithubPtrType) ToGetAppSpecWorkerGithubPtrOutput() GetAppSpecWorkerGithubPtrOutput {
	return i.ToGetAppSpecWorkerGithubPtrOutputWithContext(context.Background())
}

func (i *getAppSpecWorkerGithubPtrType) ToGetAppSpecWorkerGithubPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGithubPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGithubPtrOutput)
}

type GetAppSpecWorkerGithubOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerGithubOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerGithub)(nil)).Elem()
}

func (o GetAppSpecWorkerGithubOutput) ToGetAppSpecWorkerGithubOutput() GetAppSpecWorkerGithubOutput {
	return o
}

func (o GetAppSpecWorkerGithubOutput) ToGetAppSpecWorkerGithubOutputWithContext(ctx context.Context) GetAppSpecWorkerGithubOutput {
	return o
}

func (o GetAppSpecWorkerGithubOutput) ToGetAppSpecWorkerGithubPtrOutput() GetAppSpecWorkerGithubPtrOutput {
	return o.ToGetAppSpecWorkerGithubPtrOutputWithContext(context.Background())
}

func (o GetAppSpecWorkerGithubOutput) ToGetAppSpecWorkerGithubPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGithubPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecWorkerGithub) *GetAppSpecWorkerGithub {
		return &v
	}).(GetAppSpecWorkerGithubPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecWorkerGithubOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerGithub) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecWorkerGithubOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerGithub) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecWorkerGithubOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerGithub) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerGithubPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerGithubPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerGithub)(nil)).Elem()
}

func (o GetAppSpecWorkerGithubPtrOutput) ToGetAppSpecWorkerGithubPtrOutput() GetAppSpecWorkerGithubPtrOutput {
	return o
}

func (o GetAppSpecWorkerGithubPtrOutput) ToGetAppSpecWorkerGithubPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGithubPtrOutput {
	return o
}

func (o GetAppSpecWorkerGithubPtrOutput) Elem() GetAppSpecWorkerGithubOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGithub) GetAppSpecWorkerGithub {
		if v != nil {
			return *v
		}
		var ret GetAppSpecWorkerGithub
		return ret
	}).(GetAppSpecWorkerGithubOutput)
}

// The name of the branch to use.
func (o GetAppSpecWorkerGithubPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGithub) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecWorkerGithubPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGithub) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecWorkerGithubPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGithub) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerGitlab struct {
	// The name of the branch to use.
	Branch *string `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush *bool `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo *string `pulumi:"repo"`
}

// GetAppSpecWorkerGitlabInput is an input type that accepts GetAppSpecWorkerGitlabArgs and GetAppSpecWorkerGitlabOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerGitlabInput` via:
//
//          GetAppSpecWorkerGitlabArgs{...}
type GetAppSpecWorkerGitlabInput interface {
	pulumi.Input

	ToGetAppSpecWorkerGitlabOutput() GetAppSpecWorkerGitlabOutput
	ToGetAppSpecWorkerGitlabOutputWithContext(context.Context) GetAppSpecWorkerGitlabOutput
}

type GetAppSpecWorkerGitlabArgs struct {
	// The name of the branch to use.
	Branch pulumi.StringPtrInput `pulumi:"branch"`
	// Whether to automatically deploy new commits made to the repo.
	DeployOnPush pulumi.BoolPtrInput `pulumi:"deployOnPush"`
	// The name of the repo in the format `owner/repo`.
	Repo pulumi.StringPtrInput `pulumi:"repo"`
}

func (GetAppSpecWorkerGitlabArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerGitlab)(nil)).Elem()
}

func (i GetAppSpecWorkerGitlabArgs) ToGetAppSpecWorkerGitlabOutput() GetAppSpecWorkerGitlabOutput {
	return i.ToGetAppSpecWorkerGitlabOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerGitlabArgs) ToGetAppSpecWorkerGitlabOutputWithContext(ctx context.Context) GetAppSpecWorkerGitlabOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGitlabOutput)
}

func (i GetAppSpecWorkerGitlabArgs) ToGetAppSpecWorkerGitlabPtrOutput() GetAppSpecWorkerGitlabPtrOutput {
	return i.ToGetAppSpecWorkerGitlabPtrOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerGitlabArgs) ToGetAppSpecWorkerGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGitlabOutput).ToGetAppSpecWorkerGitlabPtrOutputWithContext(ctx)
}

// GetAppSpecWorkerGitlabPtrInput is an input type that accepts GetAppSpecWorkerGitlabArgs, GetAppSpecWorkerGitlabPtr and GetAppSpecWorkerGitlabPtrOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerGitlabPtrInput` via:
//
//          GetAppSpecWorkerGitlabArgs{...}
//
//  or:
//
//          nil
type GetAppSpecWorkerGitlabPtrInput interface {
	pulumi.Input

	ToGetAppSpecWorkerGitlabPtrOutput() GetAppSpecWorkerGitlabPtrOutput
	ToGetAppSpecWorkerGitlabPtrOutputWithContext(context.Context) GetAppSpecWorkerGitlabPtrOutput
}

type getAppSpecWorkerGitlabPtrType GetAppSpecWorkerGitlabArgs

func GetAppSpecWorkerGitlabPtr(v *GetAppSpecWorkerGitlabArgs) GetAppSpecWorkerGitlabPtrInput {
	return (*getAppSpecWorkerGitlabPtrType)(v)
}

func (*getAppSpecWorkerGitlabPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerGitlab)(nil)).Elem()
}

func (i *getAppSpecWorkerGitlabPtrType) ToGetAppSpecWorkerGitlabPtrOutput() GetAppSpecWorkerGitlabPtrOutput {
	return i.ToGetAppSpecWorkerGitlabPtrOutputWithContext(context.Background())
}

func (i *getAppSpecWorkerGitlabPtrType) ToGetAppSpecWorkerGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGitlabPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerGitlabPtrOutput)
}

type GetAppSpecWorkerGitlabOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerGitlabOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerGitlab)(nil)).Elem()
}

func (o GetAppSpecWorkerGitlabOutput) ToGetAppSpecWorkerGitlabOutput() GetAppSpecWorkerGitlabOutput {
	return o
}

func (o GetAppSpecWorkerGitlabOutput) ToGetAppSpecWorkerGitlabOutputWithContext(ctx context.Context) GetAppSpecWorkerGitlabOutput {
	return o
}

func (o GetAppSpecWorkerGitlabOutput) ToGetAppSpecWorkerGitlabPtrOutput() GetAppSpecWorkerGitlabPtrOutput {
	return o.ToGetAppSpecWorkerGitlabPtrOutputWithContext(context.Background())
}

func (o GetAppSpecWorkerGitlabOutput) ToGetAppSpecWorkerGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGitlabPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecWorkerGitlab) *GetAppSpecWorkerGitlab {
		return &v
	}).(GetAppSpecWorkerGitlabPtrOutput)
}

// The name of the branch to use.
func (o GetAppSpecWorkerGitlabOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerGitlab) *string { return v.Branch }).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecWorkerGitlabOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerGitlab) *bool { return v.DeployOnPush }).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecWorkerGitlabOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerGitlab) *string { return v.Repo }).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerGitlabPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerGitlabPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerGitlab)(nil)).Elem()
}

func (o GetAppSpecWorkerGitlabPtrOutput) ToGetAppSpecWorkerGitlabPtrOutput() GetAppSpecWorkerGitlabPtrOutput {
	return o
}

func (o GetAppSpecWorkerGitlabPtrOutput) ToGetAppSpecWorkerGitlabPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerGitlabPtrOutput {
	return o
}

func (o GetAppSpecWorkerGitlabPtrOutput) Elem() GetAppSpecWorkerGitlabOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGitlab) GetAppSpecWorkerGitlab {
		if v != nil {
			return *v
		}
		var ret GetAppSpecWorkerGitlab
		return ret
	}).(GetAppSpecWorkerGitlabOutput)
}

// The name of the branch to use.
func (o GetAppSpecWorkerGitlabPtrOutput) Branch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Branch
	}).(pulumi.StringPtrOutput)
}

// Whether to automatically deploy new commits made to the repo.
func (o GetAppSpecWorkerGitlabPtrOutput) DeployOnPush() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGitlab) *bool {
		if v == nil {
			return nil
		}
		return v.DeployOnPush
	}).(pulumi.BoolPtrOutput)
}

// The name of the repo in the format `owner/repo`.
func (o GetAppSpecWorkerGitlabPtrOutput) Repo() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerGitlab) *string {
		if v == nil {
			return nil
		}
		return v.Repo
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerImage struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry *string `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType string `pulumi:"registryType"`
	// The repository name.
	Repository string `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag *string `pulumi:"tag"`
}

// GetAppSpecWorkerImageInput is an input type that accepts GetAppSpecWorkerImageArgs and GetAppSpecWorkerImageOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerImageInput` via:
//
//          GetAppSpecWorkerImageArgs{...}
type GetAppSpecWorkerImageInput interface {
	pulumi.Input

	ToGetAppSpecWorkerImageOutput() GetAppSpecWorkerImageOutput
	ToGetAppSpecWorkerImageOutputWithContext(context.Context) GetAppSpecWorkerImageOutput
}

type GetAppSpecWorkerImageArgs struct {
	// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
	Registry pulumi.StringPtrInput `pulumi:"registry"`
	// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
	RegistryType pulumi.StringInput `pulumi:"registryType"`
	// The repository name.
	Repository pulumi.StringInput `pulumi:"repository"`
	// The repository tag. Defaults to `latest` if not provided.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (GetAppSpecWorkerImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerImage)(nil)).Elem()
}

func (i GetAppSpecWorkerImageArgs) ToGetAppSpecWorkerImageOutput() GetAppSpecWorkerImageOutput {
	return i.ToGetAppSpecWorkerImageOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerImageArgs) ToGetAppSpecWorkerImageOutputWithContext(ctx context.Context) GetAppSpecWorkerImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerImageOutput)
}

func (i GetAppSpecWorkerImageArgs) ToGetAppSpecWorkerImagePtrOutput() GetAppSpecWorkerImagePtrOutput {
	return i.ToGetAppSpecWorkerImagePtrOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerImageArgs) ToGetAppSpecWorkerImagePtrOutputWithContext(ctx context.Context) GetAppSpecWorkerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerImageOutput).ToGetAppSpecWorkerImagePtrOutputWithContext(ctx)
}

// GetAppSpecWorkerImagePtrInput is an input type that accepts GetAppSpecWorkerImageArgs, GetAppSpecWorkerImagePtr and GetAppSpecWorkerImagePtrOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerImagePtrInput` via:
//
//          GetAppSpecWorkerImageArgs{...}
//
//  or:
//
//          nil
type GetAppSpecWorkerImagePtrInput interface {
	pulumi.Input

	ToGetAppSpecWorkerImagePtrOutput() GetAppSpecWorkerImagePtrOutput
	ToGetAppSpecWorkerImagePtrOutputWithContext(context.Context) GetAppSpecWorkerImagePtrOutput
}

type getAppSpecWorkerImagePtrType GetAppSpecWorkerImageArgs

func GetAppSpecWorkerImagePtr(v *GetAppSpecWorkerImageArgs) GetAppSpecWorkerImagePtrInput {
	return (*getAppSpecWorkerImagePtrType)(v)
}

func (*getAppSpecWorkerImagePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerImage)(nil)).Elem()
}

func (i *getAppSpecWorkerImagePtrType) ToGetAppSpecWorkerImagePtrOutput() GetAppSpecWorkerImagePtrOutput {
	return i.ToGetAppSpecWorkerImagePtrOutputWithContext(context.Background())
}

func (i *getAppSpecWorkerImagePtrType) ToGetAppSpecWorkerImagePtrOutputWithContext(ctx context.Context) GetAppSpecWorkerImagePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerImagePtrOutput)
}

type GetAppSpecWorkerImageOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerImage)(nil)).Elem()
}

func (o GetAppSpecWorkerImageOutput) ToGetAppSpecWorkerImageOutput() GetAppSpecWorkerImageOutput {
	return o
}

func (o GetAppSpecWorkerImageOutput) ToGetAppSpecWorkerImageOutputWithContext(ctx context.Context) GetAppSpecWorkerImageOutput {
	return o
}

func (o GetAppSpecWorkerImageOutput) ToGetAppSpecWorkerImagePtrOutput() GetAppSpecWorkerImagePtrOutput {
	return o.ToGetAppSpecWorkerImagePtrOutputWithContext(context.Background())
}

func (o GetAppSpecWorkerImageOutput) ToGetAppSpecWorkerImagePtrOutputWithContext(ctx context.Context) GetAppSpecWorkerImagePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecWorkerImage) *GetAppSpecWorkerImage {
		return &v
	}).(GetAppSpecWorkerImagePtrOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o GetAppSpecWorkerImageOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerImage) *string { return v.Registry }).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o GetAppSpecWorkerImageOutput) RegistryType() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerImage) string { return v.RegistryType }).(pulumi.StringOutput)
}

// The repository name.
func (o GetAppSpecWorkerImageOutput) Repository() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerImage) string { return v.Repository }).(pulumi.StringOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o GetAppSpecWorkerImageOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerImage) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerImagePtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerImagePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerImage)(nil)).Elem()
}

func (o GetAppSpecWorkerImagePtrOutput) ToGetAppSpecWorkerImagePtrOutput() GetAppSpecWorkerImagePtrOutput {
	return o
}

func (o GetAppSpecWorkerImagePtrOutput) ToGetAppSpecWorkerImagePtrOutputWithContext(ctx context.Context) GetAppSpecWorkerImagePtrOutput {
	return o
}

func (o GetAppSpecWorkerImagePtrOutput) Elem() GetAppSpecWorkerImageOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerImage) GetAppSpecWorkerImage {
		if v != nil {
			return *v
		}
		var ret GetAppSpecWorkerImage
		return ret
	}).(GetAppSpecWorkerImageOutput)
}

// The registry name. Must be left empty for the `DOCR` registry type. Required for the `DOCKER_HUB` registry type.
func (o GetAppSpecWorkerImagePtrOutput) Registry() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerImage) *string {
		if v == nil {
			return nil
		}
		return v.Registry
	}).(pulumi.StringPtrOutput)
}

// The registry type. One of `DOCR` (DigitalOcean container registry) or `DOCKER_HUB`.
func (o GetAppSpecWorkerImagePtrOutput) RegistryType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerImage) *string {
		if v == nil {
			return nil
		}
		return &v.RegistryType
	}).(pulumi.StringPtrOutput)
}

// The repository name.
func (o GetAppSpecWorkerImagePtrOutput) Repository() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerImage) *string {
		if v == nil {
			return nil
		}
		return &v.Repository
	}).(pulumi.StringPtrOutput)
}

// The repository tag. Defaults to `latest` if not provided.
func (o GetAppSpecWorkerImagePtrOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerImage) *string {
		if v == nil {
			return nil
		}
		return v.Tag
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerLogDestination struct {
	Datadog *GetAppSpecWorkerLogDestinationDatadog `pulumi:"datadog"`
	Logtail *GetAppSpecWorkerLogDestinationLogtail `pulumi:"logtail"`
	// The name of the component.
	Name       string                                    `pulumi:"name"`
	Papertrail *GetAppSpecWorkerLogDestinationPapertrail `pulumi:"papertrail"`
}

// GetAppSpecWorkerLogDestinationInput is an input type that accepts GetAppSpecWorkerLogDestinationArgs and GetAppSpecWorkerLogDestinationOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerLogDestinationInput` via:
//
//          GetAppSpecWorkerLogDestinationArgs{...}
type GetAppSpecWorkerLogDestinationInput interface {
	pulumi.Input

	ToGetAppSpecWorkerLogDestinationOutput() GetAppSpecWorkerLogDestinationOutput
	ToGetAppSpecWorkerLogDestinationOutputWithContext(context.Context) GetAppSpecWorkerLogDestinationOutput
}

type GetAppSpecWorkerLogDestinationArgs struct {
	Datadog GetAppSpecWorkerLogDestinationDatadogPtrInput `pulumi:"datadog"`
	Logtail GetAppSpecWorkerLogDestinationLogtailPtrInput `pulumi:"logtail"`
	// The name of the component.
	Name       pulumi.StringInput                               `pulumi:"name"`
	Papertrail GetAppSpecWorkerLogDestinationPapertrailPtrInput `pulumi:"papertrail"`
}

func (GetAppSpecWorkerLogDestinationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerLogDestination)(nil)).Elem()
}

func (i GetAppSpecWorkerLogDestinationArgs) ToGetAppSpecWorkerLogDestinationOutput() GetAppSpecWorkerLogDestinationOutput {
	return i.ToGetAppSpecWorkerLogDestinationOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerLogDestinationArgs) ToGetAppSpecWorkerLogDestinationOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationOutput)
}

// GetAppSpecWorkerLogDestinationArrayInput is an input type that accepts GetAppSpecWorkerLogDestinationArray and GetAppSpecWorkerLogDestinationArrayOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerLogDestinationArrayInput` via:
//
//          GetAppSpecWorkerLogDestinationArray{ GetAppSpecWorkerLogDestinationArgs{...} }
type GetAppSpecWorkerLogDestinationArrayInput interface {
	pulumi.Input

	ToGetAppSpecWorkerLogDestinationArrayOutput() GetAppSpecWorkerLogDestinationArrayOutput
	ToGetAppSpecWorkerLogDestinationArrayOutputWithContext(context.Context) GetAppSpecWorkerLogDestinationArrayOutput
}

type GetAppSpecWorkerLogDestinationArray []GetAppSpecWorkerLogDestinationInput

func (GetAppSpecWorkerLogDestinationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecWorkerLogDestination)(nil)).Elem()
}

func (i GetAppSpecWorkerLogDestinationArray) ToGetAppSpecWorkerLogDestinationArrayOutput() GetAppSpecWorkerLogDestinationArrayOutput {
	return i.ToGetAppSpecWorkerLogDestinationArrayOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerLogDestinationArray) ToGetAppSpecWorkerLogDestinationArrayOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationArrayOutput)
}

type GetAppSpecWorkerLogDestinationOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerLogDestinationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerLogDestination)(nil)).Elem()
}

func (o GetAppSpecWorkerLogDestinationOutput) ToGetAppSpecWorkerLogDestinationOutput() GetAppSpecWorkerLogDestinationOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationOutput) ToGetAppSpecWorkerLogDestinationOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationOutput) Datadog() GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerLogDestination) *GetAppSpecWorkerLogDestinationDatadog { return v.Datadog }).(GetAppSpecWorkerLogDestinationDatadogPtrOutput)
}

func (o GetAppSpecWorkerLogDestinationOutput) Logtail() GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerLogDestination) *GetAppSpecWorkerLogDestinationLogtail { return v.Logtail }).(GetAppSpecWorkerLogDestinationLogtailPtrOutput)
}

// The name of the component.
func (o GetAppSpecWorkerLogDestinationOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerLogDestination) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetAppSpecWorkerLogDestinationOutput) Papertrail() GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerLogDestination) *GetAppSpecWorkerLogDestinationPapertrail { return v.Papertrail }).(GetAppSpecWorkerLogDestinationPapertrailPtrOutput)
}

type GetAppSpecWorkerLogDestinationArrayOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerLogDestinationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAppSpecWorkerLogDestination)(nil)).Elem()
}

func (o GetAppSpecWorkerLogDestinationArrayOutput) ToGetAppSpecWorkerLogDestinationArrayOutput() GetAppSpecWorkerLogDestinationArrayOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationArrayOutput) ToGetAppSpecWorkerLogDestinationArrayOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationArrayOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationArrayOutput) Index(i pulumi.IntInput) GetAppSpecWorkerLogDestinationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAppSpecWorkerLogDestination {
		return vs[0].([]GetAppSpecWorkerLogDestination)[vs[1].(int)]
	}).(GetAppSpecWorkerLogDestinationOutput)
}

type GetAppSpecWorkerLogDestinationDatadog struct {
	ApiKey   string  `pulumi:"apiKey"`
	Endpoint *string `pulumi:"endpoint"`
}

// GetAppSpecWorkerLogDestinationDatadogInput is an input type that accepts GetAppSpecWorkerLogDestinationDatadogArgs and GetAppSpecWorkerLogDestinationDatadogOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerLogDestinationDatadogInput` via:
//
//          GetAppSpecWorkerLogDestinationDatadogArgs{...}
type GetAppSpecWorkerLogDestinationDatadogInput interface {
	pulumi.Input

	ToGetAppSpecWorkerLogDestinationDatadogOutput() GetAppSpecWorkerLogDestinationDatadogOutput
	ToGetAppSpecWorkerLogDestinationDatadogOutputWithContext(context.Context) GetAppSpecWorkerLogDestinationDatadogOutput
}

type GetAppSpecWorkerLogDestinationDatadogArgs struct {
	ApiKey   pulumi.StringInput    `pulumi:"apiKey"`
	Endpoint pulumi.StringPtrInput `pulumi:"endpoint"`
}

func (GetAppSpecWorkerLogDestinationDatadogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerLogDestinationDatadog)(nil)).Elem()
}

func (i GetAppSpecWorkerLogDestinationDatadogArgs) ToGetAppSpecWorkerLogDestinationDatadogOutput() GetAppSpecWorkerLogDestinationDatadogOutput {
	return i.ToGetAppSpecWorkerLogDestinationDatadogOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerLogDestinationDatadogArgs) ToGetAppSpecWorkerLogDestinationDatadogOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationDatadogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationDatadogOutput)
}

func (i GetAppSpecWorkerLogDestinationDatadogArgs) ToGetAppSpecWorkerLogDestinationDatadogPtrOutput() GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return i.ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerLogDestinationDatadogArgs) ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationDatadogOutput).ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx)
}

// GetAppSpecWorkerLogDestinationDatadogPtrInput is an input type that accepts GetAppSpecWorkerLogDestinationDatadogArgs, GetAppSpecWorkerLogDestinationDatadogPtr and GetAppSpecWorkerLogDestinationDatadogPtrOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerLogDestinationDatadogPtrInput` via:
//
//          GetAppSpecWorkerLogDestinationDatadogArgs{...}
//
//  or:
//
//          nil
type GetAppSpecWorkerLogDestinationDatadogPtrInput interface {
	pulumi.Input

	ToGetAppSpecWorkerLogDestinationDatadogPtrOutput() GetAppSpecWorkerLogDestinationDatadogPtrOutput
	ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(context.Context) GetAppSpecWorkerLogDestinationDatadogPtrOutput
}

type getAppSpecWorkerLogDestinationDatadogPtrType GetAppSpecWorkerLogDestinationDatadogArgs

func GetAppSpecWorkerLogDestinationDatadogPtr(v *GetAppSpecWorkerLogDestinationDatadogArgs) GetAppSpecWorkerLogDestinationDatadogPtrInput {
	return (*getAppSpecWorkerLogDestinationDatadogPtrType)(v)
}

func (*getAppSpecWorkerLogDestinationDatadogPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerLogDestinationDatadog)(nil)).Elem()
}

func (i *getAppSpecWorkerLogDestinationDatadogPtrType) ToGetAppSpecWorkerLogDestinationDatadogPtrOutput() GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return i.ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (i *getAppSpecWorkerLogDestinationDatadogPtrType) ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationDatadogPtrOutput)
}

type GetAppSpecWorkerLogDestinationDatadogOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerLogDestinationDatadogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerLogDestinationDatadog)(nil)).Elem()
}

func (o GetAppSpecWorkerLogDestinationDatadogOutput) ToGetAppSpecWorkerLogDestinationDatadogOutput() GetAppSpecWorkerLogDestinationDatadogOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationDatadogOutput) ToGetAppSpecWorkerLogDestinationDatadogOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationDatadogOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationDatadogOutput) ToGetAppSpecWorkerLogDestinationDatadogPtrOutput() GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return o.ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(context.Background())
}

func (o GetAppSpecWorkerLogDestinationDatadogOutput) ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecWorkerLogDestinationDatadog) *GetAppSpecWorkerLogDestinationDatadog {
		return &v
	}).(GetAppSpecWorkerLogDestinationDatadogPtrOutput)
}

func (o GetAppSpecWorkerLogDestinationDatadogOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerLogDestinationDatadog) string { return v.ApiKey }).(pulumi.StringOutput)
}

func (o GetAppSpecWorkerLogDestinationDatadogOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetAppSpecWorkerLogDestinationDatadog) *string { return v.Endpoint }).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerLogDestinationDatadogPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerLogDestinationDatadogPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerLogDestinationDatadog)(nil)).Elem()
}

func (o GetAppSpecWorkerLogDestinationDatadogPtrOutput) ToGetAppSpecWorkerLogDestinationDatadogPtrOutput() GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationDatadogPtrOutput) ToGetAppSpecWorkerLogDestinationDatadogPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationDatadogPtrOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationDatadogPtrOutput) Elem() GetAppSpecWorkerLogDestinationDatadogOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerLogDestinationDatadog) GetAppSpecWorkerLogDestinationDatadog {
		if v != nil {
			return *v
		}
		var ret GetAppSpecWorkerLogDestinationDatadog
		return ret
	}).(GetAppSpecWorkerLogDestinationDatadogOutput)
}

func (o GetAppSpecWorkerLogDestinationDatadogPtrOutput) ApiKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return &v.ApiKey
	}).(pulumi.StringPtrOutput)
}

func (o GetAppSpecWorkerLogDestinationDatadogPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerLogDestinationDatadog) *string {
		if v == nil {
			return nil
		}
		return v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerLogDestinationLogtail struct {
	Token string `pulumi:"token"`
}

// GetAppSpecWorkerLogDestinationLogtailInput is an input type that accepts GetAppSpecWorkerLogDestinationLogtailArgs and GetAppSpecWorkerLogDestinationLogtailOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerLogDestinationLogtailInput` via:
//
//          GetAppSpecWorkerLogDestinationLogtailArgs{...}
type GetAppSpecWorkerLogDestinationLogtailInput interface {
	pulumi.Input

	ToGetAppSpecWorkerLogDestinationLogtailOutput() GetAppSpecWorkerLogDestinationLogtailOutput
	ToGetAppSpecWorkerLogDestinationLogtailOutputWithContext(context.Context) GetAppSpecWorkerLogDestinationLogtailOutput
}

type GetAppSpecWorkerLogDestinationLogtailArgs struct {
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetAppSpecWorkerLogDestinationLogtailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerLogDestinationLogtail)(nil)).Elem()
}

func (i GetAppSpecWorkerLogDestinationLogtailArgs) ToGetAppSpecWorkerLogDestinationLogtailOutput() GetAppSpecWorkerLogDestinationLogtailOutput {
	return i.ToGetAppSpecWorkerLogDestinationLogtailOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerLogDestinationLogtailArgs) ToGetAppSpecWorkerLogDestinationLogtailOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationLogtailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationLogtailOutput)
}

func (i GetAppSpecWorkerLogDestinationLogtailArgs) ToGetAppSpecWorkerLogDestinationLogtailPtrOutput() GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return i.ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerLogDestinationLogtailArgs) ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationLogtailOutput).ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx)
}

// GetAppSpecWorkerLogDestinationLogtailPtrInput is an input type that accepts GetAppSpecWorkerLogDestinationLogtailArgs, GetAppSpecWorkerLogDestinationLogtailPtr and GetAppSpecWorkerLogDestinationLogtailPtrOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerLogDestinationLogtailPtrInput` via:
//
//          GetAppSpecWorkerLogDestinationLogtailArgs{...}
//
//  or:
//
//          nil
type GetAppSpecWorkerLogDestinationLogtailPtrInput interface {
	pulumi.Input

	ToGetAppSpecWorkerLogDestinationLogtailPtrOutput() GetAppSpecWorkerLogDestinationLogtailPtrOutput
	ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(context.Context) GetAppSpecWorkerLogDestinationLogtailPtrOutput
}

type getAppSpecWorkerLogDestinationLogtailPtrType GetAppSpecWorkerLogDestinationLogtailArgs

func GetAppSpecWorkerLogDestinationLogtailPtr(v *GetAppSpecWorkerLogDestinationLogtailArgs) GetAppSpecWorkerLogDestinationLogtailPtrInput {
	return (*getAppSpecWorkerLogDestinationLogtailPtrType)(v)
}

func (*getAppSpecWorkerLogDestinationLogtailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerLogDestinationLogtail)(nil)).Elem()
}

func (i *getAppSpecWorkerLogDestinationLogtailPtrType) ToGetAppSpecWorkerLogDestinationLogtailPtrOutput() GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return i.ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (i *getAppSpecWorkerLogDestinationLogtailPtrType) ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationLogtailPtrOutput)
}

type GetAppSpecWorkerLogDestinationLogtailOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerLogDestinationLogtailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerLogDestinationLogtail)(nil)).Elem()
}

func (o GetAppSpecWorkerLogDestinationLogtailOutput) ToGetAppSpecWorkerLogDestinationLogtailOutput() GetAppSpecWorkerLogDestinationLogtailOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationLogtailOutput) ToGetAppSpecWorkerLogDestinationLogtailOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationLogtailOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationLogtailOutput) ToGetAppSpecWorkerLogDestinationLogtailPtrOutput() GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return o.ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(context.Background())
}

func (o GetAppSpecWorkerLogDestinationLogtailOutput) ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecWorkerLogDestinationLogtail) *GetAppSpecWorkerLogDestinationLogtail {
		return &v
	}).(GetAppSpecWorkerLogDestinationLogtailPtrOutput)
}

func (o GetAppSpecWorkerLogDestinationLogtailOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerLogDestinationLogtail) string { return v.Token }).(pulumi.StringOutput)
}

type GetAppSpecWorkerLogDestinationLogtailPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerLogDestinationLogtailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerLogDestinationLogtail)(nil)).Elem()
}

func (o GetAppSpecWorkerLogDestinationLogtailPtrOutput) ToGetAppSpecWorkerLogDestinationLogtailPtrOutput() GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationLogtailPtrOutput) ToGetAppSpecWorkerLogDestinationLogtailPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationLogtailPtrOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationLogtailPtrOutput) Elem() GetAppSpecWorkerLogDestinationLogtailOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerLogDestinationLogtail) GetAppSpecWorkerLogDestinationLogtail {
		if v != nil {
			return *v
		}
		var ret GetAppSpecWorkerLogDestinationLogtail
		return ret
	}).(GetAppSpecWorkerLogDestinationLogtailOutput)
}

func (o GetAppSpecWorkerLogDestinationLogtailPtrOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerLogDestinationLogtail) *string {
		if v == nil {
			return nil
		}
		return &v.Token
	}).(pulumi.StringPtrOutput)
}

type GetAppSpecWorkerLogDestinationPapertrail struct {
	Endpoint string `pulumi:"endpoint"`
}

// GetAppSpecWorkerLogDestinationPapertrailInput is an input type that accepts GetAppSpecWorkerLogDestinationPapertrailArgs and GetAppSpecWorkerLogDestinationPapertrailOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerLogDestinationPapertrailInput` via:
//
//          GetAppSpecWorkerLogDestinationPapertrailArgs{...}
type GetAppSpecWorkerLogDestinationPapertrailInput interface {
	pulumi.Input

	ToGetAppSpecWorkerLogDestinationPapertrailOutput() GetAppSpecWorkerLogDestinationPapertrailOutput
	ToGetAppSpecWorkerLogDestinationPapertrailOutputWithContext(context.Context) GetAppSpecWorkerLogDestinationPapertrailOutput
}

type GetAppSpecWorkerLogDestinationPapertrailArgs struct {
	Endpoint pulumi.StringInput `pulumi:"endpoint"`
}

func (GetAppSpecWorkerLogDestinationPapertrailArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerLogDestinationPapertrail)(nil)).Elem()
}

func (i GetAppSpecWorkerLogDestinationPapertrailArgs) ToGetAppSpecWorkerLogDestinationPapertrailOutput() GetAppSpecWorkerLogDestinationPapertrailOutput {
	return i.ToGetAppSpecWorkerLogDestinationPapertrailOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerLogDestinationPapertrailArgs) ToGetAppSpecWorkerLogDestinationPapertrailOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationPapertrailOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationPapertrailOutput)
}

func (i GetAppSpecWorkerLogDestinationPapertrailArgs) ToGetAppSpecWorkerLogDestinationPapertrailPtrOutput() GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return i.ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i GetAppSpecWorkerLogDestinationPapertrailArgs) ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationPapertrailOutput).ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx)
}

// GetAppSpecWorkerLogDestinationPapertrailPtrInput is an input type that accepts GetAppSpecWorkerLogDestinationPapertrailArgs, GetAppSpecWorkerLogDestinationPapertrailPtr and GetAppSpecWorkerLogDestinationPapertrailPtrOutput values.
// You can construct a concrete instance of `GetAppSpecWorkerLogDestinationPapertrailPtrInput` via:
//
//          GetAppSpecWorkerLogDestinationPapertrailArgs{...}
//
//  or:
//
//          nil
type GetAppSpecWorkerLogDestinationPapertrailPtrInput interface {
	pulumi.Input

	ToGetAppSpecWorkerLogDestinationPapertrailPtrOutput() GetAppSpecWorkerLogDestinationPapertrailPtrOutput
	ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(context.Context) GetAppSpecWorkerLogDestinationPapertrailPtrOutput
}

type getAppSpecWorkerLogDestinationPapertrailPtrType GetAppSpecWorkerLogDestinationPapertrailArgs

func GetAppSpecWorkerLogDestinationPapertrailPtr(v *GetAppSpecWorkerLogDestinationPapertrailArgs) GetAppSpecWorkerLogDestinationPapertrailPtrInput {
	return (*getAppSpecWorkerLogDestinationPapertrailPtrType)(v)
}

func (*getAppSpecWorkerLogDestinationPapertrailPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerLogDestinationPapertrail)(nil)).Elem()
}

func (i *getAppSpecWorkerLogDestinationPapertrailPtrType) ToGetAppSpecWorkerLogDestinationPapertrailPtrOutput() GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return i.ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (i *getAppSpecWorkerLogDestinationPapertrailPtrType) ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAppSpecWorkerLogDestinationPapertrailPtrOutput)
}

type GetAppSpecWorkerLogDestinationPapertrailOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerLogDestinationPapertrailOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAppSpecWorkerLogDestinationPapertrail)(nil)).Elem()
}

func (o GetAppSpecWorkerLogDestinationPapertrailOutput) ToGetAppSpecWorkerLogDestinationPapertrailOutput() GetAppSpecWorkerLogDestinationPapertrailOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationPapertrailOutput) ToGetAppSpecWorkerLogDestinationPapertrailOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationPapertrailOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationPapertrailOutput) ToGetAppSpecWorkerLogDestinationPapertrailPtrOutput() GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o.ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(context.Background())
}

func (o GetAppSpecWorkerLogDestinationPapertrailOutput) ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v GetAppSpecWorkerLogDestinationPapertrail) *GetAppSpecWorkerLogDestinationPapertrail {
		return &v
	}).(GetAppSpecWorkerLogDestinationPapertrailPtrOutput)
}

func (o GetAppSpecWorkerLogDestinationPapertrailOutput) Endpoint() pulumi.StringOutput {
	return o.ApplyT(func(v GetAppSpecWorkerLogDestinationPapertrail) string { return v.Endpoint }).(pulumi.StringOutput)
}

type GetAppSpecWorkerLogDestinationPapertrailPtrOutput struct{ *pulumi.OutputState }

func (GetAppSpecWorkerLogDestinationPapertrailPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GetAppSpecWorkerLogDestinationPapertrail)(nil)).Elem()
}

func (o GetAppSpecWorkerLogDestinationPapertrailPtrOutput) ToGetAppSpecWorkerLogDestinationPapertrailPtrOutput() GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationPapertrailPtrOutput) ToGetAppSpecWorkerLogDestinationPapertrailPtrOutputWithContext(ctx context.Context) GetAppSpecWorkerLogDestinationPapertrailPtrOutput {
	return o
}

func (o GetAppSpecWorkerLogDestinationPapertrailPtrOutput) Elem() GetAppSpecWorkerLogDestinationPapertrailOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerLogDestinationPapertrail) GetAppSpecWorkerLogDestinationPapertrail {
		if v != nil {
			return *v
		}
		var ret GetAppSpecWorkerLogDestinationPapertrail
		return ret
	}).(GetAppSpecWorkerLogDestinationPapertrailOutput)
}

func (o GetAppSpecWorkerLogDestinationPapertrailPtrOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *GetAppSpecWorkerLogDestinationPapertrail) *string {
		if v == nil {
			return nil
		}
		return &v.Endpoint
	}).(pulumi.StringPtrOutput)
}

type GetDatabaseClusterMaintenanceWindow struct {
	// The day of the week on which to apply maintenance updates.
	Day string `pulumi:"day"`
	// The hour in UTC at which maintenance updates will be applied in 24 hour format.
	Hour string `pulumi:"hour"`
}

// GetDatabaseClusterMaintenanceWindowInput is an input type that accepts GetDatabaseClusterMaintenanceWindowArgs and GetDatabaseClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetDatabaseClusterMaintenanceWindowInput` via:
//
//          GetDatabaseClusterMaintenanceWindowArgs{...}
type GetDatabaseClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetDatabaseClusterMaintenanceWindowOutput() GetDatabaseClusterMaintenanceWindowOutput
	ToGetDatabaseClusterMaintenanceWindowOutputWithContext(context.Context) GetDatabaseClusterMaintenanceWindowOutput
}

type GetDatabaseClusterMaintenanceWindowArgs struct {
	// The day of the week on which to apply maintenance updates.
	Day pulumi.StringInput `pulumi:"day"`
	// The hour in UTC at which maintenance updates will be applied in 24 hour format.
	Hour pulumi.StringInput `pulumi:"hour"`
}

func (GetDatabaseClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetDatabaseClusterMaintenanceWindowArgs) ToGetDatabaseClusterMaintenanceWindowOutput() GetDatabaseClusterMaintenanceWindowOutput {
	return i.ToGetDatabaseClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetDatabaseClusterMaintenanceWindowArgs) ToGetDatabaseClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetDatabaseClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseClusterMaintenanceWindowOutput)
}

// GetDatabaseClusterMaintenanceWindowArrayInput is an input type that accepts GetDatabaseClusterMaintenanceWindowArray and GetDatabaseClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetDatabaseClusterMaintenanceWindowArrayInput` via:
//
//          GetDatabaseClusterMaintenanceWindowArray{ GetDatabaseClusterMaintenanceWindowArgs{...} }
type GetDatabaseClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetDatabaseClusterMaintenanceWindowArrayOutput() GetDatabaseClusterMaintenanceWindowArrayOutput
	ToGetDatabaseClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetDatabaseClusterMaintenanceWindowArrayOutput
}

type GetDatabaseClusterMaintenanceWindowArray []GetDatabaseClusterMaintenanceWindowInput

func (GetDatabaseClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetDatabaseClusterMaintenanceWindowArray) ToGetDatabaseClusterMaintenanceWindowArrayOutput() GetDatabaseClusterMaintenanceWindowArrayOutput {
	return i.ToGetDatabaseClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetDatabaseClusterMaintenanceWindowArray) ToGetDatabaseClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDatabaseClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseClusterMaintenanceWindowArrayOutput)
}

type GetDatabaseClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetDatabaseClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetDatabaseClusterMaintenanceWindowOutput) ToGetDatabaseClusterMaintenanceWindowOutput() GetDatabaseClusterMaintenanceWindowOutput {
	return o
}

func (o GetDatabaseClusterMaintenanceWindowOutput) ToGetDatabaseClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetDatabaseClusterMaintenanceWindowOutput {
	return o
}

// The day of the week on which to apply maintenance updates.
func (o GetDatabaseClusterMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseClusterMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// The hour in UTC at which maintenance updates will be applied in 24 hour format.
func (o GetDatabaseClusterMaintenanceWindowOutput) Hour() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseClusterMaintenanceWindow) string { return v.Hour }).(pulumi.StringOutput)
}

type GetDatabaseClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetDatabaseClusterMaintenanceWindowArrayOutput) ToGetDatabaseClusterMaintenanceWindowArrayOutput() GetDatabaseClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetDatabaseClusterMaintenanceWindowArrayOutput) ToGetDatabaseClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDatabaseClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetDatabaseClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetDatabaseClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseClusterMaintenanceWindow {
		return vs[0].([]GetDatabaseClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetDatabaseClusterMaintenanceWindowOutput)
}

type GetDomainsDomain struct {
	// (Required) The name of the domain.
	// - `ttl`-  The TTL of the domain.
	Name string `pulumi:"name"`
	Ttl  int    `pulumi:"ttl"`
	// The uniform resource name of the domain
	Urn string `pulumi:"urn"`
}

// GetDomainsDomainInput is an input type that accepts GetDomainsDomainArgs and GetDomainsDomainOutput values.
// You can construct a concrete instance of `GetDomainsDomainInput` via:
//
//          GetDomainsDomainArgs{...}
type GetDomainsDomainInput interface {
	pulumi.Input

	ToGetDomainsDomainOutput() GetDomainsDomainOutput
	ToGetDomainsDomainOutputWithContext(context.Context) GetDomainsDomainOutput
}

type GetDomainsDomainArgs struct {
	// (Required) The name of the domain.
	// - `ttl`-  The TTL of the domain.
	Name pulumi.StringInput `pulumi:"name"`
	Ttl  pulumi.IntInput    `pulumi:"ttl"`
	// The uniform resource name of the domain
	Urn pulumi.StringInput `pulumi:"urn"`
}

func (GetDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return i.ToGetDomainsDomainOutputWithContext(context.Background())
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainOutput)
}

// GetDomainsDomainArrayInput is an input type that accepts GetDomainsDomainArray and GetDomainsDomainArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainArrayInput` via:
//
//          GetDomainsDomainArray{ GetDomainsDomainArgs{...} }
type GetDomainsDomainArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput
	ToGetDomainsDomainArrayOutputWithContext(context.Context) GetDomainsDomainArrayOutput
}

type GetDomainsDomainArray []GetDomainsDomainInput

func (GetDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return i.ToGetDomainsDomainArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainArrayOutput)
}

type GetDomainsDomainOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return o
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return o
}

// (Required) The name of the domain.
// - `ttl`-  The TTL of the domain.
func (o GetDomainsDomainOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.Ttl }).(pulumi.IntOutput)
}

// The uniform resource name of the domain
func (o GetDomainsDomainOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Urn }).(pulumi.StringOutput)
}

type GetDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomain {
		return vs[0].([]GetDomainsDomain)[vs[1].(int)]
	}).(GetDomainsDomainOutput)
}

type GetDomainsFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the domains by this key. This may be one of `name`, `urn`, and `ttl`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves domains
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetDomainsFilterInput is an input type that accepts GetDomainsFilterArgs and GetDomainsFilterOutput values.
// You can construct a concrete instance of `GetDomainsFilterInput` via:
//
//          GetDomainsFilterArgs{...}
type GetDomainsFilterInput interface {
	pulumi.Input

	ToGetDomainsFilterOutput() GetDomainsFilterOutput
	ToGetDomainsFilterOutputWithContext(context.Context) GetDomainsFilterOutput
}

type GetDomainsFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the domains by this key. This may be one of `name`, `urn`, and `ttl`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves domains
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDomainsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsFilter)(nil)).Elem()
}

func (i GetDomainsFilterArgs) ToGetDomainsFilterOutput() GetDomainsFilterOutput {
	return i.ToGetDomainsFilterOutputWithContext(context.Background())
}

func (i GetDomainsFilterArgs) ToGetDomainsFilterOutputWithContext(ctx context.Context) GetDomainsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsFilterOutput)
}

// GetDomainsFilterArrayInput is an input type that accepts GetDomainsFilterArray and GetDomainsFilterArrayOutput values.
// You can construct a concrete instance of `GetDomainsFilterArrayInput` via:
//
//          GetDomainsFilterArray{ GetDomainsFilterArgs{...} }
type GetDomainsFilterArrayInput interface {
	pulumi.Input

	ToGetDomainsFilterArrayOutput() GetDomainsFilterArrayOutput
	ToGetDomainsFilterArrayOutputWithContext(context.Context) GetDomainsFilterArrayOutput
}

type GetDomainsFilterArray []GetDomainsFilterInput

func (GetDomainsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsFilter)(nil)).Elem()
}

func (i GetDomainsFilterArray) ToGetDomainsFilterArrayOutput() GetDomainsFilterArrayOutput {
	return i.ToGetDomainsFilterArrayOutputWithContext(context.Background())
}

func (i GetDomainsFilterArray) ToGetDomainsFilterArrayOutputWithContext(ctx context.Context) GetDomainsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsFilterArrayOutput)
}

type GetDomainsFilterOutput struct{ *pulumi.OutputState }

func (GetDomainsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsFilter)(nil)).Elem()
}

func (o GetDomainsFilterOutput) ToGetDomainsFilterOutput() GetDomainsFilterOutput {
	return o
}

func (o GetDomainsFilterOutput) ToGetDomainsFilterOutputWithContext(ctx context.Context) GetDomainsFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetDomainsFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDomainsFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the domains by this key. This may be one of `name`, `urn`, and `ttl`.
func (o GetDomainsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetDomainsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// A list of values to match against the `key` field. Only retrieves domains
// where the `key` field takes on one or more of the values provided here.
func (o GetDomainsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDomainsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsFilter)(nil)).Elem()
}

func (o GetDomainsFilterArrayOutput) ToGetDomainsFilterArrayOutput() GetDomainsFilterArrayOutput {
	return o
}

func (o GetDomainsFilterArrayOutput) ToGetDomainsFilterArrayOutputWithContext(ctx context.Context) GetDomainsFilterArrayOutput {
	return o
}

func (o GetDomainsFilterArrayOutput) Index(i pulumi.IntInput) GetDomainsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsFilter {
		return vs[0].([]GetDomainsFilter)[vs[1].(int)]
	}).(GetDomainsFilterOutput)
}

type GetDomainsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the domains by this key. This may be one of `name`, `urn`, and `ttl`.
	Key string `pulumi:"key"`
}

// GetDomainsSortInput is an input type that accepts GetDomainsSortArgs and GetDomainsSortOutput values.
// You can construct a concrete instance of `GetDomainsSortInput` via:
//
//          GetDomainsSortArgs{...}
type GetDomainsSortInput interface {
	pulumi.Input

	ToGetDomainsSortOutput() GetDomainsSortOutput
	ToGetDomainsSortOutputWithContext(context.Context) GetDomainsSortOutput
}

type GetDomainsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the domains by this key. This may be one of `name`, `urn`, and `ttl`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetDomainsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsSort)(nil)).Elem()
}

func (i GetDomainsSortArgs) ToGetDomainsSortOutput() GetDomainsSortOutput {
	return i.ToGetDomainsSortOutputWithContext(context.Background())
}

func (i GetDomainsSortArgs) ToGetDomainsSortOutputWithContext(ctx context.Context) GetDomainsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsSortOutput)
}

// GetDomainsSortArrayInput is an input type that accepts GetDomainsSortArray and GetDomainsSortArrayOutput values.
// You can construct a concrete instance of `GetDomainsSortArrayInput` via:
//
//          GetDomainsSortArray{ GetDomainsSortArgs{...} }
type GetDomainsSortArrayInput interface {
	pulumi.Input

	ToGetDomainsSortArrayOutput() GetDomainsSortArrayOutput
	ToGetDomainsSortArrayOutputWithContext(context.Context) GetDomainsSortArrayOutput
}

type GetDomainsSortArray []GetDomainsSortInput

func (GetDomainsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsSort)(nil)).Elem()
}

func (i GetDomainsSortArray) ToGetDomainsSortArrayOutput() GetDomainsSortArrayOutput {
	return i.ToGetDomainsSortArrayOutputWithContext(context.Background())
}

func (i GetDomainsSortArray) ToGetDomainsSortArrayOutputWithContext(ctx context.Context) GetDomainsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsSortArrayOutput)
}

type GetDomainsSortOutput struct{ *pulumi.OutputState }

func (GetDomainsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsSort)(nil)).Elem()
}

func (o GetDomainsSortOutput) ToGetDomainsSortOutput() GetDomainsSortOutput {
	return o
}

func (o GetDomainsSortOutput) ToGetDomainsSortOutputWithContext(ctx context.Context) GetDomainsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetDomainsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the domains by this key. This may be one of `name`, `urn`, and `ttl`.
func (o GetDomainsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetDomainsSortArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsSort)(nil)).Elem()
}

func (o GetDomainsSortArrayOutput) ToGetDomainsSortArrayOutput() GetDomainsSortArrayOutput {
	return o
}

func (o GetDomainsSortArrayOutput) ToGetDomainsSortArrayOutputWithContext(ctx context.Context) GetDomainsSortArrayOutput {
	return o
}

func (o GetDomainsSortArrayOutput) Index(i pulumi.IntInput) GetDomainsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsSort {
		return vs[0].([]GetDomainsSort)[vs[1].(int)]
	}).(GetDomainsSortOutput)
}

type GetDropletsDroplet struct {
	// Whether backups are enabled.
	Backups   bool   `pulumi:"backups"`
	CreatedAt string `pulumi:"createdAt"`
	// The size of the Droplet's disk in GB.
	Disk int `pulumi:"disk"`
	// The ID of the Droplet.
	Id int `pulumi:"id"`
	// The Droplet image ID or slug.
	Image string `pulumi:"image"`
	// The Droplet's public IPv4 address
	Ipv4Address string `pulumi:"ipv4Address"`
	// The Droplet's private IPv4 address
	Ipv4AddressPrivate string `pulumi:"ipv4AddressPrivate"`
	// Whether IPv6 is enabled.
	Ipv6 bool `pulumi:"ipv6"`
	// The Droplet's public IPv6 address
	Ipv6Address string `pulumi:"ipv6Address"`
	// The Droplet's private IPv6 address
	Ipv6AddressPrivate string `pulumi:"ipv6AddressPrivate"`
	// Whether the Droplet is locked.
	Locked bool `pulumi:"locked"`
	// The amount of the Droplet's memory in MB.
	Memory int `pulumi:"memory"`
	// Whether monitoring agent is installed.
	Monitoring bool   `pulumi:"monitoring"`
	Name       string `pulumi:"name"`
	// Droplet hourly price.
	PriceHourly float64 `pulumi:"priceHourly"`
	// Droplet monthly price.
	PriceMonthly float64 `pulumi:"priceMonthly"`
	// Whether private networks are enabled.
	PrivateNetworking bool `pulumi:"privateNetworking"`
	// The region the Droplet is running in.
	Region string `pulumi:"region"`
	// The unique slug that identifies the type of Droplet.
	Size string `pulumi:"size"`
	// The status of the Droplet.
	Status string `pulumi:"status"`
	// A list of the tags associated to the Droplet.
	Tags []string `pulumi:"tags"`
	// The uniform resource name of the Droplet
	Urn string `pulumi:"urn"`
	// The number of the Droplet's virtual CPUs.
	Vcpus int `pulumi:"vcpus"`
	// List of the IDs of each volumes attached to the Droplet.
	VolumeIds []string `pulumi:"volumeIds"`
	// The ID of the VPC where the Droplet is located.
	VpcUuid string `pulumi:"vpcUuid"`
}

// GetDropletsDropletInput is an input type that accepts GetDropletsDropletArgs and GetDropletsDropletOutput values.
// You can construct a concrete instance of `GetDropletsDropletInput` via:
//
//          GetDropletsDropletArgs{...}
type GetDropletsDropletInput interface {
	pulumi.Input

	ToGetDropletsDropletOutput() GetDropletsDropletOutput
	ToGetDropletsDropletOutputWithContext(context.Context) GetDropletsDropletOutput
}

type GetDropletsDropletArgs struct {
	// Whether backups are enabled.
	Backups   pulumi.BoolInput   `pulumi:"backups"`
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The size of the Droplet's disk in GB.
	Disk pulumi.IntInput `pulumi:"disk"`
	// The ID of the Droplet.
	Id pulumi.IntInput `pulumi:"id"`
	// The Droplet image ID or slug.
	Image pulumi.StringInput `pulumi:"image"`
	// The Droplet's public IPv4 address
	Ipv4Address pulumi.StringInput `pulumi:"ipv4Address"`
	// The Droplet's private IPv4 address
	Ipv4AddressPrivate pulumi.StringInput `pulumi:"ipv4AddressPrivate"`
	// Whether IPv6 is enabled.
	Ipv6 pulumi.BoolInput `pulumi:"ipv6"`
	// The Droplet's public IPv6 address
	Ipv6Address pulumi.StringInput `pulumi:"ipv6Address"`
	// The Droplet's private IPv6 address
	Ipv6AddressPrivate pulumi.StringInput `pulumi:"ipv6AddressPrivate"`
	// Whether the Droplet is locked.
	Locked pulumi.BoolInput `pulumi:"locked"`
	// The amount of the Droplet's memory in MB.
	Memory pulumi.IntInput `pulumi:"memory"`
	// Whether monitoring agent is installed.
	Monitoring pulumi.BoolInput   `pulumi:"monitoring"`
	Name       pulumi.StringInput `pulumi:"name"`
	// Droplet hourly price.
	PriceHourly pulumi.Float64Input `pulumi:"priceHourly"`
	// Droplet monthly price.
	PriceMonthly pulumi.Float64Input `pulumi:"priceMonthly"`
	// Whether private networks are enabled.
	PrivateNetworking pulumi.BoolInput `pulumi:"privateNetworking"`
	// The region the Droplet is running in.
	Region pulumi.StringInput `pulumi:"region"`
	// The unique slug that identifies the type of Droplet.
	Size pulumi.StringInput `pulumi:"size"`
	// The status of the Droplet.
	Status pulumi.StringInput `pulumi:"status"`
	// A list of the tags associated to the Droplet.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// The uniform resource name of the Droplet
	Urn pulumi.StringInput `pulumi:"urn"`
	// The number of the Droplet's virtual CPUs.
	Vcpus pulumi.IntInput `pulumi:"vcpus"`
	// List of the IDs of each volumes attached to the Droplet.
	VolumeIds pulumi.StringArrayInput `pulumi:"volumeIds"`
	// The ID of the VPC where the Droplet is located.
	VpcUuid pulumi.StringInput `pulumi:"vpcUuid"`
}

func (GetDropletsDropletArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletsDroplet)(nil)).Elem()
}

func (i GetDropletsDropletArgs) ToGetDropletsDropletOutput() GetDropletsDropletOutput {
	return i.ToGetDropletsDropletOutputWithContext(context.Background())
}

func (i GetDropletsDropletArgs) ToGetDropletsDropletOutputWithContext(ctx context.Context) GetDropletsDropletOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDropletsDropletOutput)
}

// GetDropletsDropletArrayInput is an input type that accepts GetDropletsDropletArray and GetDropletsDropletArrayOutput values.
// You can construct a concrete instance of `GetDropletsDropletArrayInput` via:
//
//          GetDropletsDropletArray{ GetDropletsDropletArgs{...} }
type GetDropletsDropletArrayInput interface {
	pulumi.Input

	ToGetDropletsDropletArrayOutput() GetDropletsDropletArrayOutput
	ToGetDropletsDropletArrayOutputWithContext(context.Context) GetDropletsDropletArrayOutput
}

type GetDropletsDropletArray []GetDropletsDropletInput

func (GetDropletsDropletArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDropletsDroplet)(nil)).Elem()
}

func (i GetDropletsDropletArray) ToGetDropletsDropletArrayOutput() GetDropletsDropletArrayOutput {
	return i.ToGetDropletsDropletArrayOutputWithContext(context.Background())
}

func (i GetDropletsDropletArray) ToGetDropletsDropletArrayOutputWithContext(ctx context.Context) GetDropletsDropletArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDropletsDropletArrayOutput)
}

type GetDropletsDropletOutput struct{ *pulumi.OutputState }

func (GetDropletsDropletOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletsDroplet)(nil)).Elem()
}

func (o GetDropletsDropletOutput) ToGetDropletsDropletOutput() GetDropletsDropletOutput {
	return o
}

func (o GetDropletsDropletOutput) ToGetDropletsDropletOutputWithContext(ctx context.Context) GetDropletsDropletOutput {
	return o
}

// Whether backups are enabled.
func (o GetDropletsDropletOutput) Backups() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDropletsDroplet) bool { return v.Backups }).(pulumi.BoolOutput)
}

func (o GetDropletsDropletOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The size of the Droplet's disk in GB.
func (o GetDropletsDropletOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetDropletsDroplet) int { return v.Disk }).(pulumi.IntOutput)
}

// The ID of the Droplet.
func (o GetDropletsDropletOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetDropletsDroplet) int { return v.Id }).(pulumi.IntOutput)
}

// The Droplet image ID or slug.
func (o GetDropletsDropletOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Image }).(pulumi.StringOutput)
}

// The Droplet's public IPv4 address
func (o GetDropletsDropletOutput) Ipv4Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Ipv4Address }).(pulumi.StringOutput)
}

// The Droplet's private IPv4 address
func (o GetDropletsDropletOutput) Ipv4AddressPrivate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Ipv4AddressPrivate }).(pulumi.StringOutput)
}

// Whether IPv6 is enabled.
func (o GetDropletsDropletOutput) Ipv6() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDropletsDroplet) bool { return v.Ipv6 }).(pulumi.BoolOutput)
}

// The Droplet's public IPv6 address
func (o GetDropletsDropletOutput) Ipv6Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Ipv6Address }).(pulumi.StringOutput)
}

// The Droplet's private IPv6 address
func (o GetDropletsDropletOutput) Ipv6AddressPrivate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Ipv6AddressPrivate }).(pulumi.StringOutput)
}

// Whether the Droplet is locked.
func (o GetDropletsDropletOutput) Locked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDropletsDroplet) bool { return v.Locked }).(pulumi.BoolOutput)
}

// The amount of the Droplet's memory in MB.
func (o GetDropletsDropletOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetDropletsDroplet) int { return v.Memory }).(pulumi.IntOutput)
}

// Whether monitoring agent is installed.
func (o GetDropletsDropletOutput) Monitoring() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDropletsDroplet) bool { return v.Monitoring }).(pulumi.BoolOutput)
}

func (o GetDropletsDropletOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Name }).(pulumi.StringOutput)
}

// Droplet hourly price.
func (o GetDropletsDropletOutput) PriceHourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetDropletsDroplet) float64 { return v.PriceHourly }).(pulumi.Float64Output)
}

// Droplet monthly price.
func (o GetDropletsDropletOutput) PriceMonthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetDropletsDroplet) float64 { return v.PriceMonthly }).(pulumi.Float64Output)
}

// Whether private networks are enabled.
func (o GetDropletsDropletOutput) PrivateNetworking() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDropletsDroplet) bool { return v.PrivateNetworking }).(pulumi.BoolOutput)
}

// The region the Droplet is running in.
func (o GetDropletsDropletOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Region }).(pulumi.StringOutput)
}

// The unique slug that identifies the type of Droplet.
func (o GetDropletsDropletOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Size }).(pulumi.StringOutput)
}

// The status of the Droplet.
func (o GetDropletsDropletOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Status }).(pulumi.StringOutput)
}

// A list of the tags associated to the Droplet.
func (o GetDropletsDropletOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDropletsDroplet) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// The uniform resource name of the Droplet
func (o GetDropletsDropletOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.Urn }).(pulumi.StringOutput)
}

// The number of the Droplet's virtual CPUs.
func (o GetDropletsDropletOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDropletsDroplet) int { return v.Vcpus }).(pulumi.IntOutput)
}

// List of the IDs of each volumes attached to the Droplet.
func (o GetDropletsDropletOutput) VolumeIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDropletsDroplet) []string { return v.VolumeIds }).(pulumi.StringArrayOutput)
}

// The ID of the VPC where the Droplet is located.
func (o GetDropletsDropletOutput) VpcUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsDroplet) string { return v.VpcUuid }).(pulumi.StringOutput)
}

type GetDropletsDropletArrayOutput struct{ *pulumi.OutputState }

func (GetDropletsDropletArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDropletsDroplet)(nil)).Elem()
}

func (o GetDropletsDropletArrayOutput) ToGetDropletsDropletArrayOutput() GetDropletsDropletArrayOutput {
	return o
}

func (o GetDropletsDropletArrayOutput) ToGetDropletsDropletArrayOutputWithContext(ctx context.Context) GetDropletsDropletArrayOutput {
	return o
}

func (o GetDropletsDropletArrayOutput) Index(i pulumi.IntInput) GetDropletsDropletOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDropletsDroplet {
		return vs[0].([]GetDropletsDroplet)[vs[1].(int)]
	}).(GetDropletsDropletOutput)
}

type GetDropletsFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the Droplets by this key. This may be one of `backups`, `createdAt`, `disk`, `id`,
	// `image`, `ipv4Address`, `ipv4AddressPrivate`, `ipv6`, `ipv6Address`, `ipv6AddressPrivate`, `locked`,
	// `memory`, `monitoring`, `name`, `priceHourly`, `priceMonthly`, `privateNetworking`, `region`, `size`,
	// `status`, `tags`, `urn`, `vcpus`, `volumeIds`, or `vpcUuid`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves Droplets
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetDropletsFilterInput is an input type that accepts GetDropletsFilterArgs and GetDropletsFilterOutput values.
// You can construct a concrete instance of `GetDropletsFilterInput` via:
//
//          GetDropletsFilterArgs{...}
type GetDropletsFilterInput interface {
	pulumi.Input

	ToGetDropletsFilterOutput() GetDropletsFilterOutput
	ToGetDropletsFilterOutputWithContext(context.Context) GetDropletsFilterOutput
}

type GetDropletsFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the Droplets by this key. This may be one of `backups`, `createdAt`, `disk`, `id`,
	// `image`, `ipv4Address`, `ipv4AddressPrivate`, `ipv6`, `ipv6Address`, `ipv6AddressPrivate`, `locked`,
	// `memory`, `monitoring`, `name`, `priceHourly`, `priceMonthly`, `privateNetworking`, `region`, `size`,
	// `status`, `tags`, `urn`, `vcpus`, `volumeIds`, or `vpcUuid`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves Droplets
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetDropletsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletsFilter)(nil)).Elem()
}

func (i GetDropletsFilterArgs) ToGetDropletsFilterOutput() GetDropletsFilterOutput {
	return i.ToGetDropletsFilterOutputWithContext(context.Background())
}

func (i GetDropletsFilterArgs) ToGetDropletsFilterOutputWithContext(ctx context.Context) GetDropletsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDropletsFilterOutput)
}

// GetDropletsFilterArrayInput is an input type that accepts GetDropletsFilterArray and GetDropletsFilterArrayOutput values.
// You can construct a concrete instance of `GetDropletsFilterArrayInput` via:
//
//          GetDropletsFilterArray{ GetDropletsFilterArgs{...} }
type GetDropletsFilterArrayInput interface {
	pulumi.Input

	ToGetDropletsFilterArrayOutput() GetDropletsFilterArrayOutput
	ToGetDropletsFilterArrayOutputWithContext(context.Context) GetDropletsFilterArrayOutput
}

type GetDropletsFilterArray []GetDropletsFilterInput

func (GetDropletsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDropletsFilter)(nil)).Elem()
}

func (i GetDropletsFilterArray) ToGetDropletsFilterArrayOutput() GetDropletsFilterArrayOutput {
	return i.ToGetDropletsFilterArrayOutputWithContext(context.Background())
}

func (i GetDropletsFilterArray) ToGetDropletsFilterArrayOutputWithContext(ctx context.Context) GetDropletsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDropletsFilterArrayOutput)
}

type GetDropletsFilterOutput struct{ *pulumi.OutputState }

func (GetDropletsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletsFilter)(nil)).Elem()
}

func (o GetDropletsFilterOutput) ToGetDropletsFilterOutput() GetDropletsFilterOutput {
	return o
}

func (o GetDropletsFilterOutput) ToGetDropletsFilterOutputWithContext(ctx context.Context) GetDropletsFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetDropletsFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetDropletsFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the Droplets by this key. This may be one of `backups`, `createdAt`, `disk`, `id`,
// `image`, `ipv4Address`, `ipv4AddressPrivate`, `ipv6`, `ipv6Address`, `ipv6AddressPrivate`, `locked`,
// `memory`, `monitoring`, `name`, `priceHourly`, `priceMonthly`, `privateNetworking`, `region`, `size`,
// `status`, `tags`, `urn`, `vcpus`, `volumeIds`, or `vpcUuid`.
func (o GetDropletsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetDropletsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDropletsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// A list of values to match against the `key` field. Only retrieves Droplets
// where the `key` field takes on one or more of the values provided here.
func (o GetDropletsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDropletsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetDropletsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetDropletsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDropletsFilter)(nil)).Elem()
}

func (o GetDropletsFilterArrayOutput) ToGetDropletsFilterArrayOutput() GetDropletsFilterArrayOutput {
	return o
}

func (o GetDropletsFilterArrayOutput) ToGetDropletsFilterArrayOutputWithContext(ctx context.Context) GetDropletsFilterArrayOutput {
	return o
}

func (o GetDropletsFilterArrayOutput) Index(i pulumi.IntInput) GetDropletsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDropletsFilter {
		return vs[0].([]GetDropletsFilter)[vs[1].(int)]
	}).(GetDropletsFilterOutput)
}

type GetDropletsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the Droplets by this key. This may be one of `backups`, `createdAt`, `disk`, `id`,
	// `image`, `ipv4Address`, `ipv4AddressPrivate`, `ipv6`, `ipv6Address`, `ipv6AddressPrivate`, `locked`,
	// `memory`, `monitoring`, `name`, `priceHourly`, `priceMonthly`, `privateNetworking`, `region`, `size`,
	// `status`, `urn`, `vcpus`, or `vpcUuid`.
	Key string `pulumi:"key"`
}

// GetDropletsSortInput is an input type that accepts GetDropletsSortArgs and GetDropletsSortOutput values.
// You can construct a concrete instance of `GetDropletsSortInput` via:
//
//          GetDropletsSortArgs{...}
type GetDropletsSortInput interface {
	pulumi.Input

	ToGetDropletsSortOutput() GetDropletsSortOutput
	ToGetDropletsSortOutputWithContext(context.Context) GetDropletsSortOutput
}

type GetDropletsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the Droplets by this key. This may be one of `backups`, `createdAt`, `disk`, `id`,
	// `image`, `ipv4Address`, `ipv4AddressPrivate`, `ipv6`, `ipv6Address`, `ipv6AddressPrivate`, `locked`,
	// `memory`, `monitoring`, `name`, `priceHourly`, `priceMonthly`, `privateNetworking`, `region`, `size`,
	// `status`, `urn`, `vcpus`, or `vpcUuid`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetDropletsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletsSort)(nil)).Elem()
}

func (i GetDropletsSortArgs) ToGetDropletsSortOutput() GetDropletsSortOutput {
	return i.ToGetDropletsSortOutputWithContext(context.Background())
}

func (i GetDropletsSortArgs) ToGetDropletsSortOutputWithContext(ctx context.Context) GetDropletsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDropletsSortOutput)
}

// GetDropletsSortArrayInput is an input type that accepts GetDropletsSortArray and GetDropletsSortArrayOutput values.
// You can construct a concrete instance of `GetDropletsSortArrayInput` via:
//
//          GetDropletsSortArray{ GetDropletsSortArgs{...} }
type GetDropletsSortArrayInput interface {
	pulumi.Input

	ToGetDropletsSortArrayOutput() GetDropletsSortArrayOutput
	ToGetDropletsSortArrayOutputWithContext(context.Context) GetDropletsSortArrayOutput
}

type GetDropletsSortArray []GetDropletsSortInput

func (GetDropletsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDropletsSort)(nil)).Elem()
}

func (i GetDropletsSortArray) ToGetDropletsSortArrayOutput() GetDropletsSortArrayOutput {
	return i.ToGetDropletsSortArrayOutputWithContext(context.Background())
}

func (i GetDropletsSortArray) ToGetDropletsSortArrayOutputWithContext(ctx context.Context) GetDropletsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDropletsSortArrayOutput)
}

type GetDropletsSortOutput struct{ *pulumi.OutputState }

func (GetDropletsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDropletsSort)(nil)).Elem()
}

func (o GetDropletsSortOutput) ToGetDropletsSortOutput() GetDropletsSortOutput {
	return o
}

func (o GetDropletsSortOutput) ToGetDropletsSortOutputWithContext(ctx context.Context) GetDropletsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetDropletsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDropletsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the Droplets by this key. This may be one of `backups`, `createdAt`, `disk`, `id`,
// `image`, `ipv4Address`, `ipv4AddressPrivate`, `ipv6`, `ipv6Address`, `ipv6AddressPrivate`, `locked`,
// `memory`, `monitoring`, `name`, `priceHourly`, `priceMonthly`, `privateNetworking`, `region`, `size`,
// `status`, `urn`, `vcpus`, or `vpcUuid`.
func (o GetDropletsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetDropletsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetDropletsSortArrayOutput struct{ *pulumi.OutputState }

func (GetDropletsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDropletsSort)(nil)).Elem()
}

func (o GetDropletsSortArrayOutput) ToGetDropletsSortArrayOutput() GetDropletsSortArrayOutput {
	return o
}

func (o GetDropletsSortArrayOutput) ToGetDropletsSortArrayOutputWithContext(ctx context.Context) GetDropletsSortArrayOutput {
	return o
}

func (o GetDropletsSortArrayOutput) Index(i pulumi.IntInput) GetDropletsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDropletsSort {
		return vs[0].([]GetDropletsSort)[vs[1].(int)]
	}).(GetDropletsSortOutput)
}

type GetFirewallInboundRule struct {
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange *string `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol string `pulumi:"protocol"`
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
	// inbound traffic will be accepted.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// An array containing the IDs of
	// the Droplets from which the inbound traffic will be accepted.
	SourceDropletIds    []int    `pulumi:"sourceDropletIds"`
	SourceKubernetesIds []string `pulumi:"sourceKubernetesIds"`
	// An array containing the IDs
	// of the Load Balancers from which the inbound traffic will be accepted.
	SourceLoadBalancerUids []string `pulumi:"sourceLoadBalancerUids"`
	// A set of names of Tags corresponding to group of
	// Droplets from which the inbound traffic will be accepted.
	SourceTags []string `pulumi:"sourceTags"`
}

// GetFirewallInboundRuleInput is an input type that accepts GetFirewallInboundRuleArgs and GetFirewallInboundRuleOutput values.
// You can construct a concrete instance of `GetFirewallInboundRuleInput` via:
//
//          GetFirewallInboundRuleArgs{...}
type GetFirewallInboundRuleInput interface {
	pulumi.Input

	ToGetFirewallInboundRuleOutput() GetFirewallInboundRuleOutput
	ToGetFirewallInboundRuleOutputWithContext(context.Context) GetFirewallInboundRuleOutput
}

type GetFirewallInboundRuleArgs struct {
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
	// inbound traffic will be accepted.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// An array containing the IDs of
	// the Droplets from which the inbound traffic will be accepted.
	SourceDropletIds    pulumi.IntArrayInput    `pulumi:"sourceDropletIds"`
	SourceKubernetesIds pulumi.StringArrayInput `pulumi:"sourceKubernetesIds"`
	// An array containing the IDs
	// of the Load Balancers from which the inbound traffic will be accepted.
	SourceLoadBalancerUids pulumi.StringArrayInput `pulumi:"sourceLoadBalancerUids"`
	// A set of names of Tags corresponding to group of
	// Droplets from which the inbound traffic will be accepted.
	SourceTags pulumi.StringArrayInput `pulumi:"sourceTags"`
}

func (GetFirewallInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInboundRule)(nil)).Elem()
}

func (i GetFirewallInboundRuleArgs) ToGetFirewallInboundRuleOutput() GetFirewallInboundRuleOutput {
	return i.ToGetFirewallInboundRuleOutputWithContext(context.Background())
}

func (i GetFirewallInboundRuleArgs) ToGetFirewallInboundRuleOutputWithContext(ctx context.Context) GetFirewallInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInboundRuleOutput)
}

// GetFirewallInboundRuleArrayInput is an input type that accepts GetFirewallInboundRuleArray and GetFirewallInboundRuleArrayOutput values.
// You can construct a concrete instance of `GetFirewallInboundRuleArrayInput` via:
//
//          GetFirewallInboundRuleArray{ GetFirewallInboundRuleArgs{...} }
type GetFirewallInboundRuleArrayInput interface {
	pulumi.Input

	ToGetFirewallInboundRuleArrayOutput() GetFirewallInboundRuleArrayOutput
	ToGetFirewallInboundRuleArrayOutputWithContext(context.Context) GetFirewallInboundRuleArrayOutput
}

type GetFirewallInboundRuleArray []GetFirewallInboundRuleInput

func (GetFirewallInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInboundRule)(nil)).Elem()
}

func (i GetFirewallInboundRuleArray) ToGetFirewallInboundRuleArrayOutput() GetFirewallInboundRuleArrayOutput {
	return i.ToGetFirewallInboundRuleArrayOutputWithContext(context.Background())
}

func (i GetFirewallInboundRuleArray) ToGetFirewallInboundRuleArrayOutputWithContext(ctx context.Context) GetFirewallInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallInboundRuleArrayOutput)
}

type GetFirewallInboundRuleOutput struct{ *pulumi.OutputState }

func (GetFirewallInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallInboundRule)(nil)).Elem()
}

func (o GetFirewallInboundRuleOutput) ToGetFirewallInboundRuleOutput() GetFirewallInboundRuleOutput {
	return o
}

func (o GetFirewallInboundRuleOutput) ToGetFirewallInboundRuleOutputWithContext(ctx context.Context) GetFirewallInboundRuleOutput {
	return o
}

// The ports on which traffic will be allowed
// specified as a string containing a single port, a range (e.g. "8000-9000"),
// or "1-65535" to open all ports for a protocol. Required for when protocol is
// `tcp` or `udp`.
func (o GetFirewallInboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFirewallInboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The type of traffic to be allowed.
// This may be one of "tcp", "udp", or "icmp".
func (o GetFirewallInboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallInboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// An array of strings containing the IPv4
// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
// inbound traffic will be accepted.
func (o GetFirewallInboundRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallInboundRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// An array containing the IDs of
// the Droplets from which the inbound traffic will be accepted.
func (o GetFirewallInboundRuleOutput) SourceDropletIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetFirewallInboundRule) []int { return v.SourceDropletIds }).(pulumi.IntArrayOutput)
}

func (o GetFirewallInboundRuleOutput) SourceKubernetesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallInboundRule) []string { return v.SourceKubernetesIds }).(pulumi.StringArrayOutput)
}

// An array containing the IDs
// of the Load Balancers from which the inbound traffic will be accepted.
func (o GetFirewallInboundRuleOutput) SourceLoadBalancerUids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallInboundRule) []string { return v.SourceLoadBalancerUids }).(pulumi.StringArrayOutput)
}

// A set of names of Tags corresponding to group of
// Droplets from which the inbound traffic will be accepted.
func (o GetFirewallInboundRuleOutput) SourceTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallInboundRule) []string { return v.SourceTags }).(pulumi.StringArrayOutput)
}

type GetFirewallInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallInboundRule)(nil)).Elem()
}

func (o GetFirewallInboundRuleArrayOutput) ToGetFirewallInboundRuleArrayOutput() GetFirewallInboundRuleArrayOutput {
	return o
}

func (o GetFirewallInboundRuleArrayOutput) ToGetFirewallInboundRuleArrayOutputWithContext(ctx context.Context) GetFirewallInboundRuleArrayOutput {
	return o
}

func (o GetFirewallInboundRuleArrayOutput) Index(i pulumi.IntInput) GetFirewallInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallInboundRule {
		return vs[0].([]GetFirewallInboundRule)[vs[1].(int)]
	}).(GetFirewallInboundRuleOutput)
}

type GetFirewallOutboundRule struct {
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
	// outbound traffic will be allowed.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// An array containing the IDs of
	// the Droplets to which the outbound traffic will be allowed.
	DestinationDropletIds    []int    `pulumi:"destinationDropletIds"`
	DestinationKubernetesIds []string `pulumi:"destinationKubernetesIds"`
	// An array containing the IDs
	// of the Load Balancers to which the outbound traffic will be allowed.
	DestinationLoadBalancerUids []string `pulumi:"destinationLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets to which the outbound traffic will
	// be allowed.
	// traffic.
	DestinationTags []string `pulumi:"destinationTags"`
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange *string `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol string `pulumi:"protocol"`
}

// GetFirewallOutboundRuleInput is an input type that accepts GetFirewallOutboundRuleArgs and GetFirewallOutboundRuleOutput values.
// You can construct a concrete instance of `GetFirewallOutboundRuleInput` via:
//
//          GetFirewallOutboundRuleArgs{...}
type GetFirewallOutboundRuleInput interface {
	pulumi.Input

	ToGetFirewallOutboundRuleOutput() GetFirewallOutboundRuleOutput
	ToGetFirewallOutboundRuleOutputWithContext(context.Context) GetFirewallOutboundRuleOutput
}

type GetFirewallOutboundRuleArgs struct {
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
	// outbound traffic will be allowed.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// An array containing the IDs of
	// the Droplets to which the outbound traffic will be allowed.
	DestinationDropletIds    pulumi.IntArrayInput    `pulumi:"destinationDropletIds"`
	DestinationKubernetesIds pulumi.StringArrayInput `pulumi:"destinationKubernetesIds"`
	// An array containing the IDs
	// of the Load Balancers to which the outbound traffic will be allowed.
	DestinationLoadBalancerUids pulumi.StringArrayInput `pulumi:"destinationLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets to which the outbound traffic will
	// be allowed.
	// traffic.
	DestinationTags pulumi.StringArrayInput `pulumi:"destinationTags"`
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (GetFirewallOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallOutboundRule)(nil)).Elem()
}

func (i GetFirewallOutboundRuleArgs) ToGetFirewallOutboundRuleOutput() GetFirewallOutboundRuleOutput {
	return i.ToGetFirewallOutboundRuleOutputWithContext(context.Background())
}

func (i GetFirewallOutboundRuleArgs) ToGetFirewallOutboundRuleOutputWithContext(ctx context.Context) GetFirewallOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallOutboundRuleOutput)
}

// GetFirewallOutboundRuleArrayInput is an input type that accepts GetFirewallOutboundRuleArray and GetFirewallOutboundRuleArrayOutput values.
// You can construct a concrete instance of `GetFirewallOutboundRuleArrayInput` via:
//
//          GetFirewallOutboundRuleArray{ GetFirewallOutboundRuleArgs{...} }
type GetFirewallOutboundRuleArrayInput interface {
	pulumi.Input

	ToGetFirewallOutboundRuleArrayOutput() GetFirewallOutboundRuleArrayOutput
	ToGetFirewallOutboundRuleArrayOutputWithContext(context.Context) GetFirewallOutboundRuleArrayOutput
}

type GetFirewallOutboundRuleArray []GetFirewallOutboundRuleInput

func (GetFirewallOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallOutboundRule)(nil)).Elem()
}

func (i GetFirewallOutboundRuleArray) ToGetFirewallOutboundRuleArrayOutput() GetFirewallOutboundRuleArrayOutput {
	return i.ToGetFirewallOutboundRuleArrayOutputWithContext(context.Background())
}

func (i GetFirewallOutboundRuleArray) ToGetFirewallOutboundRuleArrayOutputWithContext(ctx context.Context) GetFirewallOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallOutboundRuleArrayOutput)
}

type GetFirewallOutboundRuleOutput struct{ *pulumi.OutputState }

func (GetFirewallOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallOutboundRule)(nil)).Elem()
}

func (o GetFirewallOutboundRuleOutput) ToGetFirewallOutboundRuleOutput() GetFirewallOutboundRuleOutput {
	return o
}

func (o GetFirewallOutboundRuleOutput) ToGetFirewallOutboundRuleOutputWithContext(ctx context.Context) GetFirewallOutboundRuleOutput {
	return o
}

// An array of strings containing the IPv4
// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
// outbound traffic will be allowed.
func (o GetFirewallOutboundRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallOutboundRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// An array containing the IDs of
// the Droplets to which the outbound traffic will be allowed.
func (o GetFirewallOutboundRuleOutput) DestinationDropletIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetFirewallOutboundRule) []int { return v.DestinationDropletIds }).(pulumi.IntArrayOutput)
}

func (o GetFirewallOutboundRuleOutput) DestinationKubernetesIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallOutboundRule) []string { return v.DestinationKubernetesIds }).(pulumi.StringArrayOutput)
}

// An array containing the IDs
// of the Load Balancers to which the outbound traffic will be allowed.
func (o GetFirewallOutboundRuleOutput) DestinationLoadBalancerUids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallOutboundRule) []string { return v.DestinationLoadBalancerUids }).(pulumi.StringArrayOutput)
}

// An array containing the names of Tags
// corresponding to groups of Droplets to which the outbound traffic will
// be allowed.
// traffic.
func (o GetFirewallOutboundRuleOutput) DestinationTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFirewallOutboundRule) []string { return v.DestinationTags }).(pulumi.StringArrayOutput)
}

// The ports on which traffic will be allowed
// specified as a string containing a single port, a range (e.g. "8000-9000"),
// or "1-65535" to open all ports for a protocol. Required for when protocol is
// `tcp` or `udp`.
func (o GetFirewallOutboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFirewallOutboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The type of traffic to be allowed.
// This may be one of "tcp", "udp", or "icmp".
func (o GetFirewallOutboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetFirewallOutboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type GetFirewallOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallOutboundRule)(nil)).Elem()
}

func (o GetFirewallOutboundRuleArrayOutput) ToGetFirewallOutboundRuleArrayOutput() GetFirewallOutboundRuleArrayOutput {
	return o
}

func (o GetFirewallOutboundRuleArrayOutput) ToGetFirewallOutboundRuleArrayOutputWithContext(ctx context.Context) GetFirewallOutboundRuleArrayOutput {
	return o
}

func (o GetFirewallOutboundRuleArrayOutput) Index(i pulumi.IntInput) GetFirewallOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallOutboundRule {
		return vs[0].([]GetFirewallOutboundRule)[vs[1].(int)]
	}).(GetFirewallOutboundRuleOutput)
}

type GetFirewallPendingChange struct {
	DropletId *int  `pulumi:"dropletId"`
	Removing  *bool `pulumi:"removing"`
	// A status string indicating the current state of the Firewall.
	// This can be "waiting", "succeeded", or "failed".
	Status *string `pulumi:"status"`
}

// GetFirewallPendingChangeInput is an input type that accepts GetFirewallPendingChangeArgs and GetFirewallPendingChangeOutput values.
// You can construct a concrete instance of `GetFirewallPendingChangeInput` via:
//
//          GetFirewallPendingChangeArgs{...}
type GetFirewallPendingChangeInput interface {
	pulumi.Input

	ToGetFirewallPendingChangeOutput() GetFirewallPendingChangeOutput
	ToGetFirewallPendingChangeOutputWithContext(context.Context) GetFirewallPendingChangeOutput
}

type GetFirewallPendingChangeArgs struct {
	DropletId pulumi.IntPtrInput  `pulumi:"dropletId"`
	Removing  pulumi.BoolPtrInput `pulumi:"removing"`
	// A status string indicating the current state of the Firewall.
	// This can be "waiting", "succeeded", or "failed".
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetFirewallPendingChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPendingChange)(nil)).Elem()
}

func (i GetFirewallPendingChangeArgs) ToGetFirewallPendingChangeOutput() GetFirewallPendingChangeOutput {
	return i.ToGetFirewallPendingChangeOutputWithContext(context.Background())
}

func (i GetFirewallPendingChangeArgs) ToGetFirewallPendingChangeOutputWithContext(ctx context.Context) GetFirewallPendingChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPendingChangeOutput)
}

// GetFirewallPendingChangeArrayInput is an input type that accepts GetFirewallPendingChangeArray and GetFirewallPendingChangeArrayOutput values.
// You can construct a concrete instance of `GetFirewallPendingChangeArrayInput` via:
//
//          GetFirewallPendingChangeArray{ GetFirewallPendingChangeArgs{...} }
type GetFirewallPendingChangeArrayInput interface {
	pulumi.Input

	ToGetFirewallPendingChangeArrayOutput() GetFirewallPendingChangeArrayOutput
	ToGetFirewallPendingChangeArrayOutputWithContext(context.Context) GetFirewallPendingChangeArrayOutput
}

type GetFirewallPendingChangeArray []GetFirewallPendingChangeInput

func (GetFirewallPendingChangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPendingChange)(nil)).Elem()
}

func (i GetFirewallPendingChangeArray) ToGetFirewallPendingChangeArrayOutput() GetFirewallPendingChangeArrayOutput {
	return i.ToGetFirewallPendingChangeArrayOutputWithContext(context.Background())
}

func (i GetFirewallPendingChangeArray) ToGetFirewallPendingChangeArrayOutputWithContext(ctx context.Context) GetFirewallPendingChangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFirewallPendingChangeArrayOutput)
}

type GetFirewallPendingChangeOutput struct{ *pulumi.OutputState }

func (GetFirewallPendingChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFirewallPendingChange)(nil)).Elem()
}

func (o GetFirewallPendingChangeOutput) ToGetFirewallPendingChangeOutput() GetFirewallPendingChangeOutput {
	return o
}

func (o GetFirewallPendingChangeOutput) ToGetFirewallPendingChangeOutputWithContext(ctx context.Context) GetFirewallPendingChangeOutput {
	return o
}

func (o GetFirewallPendingChangeOutput) DropletId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetFirewallPendingChange) *int { return v.DropletId }).(pulumi.IntPtrOutput)
}

func (o GetFirewallPendingChangeOutput) Removing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetFirewallPendingChange) *bool { return v.Removing }).(pulumi.BoolPtrOutput)
}

// A status string indicating the current state of the Firewall.
// This can be "waiting", "succeeded", or "failed".
func (o GetFirewallPendingChangeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetFirewallPendingChange) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type GetFirewallPendingChangeArrayOutput struct{ *pulumi.OutputState }

func (GetFirewallPendingChangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFirewallPendingChange)(nil)).Elem()
}

func (o GetFirewallPendingChangeArrayOutput) ToGetFirewallPendingChangeArrayOutput() GetFirewallPendingChangeArrayOutput {
	return o
}

func (o GetFirewallPendingChangeArrayOutput) ToGetFirewallPendingChangeArrayOutputWithContext(ctx context.Context) GetFirewallPendingChangeArrayOutput {
	return o
}

func (o GetFirewallPendingChangeArrayOutput) Index(i pulumi.IntInput) GetFirewallPendingChangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFirewallPendingChange {
		return vs[0].([]GetFirewallPendingChange)[vs[1].(int)]
	}).(GetFirewallPendingChangeOutput)
}

type GetImagesFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the images by this key. This may be one of `distribution`, `errorMessage`,
	// `id`, `image`, `minDiskSize`, `name`, `private`, `regions`, `sizeGigabytes`, `slug`, `status`,
	// `tags`, or `type`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves images
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetImagesFilterInput is an input type that accepts GetImagesFilterArgs and GetImagesFilterOutput values.
// You can construct a concrete instance of `GetImagesFilterInput` via:
//
//          GetImagesFilterArgs{...}
type GetImagesFilterInput interface {
	pulumi.Input

	ToGetImagesFilterOutput() GetImagesFilterOutput
	ToGetImagesFilterOutputWithContext(context.Context) GetImagesFilterOutput
}

type GetImagesFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the images by this key. This may be one of `distribution`, `errorMessage`,
	// `id`, `image`, `minDiskSize`, `name`, `private`, `regions`, `sizeGigabytes`, `slug`, `status`,
	// `tags`, or `type`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves images
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return i.ToGetImagesFilterOutputWithContext(context.Background())
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterOutput)
}

// GetImagesFilterArrayInput is an input type that accepts GetImagesFilterArray and GetImagesFilterArrayOutput values.
// You can construct a concrete instance of `GetImagesFilterArrayInput` via:
//
//          GetImagesFilterArray{ GetImagesFilterArgs{...} }
type GetImagesFilterArrayInput interface {
	pulumi.Input

	ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput
	ToGetImagesFilterArrayOutputWithContext(context.Context) GetImagesFilterArrayOutput
}

type GetImagesFilterArray []GetImagesFilterInput

func (GetImagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return i.ToGetImagesFilterArrayOutputWithContext(context.Background())
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterArrayOutput)
}

type GetImagesFilterOutput struct{ *pulumi.OutputState }

func (GetImagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return o
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetImagesFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetImagesFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the images by this key. This may be one of `distribution`, `errorMessage`,
// `id`, `image`, `minDiskSize`, `name`, `private`, `regions`, `sizeGigabytes`, `slug`, `status`,
// `tags`, or `type`.
func (o GetImagesFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetImagesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// A list of values to match against the `key` field. Only retrieves images
// where the `key` field takes on one or more of the values provided here.
func (o GetImagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) Index(i pulumi.IntInput) GetImagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesFilter {
		return vs[0].([]GetImagesFilter)[vs[1].(int)]
	}).(GetImagesFilterOutput)
}

type GetImagesImage struct {
	Created     string `pulumi:"created"`
	Description string `pulumi:"description"`
	// The name of the distribution of the OS of the image.
	// - `minDiskSize`: The minimum 'disk' required for the image.
	// - `sizeGigabytes`: The size of the image in GB.
	Distribution string `pulumi:"distribution"`
	ErrorMessage string `pulumi:"errorMessage"`
	Id           int    `pulumi:"id"`
	// The id of the image (legacy parameter).
	Image       string `pulumi:"image"`
	MinDiskSize int    `pulumi:"minDiskSize"`
	Name        string `pulumi:"name"`
	// Is image a public image or not. Public images represent
	// Linux distributions or One-Click Applications, while non-public images represent
	// snapshots and backups and are only available within your account.
	// - `regions`: A set of the regions that the image is available in.
	// - `tags`: A set of tags applied to the image
	// - `created`: When the image was created
	// - `status`: Current status of the image
	// - `errorMessage`: Any applicable error message pertaining to the image
	Private       bool     `pulumi:"private"`
	Regions       []string `pulumi:"regions"`
	SizeGigabytes float64  `pulumi:"sizeGigabytes"`
	Slug          string   `pulumi:"slug"`
	Status        string   `pulumi:"status"`
	Tags          []string `pulumi:"tags"`
	Type          string   `pulumi:"type"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
//          GetImagesImageArgs{...}
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	Created     pulumi.StringInput `pulumi:"created"`
	Description pulumi.StringInput `pulumi:"description"`
	// The name of the distribution of the OS of the image.
	// - `minDiskSize`: The minimum 'disk' required for the image.
	// - `sizeGigabytes`: The size of the image in GB.
	Distribution pulumi.StringInput `pulumi:"distribution"`
	ErrorMessage pulumi.StringInput `pulumi:"errorMessage"`
	Id           pulumi.IntInput    `pulumi:"id"`
	// The id of the image (legacy parameter).
	Image       pulumi.StringInput `pulumi:"image"`
	MinDiskSize pulumi.IntInput    `pulumi:"minDiskSize"`
	Name        pulumi.StringInput `pulumi:"name"`
	// Is image a public image or not. Public images represent
	// Linux distributions or One-Click Applications, while non-public images represent
	// snapshots and backups and are only available within your account.
	// - `regions`: A set of the regions that the image is available in.
	// - `tags`: A set of tags applied to the image
	// - `created`: When the image was created
	// - `status`: Current status of the image
	// - `errorMessage`: Any applicable error message pertaining to the image
	Private       pulumi.BoolInput        `pulumi:"private"`
	Regions       pulumi.StringArrayInput `pulumi:"regions"`
	SizeGigabytes pulumi.Float64Input     `pulumi:"sizeGigabytes"`
	Slug          pulumi.StringInput      `pulumi:"slug"`
	Status        pulumi.StringInput      `pulumi:"status"`
	Tags          pulumi.StringArrayInput `pulumi:"tags"`
	Type          pulumi.StringInput      `pulumi:"type"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
//          GetImagesImageArray{ GetImagesImageArgs{...} }
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Description }).(pulumi.StringOutput)
}

// The name of the distribution of the OS of the image.
// - `minDiskSize`: The minimum 'disk' required for the image.
// - `sizeGigabytes`: The size of the image in GB.
func (o GetImagesImageOutput) Distribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Distribution }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.Id }).(pulumi.IntOutput)
}

// The id of the image (legacy parameter).
func (o GetImagesImageOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Image }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) MinDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.MinDiskSize }).(pulumi.IntOutput)
}

func (o GetImagesImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Name }).(pulumi.StringOutput)
}

// Is image a public image or not. Public images represent
// Linux distributions or One-Click Applications, while non-public images represent
// snapshots and backups and are only available within your account.
// - `regions`: A set of the regions that the image is available in.
// - `tags`: A set of tags applied to the image
// - `created`: When the image was created
// - `status`: Current status of the image
// - `errorMessage`: Any applicable error message pertaining to the image
func (o GetImagesImageOutput) Private() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.Private }).(pulumi.BoolOutput)
}

func (o GetImagesImageOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

func (o GetImagesImageOutput) SizeGigabytes() pulumi.Float64Output {
	return o.ApplyT(func(v GetImagesImage) float64 { return v.SizeGigabytes }).(pulumi.Float64Output)
}

func (o GetImagesImageOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetImagesImageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Type }).(pulumi.StringOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetImagesSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the images by this key. This may be one of `distribution`, `errorMessage`, `id`,
	// `image`, `minDiskSize`, `name`, `private`, `sizeGigabytes`, `slug`, `status`, or `type`.
	Key string `pulumi:"key"`
}

// GetImagesSortInput is an input type that accepts GetImagesSortArgs and GetImagesSortOutput values.
// You can construct a concrete instance of `GetImagesSortInput` via:
//
//          GetImagesSortArgs{...}
type GetImagesSortInput interface {
	pulumi.Input

	ToGetImagesSortOutput() GetImagesSortOutput
	ToGetImagesSortOutputWithContext(context.Context) GetImagesSortOutput
}

type GetImagesSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the images by this key. This may be one of `distribution`, `errorMessage`, `id`,
	// `image`, `minDiskSize`, `name`, `private`, `sizeGigabytes`, `slug`, `status`, or `type`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetImagesSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesSort)(nil)).Elem()
}

func (i GetImagesSortArgs) ToGetImagesSortOutput() GetImagesSortOutput {
	return i.ToGetImagesSortOutputWithContext(context.Background())
}

func (i GetImagesSortArgs) ToGetImagesSortOutputWithContext(ctx context.Context) GetImagesSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesSortOutput)
}

// GetImagesSortArrayInput is an input type that accepts GetImagesSortArray and GetImagesSortArrayOutput values.
// You can construct a concrete instance of `GetImagesSortArrayInput` via:
//
//          GetImagesSortArray{ GetImagesSortArgs{...} }
type GetImagesSortArrayInput interface {
	pulumi.Input

	ToGetImagesSortArrayOutput() GetImagesSortArrayOutput
	ToGetImagesSortArrayOutputWithContext(context.Context) GetImagesSortArrayOutput
}

type GetImagesSortArray []GetImagesSortInput

func (GetImagesSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesSort)(nil)).Elem()
}

func (i GetImagesSortArray) ToGetImagesSortArrayOutput() GetImagesSortArrayOutput {
	return i.ToGetImagesSortArrayOutputWithContext(context.Background())
}

func (i GetImagesSortArray) ToGetImagesSortArrayOutputWithContext(ctx context.Context) GetImagesSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesSortArrayOutput)
}

type GetImagesSortOutput struct{ *pulumi.OutputState }

func (GetImagesSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesSort)(nil)).Elem()
}

func (o GetImagesSortOutput) ToGetImagesSortOutput() GetImagesSortOutput {
	return o
}

func (o GetImagesSortOutput) ToGetImagesSortOutputWithContext(ctx context.Context) GetImagesSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetImagesSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the images by this key. This may be one of `distribution`, `errorMessage`, `id`,
// `image`, `minDiskSize`, `name`, `private`, `sizeGigabytes`, `slug`, `status`, or `type`.
func (o GetImagesSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetImagesSortArrayOutput struct{ *pulumi.OutputState }

func (GetImagesSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesSort)(nil)).Elem()
}

func (o GetImagesSortArrayOutput) ToGetImagesSortArrayOutput() GetImagesSortArrayOutput {
	return o
}

func (o GetImagesSortArrayOutput) ToGetImagesSortArrayOutputWithContext(ctx context.Context) GetImagesSortArrayOutput {
	return o
}

func (o GetImagesSortArrayOutput) Index(i pulumi.IntInput) GetImagesSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesSort {
		return vs[0].([]GetImagesSort)[vs[1].(int)]
	}).(GetImagesSortOutput)
}

type GetKubernetesClusterKubeConfig struct {
	// The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	ClientCertificate string `pulumi:"clientCertificate"`
	// The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	ClientKey string `pulumi:"clientKey"`
	// The base64 encoded public certificate for the cluster's certificate authority.
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	// The date and time when the credentials will expire and need to be regenerated.
	ExpiresAt string `pulumi:"expiresAt"`
	// The URL of the API server on the Kubernetes master node.
	Host string `pulumi:"host"`
	// The full contents of the Kubernetes cluster's kubeconfig file.
	RawConfig string `pulumi:"rawConfig"`
	// The DigitalOcean API access token used by clients to access the cluster.
	Token string `pulumi:"token"`
}

// GetKubernetesClusterKubeConfigInput is an input type that accepts GetKubernetesClusterKubeConfigArgs and GetKubernetesClusterKubeConfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeConfigInput` via:
//
//          GetKubernetesClusterKubeConfigArgs{...}
type GetKubernetesClusterKubeConfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput
	ToGetKubernetesClusterKubeConfigOutputWithContext(context.Context) GetKubernetesClusterKubeConfigOutput
}

type GetKubernetesClusterKubeConfigArgs struct {
	// The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	ClientCertificate pulumi.StringInput `pulumi:"clientCertificate"`
	// The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	ClientKey pulumi.StringInput `pulumi:"clientKey"`
	// The base64 encoded public certificate for the cluster's certificate authority.
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	// The date and time when the credentials will expire and need to be regenerated.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// The URL of the API server on the Kubernetes master node.
	Host pulumi.StringInput `pulumi:"host"`
	// The full contents of the Kubernetes cluster's kubeconfig file.
	RawConfig pulumi.StringInput `pulumi:"rawConfig"`
	// The DigitalOcean API access token used by clients to access the cluster.
	Token pulumi.StringInput `pulumi:"token"`
}

func (GetKubernetesClusterKubeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeConfigArgs) ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput {
	return i.ToGetKubernetesClusterKubeConfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeConfigArgs) ToGetKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeConfigOutput)
}

// GetKubernetesClusterKubeConfigArrayInput is an input type that accepts GetKubernetesClusterKubeConfigArray and GetKubernetesClusterKubeConfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeConfigArrayInput` via:
//
//          GetKubernetesClusterKubeConfigArray{ GetKubernetesClusterKubeConfigArgs{...} }
type GetKubernetesClusterKubeConfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput
	ToGetKubernetesClusterKubeConfigArrayOutputWithContext(context.Context) GetKubernetesClusterKubeConfigArrayOutput
}

type GetKubernetesClusterKubeConfigArray []GetKubernetesClusterKubeConfigInput

func (GetKubernetesClusterKubeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeConfigArray) ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput {
	return i.ToGetKubernetesClusterKubeConfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeConfigArray) ToGetKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeConfigArrayOutput)
}

type GetKubernetesClusterKubeConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeConfigOutput) ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigOutput) ToGetKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigOutput {
	return o
}

// The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
func (o GetKubernetesClusterKubeConfigOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

// The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
func (o GetKubernetesClusterKubeConfigOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClientKey }).(pulumi.StringOutput)
}

// The base64 encoded public certificate for the cluster's certificate authority.
func (o GetKubernetesClusterKubeConfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

// The date and time when the credentials will expire and need to be regenerated.
func (o GetKubernetesClusterKubeConfigOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// The URL of the API server on the Kubernetes master node.
func (o GetKubernetesClusterKubeConfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Host }).(pulumi.StringOutput)
}

// The full contents of the Kubernetes cluster's kubeconfig file.
func (o GetKubernetesClusterKubeConfigOutput) RawConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.RawConfig }).(pulumi.StringOutput)
}

// The DigitalOcean API access token used by clients to access the cluster.
func (o GetKubernetesClusterKubeConfigOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Token }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeConfigArrayOutput) ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigArrayOutput) ToGetKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeConfig {
		return vs[0].([]GetKubernetesClusterKubeConfig)[vs[1].(int)]
	}).(GetKubernetesClusterKubeConfigOutput)
}

type GetKubernetesClusterMaintenancePolicy struct {
	// The day for the service window of the Kubernetes cluster.
	Day string `pulumi:"day"`
	// The duration of the operation.
	Duration string `pulumi:"duration"`
	// The start time of the upgrade operation.
	StartTime string `pulumi:"startTime"`
}

// GetKubernetesClusterMaintenancePolicyInput is an input type that accepts GetKubernetesClusterMaintenancePolicyArgs and GetKubernetesClusterMaintenancePolicyOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMaintenancePolicyInput` via:
//
//          GetKubernetesClusterMaintenancePolicyArgs{...}
type GetKubernetesClusterMaintenancePolicyInput interface {
	pulumi.Input

	ToGetKubernetesClusterMaintenancePolicyOutput() GetKubernetesClusterMaintenancePolicyOutput
	ToGetKubernetesClusterMaintenancePolicyOutputWithContext(context.Context) GetKubernetesClusterMaintenancePolicyOutput
}

type GetKubernetesClusterMaintenancePolicyArgs struct {
	// The day for the service window of the Kubernetes cluster.
	Day pulumi.StringInput `pulumi:"day"`
	// The duration of the operation.
	Duration pulumi.StringInput `pulumi:"duration"`
	// The start time of the upgrade operation.
	StartTime pulumi.StringInput `pulumi:"startTime"`
}

func (GetKubernetesClusterMaintenancePolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMaintenancePolicy)(nil)).Elem()
}

func (i GetKubernetesClusterMaintenancePolicyArgs) ToGetKubernetesClusterMaintenancePolicyOutput() GetKubernetesClusterMaintenancePolicyOutput {
	return i.ToGetKubernetesClusterMaintenancePolicyOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMaintenancePolicyArgs) ToGetKubernetesClusterMaintenancePolicyOutputWithContext(ctx context.Context) GetKubernetesClusterMaintenancePolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMaintenancePolicyOutput)
}

// GetKubernetesClusterMaintenancePolicyArrayInput is an input type that accepts GetKubernetesClusterMaintenancePolicyArray and GetKubernetesClusterMaintenancePolicyArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterMaintenancePolicyArrayInput` via:
//
//          GetKubernetesClusterMaintenancePolicyArray{ GetKubernetesClusterMaintenancePolicyArgs{...} }
type GetKubernetesClusterMaintenancePolicyArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterMaintenancePolicyArrayOutput() GetKubernetesClusterMaintenancePolicyArrayOutput
	ToGetKubernetesClusterMaintenancePolicyArrayOutputWithContext(context.Context) GetKubernetesClusterMaintenancePolicyArrayOutput
}

type GetKubernetesClusterMaintenancePolicyArray []GetKubernetesClusterMaintenancePolicyInput

func (GetKubernetesClusterMaintenancePolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterMaintenancePolicy)(nil)).Elem()
}

func (i GetKubernetesClusterMaintenancePolicyArray) ToGetKubernetesClusterMaintenancePolicyArrayOutput() GetKubernetesClusterMaintenancePolicyArrayOutput {
	return i.ToGetKubernetesClusterMaintenancePolicyArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterMaintenancePolicyArray) ToGetKubernetesClusterMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetKubernetesClusterMaintenancePolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterMaintenancePolicyArrayOutput)
}

type GetKubernetesClusterMaintenancePolicyOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMaintenancePolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterMaintenancePolicy)(nil)).Elem()
}

func (o GetKubernetesClusterMaintenancePolicyOutput) ToGetKubernetesClusterMaintenancePolicyOutput() GetKubernetesClusterMaintenancePolicyOutput {
	return o
}

func (o GetKubernetesClusterMaintenancePolicyOutput) ToGetKubernetesClusterMaintenancePolicyOutputWithContext(ctx context.Context) GetKubernetesClusterMaintenancePolicyOutput {
	return o
}

// The day for the service window of the Kubernetes cluster.
func (o GetKubernetesClusterMaintenancePolicyOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaintenancePolicy) string { return v.Day }).(pulumi.StringOutput)
}

// The duration of the operation.
func (o GetKubernetesClusterMaintenancePolicyOutput) Duration() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaintenancePolicy) string { return v.Duration }).(pulumi.StringOutput)
}

// The start time of the upgrade operation.
func (o GetKubernetesClusterMaintenancePolicyOutput) StartTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterMaintenancePolicy) string { return v.StartTime }).(pulumi.StringOutput)
}

type GetKubernetesClusterMaintenancePolicyArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterMaintenancePolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterMaintenancePolicy)(nil)).Elem()
}

func (o GetKubernetesClusterMaintenancePolicyArrayOutput) ToGetKubernetesClusterMaintenancePolicyArrayOutput() GetKubernetesClusterMaintenancePolicyArrayOutput {
	return o
}

func (o GetKubernetesClusterMaintenancePolicyArrayOutput) ToGetKubernetesClusterMaintenancePolicyArrayOutputWithContext(ctx context.Context) GetKubernetesClusterMaintenancePolicyArrayOutput {
	return o
}

func (o GetKubernetesClusterMaintenancePolicyArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterMaintenancePolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterMaintenancePolicy {
		return vs[0].([]GetKubernetesClusterMaintenancePolicy)[vs[1].(int)]
	}).(GetKubernetesClusterMaintenancePolicyOutput)
}

type GetKubernetesClusterNodePool struct {
	// The actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
	ActualNodeCount int `pulumi:"actualNodeCount"`
	// A boolean indicating whether auto-scaling is enabled on the node pool.
	AutoScale bool `pulumi:"autoScale"`
	// A unique ID that can be used to identify and reference the node.
	Id string `pulumi:"id"`
	// A map of key/value pairs applied to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
	Labels map[string]string `pulumi:"labels"`
	// If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
	MaxNodes int `pulumi:"maxNodes"`
	// If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
	MinNodes int `pulumi:"minNodes"`
	// The name of Kubernetes cluster.
	Name string `pulumi:"name"`
	// The number of Droplet instances in the node pool.
	NodeCount int `pulumi:"nodeCount"`
	// A list of nodes in the pool. Each node exports the following attributes:
	Nodes []GetKubernetesClusterNodePoolNode `pulumi:"nodes"`
	// The slug identifier for the type of Droplet used as workers in the node pool.
	Size string `pulumi:"size"`
	// A list of tag names applied to the node pool.
	Tags []string `pulumi:"tags"`
	// A list of taints applied to all nodes in the pool. Each taint exports the following attributes:
	Taints []GetKubernetesClusterNodePoolTaint `pulumi:"taints"`
}

// GetKubernetesClusterNodePoolInput is an input type that accepts GetKubernetesClusterNodePoolArgs and GetKubernetesClusterNodePoolOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolInput` via:
//
//          GetKubernetesClusterNodePoolArgs{...}
type GetKubernetesClusterNodePoolInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolOutput() GetKubernetesClusterNodePoolOutput
	ToGetKubernetesClusterNodePoolOutputWithContext(context.Context) GetKubernetesClusterNodePoolOutput
}

type GetKubernetesClusterNodePoolArgs struct {
	// The actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
	ActualNodeCount pulumi.IntInput `pulumi:"actualNodeCount"`
	// A boolean indicating whether auto-scaling is enabled on the node pool.
	AutoScale pulumi.BoolInput `pulumi:"autoScale"`
	// A unique ID that can be used to identify and reference the node.
	Id pulumi.StringInput `pulumi:"id"`
	// A map of key/value pairs applied to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
	MaxNodes pulumi.IntInput `pulumi:"maxNodes"`
	// If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
	MinNodes pulumi.IntInput `pulumi:"minNodes"`
	// The name of Kubernetes cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// The number of Droplet instances in the node pool.
	NodeCount pulumi.IntInput `pulumi:"nodeCount"`
	// A list of nodes in the pool. Each node exports the following attributes:
	Nodes GetKubernetesClusterNodePoolNodeArrayInput `pulumi:"nodes"`
	// The slug identifier for the type of Droplet used as workers in the node pool.
	Size pulumi.StringInput `pulumi:"size"`
	// A list of tag names applied to the node pool.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
	// A list of taints applied to all nodes in the pool. Each taint exports the following attributes:
	Taints GetKubernetesClusterNodePoolTaintArrayInput `pulumi:"taints"`
}

func (GetKubernetesClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePool)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolArgs) ToGetKubernetesClusterNodePoolOutput() GetKubernetesClusterNodePoolOutput {
	return i.ToGetKubernetesClusterNodePoolOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolArgs) ToGetKubernetesClusterNodePoolOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolOutput)
}

// GetKubernetesClusterNodePoolArrayInput is an input type that accepts GetKubernetesClusterNodePoolArray and GetKubernetesClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolArrayInput` via:
//
//          GetKubernetesClusterNodePoolArray{ GetKubernetesClusterNodePoolArgs{...} }
type GetKubernetesClusterNodePoolArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolArrayOutput() GetKubernetesClusterNodePoolArrayOutput
	ToGetKubernetesClusterNodePoolArrayOutputWithContext(context.Context) GetKubernetesClusterNodePoolArrayOutput
}

type GetKubernetesClusterNodePoolArray []GetKubernetesClusterNodePoolInput

func (GetKubernetesClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePool)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolArray) ToGetKubernetesClusterNodePoolArrayOutput() GetKubernetesClusterNodePoolArrayOutput {
	return i.ToGetKubernetesClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolArray) ToGetKubernetesClusterNodePoolArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolArrayOutput)
}

type GetKubernetesClusterNodePoolOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePool)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolOutput) ToGetKubernetesClusterNodePoolOutput() GetKubernetesClusterNodePoolOutput {
	return o
}

func (o GetKubernetesClusterNodePoolOutput) ToGetKubernetesClusterNodePoolOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolOutput {
	return o
}

// The actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
func (o GetKubernetesClusterNodePoolOutput) ActualNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) int { return v.ActualNodeCount }).(pulumi.IntOutput)
}

// A boolean indicating whether auto-scaling is enabled on the node pool.
func (o GetKubernetesClusterNodePoolOutput) AutoScale() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) bool { return v.AutoScale }).(pulumi.BoolOutput)
}

// A unique ID that can be used to identify and reference the node.
func (o GetKubernetesClusterNodePoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) string { return v.Id }).(pulumi.StringOutput)
}

// A map of key/value pairs applied to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
func (o GetKubernetesClusterNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
func (o GetKubernetesClusterNodePoolOutput) MaxNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) int { return v.MaxNodes }).(pulumi.IntOutput)
}

// If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
func (o GetKubernetesClusterNodePoolOutput) MinNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) int { return v.MinNodes }).(pulumi.IntOutput)
}

// The name of Kubernetes cluster.
func (o GetKubernetesClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

// The number of Droplet instances in the node pool.
func (o GetKubernetesClusterNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) int { return v.NodeCount }).(pulumi.IntOutput)
}

// A list of nodes in the pool. Each node exports the following attributes:
func (o GetKubernetesClusterNodePoolOutput) Nodes() GetKubernetesClusterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) []GetKubernetesClusterNodePoolNode { return v.Nodes }).(GetKubernetesClusterNodePoolNodeArrayOutput)
}

// The slug identifier for the type of Droplet used as workers in the node pool.
func (o GetKubernetesClusterNodePoolOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) string { return v.Size }).(pulumi.StringOutput)
}

// A list of tag names applied to the node pool.
func (o GetKubernetesClusterNodePoolOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

// A list of taints applied to all nodes in the pool. Each taint exports the following attributes:
func (o GetKubernetesClusterNodePoolOutput) Taints() GetKubernetesClusterNodePoolTaintArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) []GetKubernetesClusterNodePoolTaint { return v.Taints }).(GetKubernetesClusterNodePoolTaintArrayOutput)
}

type GetKubernetesClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePool)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolArrayOutput) ToGetKubernetesClusterNodePoolArrayOutput() GetKubernetesClusterNodePoolArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolArrayOutput) ToGetKubernetesClusterNodePoolArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterNodePool {
		return vs[0].([]GetKubernetesClusterNodePool)[vs[1].(int)]
	}).(GetKubernetesClusterNodePoolOutput)
}

type GetKubernetesClusterNodePoolNode struct {
	// The date and time when the node was created.
	CreatedAt string `pulumi:"createdAt"`
	DropletId string `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node.
	Id string `pulumi:"id"`
	// The name of Kubernetes cluster.
	Name string `pulumi:"name"`
	// A string indicating the current status of the individual node.
	Status string `pulumi:"status"`
	// The date and time when the node was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetKubernetesClusterNodePoolNodeInput is an input type that accepts GetKubernetesClusterNodePoolNodeArgs and GetKubernetesClusterNodePoolNodeOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolNodeInput` via:
//
//          GetKubernetesClusterNodePoolNodeArgs{...}
type GetKubernetesClusterNodePoolNodeInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolNodeOutput() GetKubernetesClusterNodePoolNodeOutput
	ToGetKubernetesClusterNodePoolNodeOutputWithContext(context.Context) GetKubernetesClusterNodePoolNodeOutput
}

type GetKubernetesClusterNodePoolNodeArgs struct {
	// The date and time when the node was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	DropletId pulumi.StringInput `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of Kubernetes cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// A string indicating the current status of the individual node.
	Status pulumi.StringInput `pulumi:"status"`
	// The date and time when the node was last updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetKubernetesClusterNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePoolNode)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolNodeArgs) ToGetKubernetesClusterNodePoolNodeOutput() GetKubernetesClusterNodePoolNodeOutput {
	return i.ToGetKubernetesClusterNodePoolNodeOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolNodeArgs) ToGetKubernetesClusterNodePoolNodeOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolNodeOutput)
}

// GetKubernetesClusterNodePoolNodeArrayInput is an input type that accepts GetKubernetesClusterNodePoolNodeArray and GetKubernetesClusterNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolNodeArrayInput` via:
//
//          GetKubernetesClusterNodePoolNodeArray{ GetKubernetesClusterNodePoolNodeArgs{...} }
type GetKubernetesClusterNodePoolNodeArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolNodeArrayOutput() GetKubernetesClusterNodePoolNodeArrayOutput
	ToGetKubernetesClusterNodePoolNodeArrayOutputWithContext(context.Context) GetKubernetesClusterNodePoolNodeArrayOutput
}

type GetKubernetesClusterNodePoolNodeArray []GetKubernetesClusterNodePoolNodeInput

func (GetKubernetesClusterNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePoolNode)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolNodeArray) ToGetKubernetesClusterNodePoolNodeArrayOutput() GetKubernetesClusterNodePoolNodeArrayOutput {
	return i.ToGetKubernetesClusterNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolNodeArray) ToGetKubernetesClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolNodeArrayOutput)
}

type GetKubernetesClusterNodePoolNodeOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePoolNode)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolNodeOutput) ToGetKubernetesClusterNodePoolNodeOutput() GetKubernetesClusterNodePoolNodeOutput {
	return o
}

func (o GetKubernetesClusterNodePoolNodeOutput) ToGetKubernetesClusterNodePoolNodeOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolNodeOutput {
	return o
}

// The date and time when the node was created.
func (o GetKubernetesClusterNodePoolNodeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterNodePoolNodeOutput) DropletId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.DropletId }).(pulumi.StringOutput)
}

// A unique ID that can be used to identify and reference the node.
func (o GetKubernetesClusterNodePoolNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.Id }).(pulumi.StringOutput)
}

// The name of Kubernetes cluster.
func (o GetKubernetesClusterNodePoolNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.Name }).(pulumi.StringOutput)
}

// A string indicating the current status of the individual node.
func (o GetKubernetesClusterNodePoolNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.Status }).(pulumi.StringOutput)
}

// The date and time when the node was last updated.
func (o GetKubernetesClusterNodePoolNodeOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetKubernetesClusterNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePoolNode)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolNodeArrayOutput) ToGetKubernetesClusterNodePoolNodeArrayOutput() GetKubernetesClusterNodePoolNodeArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolNodeArrayOutput) ToGetKubernetesClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolNodeArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolNodeArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterNodePoolNode {
		return vs[0].([]GetKubernetesClusterNodePoolNode)[vs[1].(int)]
	}).(GetKubernetesClusterNodePoolNodeOutput)
}

type GetKubernetesClusterNodePoolTaint struct {
	// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
	Effect string `pulumi:"effect"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Key string `pulumi:"key"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Value string `pulumi:"value"`
}

// GetKubernetesClusterNodePoolTaintInput is an input type that accepts GetKubernetesClusterNodePoolTaintArgs and GetKubernetesClusterNodePoolTaintOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolTaintInput` via:
//
//          GetKubernetesClusterNodePoolTaintArgs{...}
type GetKubernetesClusterNodePoolTaintInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolTaintOutput() GetKubernetesClusterNodePoolTaintOutput
	ToGetKubernetesClusterNodePoolTaintOutputWithContext(context.Context) GetKubernetesClusterNodePoolTaintOutput
}

type GetKubernetesClusterNodePoolTaintArgs struct {
	// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
	Effect pulumi.StringInput `pulumi:"effect"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Key pulumi.StringInput `pulumi:"key"`
	// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetKubernetesClusterNodePoolTaintArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePoolTaint)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolTaintArgs) ToGetKubernetesClusterNodePoolTaintOutput() GetKubernetesClusterNodePoolTaintOutput {
	return i.ToGetKubernetesClusterNodePoolTaintOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolTaintArgs) ToGetKubernetesClusterNodePoolTaintOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolTaintOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolTaintOutput)
}

// GetKubernetesClusterNodePoolTaintArrayInput is an input type that accepts GetKubernetesClusterNodePoolTaintArray and GetKubernetesClusterNodePoolTaintArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolTaintArrayInput` via:
//
//          GetKubernetesClusterNodePoolTaintArray{ GetKubernetesClusterNodePoolTaintArgs{...} }
type GetKubernetesClusterNodePoolTaintArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolTaintArrayOutput() GetKubernetesClusterNodePoolTaintArrayOutput
	ToGetKubernetesClusterNodePoolTaintArrayOutputWithContext(context.Context) GetKubernetesClusterNodePoolTaintArrayOutput
}

type GetKubernetesClusterNodePoolTaintArray []GetKubernetesClusterNodePoolTaintInput

func (GetKubernetesClusterNodePoolTaintArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePoolTaint)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolTaintArray) ToGetKubernetesClusterNodePoolTaintArrayOutput() GetKubernetesClusterNodePoolTaintArrayOutput {
	return i.ToGetKubernetesClusterNodePoolTaintArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolTaintArray) ToGetKubernetesClusterNodePoolTaintArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolTaintArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolTaintArrayOutput)
}

type GetKubernetesClusterNodePoolTaintOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolTaintOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePoolTaint)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolTaintOutput) ToGetKubernetesClusterNodePoolTaintOutput() GetKubernetesClusterNodePoolTaintOutput {
	return o
}

func (o GetKubernetesClusterNodePoolTaintOutput) ToGetKubernetesClusterNodePoolTaintOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolTaintOutput {
	return o
}

// How the node reacts to pods that it won't tolerate. Available effect values are: "NoSchedule", "PreferNoSchedule", "NoExecute".
func (o GetKubernetesClusterNodePoolTaintOutput) Effect() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolTaint) string { return v.Effect }).(pulumi.StringOutput)
}

// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
func (o GetKubernetesClusterNodePoolTaintOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolTaint) string { return v.Key }).(pulumi.StringOutput)
}

// An arbitrary string. The "key" and "value" fields of the "taint" object form a key-value pair.
func (o GetKubernetesClusterNodePoolTaintOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolTaint) string { return v.Value }).(pulumi.StringOutput)
}

type GetKubernetesClusterNodePoolTaintArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolTaintArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePoolTaint)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolTaintArrayOutput) ToGetKubernetesClusterNodePoolTaintArrayOutput() GetKubernetesClusterNodePoolTaintArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolTaintArrayOutput) ToGetKubernetesClusterNodePoolTaintArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolTaintArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolTaintArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterNodePoolTaintOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterNodePoolTaint {
		return vs[0].([]GetKubernetesClusterNodePoolTaint)[vs[1].(int)]
	}).(GetKubernetesClusterNodePoolTaintOutput)
}

type GetLoadBalancerForwardingRule struct {
	CertificateId   string `pulumi:"certificateId"`
	CertificateName string `pulumi:"certificateName"`
	EntryPort       int    `pulumi:"entryPort"`
	EntryProtocol   string `pulumi:"entryProtocol"`
	TargetPort      int    `pulumi:"targetPort"`
	TargetProtocol  string `pulumi:"targetProtocol"`
	TlsPassthrough  bool   `pulumi:"tlsPassthrough"`
}

// GetLoadBalancerForwardingRuleInput is an input type that accepts GetLoadBalancerForwardingRuleArgs and GetLoadBalancerForwardingRuleOutput values.
// You can construct a concrete instance of `GetLoadBalancerForwardingRuleInput` via:
//
//          GetLoadBalancerForwardingRuleArgs{...}
type GetLoadBalancerForwardingRuleInput interface {
	pulumi.Input

	ToGetLoadBalancerForwardingRuleOutput() GetLoadBalancerForwardingRuleOutput
	ToGetLoadBalancerForwardingRuleOutputWithContext(context.Context) GetLoadBalancerForwardingRuleOutput
}

type GetLoadBalancerForwardingRuleArgs struct {
	CertificateId   pulumi.StringInput `pulumi:"certificateId"`
	CertificateName pulumi.StringInput `pulumi:"certificateName"`
	EntryPort       pulumi.IntInput    `pulumi:"entryPort"`
	EntryProtocol   pulumi.StringInput `pulumi:"entryProtocol"`
	TargetPort      pulumi.IntInput    `pulumi:"targetPort"`
	TargetProtocol  pulumi.StringInput `pulumi:"targetProtocol"`
	TlsPassthrough  pulumi.BoolInput   `pulumi:"tlsPassthrough"`
}

func (GetLoadBalancerForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerForwardingRule)(nil)).Elem()
}

func (i GetLoadBalancerForwardingRuleArgs) ToGetLoadBalancerForwardingRuleOutput() GetLoadBalancerForwardingRuleOutput {
	return i.ToGetLoadBalancerForwardingRuleOutputWithContext(context.Background())
}

func (i GetLoadBalancerForwardingRuleArgs) ToGetLoadBalancerForwardingRuleOutputWithContext(ctx context.Context) GetLoadBalancerForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerForwardingRuleOutput)
}

// GetLoadBalancerForwardingRuleArrayInput is an input type that accepts GetLoadBalancerForwardingRuleArray and GetLoadBalancerForwardingRuleArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerForwardingRuleArrayInput` via:
//
//          GetLoadBalancerForwardingRuleArray{ GetLoadBalancerForwardingRuleArgs{...} }
type GetLoadBalancerForwardingRuleArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerForwardingRuleArrayOutput() GetLoadBalancerForwardingRuleArrayOutput
	ToGetLoadBalancerForwardingRuleArrayOutputWithContext(context.Context) GetLoadBalancerForwardingRuleArrayOutput
}

type GetLoadBalancerForwardingRuleArray []GetLoadBalancerForwardingRuleInput

func (GetLoadBalancerForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerForwardingRule)(nil)).Elem()
}

func (i GetLoadBalancerForwardingRuleArray) ToGetLoadBalancerForwardingRuleArrayOutput() GetLoadBalancerForwardingRuleArrayOutput {
	return i.ToGetLoadBalancerForwardingRuleArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerForwardingRuleArray) ToGetLoadBalancerForwardingRuleArrayOutputWithContext(ctx context.Context) GetLoadBalancerForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerForwardingRuleArrayOutput)
}

type GetLoadBalancerForwardingRuleOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerForwardingRule)(nil)).Elem()
}

func (o GetLoadBalancerForwardingRuleOutput) ToGetLoadBalancerForwardingRuleOutput() GetLoadBalancerForwardingRuleOutput {
	return o
}

func (o GetLoadBalancerForwardingRuleOutput) ToGetLoadBalancerForwardingRuleOutputWithContext(ctx context.Context) GetLoadBalancerForwardingRuleOutput {
	return o
}

func (o GetLoadBalancerForwardingRuleOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) CertificateName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) string { return v.CertificateName }).(pulumi.StringOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) EntryPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) int { return v.EntryPort }).(pulumi.IntOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) EntryProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) string { return v.EntryProtocol }).(pulumi.StringOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) int { return v.TargetPort }).(pulumi.IntOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) TargetProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) string { return v.TargetProtocol }).(pulumi.StringOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) TlsPassthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) bool { return v.TlsPassthrough }).(pulumi.BoolOutput)
}

type GetLoadBalancerForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerForwardingRule)(nil)).Elem()
}

func (o GetLoadBalancerForwardingRuleArrayOutput) ToGetLoadBalancerForwardingRuleArrayOutput() GetLoadBalancerForwardingRuleArrayOutput {
	return o
}

func (o GetLoadBalancerForwardingRuleArrayOutput) ToGetLoadBalancerForwardingRuleArrayOutputWithContext(ctx context.Context) GetLoadBalancerForwardingRuleArrayOutput {
	return o
}

func (o GetLoadBalancerForwardingRuleArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerForwardingRule {
		return vs[0].([]GetLoadBalancerForwardingRule)[vs[1].(int)]
	}).(GetLoadBalancerForwardingRuleOutput)
}

type GetLoadBalancerHealthcheck struct {
	CheckIntervalSeconds   int    `pulumi:"checkIntervalSeconds"`
	HealthyThreshold       int    `pulumi:"healthyThreshold"`
	Path                   string `pulumi:"path"`
	Port                   int    `pulumi:"port"`
	Protocol               string `pulumi:"protocol"`
	ResponseTimeoutSeconds int    `pulumi:"responseTimeoutSeconds"`
	UnhealthyThreshold     int    `pulumi:"unhealthyThreshold"`
}

// GetLoadBalancerHealthcheckInput is an input type that accepts GetLoadBalancerHealthcheckArgs and GetLoadBalancerHealthcheckOutput values.
// You can construct a concrete instance of `GetLoadBalancerHealthcheckInput` via:
//
//          GetLoadBalancerHealthcheckArgs{...}
type GetLoadBalancerHealthcheckInput interface {
	pulumi.Input

	ToGetLoadBalancerHealthcheckOutput() GetLoadBalancerHealthcheckOutput
	ToGetLoadBalancerHealthcheckOutputWithContext(context.Context) GetLoadBalancerHealthcheckOutput
}

type GetLoadBalancerHealthcheckArgs struct {
	CheckIntervalSeconds   pulumi.IntInput    `pulumi:"checkIntervalSeconds"`
	HealthyThreshold       pulumi.IntInput    `pulumi:"healthyThreshold"`
	Path                   pulumi.StringInput `pulumi:"path"`
	Port                   pulumi.IntInput    `pulumi:"port"`
	Protocol               pulumi.StringInput `pulumi:"protocol"`
	ResponseTimeoutSeconds pulumi.IntInput    `pulumi:"responseTimeoutSeconds"`
	UnhealthyThreshold     pulumi.IntInput    `pulumi:"unhealthyThreshold"`
}

func (GetLoadBalancerHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerHealthcheck)(nil)).Elem()
}

func (i GetLoadBalancerHealthcheckArgs) ToGetLoadBalancerHealthcheckOutput() GetLoadBalancerHealthcheckOutput {
	return i.ToGetLoadBalancerHealthcheckOutputWithContext(context.Background())
}

func (i GetLoadBalancerHealthcheckArgs) ToGetLoadBalancerHealthcheckOutputWithContext(ctx context.Context) GetLoadBalancerHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerHealthcheckOutput)
}

// GetLoadBalancerHealthcheckArrayInput is an input type that accepts GetLoadBalancerHealthcheckArray and GetLoadBalancerHealthcheckArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerHealthcheckArrayInput` via:
//
//          GetLoadBalancerHealthcheckArray{ GetLoadBalancerHealthcheckArgs{...} }
type GetLoadBalancerHealthcheckArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerHealthcheckArrayOutput() GetLoadBalancerHealthcheckArrayOutput
	ToGetLoadBalancerHealthcheckArrayOutputWithContext(context.Context) GetLoadBalancerHealthcheckArrayOutput
}

type GetLoadBalancerHealthcheckArray []GetLoadBalancerHealthcheckInput

func (GetLoadBalancerHealthcheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerHealthcheck)(nil)).Elem()
}

func (i GetLoadBalancerHealthcheckArray) ToGetLoadBalancerHealthcheckArrayOutput() GetLoadBalancerHealthcheckArrayOutput {
	return i.ToGetLoadBalancerHealthcheckArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerHealthcheckArray) ToGetLoadBalancerHealthcheckArrayOutputWithContext(ctx context.Context) GetLoadBalancerHealthcheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerHealthcheckArrayOutput)
}

type GetLoadBalancerHealthcheckOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerHealthcheck)(nil)).Elem()
}

func (o GetLoadBalancerHealthcheckOutput) ToGetLoadBalancerHealthcheckOutput() GetLoadBalancerHealthcheckOutput {
	return o
}

func (o GetLoadBalancerHealthcheckOutput) ToGetLoadBalancerHealthcheckOutputWithContext(ctx context.Context) GetLoadBalancerHealthcheckOutput {
	return o
}

func (o GetLoadBalancerHealthcheckOutput) CheckIntervalSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.CheckIntervalSeconds }).(pulumi.IntOutput)
}

func (o GetLoadBalancerHealthcheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o GetLoadBalancerHealthcheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetLoadBalancerHealthcheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetLoadBalancerHealthcheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetLoadBalancerHealthcheckOutput) ResponseTimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.ResponseTimeoutSeconds }).(pulumi.IntOutput)
}

func (o GetLoadBalancerHealthcheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetLoadBalancerHealthcheckArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerHealthcheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerHealthcheck)(nil)).Elem()
}

func (o GetLoadBalancerHealthcheckArrayOutput) ToGetLoadBalancerHealthcheckArrayOutput() GetLoadBalancerHealthcheckArrayOutput {
	return o
}

func (o GetLoadBalancerHealthcheckArrayOutput) ToGetLoadBalancerHealthcheckArrayOutputWithContext(ctx context.Context) GetLoadBalancerHealthcheckArrayOutput {
	return o
}

func (o GetLoadBalancerHealthcheckArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerHealthcheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerHealthcheck {
		return vs[0].([]GetLoadBalancerHealthcheck)[vs[1].(int)]
	}).(GetLoadBalancerHealthcheckOutput)
}

type GetLoadBalancerStickySession struct {
	CookieName       string `pulumi:"cookieName"`
	CookieTtlSeconds int    `pulumi:"cookieTtlSeconds"`
	Type             string `pulumi:"type"`
}

// GetLoadBalancerStickySessionInput is an input type that accepts GetLoadBalancerStickySessionArgs and GetLoadBalancerStickySessionOutput values.
// You can construct a concrete instance of `GetLoadBalancerStickySessionInput` via:
//
//          GetLoadBalancerStickySessionArgs{...}
type GetLoadBalancerStickySessionInput interface {
	pulumi.Input

	ToGetLoadBalancerStickySessionOutput() GetLoadBalancerStickySessionOutput
	ToGetLoadBalancerStickySessionOutputWithContext(context.Context) GetLoadBalancerStickySessionOutput
}

type GetLoadBalancerStickySessionArgs struct {
	CookieName       pulumi.StringInput `pulumi:"cookieName"`
	CookieTtlSeconds pulumi.IntInput    `pulumi:"cookieTtlSeconds"`
	Type             pulumi.StringInput `pulumi:"type"`
}

func (GetLoadBalancerStickySessionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerStickySession)(nil)).Elem()
}

func (i GetLoadBalancerStickySessionArgs) ToGetLoadBalancerStickySessionOutput() GetLoadBalancerStickySessionOutput {
	return i.ToGetLoadBalancerStickySessionOutputWithContext(context.Background())
}

func (i GetLoadBalancerStickySessionArgs) ToGetLoadBalancerStickySessionOutputWithContext(ctx context.Context) GetLoadBalancerStickySessionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerStickySessionOutput)
}

// GetLoadBalancerStickySessionArrayInput is an input type that accepts GetLoadBalancerStickySessionArray and GetLoadBalancerStickySessionArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerStickySessionArrayInput` via:
//
//          GetLoadBalancerStickySessionArray{ GetLoadBalancerStickySessionArgs{...} }
type GetLoadBalancerStickySessionArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerStickySessionArrayOutput() GetLoadBalancerStickySessionArrayOutput
	ToGetLoadBalancerStickySessionArrayOutputWithContext(context.Context) GetLoadBalancerStickySessionArrayOutput
}

type GetLoadBalancerStickySessionArray []GetLoadBalancerStickySessionInput

func (GetLoadBalancerStickySessionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerStickySession)(nil)).Elem()
}

func (i GetLoadBalancerStickySessionArray) ToGetLoadBalancerStickySessionArrayOutput() GetLoadBalancerStickySessionArrayOutput {
	return i.ToGetLoadBalancerStickySessionArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerStickySessionArray) ToGetLoadBalancerStickySessionArrayOutputWithContext(ctx context.Context) GetLoadBalancerStickySessionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerStickySessionArrayOutput)
}

type GetLoadBalancerStickySessionOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerStickySessionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerStickySession)(nil)).Elem()
}

func (o GetLoadBalancerStickySessionOutput) ToGetLoadBalancerStickySessionOutput() GetLoadBalancerStickySessionOutput {
	return o
}

func (o GetLoadBalancerStickySessionOutput) ToGetLoadBalancerStickySessionOutputWithContext(ctx context.Context) GetLoadBalancerStickySessionOutput {
	return o
}

func (o GetLoadBalancerStickySessionOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerStickySession) string { return v.CookieName }).(pulumi.StringOutput)
}

func (o GetLoadBalancerStickySessionOutput) CookieTtlSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerStickySession) int { return v.CookieTtlSeconds }).(pulumi.IntOutput)
}

func (o GetLoadBalancerStickySessionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerStickySession) string { return v.Type }).(pulumi.StringOutput)
}

type GetLoadBalancerStickySessionArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerStickySessionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerStickySession)(nil)).Elem()
}

func (o GetLoadBalancerStickySessionArrayOutput) ToGetLoadBalancerStickySessionArrayOutput() GetLoadBalancerStickySessionArrayOutput {
	return o
}

func (o GetLoadBalancerStickySessionArrayOutput) ToGetLoadBalancerStickySessionArrayOutputWithContext(ctx context.Context) GetLoadBalancerStickySessionArrayOutput {
	return o
}

func (o GetLoadBalancerStickySessionArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerStickySessionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerStickySession {
		return vs[0].([]GetLoadBalancerStickySession)[vs[1].(int)]
	}).(GetLoadBalancerStickySessionOutput)
}

type GetProjectsFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the projects by this key. This may be one of `name`,
	// `purpose`, `description`, `environment`, or `isDefault`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves projects
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetProjectsFilterInput is an input type that accepts GetProjectsFilterArgs and GetProjectsFilterOutput values.
// You can construct a concrete instance of `GetProjectsFilterInput` via:
//
//          GetProjectsFilterArgs{...}
type GetProjectsFilterInput interface {
	pulumi.Input

	ToGetProjectsFilterOutput() GetProjectsFilterOutput
	ToGetProjectsFilterOutputWithContext(context.Context) GetProjectsFilterOutput
}

type GetProjectsFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the projects by this key. This may be one of `name`,
	// `purpose`, `description`, `environment`, or `isDefault`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves projects
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProjectsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return i.ToGetProjectsFilterOutputWithContext(context.Background())
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterOutput)
}

// GetProjectsFilterArrayInput is an input type that accepts GetProjectsFilterArray and GetProjectsFilterArrayOutput values.
// You can construct a concrete instance of `GetProjectsFilterArrayInput` via:
//
//          GetProjectsFilterArray{ GetProjectsFilterArgs{...} }
type GetProjectsFilterArrayInput interface {
	pulumi.Input

	ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput
	ToGetProjectsFilterArrayOutputWithContext(context.Context) GetProjectsFilterArrayOutput
}

type GetProjectsFilterArray []GetProjectsFilterInput

func (GetProjectsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return i.ToGetProjectsFilterArrayOutputWithContext(context.Background())
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterArrayOutput)
}

type GetProjectsFilterOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return o
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetProjectsFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetProjectsFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the projects by this key. This may be one of `name`,
// `purpose`, `description`, `environment`, or `isDefault`.
func (o GetProjectsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetProjectsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// A list of values to match against the `key` field. Only retrieves projects
// where the `key` field takes on one or more of the values provided here.
func (o GetProjectsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProjectsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) Index(i pulumi.IntInput) GetProjectsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsFilter {
		return vs[0].([]GetProjectsFilter)[vs[1].(int)]
	}).(GetProjectsFilterOutput)
}

type GetProjectsProject struct {
	// The date and time when the project was created, (ISO8601)
	CreatedAt string `pulumi:"createdAt"`
	// The description of the project
	Description string `pulumi:"description"`
	// The environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`.
	Environment string `pulumi:"environment"`
	// The ID of the project
	Id        string `pulumi:"id"`
	IsDefault bool   `pulumi:"isDefault"`
	// The name of the project
	Name string `pulumi:"name"`
	// The ID of the project owner
	OwnerId int `pulumi:"ownerId"`
	// The unique universal identifier of the project owner
	OwnerUuid string `pulumi:"ownerUuid"`
	// The purpose of the project (Default: "Web Application")
	Purpose string `pulumi:"purpose"`
	// A set of uniform resource names (URNs) for the resources associated with the project
	Resources []string `pulumi:"resources"`
	// The date and time when the project was last updated, (ISO8601)
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetProjectsProjectInput is an input type that accepts GetProjectsProjectArgs and GetProjectsProjectOutput values.
// You can construct a concrete instance of `GetProjectsProjectInput` via:
//
//          GetProjectsProjectArgs{...}
type GetProjectsProjectInput interface {
	pulumi.Input

	ToGetProjectsProjectOutput() GetProjectsProjectOutput
	ToGetProjectsProjectOutputWithContext(context.Context) GetProjectsProjectOutput
}

type GetProjectsProjectArgs struct {
	// The date and time when the project was created, (ISO8601)
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The description of the project
	Description pulumi.StringInput `pulumi:"description"`
	// The environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`.
	Environment pulumi.StringInput `pulumi:"environment"`
	// The ID of the project
	Id        pulumi.StringInput `pulumi:"id"`
	IsDefault pulumi.BoolInput   `pulumi:"isDefault"`
	// The name of the project
	Name pulumi.StringInput `pulumi:"name"`
	// The ID of the project owner
	OwnerId pulumi.IntInput `pulumi:"ownerId"`
	// The unique universal identifier of the project owner
	OwnerUuid pulumi.StringInput `pulumi:"ownerUuid"`
	// The purpose of the project (Default: "Web Application")
	Purpose pulumi.StringInput `pulumi:"purpose"`
	// A set of uniform resource names (URNs) for the resources associated with the project
	Resources pulumi.StringArrayInput `pulumi:"resources"`
	// The date and time when the project was last updated, (ISO8601)
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetProjectsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return i.ToGetProjectsProjectOutputWithContext(context.Background())
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectOutput)
}

// GetProjectsProjectArrayInput is an input type that accepts GetProjectsProjectArray and GetProjectsProjectArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectArrayInput` via:
//
//          GetProjectsProjectArray{ GetProjectsProjectArgs{...} }
type GetProjectsProjectArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput
	ToGetProjectsProjectArrayOutputWithContext(context.Context) GetProjectsProjectArrayOutput
}

type GetProjectsProjectArray []GetProjectsProjectInput

func (GetProjectsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return i.ToGetProjectsProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectArrayOutput)
}

type GetProjectsProjectOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return o
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return o
}

// The date and time when the project was created, (ISO8601)
func (o GetProjectsProjectOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The description of the project
func (o GetProjectsProjectOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Description }).(pulumi.StringOutput)
}

// The environment of the project's resources. The possible values are: `Development`, `Staging`, `Production`.
func (o GetProjectsProjectOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Environment }).(pulumi.StringOutput)
}

// The ID of the project
func (o GetProjectsProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

// The name of the project
func (o GetProjectsProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Name }).(pulumi.StringOutput)
}

// The ID of the project owner
func (o GetProjectsProjectOutput) OwnerId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.OwnerId }).(pulumi.IntOutput)
}

// The unique universal identifier of the project owner
func (o GetProjectsProjectOutput) OwnerUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.OwnerUuid }).(pulumi.StringOutput)
}

// The purpose of the project (Default: "Web Application")
func (o GetProjectsProjectOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Purpose }).(pulumi.StringOutput)
}

// A set of uniform resource names (URNs) for the resources associated with the project
func (o GetProjectsProjectOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

// The date and time when the project was last updated, (ISO8601)
func (o GetProjectsProjectOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetProjectsProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProject {
		return vs[0].([]GetProjectsProject)[vs[1].(int)]
	}).(GetProjectsProjectOutput)
}

type GetProjectsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the projects by this key. This may be one of `name`,
	// `purpose`, `description`, or `environment`.
	Key string `pulumi:"key"`
}

// GetProjectsSortInput is an input type that accepts GetProjectsSortArgs and GetProjectsSortOutput values.
// You can construct a concrete instance of `GetProjectsSortInput` via:
//
//          GetProjectsSortArgs{...}
type GetProjectsSortInput interface {
	pulumi.Input

	ToGetProjectsSortOutput() GetProjectsSortOutput
	ToGetProjectsSortOutputWithContext(context.Context) GetProjectsSortOutput
}

type GetProjectsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the projects by this key. This may be one of `name`,
	// `purpose`, `description`, or `environment`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetProjectsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsSort)(nil)).Elem()
}

func (i GetProjectsSortArgs) ToGetProjectsSortOutput() GetProjectsSortOutput {
	return i.ToGetProjectsSortOutputWithContext(context.Background())
}

func (i GetProjectsSortArgs) ToGetProjectsSortOutputWithContext(ctx context.Context) GetProjectsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsSortOutput)
}

// GetProjectsSortArrayInput is an input type that accepts GetProjectsSortArray and GetProjectsSortArrayOutput values.
// You can construct a concrete instance of `GetProjectsSortArrayInput` via:
//
//          GetProjectsSortArray{ GetProjectsSortArgs{...} }
type GetProjectsSortArrayInput interface {
	pulumi.Input

	ToGetProjectsSortArrayOutput() GetProjectsSortArrayOutput
	ToGetProjectsSortArrayOutputWithContext(context.Context) GetProjectsSortArrayOutput
}

type GetProjectsSortArray []GetProjectsSortInput

func (GetProjectsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsSort)(nil)).Elem()
}

func (i GetProjectsSortArray) ToGetProjectsSortArrayOutput() GetProjectsSortArrayOutput {
	return i.ToGetProjectsSortArrayOutputWithContext(context.Background())
}

func (i GetProjectsSortArray) ToGetProjectsSortArrayOutputWithContext(ctx context.Context) GetProjectsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsSortArrayOutput)
}

type GetProjectsSortOutput struct{ *pulumi.OutputState }

func (GetProjectsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsSort)(nil)).Elem()
}

func (o GetProjectsSortOutput) ToGetProjectsSortOutput() GetProjectsSortOutput {
	return o
}

func (o GetProjectsSortOutput) ToGetProjectsSortOutputWithContext(ctx context.Context) GetProjectsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetProjectsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the projects by this key. This may be one of `name`,
// `purpose`, `description`, or `environment`.
func (o GetProjectsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetProjectsSortArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsSort)(nil)).Elem()
}

func (o GetProjectsSortArrayOutput) ToGetProjectsSortArrayOutput() GetProjectsSortArrayOutput {
	return o
}

func (o GetProjectsSortArrayOutput) ToGetProjectsSortArrayOutputWithContext(ctx context.Context) GetProjectsSortArrayOutput {
	return o
}

func (o GetProjectsSortArrayOutput) Index(i pulumi.IntInput) GetProjectsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsSort {
		return vs[0].([]GetProjectsSort)[vs[1].(int)]
	}).(GetProjectsSortOutput)
}

type GetRecordsFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the DNS records by this key. This may be one of `domain`, `flags`, `name`, `port`,
	// `priority`, `tag`, `ttl`, `type`, `value`, or `weight`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves DNS records
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetRecordsFilterInput is an input type that accepts GetRecordsFilterArgs and GetRecordsFilterOutput values.
// You can construct a concrete instance of `GetRecordsFilterInput` via:
//
//          GetRecordsFilterArgs{...}
type GetRecordsFilterInput interface {
	pulumi.Input

	ToGetRecordsFilterOutput() GetRecordsFilterOutput
	ToGetRecordsFilterOutputWithContext(context.Context) GetRecordsFilterOutput
}

type GetRecordsFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the DNS records by this key. This may be one of `domain`, `flags`, `name`, `port`,
	// `priority`, `tag`, `ttl`, `type`, `value`, or `weight`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves DNS records
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRecordsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsFilter)(nil)).Elem()
}

func (i GetRecordsFilterArgs) ToGetRecordsFilterOutput() GetRecordsFilterOutput {
	return i.ToGetRecordsFilterOutputWithContext(context.Background())
}

func (i GetRecordsFilterArgs) ToGetRecordsFilterOutputWithContext(ctx context.Context) GetRecordsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsFilterOutput)
}

// GetRecordsFilterArrayInput is an input type that accepts GetRecordsFilterArray and GetRecordsFilterArrayOutput values.
// You can construct a concrete instance of `GetRecordsFilterArrayInput` via:
//
//          GetRecordsFilterArray{ GetRecordsFilterArgs{...} }
type GetRecordsFilterArrayInput interface {
	pulumi.Input

	ToGetRecordsFilterArrayOutput() GetRecordsFilterArrayOutput
	ToGetRecordsFilterArrayOutputWithContext(context.Context) GetRecordsFilterArrayOutput
}

type GetRecordsFilterArray []GetRecordsFilterInput

func (GetRecordsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsFilter)(nil)).Elem()
}

func (i GetRecordsFilterArray) ToGetRecordsFilterArrayOutput() GetRecordsFilterArrayOutput {
	return i.ToGetRecordsFilterArrayOutputWithContext(context.Background())
}

func (i GetRecordsFilterArray) ToGetRecordsFilterArrayOutputWithContext(ctx context.Context) GetRecordsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsFilterArrayOutput)
}

type GetRecordsFilterOutput struct{ *pulumi.OutputState }

func (GetRecordsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsFilter)(nil)).Elem()
}

func (o GetRecordsFilterOutput) ToGetRecordsFilterOutput() GetRecordsFilterOutput {
	return o
}

func (o GetRecordsFilterOutput) ToGetRecordsFilterOutputWithContext(ctx context.Context) GetRecordsFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetRecordsFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRecordsFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the DNS records by this key. This may be one of `domain`, `flags`, `name`, `port`,
// `priority`, `tag`, `ttl`, `type`, `value`, or `weight`.
func (o GetRecordsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetRecordsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecordsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// A list of values to match against the `key` field. Only retrieves DNS records
// where the `key` field takes on one or more of the values provided here.
func (o GetRecordsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRecordsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRecordsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRecordsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsFilter)(nil)).Elem()
}

func (o GetRecordsFilterArrayOutput) ToGetRecordsFilterArrayOutput() GetRecordsFilterArrayOutput {
	return o
}

func (o GetRecordsFilterArrayOutput) ToGetRecordsFilterArrayOutputWithContext(ctx context.Context) GetRecordsFilterArrayOutput {
	return o
}

func (o GetRecordsFilterArrayOutput) Index(i pulumi.IntInput) GetRecordsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecordsFilter {
		return vs[0].([]GetRecordsFilter)[vs[1].(int)]
	}).(GetRecordsFilterOutput)
}

type GetRecordsRecord struct {
	// The domain name to search for DNS records
	Domain   string `pulumi:"domain"`
	Flags    int    `pulumi:"flags"`
	Id       int    `pulumi:"id"`
	Name     string `pulumi:"name"`
	Port     int    `pulumi:"port"`
	Priority int    `pulumi:"priority"`
	Tag      string `pulumi:"tag"`
	Ttl      int    `pulumi:"ttl"`
	Type     string `pulumi:"type"`
	Value    string `pulumi:"value"`
	Weight   int    `pulumi:"weight"`
}

// GetRecordsRecordInput is an input type that accepts GetRecordsRecordArgs and GetRecordsRecordOutput values.
// You can construct a concrete instance of `GetRecordsRecordInput` via:
//
//          GetRecordsRecordArgs{...}
type GetRecordsRecordInput interface {
	pulumi.Input

	ToGetRecordsRecordOutput() GetRecordsRecordOutput
	ToGetRecordsRecordOutputWithContext(context.Context) GetRecordsRecordOutput
}

type GetRecordsRecordArgs struct {
	// The domain name to search for DNS records
	Domain   pulumi.StringInput `pulumi:"domain"`
	Flags    pulumi.IntInput    `pulumi:"flags"`
	Id       pulumi.IntInput    `pulumi:"id"`
	Name     pulumi.StringInput `pulumi:"name"`
	Port     pulumi.IntInput    `pulumi:"port"`
	Priority pulumi.IntInput    `pulumi:"priority"`
	Tag      pulumi.StringInput `pulumi:"tag"`
	Ttl      pulumi.IntInput    `pulumi:"ttl"`
	Type     pulumi.StringInput `pulumi:"type"`
	Value    pulumi.StringInput `pulumi:"value"`
	Weight   pulumi.IntInput    `pulumi:"weight"`
}

func (GetRecordsRecordArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsRecord)(nil)).Elem()
}

func (i GetRecordsRecordArgs) ToGetRecordsRecordOutput() GetRecordsRecordOutput {
	return i.ToGetRecordsRecordOutputWithContext(context.Background())
}

func (i GetRecordsRecordArgs) ToGetRecordsRecordOutputWithContext(ctx context.Context) GetRecordsRecordOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsRecordOutput)
}

// GetRecordsRecordArrayInput is an input type that accepts GetRecordsRecordArray and GetRecordsRecordArrayOutput values.
// You can construct a concrete instance of `GetRecordsRecordArrayInput` via:
//
//          GetRecordsRecordArray{ GetRecordsRecordArgs{...} }
type GetRecordsRecordArrayInput interface {
	pulumi.Input

	ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput
	ToGetRecordsRecordArrayOutputWithContext(context.Context) GetRecordsRecordArrayOutput
}

type GetRecordsRecordArray []GetRecordsRecordInput

func (GetRecordsRecordArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsRecord)(nil)).Elem()
}

func (i GetRecordsRecordArray) ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput {
	return i.ToGetRecordsRecordArrayOutputWithContext(context.Background())
}

func (i GetRecordsRecordArray) ToGetRecordsRecordArrayOutputWithContext(ctx context.Context) GetRecordsRecordArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsRecordArrayOutput)
}

type GetRecordsRecordOutput struct{ *pulumi.OutputState }

func (GetRecordsRecordOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsRecord)(nil)).Elem()
}

func (o GetRecordsRecordOutput) ToGetRecordsRecordOutput() GetRecordsRecordOutput {
	return o
}

func (o GetRecordsRecordOutput) ToGetRecordsRecordOutputWithContext(ctx context.Context) GetRecordsRecordOutput {
	return o
}

// The domain name to search for DNS records
func (o GetRecordsRecordOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetRecordsRecordOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordsRecord) int { return v.Flags }).(pulumi.IntOutput)
}

func (o GetRecordsRecordOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordsRecord) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetRecordsRecordOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRecordsRecordOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordsRecord) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRecordsRecordOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordsRecord) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetRecordsRecordOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Tag }).(pulumi.StringOutput)
}

func (o GetRecordsRecordOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordsRecord) int { return v.Ttl }).(pulumi.IntOutput)
}

func (o GetRecordsRecordOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetRecordsRecordOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsRecord) string { return v.Value }).(pulumi.StringOutput)
}

func (o GetRecordsRecordOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordsRecord) int { return v.Weight }).(pulumi.IntOutput)
}

type GetRecordsRecordArrayOutput struct{ *pulumi.OutputState }

func (GetRecordsRecordArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsRecord)(nil)).Elem()
}

func (o GetRecordsRecordArrayOutput) ToGetRecordsRecordArrayOutput() GetRecordsRecordArrayOutput {
	return o
}

func (o GetRecordsRecordArrayOutput) ToGetRecordsRecordArrayOutputWithContext(ctx context.Context) GetRecordsRecordArrayOutput {
	return o
}

func (o GetRecordsRecordArrayOutput) Index(i pulumi.IntInput) GetRecordsRecordOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecordsRecord {
		return vs[0].([]GetRecordsRecord)[vs[1].(int)]
	}).(GetRecordsRecordOutput)
}

type GetRecordsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the DNS records by this key. This may be one of `domain`, `flags`, `name`, `port`,
	// `priority`, `tag`, `ttl`, `type`, `value`, or `weight`.
	Key string `pulumi:"key"`
}

// GetRecordsSortInput is an input type that accepts GetRecordsSortArgs and GetRecordsSortOutput values.
// You can construct a concrete instance of `GetRecordsSortInput` via:
//
//          GetRecordsSortArgs{...}
type GetRecordsSortInput interface {
	pulumi.Input

	ToGetRecordsSortOutput() GetRecordsSortOutput
	ToGetRecordsSortOutputWithContext(context.Context) GetRecordsSortOutput
}

type GetRecordsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the DNS records by this key. This may be one of `domain`, `flags`, `name`, `port`,
	// `priority`, `tag`, `ttl`, `type`, `value`, or `weight`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetRecordsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsSort)(nil)).Elem()
}

func (i GetRecordsSortArgs) ToGetRecordsSortOutput() GetRecordsSortOutput {
	return i.ToGetRecordsSortOutputWithContext(context.Background())
}

func (i GetRecordsSortArgs) ToGetRecordsSortOutputWithContext(ctx context.Context) GetRecordsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsSortOutput)
}

// GetRecordsSortArrayInput is an input type that accepts GetRecordsSortArray and GetRecordsSortArrayOutput values.
// You can construct a concrete instance of `GetRecordsSortArrayInput` via:
//
//          GetRecordsSortArray{ GetRecordsSortArgs{...} }
type GetRecordsSortArrayInput interface {
	pulumi.Input

	ToGetRecordsSortArrayOutput() GetRecordsSortArrayOutput
	ToGetRecordsSortArrayOutputWithContext(context.Context) GetRecordsSortArrayOutput
}

type GetRecordsSortArray []GetRecordsSortInput

func (GetRecordsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsSort)(nil)).Elem()
}

func (i GetRecordsSortArray) ToGetRecordsSortArrayOutput() GetRecordsSortArrayOutput {
	return i.ToGetRecordsSortArrayOutputWithContext(context.Background())
}

func (i GetRecordsSortArray) ToGetRecordsSortArrayOutputWithContext(ctx context.Context) GetRecordsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRecordsSortArrayOutput)
}

type GetRecordsSortOutput struct{ *pulumi.OutputState }

func (GetRecordsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordsSort)(nil)).Elem()
}

func (o GetRecordsSortOutput) ToGetRecordsSortOutput() GetRecordsSortOutput {
	return o
}

func (o GetRecordsSortOutput) ToGetRecordsSortOutputWithContext(ctx context.Context) GetRecordsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetRecordsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRecordsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the DNS records by this key. This may be one of `domain`, `flags`, `name`, `port`,
// `priority`, `tag`, `ttl`, `type`, `value`, or `weight`.
func (o GetRecordsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetRecordsSortArrayOutput struct{ *pulumi.OutputState }

func (GetRecordsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRecordsSort)(nil)).Elem()
}

func (o GetRecordsSortArrayOutput) ToGetRecordsSortArrayOutput() GetRecordsSortArrayOutput {
	return o
}

func (o GetRecordsSortArrayOutput) ToGetRecordsSortArrayOutputWithContext(ctx context.Context) GetRecordsSortArrayOutput {
	return o
}

func (o GetRecordsSortArrayOutput) Index(i pulumi.IntInput) GetRecordsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRecordsSort {
		return vs[0].([]GetRecordsSort)[vs[1].(int)]
	}).(GetRecordsSortOutput)
}

type GetRegionsFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the regions by this key. This may be one of `slug`,
	// `name`, `available`, `features`, or `sizes`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves regions
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetRegionsFilterInput is an input type that accepts GetRegionsFilterArgs and GetRegionsFilterOutput values.
// You can construct a concrete instance of `GetRegionsFilterInput` via:
//
//          GetRegionsFilterArgs{...}
type GetRegionsFilterInput interface {
	pulumi.Input

	ToGetRegionsFilterOutput() GetRegionsFilterOutput
	ToGetRegionsFilterOutputWithContext(context.Context) GetRegionsFilterOutput
}

type GetRegionsFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the regions by this key. This may be one of `slug`,
	// `name`, `available`, `features`, or `sizes`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves regions
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRegionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsFilter)(nil)).Elem()
}

func (i GetRegionsFilterArgs) ToGetRegionsFilterOutput() GetRegionsFilterOutput {
	return i.ToGetRegionsFilterOutputWithContext(context.Background())
}

func (i GetRegionsFilterArgs) ToGetRegionsFilterOutputWithContext(ctx context.Context) GetRegionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsFilterOutput)
}

// GetRegionsFilterArrayInput is an input type that accepts GetRegionsFilterArray and GetRegionsFilterArrayOutput values.
// You can construct a concrete instance of `GetRegionsFilterArrayInput` via:
//
//          GetRegionsFilterArray{ GetRegionsFilterArgs{...} }
type GetRegionsFilterArrayInput interface {
	pulumi.Input

	ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput
	ToGetRegionsFilterArrayOutputWithContext(context.Context) GetRegionsFilterArrayOutput
}

type GetRegionsFilterArray []GetRegionsFilterInput

func (GetRegionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsFilter)(nil)).Elem()
}

func (i GetRegionsFilterArray) ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput {
	return i.ToGetRegionsFilterArrayOutputWithContext(context.Background())
}

func (i GetRegionsFilterArray) ToGetRegionsFilterArrayOutputWithContext(ctx context.Context) GetRegionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsFilterArrayOutput)
}

type GetRegionsFilterOutput struct{ *pulumi.OutputState }

func (GetRegionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsFilter)(nil)).Elem()
}

func (o GetRegionsFilterOutput) ToGetRegionsFilterOutput() GetRegionsFilterOutput {
	return o
}

func (o GetRegionsFilterOutput) ToGetRegionsFilterOutputWithContext(ctx context.Context) GetRegionsFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetRegionsFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetRegionsFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the regions by this key. This may be one of `slug`,
// `name`, `available`, `features`, or `sizes`.
func (o GetRegionsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetRegionsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// A list of values to match against the `key` field. Only retrieves regions
// where the `key` field takes on one or more of the values provided here.
func (o GetRegionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRegionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsFilter)(nil)).Elem()
}

func (o GetRegionsFilterArrayOutput) ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput {
	return o
}

func (o GetRegionsFilterArrayOutput) ToGetRegionsFilterArrayOutputWithContext(ctx context.Context) GetRegionsFilterArrayOutput {
	return o
}

func (o GetRegionsFilterArrayOutput) Index(i pulumi.IntInput) GetRegionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsFilter {
		return vs[0].([]GetRegionsFilter)[vs[1].(int)]
	}).(GetRegionsFilterOutput)
}

type GetRegionsRegion struct {
	// A boolean value that represents whether new Droplets can be created in this region.
	Available bool `pulumi:"available"`
	// A set of features available in this region.
	Features []string `pulumi:"features"`
	// The display name of the region.
	Name string `pulumi:"name"`
	// A set of identifying slugs for the Droplet sizes available in this region.
	Sizes []string `pulumi:"sizes"`
	// A human-readable string that is used as a unique identifier for each region.
	Slug string `pulumi:"slug"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
//          GetRegionsRegionArgs{...}
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	// A boolean value that represents whether new Droplets can be created in this region.
	Available pulumi.BoolInput `pulumi:"available"`
	// A set of features available in this region.
	Features pulumi.StringArrayInput `pulumi:"features"`
	// The display name of the region.
	Name pulumi.StringInput `pulumi:"name"`
	// A set of identifying slugs for the Droplet sizes available in this region.
	Sizes pulumi.StringArrayInput `pulumi:"sizes"`
	// A human-readable string that is used as a unique identifier for each region.
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
//          GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

// A boolean value that represents whether new Droplets can be created in this region.
func (o GetRegionsRegionOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRegionsRegion) bool { return v.Available }).(pulumi.BoolOutput)
}

// A set of features available in this region.
func (o GetRegionsRegionOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionsRegion) []string { return v.Features }).(pulumi.StringArrayOutput)
}

// The display name of the region.
func (o GetRegionsRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Name }).(pulumi.StringOutput)
}

// A set of identifying slugs for the Droplet sizes available in this region.
func (o GetRegionsRegionOutput) Sizes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionsRegion) []string { return v.Sizes }).(pulumi.StringArrayOutput)
}

// A human-readable string that is used as a unique identifier for each region.
func (o GetRegionsRegionOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Slug }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetRegionsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the regions by this key. This may be one of `slug`,
	// `name`, or `available`.
	Key string `pulumi:"key"`
}

// GetRegionsSortInput is an input type that accepts GetRegionsSortArgs and GetRegionsSortOutput values.
// You can construct a concrete instance of `GetRegionsSortInput` via:
//
//          GetRegionsSortArgs{...}
type GetRegionsSortInput interface {
	pulumi.Input

	ToGetRegionsSortOutput() GetRegionsSortOutput
	ToGetRegionsSortOutputWithContext(context.Context) GetRegionsSortOutput
}

type GetRegionsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the regions by this key. This may be one of `slug`,
	// `name`, or `available`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetRegionsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsSort)(nil)).Elem()
}

func (i GetRegionsSortArgs) ToGetRegionsSortOutput() GetRegionsSortOutput {
	return i.ToGetRegionsSortOutputWithContext(context.Background())
}

func (i GetRegionsSortArgs) ToGetRegionsSortOutputWithContext(ctx context.Context) GetRegionsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsSortOutput)
}

// GetRegionsSortArrayInput is an input type that accepts GetRegionsSortArray and GetRegionsSortArrayOutput values.
// You can construct a concrete instance of `GetRegionsSortArrayInput` via:
//
//          GetRegionsSortArray{ GetRegionsSortArgs{...} }
type GetRegionsSortArrayInput interface {
	pulumi.Input

	ToGetRegionsSortArrayOutput() GetRegionsSortArrayOutput
	ToGetRegionsSortArrayOutputWithContext(context.Context) GetRegionsSortArrayOutput
}

type GetRegionsSortArray []GetRegionsSortInput

func (GetRegionsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsSort)(nil)).Elem()
}

func (i GetRegionsSortArray) ToGetRegionsSortArrayOutput() GetRegionsSortArrayOutput {
	return i.ToGetRegionsSortArrayOutputWithContext(context.Background())
}

func (i GetRegionsSortArray) ToGetRegionsSortArrayOutputWithContext(ctx context.Context) GetRegionsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsSortArrayOutput)
}

type GetRegionsSortOutput struct{ *pulumi.OutputState }

func (GetRegionsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsSort)(nil)).Elem()
}

func (o GetRegionsSortOutput) ToGetRegionsSortOutput() GetRegionsSortOutput {
	return o
}

func (o GetRegionsSortOutput) ToGetRegionsSortOutputWithContext(ctx context.Context) GetRegionsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetRegionsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the regions by this key. This may be one of `slug`,
// `name`, or `available`.
func (o GetRegionsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetRegionsSortArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsSort)(nil)).Elem()
}

func (o GetRegionsSortArrayOutput) ToGetRegionsSortArrayOutput() GetRegionsSortArrayOutput {
	return o
}

func (o GetRegionsSortArrayOutput) ToGetRegionsSortArrayOutputWithContext(ctx context.Context) GetRegionsSortArrayOutput {
	return o
}

func (o GetRegionsSortArrayOutput) Index(i pulumi.IntInput) GetRegionsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsSort {
		return vs[0].([]GetRegionsSort)[vs[1].(int)]
	}).(GetRegionsSortOutput)
}

type GetSizesFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the sizes by this key. This may be one of `slug`,
	// `regions`, `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`,
	// `priceHourly`, or `available`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// Only retrieves sizes which keys has value that matches
	// one of the values provided here.
	Values []string `pulumi:"values"`
}

// GetSizesFilterInput is an input type that accepts GetSizesFilterArgs and GetSizesFilterOutput values.
// You can construct a concrete instance of `GetSizesFilterInput` via:
//
//          GetSizesFilterArgs{...}
type GetSizesFilterInput interface {
	pulumi.Input

	ToGetSizesFilterOutput() GetSizesFilterOutput
	ToGetSizesFilterOutputWithContext(context.Context) GetSizesFilterOutput
}

type GetSizesFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the sizes by this key. This may be one of `slug`,
	// `regions`, `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`,
	// `priceHourly`, or `available`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// Only retrieves sizes which keys has value that matches
	// one of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSizesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesFilter)(nil)).Elem()
}

func (i GetSizesFilterArgs) ToGetSizesFilterOutput() GetSizesFilterOutput {
	return i.ToGetSizesFilterOutputWithContext(context.Background())
}

func (i GetSizesFilterArgs) ToGetSizesFilterOutputWithContext(ctx context.Context) GetSizesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesFilterOutput)
}

// GetSizesFilterArrayInput is an input type that accepts GetSizesFilterArray and GetSizesFilterArrayOutput values.
// You can construct a concrete instance of `GetSizesFilterArrayInput` via:
//
//          GetSizesFilterArray{ GetSizesFilterArgs{...} }
type GetSizesFilterArrayInput interface {
	pulumi.Input

	ToGetSizesFilterArrayOutput() GetSizesFilterArrayOutput
	ToGetSizesFilterArrayOutputWithContext(context.Context) GetSizesFilterArrayOutput
}

type GetSizesFilterArray []GetSizesFilterInput

func (GetSizesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesFilter)(nil)).Elem()
}

func (i GetSizesFilterArray) ToGetSizesFilterArrayOutput() GetSizesFilterArrayOutput {
	return i.ToGetSizesFilterArrayOutputWithContext(context.Background())
}

func (i GetSizesFilterArray) ToGetSizesFilterArrayOutputWithContext(ctx context.Context) GetSizesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesFilterArrayOutput)
}

type GetSizesFilterOutput struct{ *pulumi.OutputState }

func (GetSizesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesFilter)(nil)).Elem()
}

func (o GetSizesFilterOutput) ToGetSizesFilterOutput() GetSizesFilterOutput {
	return o
}

func (o GetSizesFilterOutput) ToGetSizesFilterOutputWithContext(ctx context.Context) GetSizesFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetSizesFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSizesFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the sizes by this key. This may be one of `slug`,
// `regions`, `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`,
// `priceHourly`, or `available`.
func (o GetSizesFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizesFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetSizesFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSizesFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// Only retrieves sizes which keys has value that matches
// one of the values provided here.
func (o GetSizesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSizesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSizesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSizesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesFilter)(nil)).Elem()
}

func (o GetSizesFilterArrayOutput) ToGetSizesFilterArrayOutput() GetSizesFilterArrayOutput {
	return o
}

func (o GetSizesFilterArrayOutput) ToGetSizesFilterArrayOutputWithContext(ctx context.Context) GetSizesFilterArrayOutput {
	return o
}

func (o GetSizesFilterArrayOutput) Index(i pulumi.IntInput) GetSizesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizesFilter {
		return vs[0].([]GetSizesFilter)[vs[1].(int)]
	}).(GetSizesFilterOutput)
}

type GetSizesSize struct {
	// This represents whether new Droplets can be created with this size.
	Available bool `pulumi:"available"`
	// The amount of disk space set aside for Droplets of this size. The value is measured in gigabytes.
	Disk int `pulumi:"disk"`
	// The amount of RAM allocated to Droplets created of this size. The value is measured in megabytes.
	Memory int `pulumi:"memory"`
	// The hourly cost of Droplets created in this size as measured hourly. The value is measured in US dollars.
	PriceHourly float64 `pulumi:"priceHourly"`
	// The monthly cost of Droplets created in this size if they are kept for an entire month. The value is measured in US dollars.
	PriceMonthly float64 `pulumi:"priceMonthly"`
	// List of region slugs where Droplets can be created in this size.
	Regions []string `pulumi:"regions"`
	// A human-readable string that is used to uniquely identify each size.
	Slug string `pulumi:"slug"`
	// The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.
	Transfer float64 `pulumi:"transfer"`
	// The number of CPUs allocated to Droplets of this size.
	Vcpus int `pulumi:"vcpus"`
}

// GetSizesSizeInput is an input type that accepts GetSizesSizeArgs and GetSizesSizeOutput values.
// You can construct a concrete instance of `GetSizesSizeInput` via:
//
//          GetSizesSizeArgs{...}
type GetSizesSizeInput interface {
	pulumi.Input

	ToGetSizesSizeOutput() GetSizesSizeOutput
	ToGetSizesSizeOutputWithContext(context.Context) GetSizesSizeOutput
}

type GetSizesSizeArgs struct {
	// This represents whether new Droplets can be created with this size.
	Available pulumi.BoolInput `pulumi:"available"`
	// The amount of disk space set aside for Droplets of this size. The value is measured in gigabytes.
	Disk pulumi.IntInput `pulumi:"disk"`
	// The amount of RAM allocated to Droplets created of this size. The value is measured in megabytes.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The hourly cost of Droplets created in this size as measured hourly. The value is measured in US dollars.
	PriceHourly pulumi.Float64Input `pulumi:"priceHourly"`
	// The monthly cost of Droplets created in this size if they are kept for an entire month. The value is measured in US dollars.
	PriceMonthly pulumi.Float64Input `pulumi:"priceMonthly"`
	// List of region slugs where Droplets can be created in this size.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// A human-readable string that is used to uniquely identify each size.
	Slug pulumi.StringInput `pulumi:"slug"`
	// The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.
	Transfer pulumi.Float64Input `pulumi:"transfer"`
	// The number of CPUs allocated to Droplets of this size.
	Vcpus pulumi.IntInput `pulumi:"vcpus"`
}

func (GetSizesSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesSize)(nil)).Elem()
}

func (i GetSizesSizeArgs) ToGetSizesSizeOutput() GetSizesSizeOutput {
	return i.ToGetSizesSizeOutputWithContext(context.Background())
}

func (i GetSizesSizeArgs) ToGetSizesSizeOutputWithContext(ctx context.Context) GetSizesSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesSizeOutput)
}

// GetSizesSizeArrayInput is an input type that accepts GetSizesSizeArray and GetSizesSizeArrayOutput values.
// You can construct a concrete instance of `GetSizesSizeArrayInput` via:
//
//          GetSizesSizeArray{ GetSizesSizeArgs{...} }
type GetSizesSizeArrayInput interface {
	pulumi.Input

	ToGetSizesSizeArrayOutput() GetSizesSizeArrayOutput
	ToGetSizesSizeArrayOutputWithContext(context.Context) GetSizesSizeArrayOutput
}

type GetSizesSizeArray []GetSizesSizeInput

func (GetSizesSizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesSize)(nil)).Elem()
}

func (i GetSizesSizeArray) ToGetSizesSizeArrayOutput() GetSizesSizeArrayOutput {
	return i.ToGetSizesSizeArrayOutputWithContext(context.Background())
}

func (i GetSizesSizeArray) ToGetSizesSizeArrayOutputWithContext(ctx context.Context) GetSizesSizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesSizeArrayOutput)
}

type GetSizesSizeOutput struct{ *pulumi.OutputState }

func (GetSizesSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesSize)(nil)).Elem()
}

func (o GetSizesSizeOutput) ToGetSizesSizeOutput() GetSizesSizeOutput {
	return o
}

func (o GetSizesSizeOutput) ToGetSizesSizeOutputWithContext(ctx context.Context) GetSizesSizeOutput {
	return o
}

// This represents whether new Droplets can be created with this size.
func (o GetSizesSizeOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSizesSize) bool { return v.Available }).(pulumi.BoolOutput)
}

// The amount of disk space set aside for Droplets of this size. The value is measured in gigabytes.
func (o GetSizesSizeOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizesSize) int { return v.Disk }).(pulumi.IntOutput)
}

// The amount of RAM allocated to Droplets created of this size. The value is measured in megabytes.
func (o GetSizesSizeOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizesSize) int { return v.Memory }).(pulumi.IntOutput)
}

// The hourly cost of Droplets created in this size as measured hourly. The value is measured in US dollars.
func (o GetSizesSizeOutput) PriceHourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetSizesSize) float64 { return v.PriceHourly }).(pulumi.Float64Output)
}

// The monthly cost of Droplets created in this size if they are kept for an entire month. The value is measured in US dollars.
func (o GetSizesSizeOutput) PriceMonthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetSizesSize) float64 { return v.PriceMonthly }).(pulumi.Float64Output)
}

// List of region slugs where Droplets can be created in this size.
func (o GetSizesSizeOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSizesSize) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// A human-readable string that is used to uniquely identify each size.
func (o GetSizesSizeOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizesSize) string { return v.Slug }).(pulumi.StringOutput)
}

// The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.
func (o GetSizesSizeOutput) Transfer() pulumi.Float64Output {
	return o.ApplyT(func(v GetSizesSize) float64 { return v.Transfer }).(pulumi.Float64Output)
}

// The number of CPUs allocated to Droplets of this size.
func (o GetSizesSizeOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizesSize) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetSizesSizeArrayOutput struct{ *pulumi.OutputState }

func (GetSizesSizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesSize)(nil)).Elem()
}

func (o GetSizesSizeArrayOutput) ToGetSizesSizeArrayOutput() GetSizesSizeArrayOutput {
	return o
}

func (o GetSizesSizeArrayOutput) ToGetSizesSizeArrayOutputWithContext(ctx context.Context) GetSizesSizeArrayOutput {
	return o
}

func (o GetSizesSizeArrayOutput) Index(i pulumi.IntInput) GetSizesSizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizesSize {
		return vs[0].([]GetSizesSize)[vs[1].(int)]
	}).(GetSizesSizeOutput)
}

type GetSizesSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the sizes by this key. This may be one of `slug`,
	// `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`, or `priceHourly`.
	Key string `pulumi:"key"`
}

// GetSizesSortInput is an input type that accepts GetSizesSortArgs and GetSizesSortOutput values.
// You can construct a concrete instance of `GetSizesSortInput` via:
//
//          GetSizesSortArgs{...}
type GetSizesSortInput interface {
	pulumi.Input

	ToGetSizesSortOutput() GetSizesSortOutput
	ToGetSizesSortOutputWithContext(context.Context) GetSizesSortOutput
}

type GetSizesSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the sizes by this key. This may be one of `slug`,
	// `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`, or `priceHourly`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetSizesSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesSort)(nil)).Elem()
}

func (i GetSizesSortArgs) ToGetSizesSortOutput() GetSizesSortOutput {
	return i.ToGetSizesSortOutputWithContext(context.Background())
}

func (i GetSizesSortArgs) ToGetSizesSortOutputWithContext(ctx context.Context) GetSizesSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesSortOutput)
}

// GetSizesSortArrayInput is an input type that accepts GetSizesSortArray and GetSizesSortArrayOutput values.
// You can construct a concrete instance of `GetSizesSortArrayInput` via:
//
//          GetSizesSortArray{ GetSizesSortArgs{...} }
type GetSizesSortArrayInput interface {
	pulumi.Input

	ToGetSizesSortArrayOutput() GetSizesSortArrayOutput
	ToGetSizesSortArrayOutputWithContext(context.Context) GetSizesSortArrayOutput
}

type GetSizesSortArray []GetSizesSortInput

func (GetSizesSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesSort)(nil)).Elem()
}

func (i GetSizesSortArray) ToGetSizesSortArrayOutput() GetSizesSortArrayOutput {
	return i.ToGetSizesSortArrayOutputWithContext(context.Background())
}

func (i GetSizesSortArray) ToGetSizesSortArrayOutputWithContext(ctx context.Context) GetSizesSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesSortArrayOutput)
}

type GetSizesSortOutput struct{ *pulumi.OutputState }

func (GetSizesSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesSort)(nil)).Elem()
}

func (o GetSizesSortOutput) ToGetSizesSortOutput() GetSizesSortOutput {
	return o
}

func (o GetSizesSortOutput) ToGetSizesSortOutputWithContext(ctx context.Context) GetSizesSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetSizesSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSizesSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the sizes by this key. This may be one of `slug`,
// `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`, or `priceHourly`.
func (o GetSizesSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizesSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetSizesSortArrayOutput struct{ *pulumi.OutputState }

func (GetSizesSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesSort)(nil)).Elem()
}

func (o GetSizesSortArrayOutput) ToGetSizesSortArrayOutput() GetSizesSortArrayOutput {
	return o
}

func (o GetSizesSortArrayOutput) ToGetSizesSortArrayOutputWithContext(ctx context.Context) GetSizesSortArrayOutput {
	return o
}

func (o GetSizesSortArrayOutput) Index(i pulumi.IntInput) GetSizesSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizesSort {
		return vs[0].([]GetSizesSort)[vs[1].(int)]
	}).(GetSizesSortOutput)
}

type GetSpacesBucketsBucket struct {
	// The FQDN of the bucket (e.g. bucket-name.nyc3.digitaloceanspaces.com)
	BucketDomainName string `pulumi:"bucketDomainName"`
	// The name of the Spaces bucket
	Name string `pulumi:"name"`
	// The slug of the region where the bucket is stored.
	Region string `pulumi:"region"`
	// The uniform resource name of the bucket
	Urn string `pulumi:"urn"`
}

// GetSpacesBucketsBucketInput is an input type that accepts GetSpacesBucketsBucketArgs and GetSpacesBucketsBucketOutput values.
// You can construct a concrete instance of `GetSpacesBucketsBucketInput` via:
//
//          GetSpacesBucketsBucketArgs{...}
type GetSpacesBucketsBucketInput interface {
	pulumi.Input

	ToGetSpacesBucketsBucketOutput() GetSpacesBucketsBucketOutput
	ToGetSpacesBucketsBucketOutputWithContext(context.Context) GetSpacesBucketsBucketOutput
}

type GetSpacesBucketsBucketArgs struct {
	// The FQDN of the bucket (e.g. bucket-name.nyc3.digitaloceanspaces.com)
	BucketDomainName pulumi.StringInput `pulumi:"bucketDomainName"`
	// The name of the Spaces bucket
	Name pulumi.StringInput `pulumi:"name"`
	// The slug of the region where the bucket is stored.
	Region pulumi.StringInput `pulumi:"region"`
	// The uniform resource name of the bucket
	Urn pulumi.StringInput `pulumi:"urn"`
}

func (GetSpacesBucketsBucketArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpacesBucketsBucket)(nil)).Elem()
}

func (i GetSpacesBucketsBucketArgs) ToGetSpacesBucketsBucketOutput() GetSpacesBucketsBucketOutput {
	return i.ToGetSpacesBucketsBucketOutputWithContext(context.Background())
}

func (i GetSpacesBucketsBucketArgs) ToGetSpacesBucketsBucketOutputWithContext(ctx context.Context) GetSpacesBucketsBucketOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpacesBucketsBucketOutput)
}

// GetSpacesBucketsBucketArrayInput is an input type that accepts GetSpacesBucketsBucketArray and GetSpacesBucketsBucketArrayOutput values.
// You can construct a concrete instance of `GetSpacesBucketsBucketArrayInput` via:
//
//          GetSpacesBucketsBucketArray{ GetSpacesBucketsBucketArgs{...} }
type GetSpacesBucketsBucketArrayInput interface {
	pulumi.Input

	ToGetSpacesBucketsBucketArrayOutput() GetSpacesBucketsBucketArrayOutput
	ToGetSpacesBucketsBucketArrayOutputWithContext(context.Context) GetSpacesBucketsBucketArrayOutput
}

type GetSpacesBucketsBucketArray []GetSpacesBucketsBucketInput

func (GetSpacesBucketsBucketArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpacesBucketsBucket)(nil)).Elem()
}

func (i GetSpacesBucketsBucketArray) ToGetSpacesBucketsBucketArrayOutput() GetSpacesBucketsBucketArrayOutput {
	return i.ToGetSpacesBucketsBucketArrayOutputWithContext(context.Background())
}

func (i GetSpacesBucketsBucketArray) ToGetSpacesBucketsBucketArrayOutputWithContext(ctx context.Context) GetSpacesBucketsBucketArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpacesBucketsBucketArrayOutput)
}

type GetSpacesBucketsBucketOutput struct{ *pulumi.OutputState }

func (GetSpacesBucketsBucketOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpacesBucketsBucket)(nil)).Elem()
}

func (o GetSpacesBucketsBucketOutput) ToGetSpacesBucketsBucketOutput() GetSpacesBucketsBucketOutput {
	return o
}

func (o GetSpacesBucketsBucketOutput) ToGetSpacesBucketsBucketOutputWithContext(ctx context.Context) GetSpacesBucketsBucketOutput {
	return o
}

// The FQDN of the bucket (e.g. bucket-name.nyc3.digitaloceanspaces.com)
func (o GetSpacesBucketsBucketOutput) BucketDomainName() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesBucketsBucket) string { return v.BucketDomainName }).(pulumi.StringOutput)
}

// The name of the Spaces bucket
func (o GetSpacesBucketsBucketOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesBucketsBucket) string { return v.Name }).(pulumi.StringOutput)
}

// The slug of the region where the bucket is stored.
func (o GetSpacesBucketsBucketOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesBucketsBucket) string { return v.Region }).(pulumi.StringOutput)
}

// The uniform resource name of the bucket
func (o GetSpacesBucketsBucketOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesBucketsBucket) string { return v.Urn }).(pulumi.StringOutput)
}

type GetSpacesBucketsBucketArrayOutput struct{ *pulumi.OutputState }

func (GetSpacesBucketsBucketArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpacesBucketsBucket)(nil)).Elem()
}

func (o GetSpacesBucketsBucketArrayOutput) ToGetSpacesBucketsBucketArrayOutput() GetSpacesBucketsBucketArrayOutput {
	return o
}

func (o GetSpacesBucketsBucketArrayOutput) ToGetSpacesBucketsBucketArrayOutputWithContext(ctx context.Context) GetSpacesBucketsBucketArrayOutput {
	return o
}

func (o GetSpacesBucketsBucketArrayOutput) Index(i pulumi.IntInput) GetSpacesBucketsBucketOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSpacesBucketsBucket {
		return vs[0].([]GetSpacesBucketsBucket)[vs[1].(int)]
	}).(GetSpacesBucketsBucketOutput)
}

type GetSpacesBucketsFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the images by this key. This may be one of `bucketDomainName`, `name`, `region`, or `urn`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves Spaces buckets
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetSpacesBucketsFilterInput is an input type that accepts GetSpacesBucketsFilterArgs and GetSpacesBucketsFilterOutput values.
// You can construct a concrete instance of `GetSpacesBucketsFilterInput` via:
//
//          GetSpacesBucketsFilterArgs{...}
type GetSpacesBucketsFilterInput interface {
	pulumi.Input

	ToGetSpacesBucketsFilterOutput() GetSpacesBucketsFilterOutput
	ToGetSpacesBucketsFilterOutputWithContext(context.Context) GetSpacesBucketsFilterOutput
}

type GetSpacesBucketsFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the images by this key. This may be one of `bucketDomainName`, `name`, `region`, or `urn`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// A list of values to match against the `key` field. Only retrieves Spaces buckets
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSpacesBucketsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpacesBucketsFilter)(nil)).Elem()
}

func (i GetSpacesBucketsFilterArgs) ToGetSpacesBucketsFilterOutput() GetSpacesBucketsFilterOutput {
	return i.ToGetSpacesBucketsFilterOutputWithContext(context.Background())
}

func (i GetSpacesBucketsFilterArgs) ToGetSpacesBucketsFilterOutputWithContext(ctx context.Context) GetSpacesBucketsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpacesBucketsFilterOutput)
}

// GetSpacesBucketsFilterArrayInput is an input type that accepts GetSpacesBucketsFilterArray and GetSpacesBucketsFilterArrayOutput values.
// You can construct a concrete instance of `GetSpacesBucketsFilterArrayInput` via:
//
//          GetSpacesBucketsFilterArray{ GetSpacesBucketsFilterArgs{...} }
type GetSpacesBucketsFilterArrayInput interface {
	pulumi.Input

	ToGetSpacesBucketsFilterArrayOutput() GetSpacesBucketsFilterArrayOutput
	ToGetSpacesBucketsFilterArrayOutputWithContext(context.Context) GetSpacesBucketsFilterArrayOutput
}

type GetSpacesBucketsFilterArray []GetSpacesBucketsFilterInput

func (GetSpacesBucketsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpacesBucketsFilter)(nil)).Elem()
}

func (i GetSpacesBucketsFilterArray) ToGetSpacesBucketsFilterArrayOutput() GetSpacesBucketsFilterArrayOutput {
	return i.ToGetSpacesBucketsFilterArrayOutputWithContext(context.Background())
}

func (i GetSpacesBucketsFilterArray) ToGetSpacesBucketsFilterArrayOutputWithContext(ctx context.Context) GetSpacesBucketsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpacesBucketsFilterArrayOutput)
}

type GetSpacesBucketsFilterOutput struct{ *pulumi.OutputState }

func (GetSpacesBucketsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpacesBucketsFilter)(nil)).Elem()
}

func (o GetSpacesBucketsFilterOutput) ToGetSpacesBucketsFilterOutput() GetSpacesBucketsFilterOutput {
	return o
}

func (o GetSpacesBucketsFilterOutput) ToGetSpacesBucketsFilterOutputWithContext(ctx context.Context) GetSpacesBucketsFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetSpacesBucketsFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSpacesBucketsFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the images by this key. This may be one of `bucketDomainName`, `name`, `region`, or `urn`.
func (o GetSpacesBucketsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesBucketsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetSpacesBucketsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSpacesBucketsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// A list of values to match against the `key` field. Only retrieves Spaces buckets
// where the `key` field takes on one or more of the values provided here.
func (o GetSpacesBucketsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSpacesBucketsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSpacesBucketsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSpacesBucketsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpacesBucketsFilter)(nil)).Elem()
}

func (o GetSpacesBucketsFilterArrayOutput) ToGetSpacesBucketsFilterArrayOutput() GetSpacesBucketsFilterArrayOutput {
	return o
}

func (o GetSpacesBucketsFilterArrayOutput) ToGetSpacesBucketsFilterArrayOutputWithContext(ctx context.Context) GetSpacesBucketsFilterArrayOutput {
	return o
}

func (o GetSpacesBucketsFilterArrayOutput) Index(i pulumi.IntInput) GetSpacesBucketsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSpacesBucketsFilter {
		return vs[0].([]GetSpacesBucketsFilter)[vs[1].(int)]
	}).(GetSpacesBucketsFilterOutput)
}

type GetSpacesBucketsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the images by this key. This may be one of `bucketDomainName`, `name`, `region`, or `urn`.
	Key string `pulumi:"key"`
}

// GetSpacesBucketsSortInput is an input type that accepts GetSpacesBucketsSortArgs and GetSpacesBucketsSortOutput values.
// You can construct a concrete instance of `GetSpacesBucketsSortInput` via:
//
//          GetSpacesBucketsSortArgs{...}
type GetSpacesBucketsSortInput interface {
	pulumi.Input

	ToGetSpacesBucketsSortOutput() GetSpacesBucketsSortOutput
	ToGetSpacesBucketsSortOutputWithContext(context.Context) GetSpacesBucketsSortOutput
}

type GetSpacesBucketsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the images by this key. This may be one of `bucketDomainName`, `name`, `region`, or `urn`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetSpacesBucketsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpacesBucketsSort)(nil)).Elem()
}

func (i GetSpacesBucketsSortArgs) ToGetSpacesBucketsSortOutput() GetSpacesBucketsSortOutput {
	return i.ToGetSpacesBucketsSortOutputWithContext(context.Background())
}

func (i GetSpacesBucketsSortArgs) ToGetSpacesBucketsSortOutputWithContext(ctx context.Context) GetSpacesBucketsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpacesBucketsSortOutput)
}

// GetSpacesBucketsSortArrayInput is an input type that accepts GetSpacesBucketsSortArray and GetSpacesBucketsSortArrayOutput values.
// You can construct a concrete instance of `GetSpacesBucketsSortArrayInput` via:
//
//          GetSpacesBucketsSortArray{ GetSpacesBucketsSortArgs{...} }
type GetSpacesBucketsSortArrayInput interface {
	pulumi.Input

	ToGetSpacesBucketsSortArrayOutput() GetSpacesBucketsSortArrayOutput
	ToGetSpacesBucketsSortArrayOutputWithContext(context.Context) GetSpacesBucketsSortArrayOutput
}

type GetSpacesBucketsSortArray []GetSpacesBucketsSortInput

func (GetSpacesBucketsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpacesBucketsSort)(nil)).Elem()
}

func (i GetSpacesBucketsSortArray) ToGetSpacesBucketsSortArrayOutput() GetSpacesBucketsSortArrayOutput {
	return i.ToGetSpacesBucketsSortArrayOutputWithContext(context.Background())
}

func (i GetSpacesBucketsSortArray) ToGetSpacesBucketsSortArrayOutputWithContext(ctx context.Context) GetSpacesBucketsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSpacesBucketsSortArrayOutput)
}

type GetSpacesBucketsSortOutput struct{ *pulumi.OutputState }

func (GetSpacesBucketsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSpacesBucketsSort)(nil)).Elem()
}

func (o GetSpacesBucketsSortOutput) ToGetSpacesBucketsSortOutput() GetSpacesBucketsSortOutput {
	return o
}

func (o GetSpacesBucketsSortOutput) ToGetSpacesBucketsSortOutputWithContext(ctx context.Context) GetSpacesBucketsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetSpacesBucketsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSpacesBucketsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the images by this key. This may be one of `bucketDomainName`, `name`, `region`, or `urn`.
func (o GetSpacesBucketsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSpacesBucketsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetSpacesBucketsSortArrayOutput struct{ *pulumi.OutputState }

func (GetSpacesBucketsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSpacesBucketsSort)(nil)).Elem()
}

func (o GetSpacesBucketsSortArrayOutput) ToGetSpacesBucketsSortArrayOutput() GetSpacesBucketsSortArrayOutput {
	return o
}

func (o GetSpacesBucketsSortArrayOutput) ToGetSpacesBucketsSortArrayOutputWithContext(ctx context.Context) GetSpacesBucketsSortArrayOutput {
	return o
}

func (o GetSpacesBucketsSortArrayOutput) Index(i pulumi.IntInput) GetSpacesBucketsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSpacesBucketsSort {
		return vs[0].([]GetSpacesBucketsSort)[vs[1].(int)]
	}).(GetSpacesBucketsSortOutput)
}

type GetSshKeysFilter struct {
	All *bool `pulumi:"all"`
	// Filter the SSH Keys by this key. This may be one of `name`, `publicKey`, or `fingerprint`.
	Key     string   `pulumi:"key"`
	MatchBy *string  `pulumi:"matchBy"`
	Values  []string `pulumi:"values"`
}

// GetSshKeysFilterInput is an input type that accepts GetSshKeysFilterArgs and GetSshKeysFilterOutput values.
// You can construct a concrete instance of `GetSshKeysFilterInput` via:
//
//          GetSshKeysFilterArgs{...}
type GetSshKeysFilterInput interface {
	pulumi.Input

	ToGetSshKeysFilterOutput() GetSshKeysFilterOutput
	ToGetSshKeysFilterOutputWithContext(context.Context) GetSshKeysFilterOutput
}

type GetSshKeysFilterArgs struct {
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the SSH Keys by this key. This may be one of `name`, `publicKey`, or `fingerprint`.
	Key     pulumi.StringInput      `pulumi:"key"`
	MatchBy pulumi.StringPtrInput   `pulumi:"matchBy"`
	Values  pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSshKeysFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshKeysFilter)(nil)).Elem()
}

func (i GetSshKeysFilterArgs) ToGetSshKeysFilterOutput() GetSshKeysFilterOutput {
	return i.ToGetSshKeysFilterOutputWithContext(context.Background())
}

func (i GetSshKeysFilterArgs) ToGetSshKeysFilterOutputWithContext(ctx context.Context) GetSshKeysFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshKeysFilterOutput)
}

// GetSshKeysFilterArrayInput is an input type that accepts GetSshKeysFilterArray and GetSshKeysFilterArrayOutput values.
// You can construct a concrete instance of `GetSshKeysFilterArrayInput` via:
//
//          GetSshKeysFilterArray{ GetSshKeysFilterArgs{...} }
type GetSshKeysFilterArrayInput interface {
	pulumi.Input

	ToGetSshKeysFilterArrayOutput() GetSshKeysFilterArrayOutput
	ToGetSshKeysFilterArrayOutputWithContext(context.Context) GetSshKeysFilterArrayOutput
}

type GetSshKeysFilterArray []GetSshKeysFilterInput

func (GetSshKeysFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshKeysFilter)(nil)).Elem()
}

func (i GetSshKeysFilterArray) ToGetSshKeysFilterArrayOutput() GetSshKeysFilterArrayOutput {
	return i.ToGetSshKeysFilterArrayOutputWithContext(context.Background())
}

func (i GetSshKeysFilterArray) ToGetSshKeysFilterArrayOutputWithContext(ctx context.Context) GetSshKeysFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshKeysFilterArrayOutput)
}

type GetSshKeysFilterOutput struct{ *pulumi.OutputState }

func (GetSshKeysFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshKeysFilter)(nil)).Elem()
}

func (o GetSshKeysFilterOutput) ToGetSshKeysFilterOutput() GetSshKeysFilterOutput {
	return o
}

func (o GetSshKeysFilterOutput) ToGetSshKeysFilterOutputWithContext(ctx context.Context) GetSshKeysFilterOutput {
	return o
}

func (o GetSshKeysFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetSshKeysFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the SSH Keys by this key. This may be one of `name`, `publicKey`, or `fingerprint`.
func (o GetSshKeysFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeysFilter) string { return v.Key }).(pulumi.StringOutput)
}

func (o GetSshKeysFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSshKeysFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

func (o GetSshKeysFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSshKeysFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSshKeysFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSshKeysFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshKeysFilter)(nil)).Elem()
}

func (o GetSshKeysFilterArrayOutput) ToGetSshKeysFilterArrayOutput() GetSshKeysFilterArrayOutput {
	return o
}

func (o GetSshKeysFilterArrayOutput) ToGetSshKeysFilterArrayOutputWithContext(ctx context.Context) GetSshKeysFilterArrayOutput {
	return o
}

func (o GetSshKeysFilterArrayOutput) Index(i pulumi.IntInput) GetSshKeysFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSshKeysFilter {
		return vs[0].([]GetSshKeysFilter)[vs[1].(int)]
	}).(GetSshKeysFilterOutput)
}

type GetSshKeysSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the SSH Keys by this key. This may be one of `name`, `publicKey`, or `fingerprint`.
	Key string `pulumi:"key"`
}

// GetSshKeysSortInput is an input type that accepts GetSshKeysSortArgs and GetSshKeysSortOutput values.
// You can construct a concrete instance of `GetSshKeysSortInput` via:
//
//          GetSshKeysSortArgs{...}
type GetSshKeysSortInput interface {
	pulumi.Input

	ToGetSshKeysSortOutput() GetSshKeysSortOutput
	ToGetSshKeysSortOutputWithContext(context.Context) GetSshKeysSortOutput
}

type GetSshKeysSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the SSH Keys by this key. This may be one of `name`, `publicKey`, or `fingerprint`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetSshKeysSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshKeysSort)(nil)).Elem()
}

func (i GetSshKeysSortArgs) ToGetSshKeysSortOutput() GetSshKeysSortOutput {
	return i.ToGetSshKeysSortOutputWithContext(context.Background())
}

func (i GetSshKeysSortArgs) ToGetSshKeysSortOutputWithContext(ctx context.Context) GetSshKeysSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshKeysSortOutput)
}

// GetSshKeysSortArrayInput is an input type that accepts GetSshKeysSortArray and GetSshKeysSortArrayOutput values.
// You can construct a concrete instance of `GetSshKeysSortArrayInput` via:
//
//          GetSshKeysSortArray{ GetSshKeysSortArgs{...} }
type GetSshKeysSortArrayInput interface {
	pulumi.Input

	ToGetSshKeysSortArrayOutput() GetSshKeysSortArrayOutput
	ToGetSshKeysSortArrayOutputWithContext(context.Context) GetSshKeysSortArrayOutput
}

type GetSshKeysSortArray []GetSshKeysSortInput

func (GetSshKeysSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshKeysSort)(nil)).Elem()
}

func (i GetSshKeysSortArray) ToGetSshKeysSortArrayOutput() GetSshKeysSortArrayOutput {
	return i.ToGetSshKeysSortArrayOutputWithContext(context.Background())
}

func (i GetSshKeysSortArray) ToGetSshKeysSortArrayOutputWithContext(ctx context.Context) GetSshKeysSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshKeysSortArrayOutput)
}

type GetSshKeysSortOutput struct{ *pulumi.OutputState }

func (GetSshKeysSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshKeysSort)(nil)).Elem()
}

func (o GetSshKeysSortOutput) ToGetSshKeysSortOutput() GetSshKeysSortOutput {
	return o
}

func (o GetSshKeysSortOutput) ToGetSshKeysSortOutputWithContext(ctx context.Context) GetSshKeysSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetSshKeysSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSshKeysSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the SSH Keys by this key. This may be one of `name`, `publicKey`, or `fingerprint`.
func (o GetSshKeysSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeysSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetSshKeysSortArrayOutput struct{ *pulumi.OutputState }

func (GetSshKeysSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshKeysSort)(nil)).Elem()
}

func (o GetSshKeysSortArrayOutput) ToGetSshKeysSortArrayOutput() GetSshKeysSortArrayOutput {
	return o
}

func (o GetSshKeysSortArrayOutput) ToGetSshKeysSortArrayOutputWithContext(ctx context.Context) GetSshKeysSortArrayOutput {
	return o
}

func (o GetSshKeysSortArrayOutput) Index(i pulumi.IntInput) GetSshKeysSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSshKeysSort {
		return vs[0].([]GetSshKeysSort)[vs[1].(int)]
	}).(GetSshKeysSortOutput)
}

type GetSshKeysSshKey struct {
	Fingerprint string `pulumi:"fingerprint"`
	// The ID of the ssh key.
	// * `name`: The name of the ssh key.
	// * `publicKey`: The public key of the ssh key.
	// * `fingerprint`: The fingerprint of the public key of the ssh key.
	Id        int    `pulumi:"id"`
	Name      string `pulumi:"name"`
	PublicKey string `pulumi:"publicKey"`
}

// GetSshKeysSshKeyInput is an input type that accepts GetSshKeysSshKeyArgs and GetSshKeysSshKeyOutput values.
// You can construct a concrete instance of `GetSshKeysSshKeyInput` via:
//
//          GetSshKeysSshKeyArgs{...}
type GetSshKeysSshKeyInput interface {
	pulumi.Input

	ToGetSshKeysSshKeyOutput() GetSshKeysSshKeyOutput
	ToGetSshKeysSshKeyOutputWithContext(context.Context) GetSshKeysSshKeyOutput
}

type GetSshKeysSshKeyArgs struct {
	Fingerprint pulumi.StringInput `pulumi:"fingerprint"`
	// The ID of the ssh key.
	// * `name`: The name of the ssh key.
	// * `publicKey`: The public key of the ssh key.
	// * `fingerprint`: The fingerprint of the public key of the ssh key.
	Id        pulumi.IntInput    `pulumi:"id"`
	Name      pulumi.StringInput `pulumi:"name"`
	PublicKey pulumi.StringInput `pulumi:"publicKey"`
}

func (GetSshKeysSshKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshKeysSshKey)(nil)).Elem()
}

func (i GetSshKeysSshKeyArgs) ToGetSshKeysSshKeyOutput() GetSshKeysSshKeyOutput {
	return i.ToGetSshKeysSshKeyOutputWithContext(context.Background())
}

func (i GetSshKeysSshKeyArgs) ToGetSshKeysSshKeyOutputWithContext(ctx context.Context) GetSshKeysSshKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshKeysSshKeyOutput)
}

// GetSshKeysSshKeyArrayInput is an input type that accepts GetSshKeysSshKeyArray and GetSshKeysSshKeyArrayOutput values.
// You can construct a concrete instance of `GetSshKeysSshKeyArrayInput` via:
//
//          GetSshKeysSshKeyArray{ GetSshKeysSshKeyArgs{...} }
type GetSshKeysSshKeyArrayInput interface {
	pulumi.Input

	ToGetSshKeysSshKeyArrayOutput() GetSshKeysSshKeyArrayOutput
	ToGetSshKeysSshKeyArrayOutputWithContext(context.Context) GetSshKeysSshKeyArrayOutput
}

type GetSshKeysSshKeyArray []GetSshKeysSshKeyInput

func (GetSshKeysSshKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshKeysSshKey)(nil)).Elem()
}

func (i GetSshKeysSshKeyArray) ToGetSshKeysSshKeyArrayOutput() GetSshKeysSshKeyArrayOutput {
	return i.ToGetSshKeysSshKeyArrayOutputWithContext(context.Background())
}

func (i GetSshKeysSshKeyArray) ToGetSshKeysSshKeyArrayOutputWithContext(ctx context.Context) GetSshKeysSshKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSshKeysSshKeyArrayOutput)
}

type GetSshKeysSshKeyOutput struct{ *pulumi.OutputState }

func (GetSshKeysSshKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSshKeysSshKey)(nil)).Elem()
}

func (o GetSshKeysSshKeyOutput) ToGetSshKeysSshKeyOutput() GetSshKeysSshKeyOutput {
	return o
}

func (o GetSshKeysSshKeyOutput) ToGetSshKeysSshKeyOutputWithContext(ctx context.Context) GetSshKeysSshKeyOutput {
	return o
}

func (o GetSshKeysSshKeyOutput) Fingerprint() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeysSshKey) string { return v.Fingerprint }).(pulumi.StringOutput)
}

// The ID of the ssh key.
// * `name`: The name of the ssh key.
// * `publicKey`: The public key of the ssh key.
// * `fingerprint`: The fingerprint of the public key of the ssh key.
func (o GetSshKeysSshKeyOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetSshKeysSshKey) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetSshKeysSshKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeysSshKey) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetSshKeysSshKeyOutput) PublicKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSshKeysSshKey) string { return v.PublicKey }).(pulumi.StringOutput)
}

type GetSshKeysSshKeyArrayOutput struct{ *pulumi.OutputState }

func (GetSshKeysSshKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSshKeysSshKey)(nil)).Elem()
}

func (o GetSshKeysSshKeyArrayOutput) ToGetSshKeysSshKeyArrayOutput() GetSshKeysSshKeyArrayOutput {
	return o
}

func (o GetSshKeysSshKeyArrayOutput) ToGetSshKeysSshKeyArrayOutputWithContext(ctx context.Context) GetSshKeysSshKeyArrayOutput {
	return o
}

func (o GetSshKeysSshKeyArrayOutput) Index(i pulumi.IntInput) GetSshKeysSshKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSshKeysSshKey {
		return vs[0].([]GetSshKeysSshKey)[vs[1].(int)]
	}).(GetSshKeysSshKeyOutput)
}

type GetTagsFilter struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All *bool `pulumi:"all"`
	// Filter the tags by this key. This may be one of `name`, `totalResourceCount`,  `dropletsCount`, `imagesCount`, `volumesCount`, `volumeSnapshotsCount`, or `databasesCount`.
	Key string `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy *string `pulumi:"matchBy"`
	// Only retrieves tags which keys has value that matches
	// one of the values provided here.
	Values []string `pulumi:"values"`
}

// GetTagsFilterInput is an input type that accepts GetTagsFilterArgs and GetTagsFilterOutput values.
// You can construct a concrete instance of `GetTagsFilterInput` via:
//
//          GetTagsFilterArgs{...}
type GetTagsFilterInput interface {
	pulumi.Input

	ToGetTagsFilterOutput() GetTagsFilterOutput
	ToGetTagsFilterOutputWithContext(context.Context) GetTagsFilterOutput
}

type GetTagsFilterArgs struct {
	// Set to `true` to require that a field match all of the `values` instead of just one or more of
	// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
	// that all of the `values` are present in the list or set.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// Filter the tags by this key. This may be one of `name`, `totalResourceCount`,  `dropletsCount`, `imagesCount`, `volumesCount`, `volumeSnapshotsCount`, or `databasesCount`.
	Key pulumi.StringInput `pulumi:"key"`
	// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
	// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
	// substrings to find within the string field.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// Only retrieves tags which keys has value that matches
	// one of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetTagsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsFilter)(nil)).Elem()
}

func (i GetTagsFilterArgs) ToGetTagsFilterOutput() GetTagsFilterOutput {
	return i.ToGetTagsFilterOutputWithContext(context.Background())
}

func (i GetTagsFilterArgs) ToGetTagsFilterOutputWithContext(ctx context.Context) GetTagsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsFilterOutput)
}

// GetTagsFilterArrayInput is an input type that accepts GetTagsFilterArray and GetTagsFilterArrayOutput values.
// You can construct a concrete instance of `GetTagsFilterArrayInput` via:
//
//          GetTagsFilterArray{ GetTagsFilterArgs{...} }
type GetTagsFilterArrayInput interface {
	pulumi.Input

	ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput
	ToGetTagsFilterArrayOutputWithContext(context.Context) GetTagsFilterArrayOutput
}

type GetTagsFilterArray []GetTagsFilterInput

func (GetTagsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsFilter)(nil)).Elem()
}

func (i GetTagsFilterArray) ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput {
	return i.ToGetTagsFilterArrayOutputWithContext(context.Background())
}

func (i GetTagsFilterArray) ToGetTagsFilterArrayOutputWithContext(ctx context.Context) GetTagsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsFilterArrayOutput)
}

type GetTagsFilterOutput struct{ *pulumi.OutputState }

func (GetTagsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsFilter)(nil)).Elem()
}

func (o GetTagsFilterOutput) ToGetTagsFilterOutput() GetTagsFilterOutput {
	return o
}

func (o GetTagsFilterOutput) ToGetTagsFilterOutputWithContext(ctx context.Context) GetTagsFilterOutput {
	return o
}

// Set to `true` to require that a field match all of the `values` instead of just one or more of
// them. This is useful when matching against multi-valued fields such as lists or sets where you want to ensure
// that all of the `values` are present in the list or set.
func (o GetTagsFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetTagsFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// Filter the tags by this key. This may be one of `name`, `totalResourceCount`,  `dropletsCount`, `imagesCount`, `volumesCount`, `volumeSnapshotsCount`, or `databasesCount`.
func (o GetTagsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// One of `exact` (default), `re`, or `substring`. For string-typed fields, specify `re` to
// match by using the `values` as regular expressions, or specify `substring` to match by treating the `values` as
// substrings to find within the string field.
func (o GetTagsFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTagsFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// Only retrieves tags which keys has value that matches
// one of the values provided here.
func (o GetTagsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetTagsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetTagsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetTagsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsFilter)(nil)).Elem()
}

func (o GetTagsFilterArrayOutput) ToGetTagsFilterArrayOutput() GetTagsFilterArrayOutput {
	return o
}

func (o GetTagsFilterArrayOutput) ToGetTagsFilterArrayOutputWithContext(ctx context.Context) GetTagsFilterArrayOutput {
	return o
}

func (o GetTagsFilterArrayOutput) Index(i pulumi.IntInput) GetTagsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsFilter {
		return vs[0].([]GetTagsFilter)[vs[1].(int)]
	}).(GetTagsFilterOutput)
}

type GetTagsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the tags by this key. This may be one of `name`, `totalResourceCount`,  `dropletsCount`, `imagesCount`, `volumesCount`, `volumeSnapshotsCount`, or `databasesCount`.
	Key string `pulumi:"key"`
}

// GetTagsSortInput is an input type that accepts GetTagsSortArgs and GetTagsSortOutput values.
// You can construct a concrete instance of `GetTagsSortInput` via:
//
//          GetTagsSortArgs{...}
type GetTagsSortInput interface {
	pulumi.Input

	ToGetTagsSortOutput() GetTagsSortOutput
	ToGetTagsSortOutputWithContext(context.Context) GetTagsSortOutput
}

type GetTagsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the tags by this key. This may be one of `name`, `totalResourceCount`,  `dropletsCount`, `imagesCount`, `volumesCount`, `volumeSnapshotsCount`, or `databasesCount`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetTagsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsSort)(nil)).Elem()
}

func (i GetTagsSortArgs) ToGetTagsSortOutput() GetTagsSortOutput {
	return i.ToGetTagsSortOutputWithContext(context.Background())
}

func (i GetTagsSortArgs) ToGetTagsSortOutputWithContext(ctx context.Context) GetTagsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsSortOutput)
}

// GetTagsSortArrayInput is an input type that accepts GetTagsSortArray and GetTagsSortArrayOutput values.
// You can construct a concrete instance of `GetTagsSortArrayInput` via:
//
//          GetTagsSortArray{ GetTagsSortArgs{...} }
type GetTagsSortArrayInput interface {
	pulumi.Input

	ToGetTagsSortArrayOutput() GetTagsSortArrayOutput
	ToGetTagsSortArrayOutputWithContext(context.Context) GetTagsSortArrayOutput
}

type GetTagsSortArray []GetTagsSortInput

func (GetTagsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsSort)(nil)).Elem()
}

func (i GetTagsSortArray) ToGetTagsSortArrayOutput() GetTagsSortArrayOutput {
	return i.ToGetTagsSortArrayOutputWithContext(context.Background())
}

func (i GetTagsSortArray) ToGetTagsSortArrayOutputWithContext(ctx context.Context) GetTagsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsSortArrayOutput)
}

type GetTagsSortOutput struct{ *pulumi.OutputState }

func (GetTagsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsSort)(nil)).Elem()
}

func (o GetTagsSortOutput) ToGetTagsSortOutput() GetTagsSortOutput {
	return o
}

func (o GetTagsSortOutput) ToGetTagsSortOutputWithContext(ctx context.Context) GetTagsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetTagsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetTagsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the tags by this key. This may be one of `name`, `totalResourceCount`,  `dropletsCount`, `imagesCount`, `volumesCount`, `volumeSnapshotsCount`, or `databasesCount`.
func (o GetTagsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetTagsSortArrayOutput struct{ *pulumi.OutputState }

func (GetTagsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsSort)(nil)).Elem()
}

func (o GetTagsSortArrayOutput) ToGetTagsSortArrayOutput() GetTagsSortArrayOutput {
	return o
}

func (o GetTagsSortArrayOutput) ToGetTagsSortArrayOutputWithContext(ctx context.Context) GetTagsSortArrayOutput {
	return o
}

func (o GetTagsSortArrayOutput) Index(i pulumi.IntInput) GetTagsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsSort {
		return vs[0].([]GetTagsSort)[vs[1].(int)]
	}).(GetTagsSortOutput)
}

type GetTagsTag struct {
	// A count of the database clusters that the tag is applied to.
	DatabasesCount int `pulumi:"databasesCount"`
	// A count of the Droplets the tag is applied to.
	DropletsCount int `pulumi:"dropletsCount"`
	// A count of the images that the tag is applied to.
	ImagesCount int `pulumi:"imagesCount"`
	// The name of the tag.
	Name string `pulumi:"name"`
	// A count of the total number of resources that the tag is applied to.
	TotalResourceCount int `pulumi:"totalResourceCount"`
	// A count of the volume snapshots that the tag is applied to.
	VolumeSnapshotsCount int `pulumi:"volumeSnapshotsCount"`
	// A count of the volumes that the tag is applied to.
	VolumesCount int `pulumi:"volumesCount"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//          GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	// A count of the database clusters that the tag is applied to.
	DatabasesCount pulumi.IntInput `pulumi:"databasesCount"`
	// A count of the Droplets the tag is applied to.
	DropletsCount pulumi.IntInput `pulumi:"dropletsCount"`
	// A count of the images that the tag is applied to.
	ImagesCount pulumi.IntInput `pulumi:"imagesCount"`
	// The name of the tag.
	Name pulumi.StringInput `pulumi:"name"`
	// A count of the total number of resources that the tag is applied to.
	TotalResourceCount pulumi.IntInput `pulumi:"totalResourceCount"`
	// A count of the volume snapshots that the tag is applied to.
	VolumeSnapshotsCount pulumi.IntInput `pulumi:"volumeSnapshotsCount"`
	// A count of the volumes that the tag is applied to.
	VolumesCount pulumi.IntInput `pulumi:"volumesCount"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//          GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

// A count of the database clusters that the tag is applied to.
func (o GetTagsTagOutput) DatabasesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.DatabasesCount }).(pulumi.IntOutput)
}

// A count of the Droplets the tag is applied to.
func (o GetTagsTagOutput) DropletsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.DropletsCount }).(pulumi.IntOutput)
}

// A count of the images that the tag is applied to.
func (o GetTagsTagOutput) ImagesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.ImagesCount }).(pulumi.IntOutput)
}

// The name of the tag.
func (o GetTagsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Name }).(pulumi.StringOutput)
}

// A count of the total number of resources that the tag is applied to.
func (o GetTagsTagOutput) TotalResourceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.TotalResourceCount }).(pulumi.IntOutput)
}

// A count of the volume snapshots that the tag is applied to.
func (o GetTagsTagOutput) VolumeSnapshotsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.VolumeSnapshotsCount }).(pulumi.IntOutput)
}

// A count of the volumes that the tag is applied to.
func (o GetTagsTagOutput) VolumesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.VolumesCount }).(pulumi.IntOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecInput)(nil)).Elem(), AppSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecPtrInput)(nil)).Elem(), AppSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecAlertInput)(nil)).Elem(), AppSpecAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecAlertArrayInput)(nil)).Elem(), AppSpecAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecDatabaseInput)(nil)).Elem(), AppSpecDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecDatabaseArrayInput)(nil)).Elem(), AppSpecDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecDomainNameInput)(nil)).Elem(), AppSpecDomainNameArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecDomainNameArrayInput)(nil)).Elem(), AppSpecDomainNameArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecEnvInput)(nil)).Elem(), AppSpecEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecEnvArrayInput)(nil)).Elem(), AppSpecEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobInput)(nil)).Elem(), AppSpecJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobArrayInput)(nil)).Elem(), AppSpecJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobAlertInput)(nil)).Elem(), AppSpecJobAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobAlertArrayInput)(nil)).Elem(), AppSpecJobAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobEnvInput)(nil)).Elem(), AppSpecJobEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobEnvArrayInput)(nil)).Elem(), AppSpecJobEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobGitInput)(nil)).Elem(), AppSpecJobGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobGitPtrInput)(nil)).Elem(), AppSpecJobGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobGithubInput)(nil)).Elem(), AppSpecJobGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobGithubPtrInput)(nil)).Elem(), AppSpecJobGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobGitlabInput)(nil)).Elem(), AppSpecJobGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobGitlabPtrInput)(nil)).Elem(), AppSpecJobGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobImageInput)(nil)).Elem(), AppSpecJobImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobImagePtrInput)(nil)).Elem(), AppSpecJobImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobLogDestinationInput)(nil)).Elem(), AppSpecJobLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobLogDestinationArrayInput)(nil)).Elem(), AppSpecJobLogDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobLogDestinationDatadogInput)(nil)).Elem(), AppSpecJobLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobLogDestinationDatadogPtrInput)(nil)).Elem(), AppSpecJobLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobLogDestinationLogtailInput)(nil)).Elem(), AppSpecJobLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobLogDestinationLogtailPtrInput)(nil)).Elem(), AppSpecJobLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobLogDestinationPapertrailInput)(nil)).Elem(), AppSpecJobLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecJobLogDestinationPapertrailPtrInput)(nil)).Elem(), AppSpecJobLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceInput)(nil)).Elem(), AppSpecServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceArrayInput)(nil)).Elem(), AppSpecServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceAlertInput)(nil)).Elem(), AppSpecServiceAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceAlertArrayInput)(nil)).Elem(), AppSpecServiceAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceCorsInput)(nil)).Elem(), AppSpecServiceCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceCorsPtrInput)(nil)).Elem(), AppSpecServiceCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceCorsAllowOriginsInput)(nil)).Elem(), AppSpecServiceCorsAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceCorsAllowOriginsPtrInput)(nil)).Elem(), AppSpecServiceCorsAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceEnvInput)(nil)).Elem(), AppSpecServiceEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceEnvArrayInput)(nil)).Elem(), AppSpecServiceEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceGitInput)(nil)).Elem(), AppSpecServiceGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceGitPtrInput)(nil)).Elem(), AppSpecServiceGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceGithubInput)(nil)).Elem(), AppSpecServiceGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceGithubPtrInput)(nil)).Elem(), AppSpecServiceGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceGitlabInput)(nil)).Elem(), AppSpecServiceGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceGitlabPtrInput)(nil)).Elem(), AppSpecServiceGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceHealthCheckInput)(nil)).Elem(), AppSpecServiceHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceHealthCheckPtrInput)(nil)).Elem(), AppSpecServiceHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceImageInput)(nil)).Elem(), AppSpecServiceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceImagePtrInput)(nil)).Elem(), AppSpecServiceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceLogDestinationInput)(nil)).Elem(), AppSpecServiceLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceLogDestinationArrayInput)(nil)).Elem(), AppSpecServiceLogDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceLogDestinationDatadogInput)(nil)).Elem(), AppSpecServiceLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceLogDestinationDatadogPtrInput)(nil)).Elem(), AppSpecServiceLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceLogDestinationLogtailInput)(nil)).Elem(), AppSpecServiceLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceLogDestinationLogtailPtrInput)(nil)).Elem(), AppSpecServiceLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceLogDestinationPapertrailInput)(nil)).Elem(), AppSpecServiceLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceLogDestinationPapertrailPtrInput)(nil)).Elem(), AppSpecServiceLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceRouteInput)(nil)).Elem(), AppSpecServiceRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecServiceRouteArrayInput)(nil)).Elem(), AppSpecServiceRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteInput)(nil)).Elem(), AppSpecStaticSiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteArrayInput)(nil)).Elem(), AppSpecStaticSiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteCorsInput)(nil)).Elem(), AppSpecStaticSiteCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteCorsPtrInput)(nil)).Elem(), AppSpecStaticSiteCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteCorsAllowOriginsInput)(nil)).Elem(), AppSpecStaticSiteCorsAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteCorsAllowOriginsPtrInput)(nil)).Elem(), AppSpecStaticSiteCorsAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteEnvInput)(nil)).Elem(), AppSpecStaticSiteEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteEnvArrayInput)(nil)).Elem(), AppSpecStaticSiteEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteGitInput)(nil)).Elem(), AppSpecStaticSiteGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteGitPtrInput)(nil)).Elem(), AppSpecStaticSiteGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteGithubInput)(nil)).Elem(), AppSpecStaticSiteGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteGithubPtrInput)(nil)).Elem(), AppSpecStaticSiteGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteGitlabInput)(nil)).Elem(), AppSpecStaticSiteGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteGitlabPtrInput)(nil)).Elem(), AppSpecStaticSiteGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteRouteInput)(nil)).Elem(), AppSpecStaticSiteRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecStaticSiteRouteArrayInput)(nil)).Elem(), AppSpecStaticSiteRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerInput)(nil)).Elem(), AppSpecWorkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerArrayInput)(nil)).Elem(), AppSpecWorkerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerAlertInput)(nil)).Elem(), AppSpecWorkerAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerAlertArrayInput)(nil)).Elem(), AppSpecWorkerAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerEnvInput)(nil)).Elem(), AppSpecWorkerEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerEnvArrayInput)(nil)).Elem(), AppSpecWorkerEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerGitInput)(nil)).Elem(), AppSpecWorkerGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerGitPtrInput)(nil)).Elem(), AppSpecWorkerGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerGithubInput)(nil)).Elem(), AppSpecWorkerGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerGithubPtrInput)(nil)).Elem(), AppSpecWorkerGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerGitlabInput)(nil)).Elem(), AppSpecWorkerGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerGitlabPtrInput)(nil)).Elem(), AppSpecWorkerGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerImageInput)(nil)).Elem(), AppSpecWorkerImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerImagePtrInput)(nil)).Elem(), AppSpecWorkerImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerLogDestinationInput)(nil)).Elem(), AppSpecWorkerLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerLogDestinationArrayInput)(nil)).Elem(), AppSpecWorkerLogDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerLogDestinationDatadogInput)(nil)).Elem(), AppSpecWorkerLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerLogDestinationDatadogPtrInput)(nil)).Elem(), AppSpecWorkerLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerLogDestinationLogtailInput)(nil)).Elem(), AppSpecWorkerLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerLogDestinationLogtailPtrInput)(nil)).Elem(), AppSpecWorkerLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerLogDestinationPapertrailInput)(nil)).Elem(), AppSpecWorkerLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AppSpecWorkerLogDestinationPapertrailPtrInput)(nil)).Elem(), AppSpecWorkerLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseClusterMaintenanceWindowInput)(nil)).Elem(), DatabaseClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseClusterMaintenanceWindowArrayInput)(nil)).Elem(), DatabaseClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseFirewallRuleInput)(nil)).Elem(), DatabaseFirewallRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseFirewallRuleArrayInput)(nil)).Elem(), DatabaseFirewallRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInboundRuleInput)(nil)).Elem(), FirewallInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallInboundRuleArrayInput)(nil)).Elem(), FirewallInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallOutboundRuleInput)(nil)).Elem(), FirewallOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallOutboundRuleArrayInput)(nil)).Elem(), FirewallOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPendingChangeInput)(nil)).Elem(), FirewallPendingChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*FirewallPendingChangeArrayInput)(nil)).Elem(), FirewallPendingChangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeConfigInput)(nil)).Elem(), KubernetesClusterKubeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterKubeConfigArrayInput)(nil)).Elem(), KubernetesClusterKubeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenancePolicyInput)(nil)).Elem(), KubernetesClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterMaintenancePolicyPtrInput)(nil)).Elem(), KubernetesClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolInput)(nil)).Elem(), KubernetesClusterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolPtrInput)(nil)).Elem(), KubernetesClusterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolNodeInput)(nil)).Elem(), KubernetesClusterNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolNodeArrayInput)(nil)).Elem(), KubernetesClusterNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolTaintInput)(nil)).Elem(), KubernetesClusterNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesClusterNodePoolTaintArrayInput)(nil)).Elem(), KubernetesClusterNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolNodeInput)(nil)).Elem(), KubernetesNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolNodeArrayInput)(nil)).Elem(), KubernetesNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolTaintInput)(nil)).Elem(), KubernetesNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*KubernetesNodePoolTaintArrayInput)(nil)).Elem(), KubernetesNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerForwardingRuleInput)(nil)).Elem(), LoadBalancerForwardingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerForwardingRuleArrayInput)(nil)).Elem(), LoadBalancerForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerHealthcheckInput)(nil)).Elem(), LoadBalancerHealthcheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerHealthcheckPtrInput)(nil)).Elem(), LoadBalancerHealthcheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerStickySessionsInput)(nil)).Elem(), LoadBalancerStickySessionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*LoadBalancerStickySessionsPtrInput)(nil)).Elem(), LoadBalancerStickySessionsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorAlertAlertsInput)(nil)).Elem(), MonitorAlertAlertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorAlertAlertsPtrInput)(nil)).Elem(), MonitorAlertAlertsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorAlertAlertsSlackInput)(nil)).Elem(), MonitorAlertAlertsSlackArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*MonitorAlertAlertsSlackArrayInput)(nil)).Elem(), MonitorAlertAlertsSlackArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketCorsRuleInput)(nil)).Elem(), SpacesBucketCorsRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketCorsRuleArrayInput)(nil)).Elem(), SpacesBucketCorsRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketLifecycleRuleInput)(nil)).Elem(), SpacesBucketLifecycleRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketLifecycleRuleArrayInput)(nil)).Elem(), SpacesBucketLifecycleRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketLifecycleRuleExpirationInput)(nil)).Elem(), SpacesBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketLifecycleRuleExpirationPtrInput)(nil)).Elem(), SpacesBucketLifecycleRuleExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketLifecycleRuleNoncurrentVersionExpirationInput)(nil)).Elem(), SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrInput)(nil)).Elem(), SpacesBucketLifecycleRuleNoncurrentVersionExpirationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketVersioningInput)(nil)).Elem(), SpacesBucketVersioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpacesBucketVersioningPtrInput)(nil)).Elem(), SpacesBucketVersioningArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecInput)(nil)).Elem(), GetAppSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecArrayInput)(nil)).Elem(), GetAppSpecArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecAlertInput)(nil)).Elem(), GetAppSpecAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecAlertArrayInput)(nil)).Elem(), GetAppSpecAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecDatabaseInput)(nil)).Elem(), GetAppSpecDatabaseArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecDatabaseArrayInput)(nil)).Elem(), GetAppSpecDatabaseArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecDomainInput)(nil)).Elem(), GetAppSpecDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecEnvInput)(nil)).Elem(), GetAppSpecEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecEnvArrayInput)(nil)).Elem(), GetAppSpecEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobInput)(nil)).Elem(), GetAppSpecJobArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobArrayInput)(nil)).Elem(), GetAppSpecJobArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobAlertInput)(nil)).Elem(), GetAppSpecJobAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobAlertArrayInput)(nil)).Elem(), GetAppSpecJobAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobEnvInput)(nil)).Elem(), GetAppSpecJobEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobEnvArrayInput)(nil)).Elem(), GetAppSpecJobEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobGitInput)(nil)).Elem(), GetAppSpecJobGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobGitPtrInput)(nil)).Elem(), GetAppSpecJobGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobGithubInput)(nil)).Elem(), GetAppSpecJobGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobGithubPtrInput)(nil)).Elem(), GetAppSpecJobGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobGitlabInput)(nil)).Elem(), GetAppSpecJobGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobGitlabPtrInput)(nil)).Elem(), GetAppSpecJobGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobImageInput)(nil)).Elem(), GetAppSpecJobImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobImagePtrInput)(nil)).Elem(), GetAppSpecJobImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobLogDestinationInput)(nil)).Elem(), GetAppSpecJobLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobLogDestinationArrayInput)(nil)).Elem(), GetAppSpecJobLogDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobLogDestinationDatadogInput)(nil)).Elem(), GetAppSpecJobLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobLogDestinationDatadogPtrInput)(nil)).Elem(), GetAppSpecJobLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobLogDestinationLogtailInput)(nil)).Elem(), GetAppSpecJobLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobLogDestinationLogtailPtrInput)(nil)).Elem(), GetAppSpecJobLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobLogDestinationPapertrailInput)(nil)).Elem(), GetAppSpecJobLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecJobLogDestinationPapertrailPtrInput)(nil)).Elem(), GetAppSpecJobLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceInput)(nil)).Elem(), GetAppSpecServiceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceArrayInput)(nil)).Elem(), GetAppSpecServiceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceAlertInput)(nil)).Elem(), GetAppSpecServiceAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceAlertArrayInput)(nil)).Elem(), GetAppSpecServiceAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceCorsInput)(nil)).Elem(), GetAppSpecServiceCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceCorsPtrInput)(nil)).Elem(), GetAppSpecServiceCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceCorsAllowOriginsInput)(nil)).Elem(), GetAppSpecServiceCorsAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceCorsAllowOriginsPtrInput)(nil)).Elem(), GetAppSpecServiceCorsAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceEnvInput)(nil)).Elem(), GetAppSpecServiceEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceEnvArrayInput)(nil)).Elem(), GetAppSpecServiceEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceGitInput)(nil)).Elem(), GetAppSpecServiceGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceGitPtrInput)(nil)).Elem(), GetAppSpecServiceGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceGithubInput)(nil)).Elem(), GetAppSpecServiceGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceGithubPtrInput)(nil)).Elem(), GetAppSpecServiceGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceGitlabInput)(nil)).Elem(), GetAppSpecServiceGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceGitlabPtrInput)(nil)).Elem(), GetAppSpecServiceGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceHealthCheckInput)(nil)).Elem(), GetAppSpecServiceHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceHealthCheckPtrInput)(nil)).Elem(), GetAppSpecServiceHealthCheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceImageInput)(nil)).Elem(), GetAppSpecServiceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceImagePtrInput)(nil)).Elem(), GetAppSpecServiceImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceLogDestinationInput)(nil)).Elem(), GetAppSpecServiceLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceLogDestinationArrayInput)(nil)).Elem(), GetAppSpecServiceLogDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceLogDestinationDatadogInput)(nil)).Elem(), GetAppSpecServiceLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceLogDestinationDatadogPtrInput)(nil)).Elem(), GetAppSpecServiceLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceLogDestinationLogtailInput)(nil)).Elem(), GetAppSpecServiceLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceLogDestinationLogtailPtrInput)(nil)).Elem(), GetAppSpecServiceLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceLogDestinationPapertrailInput)(nil)).Elem(), GetAppSpecServiceLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceLogDestinationPapertrailPtrInput)(nil)).Elem(), GetAppSpecServiceLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceRouteInput)(nil)).Elem(), GetAppSpecServiceRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecServiceRouteArrayInput)(nil)).Elem(), GetAppSpecServiceRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteInput)(nil)).Elem(), GetAppSpecStaticSiteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteArrayInput)(nil)).Elem(), GetAppSpecStaticSiteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteCorsInput)(nil)).Elem(), GetAppSpecStaticSiteCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteCorsPtrInput)(nil)).Elem(), GetAppSpecStaticSiteCorsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteCorsAllowOriginsInput)(nil)).Elem(), GetAppSpecStaticSiteCorsAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteCorsAllowOriginsPtrInput)(nil)).Elem(), GetAppSpecStaticSiteCorsAllowOriginsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteEnvInput)(nil)).Elem(), GetAppSpecStaticSiteEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteEnvArrayInput)(nil)).Elem(), GetAppSpecStaticSiteEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteGitInput)(nil)).Elem(), GetAppSpecStaticSiteGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteGitPtrInput)(nil)).Elem(), GetAppSpecStaticSiteGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteGithubInput)(nil)).Elem(), GetAppSpecStaticSiteGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteGithubPtrInput)(nil)).Elem(), GetAppSpecStaticSiteGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteGitlabInput)(nil)).Elem(), GetAppSpecStaticSiteGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteGitlabPtrInput)(nil)).Elem(), GetAppSpecStaticSiteGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteRouteInput)(nil)).Elem(), GetAppSpecStaticSiteRouteArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecStaticSiteRouteArrayInput)(nil)).Elem(), GetAppSpecStaticSiteRouteArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerInput)(nil)).Elem(), GetAppSpecWorkerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerArrayInput)(nil)).Elem(), GetAppSpecWorkerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerAlertInput)(nil)).Elem(), GetAppSpecWorkerAlertArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerAlertArrayInput)(nil)).Elem(), GetAppSpecWorkerAlertArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerEnvInput)(nil)).Elem(), GetAppSpecWorkerEnvArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerEnvArrayInput)(nil)).Elem(), GetAppSpecWorkerEnvArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerGitInput)(nil)).Elem(), GetAppSpecWorkerGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerGitPtrInput)(nil)).Elem(), GetAppSpecWorkerGitArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerGithubInput)(nil)).Elem(), GetAppSpecWorkerGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerGithubPtrInput)(nil)).Elem(), GetAppSpecWorkerGithubArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerGitlabInput)(nil)).Elem(), GetAppSpecWorkerGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerGitlabPtrInput)(nil)).Elem(), GetAppSpecWorkerGitlabArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerImageInput)(nil)).Elem(), GetAppSpecWorkerImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerImagePtrInput)(nil)).Elem(), GetAppSpecWorkerImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerLogDestinationInput)(nil)).Elem(), GetAppSpecWorkerLogDestinationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerLogDestinationArrayInput)(nil)).Elem(), GetAppSpecWorkerLogDestinationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerLogDestinationDatadogInput)(nil)).Elem(), GetAppSpecWorkerLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerLogDestinationDatadogPtrInput)(nil)).Elem(), GetAppSpecWorkerLogDestinationDatadogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerLogDestinationLogtailInput)(nil)).Elem(), GetAppSpecWorkerLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerLogDestinationLogtailPtrInput)(nil)).Elem(), GetAppSpecWorkerLogDestinationLogtailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerLogDestinationPapertrailInput)(nil)).Elem(), GetAppSpecWorkerLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAppSpecWorkerLogDestinationPapertrailPtrInput)(nil)).Elem(), GetAppSpecWorkerLogDestinationPapertrailArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseClusterMaintenanceWindowInput)(nil)).Elem(), GetDatabaseClusterMaintenanceWindowArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDatabaseClusterMaintenanceWindowArrayInput)(nil)).Elem(), GetDatabaseClusterMaintenanceWindowArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainInput)(nil)).Elem(), GetDomainsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainArrayInput)(nil)).Elem(), GetDomainsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsFilterInput)(nil)).Elem(), GetDomainsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsFilterArrayInput)(nil)).Elem(), GetDomainsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsSortInput)(nil)).Elem(), GetDomainsSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsSortArrayInput)(nil)).Elem(), GetDomainsSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDropletsDropletInput)(nil)).Elem(), GetDropletsDropletArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDropletsDropletArrayInput)(nil)).Elem(), GetDropletsDropletArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDropletsFilterInput)(nil)).Elem(), GetDropletsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDropletsFilterArrayInput)(nil)).Elem(), GetDropletsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDropletsSortInput)(nil)).Elem(), GetDropletsSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDropletsSortArrayInput)(nil)).Elem(), GetDropletsSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInboundRuleInput)(nil)).Elem(), GetFirewallInboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallInboundRuleArrayInput)(nil)).Elem(), GetFirewallInboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallOutboundRuleInput)(nil)).Elem(), GetFirewallOutboundRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallOutboundRuleArrayInput)(nil)).Elem(), GetFirewallOutboundRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPendingChangeInput)(nil)).Elem(), GetFirewallPendingChangeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFirewallPendingChangeArrayInput)(nil)).Elem(), GetFirewallPendingChangeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesFilterInput)(nil)).Elem(), GetImagesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesFilterArrayInput)(nil)).Elem(), GetImagesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageInput)(nil)).Elem(), GetImagesImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesImageArrayInput)(nil)).Elem(), GetImagesImageArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesSortInput)(nil)).Elem(), GetImagesSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetImagesSortArrayInput)(nil)).Elem(), GetImagesSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeConfigInput)(nil)).Elem(), GetKubernetesClusterKubeConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterKubeConfigArrayInput)(nil)).Elem(), GetKubernetesClusterKubeConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterMaintenancePolicyInput)(nil)).Elem(), GetKubernetesClusterMaintenancePolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterMaintenancePolicyArrayInput)(nil)).Elem(), GetKubernetesClusterMaintenancePolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterNodePoolInput)(nil)).Elem(), GetKubernetesClusterNodePoolArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterNodePoolArrayInput)(nil)).Elem(), GetKubernetesClusterNodePoolArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterNodePoolNodeInput)(nil)).Elem(), GetKubernetesClusterNodePoolNodeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterNodePoolNodeArrayInput)(nil)).Elem(), GetKubernetesClusterNodePoolNodeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterNodePoolTaintInput)(nil)).Elem(), GetKubernetesClusterNodePoolTaintArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetKubernetesClusterNodePoolTaintArrayInput)(nil)).Elem(), GetKubernetesClusterNodePoolTaintArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerForwardingRuleInput)(nil)).Elem(), GetLoadBalancerForwardingRuleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerForwardingRuleArrayInput)(nil)).Elem(), GetLoadBalancerForwardingRuleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerHealthcheckInput)(nil)).Elem(), GetLoadBalancerHealthcheckArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerHealthcheckArrayInput)(nil)).Elem(), GetLoadBalancerHealthcheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerStickySessionInput)(nil)).Elem(), GetLoadBalancerStickySessionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetLoadBalancerStickySessionArrayInput)(nil)).Elem(), GetLoadBalancerStickySessionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsFilterInput)(nil)).Elem(), GetProjectsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsFilterArrayInput)(nil)).Elem(), GetProjectsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectInput)(nil)).Elem(), GetProjectsProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsProjectArrayInput)(nil)).Elem(), GetProjectsProjectArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsSortInput)(nil)).Elem(), GetProjectsSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectsSortArrayInput)(nil)).Elem(), GetProjectsSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsFilterInput)(nil)).Elem(), GetRecordsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsFilterArrayInput)(nil)).Elem(), GetRecordsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsRecordInput)(nil)).Elem(), GetRecordsRecordArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsRecordArrayInput)(nil)).Elem(), GetRecordsRecordArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsSortInput)(nil)).Elem(), GetRecordsSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRecordsSortArrayInput)(nil)).Elem(), GetRecordsSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsFilterInput)(nil)).Elem(), GetRegionsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsFilterArrayInput)(nil)).Elem(), GetRegionsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionInput)(nil)).Elem(), GetRegionsRegionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsRegionArrayInput)(nil)).Elem(), GetRegionsRegionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsSortInput)(nil)).Elem(), GetRegionsSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetRegionsSortArrayInput)(nil)).Elem(), GetRegionsSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizesFilterInput)(nil)).Elem(), GetSizesFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizesFilterArrayInput)(nil)).Elem(), GetSizesFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizesSizeInput)(nil)).Elem(), GetSizesSizeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizesSizeArrayInput)(nil)).Elem(), GetSizesSizeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizesSortInput)(nil)).Elem(), GetSizesSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSizesSortArrayInput)(nil)).Elem(), GetSizesSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpacesBucketsBucketInput)(nil)).Elem(), GetSpacesBucketsBucketArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpacesBucketsBucketArrayInput)(nil)).Elem(), GetSpacesBucketsBucketArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpacesBucketsFilterInput)(nil)).Elem(), GetSpacesBucketsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpacesBucketsFilterArrayInput)(nil)).Elem(), GetSpacesBucketsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpacesBucketsSortInput)(nil)).Elem(), GetSpacesBucketsSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSpacesBucketsSortArrayInput)(nil)).Elem(), GetSpacesBucketsSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshKeysFilterInput)(nil)).Elem(), GetSshKeysFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshKeysFilterArrayInput)(nil)).Elem(), GetSshKeysFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshKeysSortInput)(nil)).Elem(), GetSshKeysSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshKeysSortArrayInput)(nil)).Elem(), GetSshKeysSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshKeysSshKeyInput)(nil)).Elem(), GetSshKeysSshKeyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetSshKeysSshKeyArrayInput)(nil)).Elem(), GetSshKeysSshKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsFilterInput)(nil)).Elem(), GetTagsFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsFilterArrayInput)(nil)).Elem(), GetTagsFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsSortInput)(nil)).Elem(), GetTagsSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsSortArrayInput)(nil)).Elem(), GetTagsSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterOutputType(AppSpecOutput{})
	pulumi.RegisterOutputType(AppSpecPtrOutput{})
	pulumi.RegisterOutputType(AppSpecAlertOutput{})
	pulumi.RegisterOutputType(AppSpecAlertArrayOutput{})
	pulumi.RegisterOutputType(AppSpecDatabaseOutput{})
	pulumi.RegisterOutputType(AppSpecDatabaseArrayOutput{})
	pulumi.RegisterOutputType(AppSpecDomainNameOutput{})
	pulumi.RegisterOutputType(AppSpecDomainNameArrayOutput{})
	pulumi.RegisterOutputType(AppSpecEnvOutput{})
	pulumi.RegisterOutputType(AppSpecEnvArrayOutput{})
	pulumi.RegisterOutputType(AppSpecJobOutput{})
	pulumi.RegisterOutputType(AppSpecJobArrayOutput{})
	pulumi.RegisterOutputType(AppSpecJobAlertOutput{})
	pulumi.RegisterOutputType(AppSpecJobAlertArrayOutput{})
	pulumi.RegisterOutputType(AppSpecJobEnvOutput{})
	pulumi.RegisterOutputType(AppSpecJobEnvArrayOutput{})
	pulumi.RegisterOutputType(AppSpecJobGitOutput{})
	pulumi.RegisterOutputType(AppSpecJobGitPtrOutput{})
	pulumi.RegisterOutputType(AppSpecJobGithubOutput{})
	pulumi.RegisterOutputType(AppSpecJobGithubPtrOutput{})
	pulumi.RegisterOutputType(AppSpecJobGitlabOutput{})
	pulumi.RegisterOutputType(AppSpecJobGitlabPtrOutput{})
	pulumi.RegisterOutputType(AppSpecJobImageOutput{})
	pulumi.RegisterOutputType(AppSpecJobImagePtrOutput{})
	pulumi.RegisterOutputType(AppSpecJobLogDestinationOutput{})
	pulumi.RegisterOutputType(AppSpecJobLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(AppSpecJobLogDestinationDatadogOutput{})
	pulumi.RegisterOutputType(AppSpecJobLogDestinationDatadogPtrOutput{})
	pulumi.RegisterOutputType(AppSpecJobLogDestinationLogtailOutput{})
	pulumi.RegisterOutputType(AppSpecJobLogDestinationLogtailPtrOutput{})
	pulumi.RegisterOutputType(AppSpecJobLogDestinationPapertrailOutput{})
	pulumi.RegisterOutputType(AppSpecJobLogDestinationPapertrailPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceOutput{})
	pulumi.RegisterOutputType(AppSpecServiceArrayOutput{})
	pulumi.RegisterOutputType(AppSpecServiceAlertOutput{})
	pulumi.RegisterOutputType(AppSpecServiceAlertArrayOutput{})
	pulumi.RegisterOutputType(AppSpecServiceCorsOutput{})
	pulumi.RegisterOutputType(AppSpecServiceCorsPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceCorsAllowOriginsOutput{})
	pulumi.RegisterOutputType(AppSpecServiceCorsAllowOriginsPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceEnvOutput{})
	pulumi.RegisterOutputType(AppSpecServiceEnvArrayOutput{})
	pulumi.RegisterOutputType(AppSpecServiceGitOutput{})
	pulumi.RegisterOutputType(AppSpecServiceGitPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceGithubOutput{})
	pulumi.RegisterOutputType(AppSpecServiceGithubPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceGitlabOutput{})
	pulumi.RegisterOutputType(AppSpecServiceGitlabPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceHealthCheckOutput{})
	pulumi.RegisterOutputType(AppSpecServiceHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceImageOutput{})
	pulumi.RegisterOutputType(AppSpecServiceImagePtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceLogDestinationOutput{})
	pulumi.RegisterOutputType(AppSpecServiceLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(AppSpecServiceLogDestinationDatadogOutput{})
	pulumi.RegisterOutputType(AppSpecServiceLogDestinationDatadogPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceLogDestinationLogtailOutput{})
	pulumi.RegisterOutputType(AppSpecServiceLogDestinationLogtailPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceLogDestinationPapertrailOutput{})
	pulumi.RegisterOutputType(AppSpecServiceLogDestinationPapertrailPtrOutput{})
	pulumi.RegisterOutputType(AppSpecServiceRouteOutput{})
	pulumi.RegisterOutputType(AppSpecServiceRouteArrayOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteArrayOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteCorsOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteCorsPtrOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteCorsAllowOriginsOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteCorsAllowOriginsPtrOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteEnvOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteEnvArrayOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteGitOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteGitPtrOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteGithubOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteGithubPtrOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteGitlabOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteGitlabPtrOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteRouteOutput{})
	pulumi.RegisterOutputType(AppSpecStaticSiteRouteArrayOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerArrayOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerAlertOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerAlertArrayOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerEnvOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerEnvArrayOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerGitOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerGitPtrOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerGithubOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerGithubPtrOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerGitlabOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerGitlabPtrOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerImageOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerImagePtrOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerLogDestinationOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerLogDestinationDatadogOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerLogDestinationDatadogPtrOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerLogDestinationLogtailOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerLogDestinationLogtailPtrOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerLogDestinationPapertrailOutput{})
	pulumi.RegisterOutputType(AppSpecWorkerLogDestinationPapertrailPtrOutput{})
	pulumi.RegisterOutputType(DatabaseClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(DatabaseClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(DatabaseFirewallRuleOutput{})
	pulumi.RegisterOutputType(DatabaseFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallInboundRuleOutput{})
	pulumi.RegisterOutputType(FirewallInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallOutboundRuleOutput{})
	pulumi.RegisterOutputType(FirewallOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallPendingChangeOutput{})
	pulumi.RegisterOutputType(FirewallPendingChangeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeConfigArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(KubernetesClusterMaintenancePolicyPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolTaintOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolTaintOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerForwardingRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancerForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerHealthcheckOutput{})
	pulumi.RegisterOutputType(LoadBalancerHealthcheckPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerStickySessionsOutput{})
	pulumi.RegisterOutputType(LoadBalancerStickySessionsPtrOutput{})
	pulumi.RegisterOutputType(MonitorAlertAlertsOutput{})
	pulumi.RegisterOutputType(MonitorAlertAlertsPtrOutput{})
	pulumi.RegisterOutputType(MonitorAlertAlertsSlackOutput{})
	pulumi.RegisterOutputType(MonitorAlertAlertsSlackArrayOutput{})
	pulumi.RegisterOutputType(SpacesBucketCorsRuleOutput{})
	pulumi.RegisterOutputType(SpacesBucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(SpacesBucketLifecycleRuleOutput{})
	pulumi.RegisterOutputType(SpacesBucketLifecycleRuleArrayOutput{})
	pulumi.RegisterOutputType(SpacesBucketLifecycleRuleExpirationOutput{})
	pulumi.RegisterOutputType(SpacesBucketLifecycleRuleExpirationPtrOutput{})
	pulumi.RegisterOutputType(SpacesBucketLifecycleRuleNoncurrentVersionExpirationOutput{})
	pulumi.RegisterOutputType(SpacesBucketLifecycleRuleNoncurrentVersionExpirationPtrOutput{})
	pulumi.RegisterOutputType(SpacesBucketVersioningOutput{})
	pulumi.RegisterOutputType(SpacesBucketVersioningPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecOutput{})
	pulumi.RegisterOutputType(GetAppSpecArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecAlertOutput{})
	pulumi.RegisterOutputType(GetAppSpecAlertArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecDatabaseOutput{})
	pulumi.RegisterOutputType(GetAppSpecDatabaseArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecDomainOutput{})
	pulumi.RegisterOutputType(GetAppSpecEnvOutput{})
	pulumi.RegisterOutputType(GetAppSpecEnvArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobAlertOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobAlertArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobEnvOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobEnvArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobGitOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobGitPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobGithubOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobGithubPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobGitlabOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobGitlabPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobImageOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobImagePtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobLogDestinationOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobLogDestinationDatadogOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobLogDestinationDatadogPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobLogDestinationLogtailOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobLogDestinationLogtailPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobLogDestinationPapertrailOutput{})
	pulumi.RegisterOutputType(GetAppSpecJobLogDestinationPapertrailPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceAlertOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceAlertArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceCorsOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceCorsPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceCorsAllowOriginsOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceCorsAllowOriginsPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceEnvOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceEnvArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceGitOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceGitPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceGithubOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceGithubPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceGitlabOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceGitlabPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceHealthCheckOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceHealthCheckPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceImageOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceImagePtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceLogDestinationOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceLogDestinationDatadogOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceLogDestinationDatadogPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceLogDestinationLogtailOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceLogDestinationLogtailPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceLogDestinationPapertrailOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceLogDestinationPapertrailPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceRouteOutput{})
	pulumi.RegisterOutputType(GetAppSpecServiceRouteArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteCorsOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteCorsPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteCorsAllowOriginsOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteCorsAllowOriginsPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteEnvOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteEnvArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteGitOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteGitPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteGithubOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteGithubPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteGitlabOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteGitlabPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteRouteOutput{})
	pulumi.RegisterOutputType(GetAppSpecStaticSiteRouteArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerAlertOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerAlertArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerEnvOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerEnvArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerGitOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerGitPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerGithubOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerGithubPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerGitlabOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerGitlabPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerImageOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerImagePtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerLogDestinationOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerLogDestinationArrayOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerLogDestinationDatadogOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerLogDestinationDatadogPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerLogDestinationLogtailOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerLogDestinationLogtailPtrOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerLogDestinationPapertrailOutput{})
	pulumi.RegisterOutputType(GetAppSpecWorkerLogDestinationPapertrailPtrOutput{})
	pulumi.RegisterOutputType(GetDatabaseClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetDatabaseClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsFilterOutput{})
	pulumi.RegisterOutputType(GetDomainsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsSortOutput{})
	pulumi.RegisterOutputType(GetDomainsSortArrayOutput{})
	pulumi.RegisterOutputType(GetDropletsDropletOutput{})
	pulumi.RegisterOutputType(GetDropletsDropletArrayOutput{})
	pulumi.RegisterOutputType(GetDropletsFilterOutput{})
	pulumi.RegisterOutputType(GetDropletsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetDropletsSortOutput{})
	pulumi.RegisterOutputType(GetDropletsSortArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallInboundRuleOutput{})
	pulumi.RegisterOutputType(GetFirewallInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallOutboundRuleOutput{})
	pulumi.RegisterOutputType(GetFirewallOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(GetFirewallPendingChangeOutput{})
	pulumi.RegisterOutputType(GetFirewallPendingChangeArrayOutput{})
	pulumi.RegisterOutputType(GetImagesFilterOutput{})
	pulumi.RegisterOutputType(GetImagesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetImagesSortOutput{})
	pulumi.RegisterOutputType(GetImagesSortArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMaintenancePolicyOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterMaintenancePolicyArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolNodeOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolTaintOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolTaintArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerForwardingRuleOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerHealthcheckOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerHealthcheckArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerStickySessionOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerStickySessionArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsSortOutput{})
	pulumi.RegisterOutputType(GetProjectsSortArrayOutput{})
	pulumi.RegisterOutputType(GetRecordsFilterOutput{})
	pulumi.RegisterOutputType(GetRecordsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRecordsRecordOutput{})
	pulumi.RegisterOutputType(GetRecordsRecordArrayOutput{})
	pulumi.RegisterOutputType(GetRecordsSortOutput{})
	pulumi.RegisterOutputType(GetRecordsSortArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsFilterOutput{})
	pulumi.RegisterOutputType(GetRegionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsSortOutput{})
	pulumi.RegisterOutputType(GetRegionsSortArrayOutput{})
	pulumi.RegisterOutputType(GetSizesFilterOutput{})
	pulumi.RegisterOutputType(GetSizesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSizesSizeOutput{})
	pulumi.RegisterOutputType(GetSizesSizeArrayOutput{})
	pulumi.RegisterOutputType(GetSizesSortOutput{})
	pulumi.RegisterOutputType(GetSizesSortArrayOutput{})
	pulumi.RegisterOutputType(GetSpacesBucketsBucketOutput{})
	pulumi.RegisterOutputType(GetSpacesBucketsBucketArrayOutput{})
	pulumi.RegisterOutputType(GetSpacesBucketsFilterOutput{})
	pulumi.RegisterOutputType(GetSpacesBucketsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSpacesBucketsSortOutput{})
	pulumi.RegisterOutputType(GetSpacesBucketsSortArrayOutput{})
	pulumi.RegisterOutputType(GetSshKeysFilterOutput{})
	pulumi.RegisterOutputType(GetSshKeysFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSshKeysSortOutput{})
	pulumi.RegisterOutputType(GetSshKeysSortArrayOutput{})
	pulumi.RegisterOutputType(GetSshKeysSshKeyOutput{})
	pulumi.RegisterOutputType(GetSshKeysSshKeyArrayOutput{})
	pulumi.RegisterOutputType(GetTagsFilterOutput{})
	pulumi.RegisterOutputType(GetTagsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetTagsSortOutput{})
	pulumi.RegisterOutputType(GetTagsSortArrayOutput{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
}
