// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type DatabaseClusterMaintenanceWindow struct {
	// The day of the week on which to apply maintenance updates.
	Day string `pulumi:"day"`
	// The hour in UTC at which maintenance updates will be applied in 24 hour format.
	Hour string `pulumi:"hour"`
}

// DatabaseClusterMaintenanceWindowInput is an input type that accepts DatabaseClusterMaintenanceWindowArgs and DatabaseClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `DatabaseClusterMaintenanceWindowInput` via:
//
// 		 DatabaseClusterMaintenanceWindowArgs{...}
//
type DatabaseClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToDatabaseClusterMaintenanceWindowOutput() DatabaseClusterMaintenanceWindowOutput
	ToDatabaseClusterMaintenanceWindowOutputWithContext(context.Context) DatabaseClusterMaintenanceWindowOutput
}

type DatabaseClusterMaintenanceWindowArgs struct {
	// The day of the week on which to apply maintenance updates.
	Day pulumi.StringInput `pulumi:"day"`
	// The hour in UTC at which maintenance updates will be applied in 24 hour format.
	Hour pulumi.StringInput `pulumi:"hour"`
}

func (DatabaseClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (i DatabaseClusterMaintenanceWindowArgs) ToDatabaseClusterMaintenanceWindowOutput() DatabaseClusterMaintenanceWindowOutput {
	return i.ToDatabaseClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i DatabaseClusterMaintenanceWindowArgs) ToDatabaseClusterMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseClusterMaintenanceWindowOutput)
}

// DatabaseClusterMaintenanceWindowArrayInput is an input type that accepts DatabaseClusterMaintenanceWindowArray and DatabaseClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `DatabaseClusterMaintenanceWindowArrayInput` via:
//
// 		 DatabaseClusterMaintenanceWindowArray{ DatabaseClusterMaintenanceWindowArgs{...} }
//
type DatabaseClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToDatabaseClusterMaintenanceWindowArrayOutput() DatabaseClusterMaintenanceWindowArrayOutput
	ToDatabaseClusterMaintenanceWindowArrayOutputWithContext(context.Context) DatabaseClusterMaintenanceWindowArrayOutput
}

type DatabaseClusterMaintenanceWindowArray []DatabaseClusterMaintenanceWindowInput

func (DatabaseClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (i DatabaseClusterMaintenanceWindowArray) ToDatabaseClusterMaintenanceWindowArrayOutput() DatabaseClusterMaintenanceWindowArrayOutput {
	return i.ToDatabaseClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i DatabaseClusterMaintenanceWindowArray) ToDatabaseClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) DatabaseClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseClusterMaintenanceWindowArrayOutput)
}

type DatabaseClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (DatabaseClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseClusterMaintenanceWindowOutput) ToDatabaseClusterMaintenanceWindowOutput() DatabaseClusterMaintenanceWindowOutput {
	return o
}

func (o DatabaseClusterMaintenanceWindowOutput) ToDatabaseClusterMaintenanceWindowOutputWithContext(ctx context.Context) DatabaseClusterMaintenanceWindowOutput {
	return o
}

// The day of the week on which to apply maintenance updates.
func (o DatabaseClusterMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseClusterMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// The hour in UTC at which maintenance updates will be applied in 24 hour format.
func (o DatabaseClusterMaintenanceWindowOutput) Hour() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseClusterMaintenanceWindow) string { return v.Hour }).(pulumi.StringOutput)
}

type DatabaseClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (DatabaseClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (o DatabaseClusterMaintenanceWindowArrayOutput) ToDatabaseClusterMaintenanceWindowArrayOutput() DatabaseClusterMaintenanceWindowArrayOutput {
	return o
}

func (o DatabaseClusterMaintenanceWindowArrayOutput) ToDatabaseClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) DatabaseClusterMaintenanceWindowArrayOutput {
	return o
}

func (o DatabaseClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) DatabaseClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseClusterMaintenanceWindow {
		return vs[0].([]DatabaseClusterMaintenanceWindow)[vs[1].(int)]
	}).(DatabaseClusterMaintenanceWindowOutput)
}

type DatabaseFirewallRule struct {
	// The date and time when the firewall rule was created.
	CreatedAt *string `pulumi:"createdAt"`
	Type      string  `pulumi:"type"`
	// A unique identifier for the firewall rule.
	Uuid  *string `pulumi:"uuid"`
	Value string  `pulumi:"value"`
}

// DatabaseFirewallRuleInput is an input type that accepts DatabaseFirewallRuleArgs and DatabaseFirewallRuleOutput values.
// You can construct a concrete instance of `DatabaseFirewallRuleInput` via:
//
// 		 DatabaseFirewallRuleArgs{...}
//
type DatabaseFirewallRuleInput interface {
	pulumi.Input

	ToDatabaseFirewallRuleOutput() DatabaseFirewallRuleOutput
	ToDatabaseFirewallRuleOutputWithContext(context.Context) DatabaseFirewallRuleOutput
}

type DatabaseFirewallRuleArgs struct {
	// The date and time when the firewall rule was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	Type      pulumi.StringInput    `pulumi:"type"`
	// A unique identifier for the firewall rule.
	Uuid  pulumi.StringPtrInput `pulumi:"uuid"`
	Value pulumi.StringInput    `pulumi:"value"`
}

func (DatabaseFirewallRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFirewallRule)(nil)).Elem()
}

func (i DatabaseFirewallRuleArgs) ToDatabaseFirewallRuleOutput() DatabaseFirewallRuleOutput {
	return i.ToDatabaseFirewallRuleOutputWithContext(context.Background())
}

func (i DatabaseFirewallRuleArgs) ToDatabaseFirewallRuleOutputWithContext(ctx context.Context) DatabaseFirewallRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFirewallRuleOutput)
}

// DatabaseFirewallRuleArrayInput is an input type that accepts DatabaseFirewallRuleArray and DatabaseFirewallRuleArrayOutput values.
// You can construct a concrete instance of `DatabaseFirewallRuleArrayInput` via:
//
// 		 DatabaseFirewallRuleArray{ DatabaseFirewallRuleArgs{...} }
//
type DatabaseFirewallRuleArrayInput interface {
	pulumi.Input

	ToDatabaseFirewallRuleArrayOutput() DatabaseFirewallRuleArrayOutput
	ToDatabaseFirewallRuleArrayOutputWithContext(context.Context) DatabaseFirewallRuleArrayOutput
}

type DatabaseFirewallRuleArray []DatabaseFirewallRuleInput

func (DatabaseFirewallRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFirewallRule)(nil)).Elem()
}

func (i DatabaseFirewallRuleArray) ToDatabaseFirewallRuleArrayOutput() DatabaseFirewallRuleArrayOutput {
	return i.ToDatabaseFirewallRuleArrayOutputWithContext(context.Background())
}

func (i DatabaseFirewallRuleArray) ToDatabaseFirewallRuleArrayOutputWithContext(ctx context.Context) DatabaseFirewallRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseFirewallRuleArrayOutput)
}

type DatabaseFirewallRuleOutput struct{ *pulumi.OutputState }

func (DatabaseFirewallRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DatabaseFirewallRule)(nil)).Elem()
}

func (o DatabaseFirewallRuleOutput) ToDatabaseFirewallRuleOutput() DatabaseFirewallRuleOutput {
	return o
}

func (o DatabaseFirewallRuleOutput) ToDatabaseFirewallRuleOutputWithContext(ctx context.Context) DatabaseFirewallRuleOutput {
	return o
}

// The date and time when the firewall rule was created.
func (o DatabaseFirewallRuleOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFirewallRule) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o DatabaseFirewallRuleOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseFirewallRule) string { return v.Type }).(pulumi.StringOutput)
}

// A unique identifier for the firewall rule.
func (o DatabaseFirewallRuleOutput) Uuid() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DatabaseFirewallRule) *string { return v.Uuid }).(pulumi.StringPtrOutput)
}

func (o DatabaseFirewallRuleOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v DatabaseFirewallRule) string { return v.Value }).(pulumi.StringOutput)
}

type DatabaseFirewallRuleArrayOutput struct{ *pulumi.OutputState }

func (DatabaseFirewallRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DatabaseFirewallRule)(nil)).Elem()
}

func (o DatabaseFirewallRuleArrayOutput) ToDatabaseFirewallRuleArrayOutput() DatabaseFirewallRuleArrayOutput {
	return o
}

func (o DatabaseFirewallRuleArrayOutput) ToDatabaseFirewallRuleArrayOutputWithContext(ctx context.Context) DatabaseFirewallRuleArrayOutput {
	return o
}

func (o DatabaseFirewallRuleArrayOutput) Index(i pulumi.IntInput) DatabaseFirewallRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DatabaseFirewallRule {
		return vs[0].([]DatabaseFirewallRule)[vs[1].(int)]
	}).(DatabaseFirewallRuleOutput)
}

type FirewallInboundRule struct {
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange *string `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol string `pulumi:"protocol"`
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
	// inbound traffic will be accepted.
	SourceAddresses []string `pulumi:"sourceAddresses"`
	// An array containing the IDs of
	// the Droplets from which the inbound traffic will be accepted.
	SourceDropletIds []int `pulumi:"sourceDropletIds"`
	// An array containing the IDs
	// of the Load Balancers from which the inbound traffic will be accepted.
	SourceLoadBalancerUids []string `pulumi:"sourceLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets from which the inbound traffic
	// will be accepted.
	SourceTags []string `pulumi:"sourceTags"`
}

// FirewallInboundRuleInput is an input type that accepts FirewallInboundRuleArgs and FirewallInboundRuleOutput values.
// You can construct a concrete instance of `FirewallInboundRuleInput` via:
//
// 		 FirewallInboundRuleArgs{...}
//
type FirewallInboundRuleInput interface {
	pulumi.Input

	ToFirewallInboundRuleOutput() FirewallInboundRuleOutput
	ToFirewallInboundRuleOutputWithContext(context.Context) FirewallInboundRuleOutput
}

type FirewallInboundRuleArgs struct {
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
	// inbound traffic will be accepted.
	SourceAddresses pulumi.StringArrayInput `pulumi:"sourceAddresses"`
	// An array containing the IDs of
	// the Droplets from which the inbound traffic will be accepted.
	SourceDropletIds pulumi.IntArrayInput `pulumi:"sourceDropletIds"`
	// An array containing the IDs
	// of the Load Balancers from which the inbound traffic will be accepted.
	SourceLoadBalancerUids pulumi.StringArrayInput `pulumi:"sourceLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets from which the inbound traffic
	// will be accepted.
	SourceTags pulumi.StringArrayInput `pulumi:"sourceTags"`
}

func (FirewallInboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInboundRule)(nil)).Elem()
}

func (i FirewallInboundRuleArgs) ToFirewallInboundRuleOutput() FirewallInboundRuleOutput {
	return i.ToFirewallInboundRuleOutputWithContext(context.Background())
}

func (i FirewallInboundRuleArgs) ToFirewallInboundRuleOutputWithContext(ctx context.Context) FirewallInboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInboundRuleOutput)
}

// FirewallInboundRuleArrayInput is an input type that accepts FirewallInboundRuleArray and FirewallInboundRuleArrayOutput values.
// You can construct a concrete instance of `FirewallInboundRuleArrayInput` via:
//
// 		 FirewallInboundRuleArray{ FirewallInboundRuleArgs{...} }
//
type FirewallInboundRuleArrayInput interface {
	pulumi.Input

	ToFirewallInboundRuleArrayOutput() FirewallInboundRuleArrayOutput
	ToFirewallInboundRuleArrayOutputWithContext(context.Context) FirewallInboundRuleArrayOutput
}

type FirewallInboundRuleArray []FirewallInboundRuleInput

func (FirewallInboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInboundRule)(nil)).Elem()
}

func (i FirewallInboundRuleArray) ToFirewallInboundRuleArrayOutput() FirewallInboundRuleArrayOutput {
	return i.ToFirewallInboundRuleArrayOutputWithContext(context.Background())
}

func (i FirewallInboundRuleArray) ToFirewallInboundRuleArrayOutputWithContext(ctx context.Context) FirewallInboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallInboundRuleArrayOutput)
}

type FirewallInboundRuleOutput struct{ *pulumi.OutputState }

func (FirewallInboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallInboundRule)(nil)).Elem()
}

func (o FirewallInboundRuleOutput) ToFirewallInboundRuleOutput() FirewallInboundRuleOutput {
	return o
}

func (o FirewallInboundRuleOutput) ToFirewallInboundRuleOutputWithContext(ctx context.Context) FirewallInboundRuleOutput {
	return o
}

// The ports on which traffic will be allowed
// specified as a string containing a single port, a range (e.g. "8000-9000"),
// or "1-65535" to open all ports for a protocol. Required for when protocol is
// `tcp` or `udp`.
func (o FirewallInboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallInboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The type of traffic to be allowed.
// This may be one of "tcp", "udp", or "icmp".
func (o FirewallInboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallInboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

// An array of strings containing the IPv4
// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the
// inbound traffic will be accepted.
func (o FirewallInboundRuleOutput) SourceAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []string { return v.SourceAddresses }).(pulumi.StringArrayOutput)
}

// An array containing the IDs of
// the Droplets from which the inbound traffic will be accepted.
func (o FirewallInboundRuleOutput) SourceDropletIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []int { return v.SourceDropletIds }).(pulumi.IntArrayOutput)
}

// An array containing the IDs
// of the Load Balancers from which the inbound traffic will be accepted.
func (o FirewallInboundRuleOutput) SourceLoadBalancerUids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []string { return v.SourceLoadBalancerUids }).(pulumi.StringArrayOutput)
}

// An array containing the names of Tags
// corresponding to groups of Droplets from which the inbound traffic
// will be accepted.
func (o FirewallInboundRuleOutput) SourceTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallInboundRule) []string { return v.SourceTags }).(pulumi.StringArrayOutput)
}

type FirewallInboundRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallInboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallInboundRule)(nil)).Elem()
}

func (o FirewallInboundRuleArrayOutput) ToFirewallInboundRuleArrayOutput() FirewallInboundRuleArrayOutput {
	return o
}

func (o FirewallInboundRuleArrayOutput) ToFirewallInboundRuleArrayOutputWithContext(ctx context.Context) FirewallInboundRuleArrayOutput {
	return o
}

func (o FirewallInboundRuleArrayOutput) Index(i pulumi.IntInput) FirewallInboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallInboundRule {
		return vs[0].([]FirewallInboundRule)[vs[1].(int)]
	}).(FirewallInboundRuleOutput)
}

type FirewallOutboundRule struct {
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
	// outbound traffic will be allowed.
	DestinationAddresses []string `pulumi:"destinationAddresses"`
	// An array containing the IDs of
	// the Droplets to which the outbound traffic will be allowed.
	DestinationDropletIds []int `pulumi:"destinationDropletIds"`
	// An array containing the IDs
	// of the Load Balancers to which the outbound traffic will be allowed.
	DestinationLoadBalancerUids []string `pulumi:"destinationLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets to which the outbound traffic will
	// be allowed.
	// traffic.
	DestinationTags []string `pulumi:"destinationTags"`
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange *string `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol string `pulumi:"protocol"`
}

// FirewallOutboundRuleInput is an input type that accepts FirewallOutboundRuleArgs and FirewallOutboundRuleOutput values.
// You can construct a concrete instance of `FirewallOutboundRuleInput` via:
//
// 		 FirewallOutboundRuleArgs{...}
//
type FirewallOutboundRuleInput interface {
	pulumi.Input

	ToFirewallOutboundRuleOutput() FirewallOutboundRuleOutput
	ToFirewallOutboundRuleOutputWithContext(context.Context) FirewallOutboundRuleOutput
}

type FirewallOutboundRuleArgs struct {
	// An array of strings containing the IPv4
	// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
	// outbound traffic will be allowed.
	DestinationAddresses pulumi.StringArrayInput `pulumi:"destinationAddresses"`
	// An array containing the IDs of
	// the Droplets to which the outbound traffic will be allowed.
	DestinationDropletIds pulumi.IntArrayInput `pulumi:"destinationDropletIds"`
	// An array containing the IDs
	// of the Load Balancers to which the outbound traffic will be allowed.
	DestinationLoadBalancerUids pulumi.StringArrayInput `pulumi:"destinationLoadBalancerUids"`
	// An array containing the names of Tags
	// corresponding to groups of Droplets to which the outbound traffic will
	// be allowed.
	// traffic.
	DestinationTags pulumi.StringArrayInput `pulumi:"destinationTags"`
	// The ports on which traffic will be allowed
	// specified as a string containing a single port, a range (e.g. "8000-9000"),
	// or "1-65535" to open all ports for a protocol. Required for when protocol is
	// `tcp` or `udp`.
	PortRange pulumi.StringPtrInput `pulumi:"portRange"`
	// The type of traffic to be allowed.
	// This may be one of "tcp", "udp", or "icmp".
	Protocol pulumi.StringInput `pulumi:"protocol"`
}

func (FirewallOutboundRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallOutboundRule)(nil)).Elem()
}

func (i FirewallOutboundRuleArgs) ToFirewallOutboundRuleOutput() FirewallOutboundRuleOutput {
	return i.ToFirewallOutboundRuleOutputWithContext(context.Background())
}

func (i FirewallOutboundRuleArgs) ToFirewallOutboundRuleOutputWithContext(ctx context.Context) FirewallOutboundRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutboundRuleOutput)
}

// FirewallOutboundRuleArrayInput is an input type that accepts FirewallOutboundRuleArray and FirewallOutboundRuleArrayOutput values.
// You can construct a concrete instance of `FirewallOutboundRuleArrayInput` via:
//
// 		 FirewallOutboundRuleArray{ FirewallOutboundRuleArgs{...} }
//
type FirewallOutboundRuleArrayInput interface {
	pulumi.Input

	ToFirewallOutboundRuleArrayOutput() FirewallOutboundRuleArrayOutput
	ToFirewallOutboundRuleArrayOutputWithContext(context.Context) FirewallOutboundRuleArrayOutput
}

type FirewallOutboundRuleArray []FirewallOutboundRuleInput

func (FirewallOutboundRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallOutboundRule)(nil)).Elem()
}

func (i FirewallOutboundRuleArray) ToFirewallOutboundRuleArrayOutput() FirewallOutboundRuleArrayOutput {
	return i.ToFirewallOutboundRuleArrayOutputWithContext(context.Background())
}

func (i FirewallOutboundRuleArray) ToFirewallOutboundRuleArrayOutputWithContext(ctx context.Context) FirewallOutboundRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallOutboundRuleArrayOutput)
}

type FirewallOutboundRuleOutput struct{ *pulumi.OutputState }

func (FirewallOutboundRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallOutboundRule)(nil)).Elem()
}

func (o FirewallOutboundRuleOutput) ToFirewallOutboundRuleOutput() FirewallOutboundRuleOutput {
	return o
}

func (o FirewallOutboundRuleOutput) ToFirewallOutboundRuleOutputWithContext(ctx context.Context) FirewallOutboundRuleOutput {
	return o
}

// An array of strings containing the IPv4
// addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which the
// outbound traffic will be allowed.
func (o FirewallOutboundRuleOutput) DestinationAddresses() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []string { return v.DestinationAddresses }).(pulumi.StringArrayOutput)
}

// An array containing the IDs of
// the Droplets to which the outbound traffic will be allowed.
func (o FirewallOutboundRuleOutput) DestinationDropletIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []int { return v.DestinationDropletIds }).(pulumi.IntArrayOutput)
}

// An array containing the IDs
// of the Load Balancers to which the outbound traffic will be allowed.
func (o FirewallOutboundRuleOutput) DestinationLoadBalancerUids() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []string { return v.DestinationLoadBalancerUids }).(pulumi.StringArrayOutput)
}

// An array containing the names of Tags
// corresponding to groups of Droplets to which the outbound traffic will
// be allowed.
// traffic.
func (o FirewallOutboundRuleOutput) DestinationTags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v FirewallOutboundRule) []string { return v.DestinationTags }).(pulumi.StringArrayOutput)
}

// The ports on which traffic will be allowed
// specified as a string containing a single port, a range (e.g. "8000-9000"),
// or "1-65535" to open all ports for a protocol. Required for when protocol is
// `tcp` or `udp`.
func (o FirewallOutboundRuleOutput) PortRange() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallOutboundRule) *string { return v.PortRange }).(pulumi.StringPtrOutput)
}

// The type of traffic to be allowed.
// This may be one of "tcp", "udp", or "icmp".
func (o FirewallOutboundRuleOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v FirewallOutboundRule) string { return v.Protocol }).(pulumi.StringOutput)
}

type FirewallOutboundRuleArrayOutput struct{ *pulumi.OutputState }

func (FirewallOutboundRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallOutboundRule)(nil)).Elem()
}

func (o FirewallOutboundRuleArrayOutput) ToFirewallOutboundRuleArrayOutput() FirewallOutboundRuleArrayOutput {
	return o
}

func (o FirewallOutboundRuleArrayOutput) ToFirewallOutboundRuleArrayOutputWithContext(ctx context.Context) FirewallOutboundRuleArrayOutput {
	return o
}

func (o FirewallOutboundRuleArrayOutput) Index(i pulumi.IntInput) FirewallOutboundRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallOutboundRule {
		return vs[0].([]FirewallOutboundRule)[vs[1].(int)]
	}).(FirewallOutboundRuleOutput)
}

type FirewallPendingChange struct {
	DropletId *int  `pulumi:"dropletId"`
	Removing  *bool `pulumi:"removing"`
	// A status string indicating the current state of the Firewall.
	// This can be "waiting", "succeeded", or "failed".
	Status *string `pulumi:"status"`
}

// FirewallPendingChangeInput is an input type that accepts FirewallPendingChangeArgs and FirewallPendingChangeOutput values.
// You can construct a concrete instance of `FirewallPendingChangeInput` via:
//
// 		 FirewallPendingChangeArgs{...}
//
type FirewallPendingChangeInput interface {
	pulumi.Input

	ToFirewallPendingChangeOutput() FirewallPendingChangeOutput
	ToFirewallPendingChangeOutputWithContext(context.Context) FirewallPendingChangeOutput
}

type FirewallPendingChangeArgs struct {
	DropletId pulumi.IntPtrInput  `pulumi:"dropletId"`
	Removing  pulumi.BoolPtrInput `pulumi:"removing"`
	// A status string indicating the current state of the Firewall.
	// This can be "waiting", "succeeded", or "failed".
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (FirewallPendingChangeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPendingChange)(nil)).Elem()
}

func (i FirewallPendingChangeArgs) ToFirewallPendingChangeOutput() FirewallPendingChangeOutput {
	return i.ToFirewallPendingChangeOutputWithContext(context.Background())
}

func (i FirewallPendingChangeArgs) ToFirewallPendingChangeOutputWithContext(ctx context.Context) FirewallPendingChangeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPendingChangeOutput)
}

// FirewallPendingChangeArrayInput is an input type that accepts FirewallPendingChangeArray and FirewallPendingChangeArrayOutput values.
// You can construct a concrete instance of `FirewallPendingChangeArrayInput` via:
//
// 		 FirewallPendingChangeArray{ FirewallPendingChangeArgs{...} }
//
type FirewallPendingChangeArrayInput interface {
	pulumi.Input

	ToFirewallPendingChangeArrayOutput() FirewallPendingChangeArrayOutput
	ToFirewallPendingChangeArrayOutputWithContext(context.Context) FirewallPendingChangeArrayOutput
}

type FirewallPendingChangeArray []FirewallPendingChangeInput

func (FirewallPendingChangeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPendingChange)(nil)).Elem()
}

func (i FirewallPendingChangeArray) ToFirewallPendingChangeArrayOutput() FirewallPendingChangeArrayOutput {
	return i.ToFirewallPendingChangeArrayOutputWithContext(context.Background())
}

func (i FirewallPendingChangeArray) ToFirewallPendingChangeArrayOutputWithContext(ctx context.Context) FirewallPendingChangeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(FirewallPendingChangeArrayOutput)
}

type FirewallPendingChangeOutput struct{ *pulumi.OutputState }

func (FirewallPendingChangeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*FirewallPendingChange)(nil)).Elem()
}

func (o FirewallPendingChangeOutput) ToFirewallPendingChangeOutput() FirewallPendingChangeOutput {
	return o
}

func (o FirewallPendingChangeOutput) ToFirewallPendingChangeOutputWithContext(ctx context.Context) FirewallPendingChangeOutput {
	return o
}

func (o FirewallPendingChangeOutput) DropletId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v FirewallPendingChange) *int { return v.DropletId }).(pulumi.IntPtrOutput)
}

func (o FirewallPendingChangeOutput) Removing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v FirewallPendingChange) *bool { return v.Removing }).(pulumi.BoolPtrOutput)
}

// A status string indicating the current state of the Firewall.
// This can be "waiting", "succeeded", or "failed".
func (o FirewallPendingChangeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v FirewallPendingChange) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type FirewallPendingChangeArrayOutput struct{ *pulumi.OutputState }

func (FirewallPendingChangeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]FirewallPendingChange)(nil)).Elem()
}

func (o FirewallPendingChangeArrayOutput) ToFirewallPendingChangeArrayOutput() FirewallPendingChangeArrayOutput {
	return o
}

func (o FirewallPendingChangeArrayOutput) ToFirewallPendingChangeArrayOutputWithContext(ctx context.Context) FirewallPendingChangeArrayOutput {
	return o
}

func (o FirewallPendingChangeArrayOutput) Index(i pulumi.IntInput) FirewallPendingChangeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) FirewallPendingChange {
		return vs[0].([]FirewallPendingChange)[vs[1].(int)]
	}).(FirewallPendingChangeOutput)
}

type KubernetesClusterKubeConfig struct {
	ClientCertificate    *string `pulumi:"clientCertificate"`
	ClientKey            *string `pulumi:"clientKey"`
	ClusterCaCertificate *string `pulumi:"clusterCaCertificate"`
	ExpiresAt            *string `pulumi:"expiresAt"`
	Host                 *string `pulumi:"host"`
	RawConfig            *string `pulumi:"rawConfig"`
	Token                *string `pulumi:"token"`
}

// KubernetesClusterKubeConfigInput is an input type that accepts KubernetesClusterKubeConfigArgs and KubernetesClusterKubeConfigOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeConfigInput` via:
//
// 		 KubernetesClusterKubeConfigArgs{...}
//
type KubernetesClusterKubeConfigInput interface {
	pulumi.Input

	ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput
	ToKubernetesClusterKubeConfigOutputWithContext(context.Context) KubernetesClusterKubeConfigOutput
}

type KubernetesClusterKubeConfigArgs struct {
	ClientCertificate    pulumi.StringPtrInput `pulumi:"clientCertificate"`
	ClientKey            pulumi.StringPtrInput `pulumi:"clientKey"`
	ClusterCaCertificate pulumi.StringPtrInput `pulumi:"clusterCaCertificate"`
	ExpiresAt            pulumi.StringPtrInput `pulumi:"expiresAt"`
	Host                 pulumi.StringPtrInput `pulumi:"host"`
	RawConfig            pulumi.StringPtrInput `pulumi:"rawConfig"`
	Token                pulumi.StringPtrInput `pulumi:"token"`
}

func (KubernetesClusterKubeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeConfigArgs) ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput {
	return i.ToKubernetesClusterKubeConfigOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeConfigArgs) ToKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeConfigOutput)
}

// KubernetesClusterKubeConfigArrayInput is an input type that accepts KubernetesClusterKubeConfigArray and KubernetesClusterKubeConfigArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterKubeConfigArrayInput` via:
//
// 		 KubernetesClusterKubeConfigArray{ KubernetesClusterKubeConfigArgs{...} }
//
type KubernetesClusterKubeConfigArrayInput interface {
	pulumi.Input

	ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput
	ToKubernetesClusterKubeConfigArrayOutputWithContext(context.Context) KubernetesClusterKubeConfigArrayOutput
}

type KubernetesClusterKubeConfigArray []KubernetesClusterKubeConfigInput

func (KubernetesClusterKubeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeConfig)(nil)).Elem()
}

func (i KubernetesClusterKubeConfigArray) ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput {
	return i.ToKubernetesClusterKubeConfigArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterKubeConfigArray) ToKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterKubeConfigArrayOutput)
}

type KubernetesClusterKubeConfigOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterKubeConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeConfigOutput) ToKubernetesClusterKubeConfigOutput() KubernetesClusterKubeConfigOutput {
	return o
}

func (o KubernetesClusterKubeConfigOutput) ToKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigOutput {
	return o
}

func (o KubernetesClusterKubeConfigOutput) ClientCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClientCertificate }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterKubeConfigOutput) ClientKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClientKey }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterKubeConfigOutput) ClusterCaCertificate() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ClusterCaCertificate }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterKubeConfigOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterKubeConfigOutput) Host() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Host }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterKubeConfigOutput) RawConfig() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.RawConfig }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterKubeConfigOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterKubeConfig) *string { return v.Token }).(pulumi.StringPtrOutput)
}

type KubernetesClusterKubeConfigArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterKubeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterKubeConfig)(nil)).Elem()
}

func (o KubernetesClusterKubeConfigArrayOutput) ToKubernetesClusterKubeConfigArrayOutput() KubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeConfigArrayOutput) ToKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) KubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o KubernetesClusterKubeConfigArrayOutput) Index(i pulumi.IntInput) KubernetesClusterKubeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterKubeConfig {
		return vs[0].([]KubernetesClusterKubeConfig)[vs[1].(int)]
	}).(KubernetesClusterKubeConfigOutput)
}

type KubernetesClusterNodePool struct {
	ActualNodeCount *int  `pulumi:"actualNodeCount"`
	AutoScale       *bool `pulumi:"autoScale"`
	// A unique ID that can be used to identify and reference a Kubernetes cluster.
	Id       *string           `pulumi:"id"`
	Labels   map[string]string `pulumi:"labels"`
	MaxNodes *int              `pulumi:"maxNodes"`
	MinNodes *int              `pulumi:"minNodes"`
	// A name for the Kubernetes cluster.
	Name      string                          `pulumi:"name"`
	NodeCount *int                            `pulumi:"nodeCount"`
	Nodes     []KubernetesClusterNodePoolNode `pulumi:"nodes"`
	Size      string                          `pulumi:"size"`
	// A list of tag names to be applied to the Kubernetes cluster.
	Tags []string `pulumi:"tags"`
}

// KubernetesClusterNodePoolInput is an input type that accepts KubernetesClusterNodePoolArgs and KubernetesClusterNodePoolOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolInput` via:
//
// 		 KubernetesClusterNodePoolArgs{...}
//
type KubernetesClusterNodePoolInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput
	ToKubernetesClusterNodePoolOutputWithContext(context.Context) KubernetesClusterNodePoolOutput
}

type KubernetesClusterNodePoolArgs struct {
	ActualNodeCount pulumi.IntPtrInput  `pulumi:"actualNodeCount"`
	AutoScale       pulumi.BoolPtrInput `pulumi:"autoScale"`
	// A unique ID that can be used to identify and reference a Kubernetes cluster.
	Id       pulumi.StringPtrInput `pulumi:"id"`
	Labels   pulumi.StringMapInput `pulumi:"labels"`
	MaxNodes pulumi.IntPtrInput    `pulumi:"maxNodes"`
	MinNodes pulumi.IntPtrInput    `pulumi:"minNodes"`
	// A name for the Kubernetes cluster.
	Name      pulumi.StringInput                      `pulumi:"name"`
	NodeCount pulumi.IntPtrInput                      `pulumi:"nodeCount"`
	Nodes     KubernetesClusterNodePoolNodeArrayInput `pulumi:"nodes"`
	Size      pulumi.StringInput                      `pulumi:"size"`
	// A list of tag names to be applied to the Kubernetes cluster.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (KubernetesClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePool)(nil)).Elem()
}

func (i KubernetesClusterNodePoolArgs) ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput {
	return i.ToKubernetesClusterNodePoolOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolArgs) ToKubernetesClusterNodePoolOutputWithContext(ctx context.Context) KubernetesClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolOutput)
}

func (i KubernetesClusterNodePoolArgs) ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput {
	return i.ToKubernetesClusterNodePoolPtrOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolArgs) ToKubernetesClusterNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolOutput).ToKubernetesClusterNodePoolPtrOutputWithContext(ctx)
}

// KubernetesClusterNodePoolPtrInput is an input type that accepts KubernetesClusterNodePoolArgs, KubernetesClusterNodePoolPtr and KubernetesClusterNodePoolPtrOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolPtrInput` via:
//
// 		 KubernetesClusterNodePoolArgs{...}
//
//  or:
//
// 		 nil
//
type KubernetesClusterNodePoolPtrInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput
	ToKubernetesClusterNodePoolPtrOutputWithContext(context.Context) KubernetesClusterNodePoolPtrOutput
}

type kubernetesClusterNodePoolPtrType KubernetesClusterNodePoolArgs

func KubernetesClusterNodePoolPtr(v *KubernetesClusterNodePoolArgs) KubernetesClusterNodePoolPtrInput {
	return (*kubernetesClusterNodePoolPtrType)(v)
}

func (*kubernetesClusterNodePoolPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePool)(nil)).Elem()
}

func (i *kubernetesClusterNodePoolPtrType) ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput {
	return i.ToKubernetesClusterNodePoolPtrOutputWithContext(context.Background())
}

func (i *kubernetesClusterNodePoolPtrType) ToKubernetesClusterNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolPtrOutput)
}

type KubernetesClusterNodePoolOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePool)(nil)).Elem()
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolOutput() KubernetesClusterNodePoolOutput {
	return o
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolOutputWithContext(ctx context.Context) KubernetesClusterNodePoolOutput {
	return o
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput {
	return o.ToKubernetesClusterNodePoolPtrOutputWithContext(context.Background())
}

func (o KubernetesClusterNodePoolOutput) ToKubernetesClusterNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *KubernetesClusterNodePool {
		return &v
	}).(KubernetesClusterNodePoolPtrOutput)
}
func (o KubernetesClusterNodePoolOutput) ActualNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.ActualNodeCount }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterNodePoolOutput) AutoScale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *bool { return v.AutoScale }).(pulumi.BoolPtrOutput)
}

// A unique ID that can be used to identify and reference a Kubernetes cluster.
func (o KubernetesClusterNodePoolOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o KubernetesClusterNodePoolOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.MaxNodes }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterNodePoolOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.MinNodes }).(pulumi.IntPtrOutput)
}

// A name for the Kubernetes cluster.
func (o KubernetesClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o KubernetesClusterNodePoolOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterNodePoolOutput) Nodes() KubernetesClusterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) []KubernetesClusterNodePoolNode { return v.Nodes }).(KubernetesClusterNodePoolNodeArrayOutput)
}

func (o KubernetesClusterNodePoolOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) string { return v.Size }).(pulumi.StringOutput)
}

// A list of tag names to be applied to the Kubernetes cluster.
func (o KubernetesClusterNodePoolOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type KubernetesClusterNodePoolPtrOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**KubernetesClusterNodePool)(nil)).Elem()
}

func (o KubernetesClusterNodePoolPtrOutput) ToKubernetesClusterNodePoolPtrOutput() KubernetesClusterNodePoolPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolPtrOutput) ToKubernetesClusterNodePoolPtrOutputWithContext(ctx context.Context) KubernetesClusterNodePoolPtrOutput {
	return o
}

func (o KubernetesClusterNodePoolPtrOutput) Elem() KubernetesClusterNodePoolOutput {
	return o.ApplyT(func(v *KubernetesClusterNodePool) KubernetesClusterNodePool { return *v }).(KubernetesClusterNodePoolOutput)
}

func (o KubernetesClusterNodePoolPtrOutput) ActualNodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.ActualNodeCount }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterNodePoolPtrOutput) AutoScale() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *bool { return v.AutoScale }).(pulumi.BoolPtrOutput)
}

// A unique ID that can be used to identify and reference a Kubernetes cluster.
func (o KubernetesClusterNodePoolPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterNodePoolPtrOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o KubernetesClusterNodePoolPtrOutput) MaxNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.MaxNodes }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterNodePoolPtrOutput) MinNodes() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.MinNodes }).(pulumi.IntPtrOutput)
}

// A name for the Kubernetes cluster.
func (o KubernetesClusterNodePoolPtrOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o KubernetesClusterNodePoolPtrOutput) NodeCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) *int { return v.NodeCount }).(pulumi.IntPtrOutput)
}

func (o KubernetesClusterNodePoolPtrOutput) Nodes() KubernetesClusterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) []KubernetesClusterNodePoolNode { return v.Nodes }).(KubernetesClusterNodePoolNodeArrayOutput)
}

func (o KubernetesClusterNodePoolPtrOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) string { return v.Size }).(pulumi.StringOutput)
}

// A list of tag names to be applied to the Kubernetes cluster.
func (o KubernetesClusterNodePoolPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v KubernetesClusterNodePool) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type KubernetesClusterNodePoolNode struct {
	// The date and time when the Kubernetes cluster was created.
	CreatedAt *string `pulumi:"createdAt"`
	DropletId *string `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference a Kubernetes cluster.
	Id *string `pulumi:"id"`
	// A name for the Kubernetes cluster.
	Name *string `pulumi:"name"`
	// A string indicating the current status of the cluster. Potential values include running, provisioning, and errored.
	Status *string `pulumi:"status"`
	// The date and time when the Kubernetes cluster was last updated.
	// * `kube_config.0` - A representation of the Kubernetes cluster's kubeconfig with the following attributes:
	// - `rawConfig` - The full contents of the Kubernetes cluster's kubeconfig file.
	// - `host` - The URL of the API server on the Kubernetes master node.
	// - `clusterCaCertificate` - The base64 encoded public certificate for the cluster's certificate authority.
	// - `token` - The DigitalOcean API access token used by clients to access the cluster.
	// - `clientKey` - The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	// - `clientCertificate` - The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	// - `expiresAt` - The date and time when the credentials will expire and need to be regenerated.
	UpdatedAt *string `pulumi:"updatedAt"`
}

// KubernetesClusterNodePoolNodeInput is an input type that accepts KubernetesClusterNodePoolNodeArgs and KubernetesClusterNodePoolNodeOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolNodeInput` via:
//
// 		 KubernetesClusterNodePoolNodeArgs{...}
//
type KubernetesClusterNodePoolNodeInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolNodeOutput() KubernetesClusterNodePoolNodeOutput
	ToKubernetesClusterNodePoolNodeOutputWithContext(context.Context) KubernetesClusterNodePoolNodeOutput
}

type KubernetesClusterNodePoolNodeArgs struct {
	// The date and time when the Kubernetes cluster was created.
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	DropletId pulumi.StringPtrInput `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference a Kubernetes cluster.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A name for the Kubernetes cluster.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// A string indicating the current status of the cluster. Potential values include running, provisioning, and errored.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// The date and time when the Kubernetes cluster was last updated.
	// * `kube_config.0` - A representation of the Kubernetes cluster's kubeconfig with the following attributes:
	// - `rawConfig` - The full contents of the Kubernetes cluster's kubeconfig file.
	// - `host` - The URL of the API server on the Kubernetes master node.
	// - `clusterCaCertificate` - The base64 encoded public certificate for the cluster's certificate authority.
	// - `token` - The DigitalOcean API access token used by clients to access the cluster.
	// - `clientKey` - The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	// - `clientCertificate` - The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	// - `expiresAt` - The date and time when the credentials will expire and need to be regenerated.
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (KubernetesClusterNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolNode)(nil)).Elem()
}

func (i KubernetesClusterNodePoolNodeArgs) ToKubernetesClusterNodePoolNodeOutput() KubernetesClusterNodePoolNodeOutput {
	return i.ToKubernetesClusterNodePoolNodeOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolNodeArgs) ToKubernetesClusterNodePoolNodeOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolNodeOutput)
}

// KubernetesClusterNodePoolNodeArrayInput is an input type that accepts KubernetesClusterNodePoolNodeArray and KubernetesClusterNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `KubernetesClusterNodePoolNodeArrayInput` via:
//
// 		 KubernetesClusterNodePoolNodeArray{ KubernetesClusterNodePoolNodeArgs{...} }
//
type KubernetesClusterNodePoolNodeArrayInput interface {
	pulumi.Input

	ToKubernetesClusterNodePoolNodeArrayOutput() KubernetesClusterNodePoolNodeArrayOutput
	ToKubernetesClusterNodePoolNodeArrayOutputWithContext(context.Context) KubernetesClusterNodePoolNodeArrayOutput
}

type KubernetesClusterNodePoolNodeArray []KubernetesClusterNodePoolNodeInput

func (KubernetesClusterNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterNodePoolNode)(nil)).Elem()
}

func (i KubernetesClusterNodePoolNodeArray) ToKubernetesClusterNodePoolNodeArrayOutput() KubernetesClusterNodePoolNodeArrayOutput {
	return i.ToKubernetesClusterNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i KubernetesClusterNodePoolNodeArray) ToKubernetesClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesClusterNodePoolNodeArrayOutput)
}

type KubernetesClusterNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesClusterNodePoolNode)(nil)).Elem()
}

func (o KubernetesClusterNodePoolNodeOutput) ToKubernetesClusterNodePoolNodeOutput() KubernetesClusterNodePoolNodeOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeOutput) ToKubernetesClusterNodePoolNodeOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeOutput {
	return o
}

// The date and time when the Kubernetes cluster was created.
func (o KubernetesClusterNodePoolNodeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o KubernetesClusterNodePoolNodeOutput) DropletId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.DropletId }).(pulumi.StringPtrOutput)
}

// A unique ID that can be used to identify and reference a Kubernetes cluster.
func (o KubernetesClusterNodePoolNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A name for the Kubernetes cluster.
func (o KubernetesClusterNodePoolNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// A string indicating the current status of the cluster. Potential values include running, provisioning, and errored.
func (o KubernetesClusterNodePoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// The date and time when the Kubernetes cluster was last updated.
// * `kube_config.0` - A representation of the Kubernetes cluster's kubeconfig with the following attributes:
// - `rawConfig` - The full contents of the Kubernetes cluster's kubeconfig file.
// - `host` - The URL of the API server on the Kubernetes master node.
// - `clusterCaCertificate` - The base64 encoded public certificate for the cluster's certificate authority.
// - `token` - The DigitalOcean API access token used by clients to access the cluster.
// - `clientKey` - The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
// - `clientCertificate` - The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
// - `expiresAt` - The date and time when the credentials will expire and need to be regenerated.
func (o KubernetesClusterNodePoolNodeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesClusterNodePoolNode) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type KubernetesClusterNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KubernetesClusterNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesClusterNodePoolNode)(nil)).Elem()
}

func (o KubernetesClusterNodePoolNodeArrayOutput) ToKubernetesClusterNodePoolNodeArrayOutput() KubernetesClusterNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeArrayOutput) ToKubernetesClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesClusterNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesClusterNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KubernetesClusterNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesClusterNodePoolNode {
		return vs[0].([]KubernetesClusterNodePoolNode)[vs[1].(int)]
	}).(KubernetesClusterNodePoolNodeOutput)
}

type KubernetesNodePoolNode struct {
	CreatedAt *string `pulumi:"createdAt"`
	DropletId *string `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node pool.
	Id *string `pulumi:"id"`
	// A name for the node pool.
	Name      *string `pulumi:"name"`
	Status    *string `pulumi:"status"`
	UpdatedAt *string `pulumi:"updatedAt"`
}

// KubernetesNodePoolNodeInput is an input type that accepts KubernetesNodePoolNodeArgs and KubernetesNodePoolNodeOutput values.
// You can construct a concrete instance of `KubernetesNodePoolNodeInput` via:
//
// 		 KubernetesNodePoolNodeArgs{...}
//
type KubernetesNodePoolNodeInput interface {
	pulumi.Input

	ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput
	ToKubernetesNodePoolNodeOutputWithContext(context.Context) KubernetesNodePoolNodeOutput
}

type KubernetesNodePoolNodeArgs struct {
	CreatedAt pulumi.StringPtrInput `pulumi:"createdAt"`
	DropletId pulumi.StringPtrInput `pulumi:"dropletId"`
	// A unique ID that can be used to identify and reference the node pool.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// A name for the node pool.
	Name      pulumi.StringPtrInput `pulumi:"name"`
	Status    pulumi.StringPtrInput `pulumi:"status"`
	UpdatedAt pulumi.StringPtrInput `pulumi:"updatedAt"`
}

func (KubernetesNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNode)(nil)).Elem()
}

func (i KubernetesNodePoolNodeArgs) ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput {
	return i.ToKubernetesNodePoolNodeOutputWithContext(context.Background())
}

func (i KubernetesNodePoolNodeArgs) ToKubernetesNodePoolNodeOutputWithContext(ctx context.Context) KubernetesNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolNodeOutput)
}

// KubernetesNodePoolNodeArrayInput is an input type that accepts KubernetesNodePoolNodeArray and KubernetesNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `KubernetesNodePoolNodeArrayInput` via:
//
// 		 KubernetesNodePoolNodeArray{ KubernetesNodePoolNodeArgs{...} }
//
type KubernetesNodePoolNodeArrayInput interface {
	pulumi.Input

	ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput
	ToKubernetesNodePoolNodeArrayOutputWithContext(context.Context) KubernetesNodePoolNodeArrayOutput
}

type KubernetesNodePoolNodeArray []KubernetesNodePoolNodeInput

func (KubernetesNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNode)(nil)).Elem()
}

func (i KubernetesNodePoolNodeArray) ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput {
	return i.ToKubernetesNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i KubernetesNodePoolNodeArray) ToKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(KubernetesNodePoolNodeArrayOutput)
}

type KubernetesNodePoolNodeOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*KubernetesNodePoolNode)(nil)).Elem()
}

func (o KubernetesNodePoolNodeOutput) ToKubernetesNodePoolNodeOutput() KubernetesNodePoolNodeOutput {
	return o
}

func (o KubernetesNodePoolNodeOutput) ToKubernetesNodePoolNodeOutputWithContext(ctx context.Context) KubernetesNodePoolNodeOutput {
	return o
}

func (o KubernetesNodePoolNodeOutput) CreatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.CreatedAt }).(pulumi.StringPtrOutput)
}

func (o KubernetesNodePoolNodeOutput) DropletId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.DropletId }).(pulumi.StringPtrOutput)
}

// A unique ID that can be used to identify and reference the node pool.
func (o KubernetesNodePoolNodeOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// A name for the node pool.
func (o KubernetesNodePoolNodeOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o KubernetesNodePoolNodeOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o KubernetesNodePoolNodeOutput) UpdatedAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v KubernetesNodePoolNode) *string { return v.UpdatedAt }).(pulumi.StringPtrOutput)
}

type KubernetesNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (KubernetesNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]KubernetesNodePoolNode)(nil)).Elem()
}

func (o KubernetesNodePoolNodeArrayOutput) ToKubernetesNodePoolNodeArrayOutput() KubernetesNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeArrayOutput) ToKubernetesNodePoolNodeArrayOutputWithContext(ctx context.Context) KubernetesNodePoolNodeArrayOutput {
	return o
}

func (o KubernetesNodePoolNodeArrayOutput) Index(i pulumi.IntInput) KubernetesNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) KubernetesNodePoolNode {
		return vs[0].([]KubernetesNodePoolNode)[vs[1].(int)]
	}).(KubernetesNodePoolNodeOutput)
}

type LoadBalancerForwardingRule struct {
	// The ID of the TLS certificate to be used for SSL termination.
	CertificateId *string `pulumi:"certificateId"`
	// An integer representing the port on which the Load Balancer instance will listen.
	EntryPort int `pulumi:"entryPort"`
	// The protocol used for traffic to the Load Balancer. The possible values are: `http`, `https`, `http2` or `tcp`.
	EntryProtocol string `pulumi:"entryProtocol"`
	// An integer representing the port on the backend Droplets to which the Load Balancer will send traffic.
	TargetPort int `pulumi:"targetPort"`
	// The protocol used for traffic from the Load Balancer to the backend Droplets. The possible values are: `http`, `https`, `http2` or `tcp`.
	TargetProtocol string `pulumi:"targetProtocol"`
	// A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets. The default value is `false`.
	TlsPassthrough *bool `pulumi:"tlsPassthrough"`
}

// LoadBalancerForwardingRuleInput is an input type that accepts LoadBalancerForwardingRuleArgs and LoadBalancerForwardingRuleOutput values.
// You can construct a concrete instance of `LoadBalancerForwardingRuleInput` via:
//
// 		 LoadBalancerForwardingRuleArgs{...}
//
type LoadBalancerForwardingRuleInput interface {
	pulumi.Input

	ToLoadBalancerForwardingRuleOutput() LoadBalancerForwardingRuleOutput
	ToLoadBalancerForwardingRuleOutputWithContext(context.Context) LoadBalancerForwardingRuleOutput
}

type LoadBalancerForwardingRuleArgs struct {
	// The ID of the TLS certificate to be used for SSL termination.
	CertificateId pulumi.StringPtrInput `pulumi:"certificateId"`
	// An integer representing the port on which the Load Balancer instance will listen.
	EntryPort pulumi.IntInput `pulumi:"entryPort"`
	// The protocol used for traffic to the Load Balancer. The possible values are: `http`, `https`, `http2` or `tcp`.
	EntryProtocol pulumi.StringInput `pulumi:"entryProtocol"`
	// An integer representing the port on the backend Droplets to which the Load Balancer will send traffic.
	TargetPort pulumi.IntInput `pulumi:"targetPort"`
	// The protocol used for traffic from the Load Balancer to the backend Droplets. The possible values are: `http`, `https`, `http2` or `tcp`.
	TargetProtocol pulumi.StringInput `pulumi:"targetProtocol"`
	// A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets. The default value is `false`.
	TlsPassthrough pulumi.BoolPtrInput `pulumi:"tlsPassthrough"`
}

func (LoadBalancerForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerForwardingRule)(nil)).Elem()
}

func (i LoadBalancerForwardingRuleArgs) ToLoadBalancerForwardingRuleOutput() LoadBalancerForwardingRuleOutput {
	return i.ToLoadBalancerForwardingRuleOutputWithContext(context.Background())
}

func (i LoadBalancerForwardingRuleArgs) ToLoadBalancerForwardingRuleOutputWithContext(ctx context.Context) LoadBalancerForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerForwardingRuleOutput)
}

// LoadBalancerForwardingRuleArrayInput is an input type that accepts LoadBalancerForwardingRuleArray and LoadBalancerForwardingRuleArrayOutput values.
// You can construct a concrete instance of `LoadBalancerForwardingRuleArrayInput` via:
//
// 		 LoadBalancerForwardingRuleArray{ LoadBalancerForwardingRuleArgs{...} }
//
type LoadBalancerForwardingRuleArrayInput interface {
	pulumi.Input

	ToLoadBalancerForwardingRuleArrayOutput() LoadBalancerForwardingRuleArrayOutput
	ToLoadBalancerForwardingRuleArrayOutputWithContext(context.Context) LoadBalancerForwardingRuleArrayOutput
}

type LoadBalancerForwardingRuleArray []LoadBalancerForwardingRuleInput

func (LoadBalancerForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerForwardingRule)(nil)).Elem()
}

func (i LoadBalancerForwardingRuleArray) ToLoadBalancerForwardingRuleArrayOutput() LoadBalancerForwardingRuleArrayOutput {
	return i.ToLoadBalancerForwardingRuleArrayOutputWithContext(context.Background())
}

func (i LoadBalancerForwardingRuleArray) ToLoadBalancerForwardingRuleArrayOutputWithContext(ctx context.Context) LoadBalancerForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerForwardingRuleArrayOutput)
}

type LoadBalancerForwardingRuleOutput struct{ *pulumi.OutputState }

func (LoadBalancerForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerForwardingRule)(nil)).Elem()
}

func (o LoadBalancerForwardingRuleOutput) ToLoadBalancerForwardingRuleOutput() LoadBalancerForwardingRuleOutput {
	return o
}

func (o LoadBalancerForwardingRuleOutput) ToLoadBalancerForwardingRuleOutputWithContext(ctx context.Context) LoadBalancerForwardingRuleOutput {
	return o
}

// The ID of the TLS certificate to be used for SSL termination.
func (o LoadBalancerForwardingRuleOutput) CertificateId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) *string { return v.CertificateId }).(pulumi.StringPtrOutput)
}

// An integer representing the port on which the Load Balancer instance will listen.
func (o LoadBalancerForwardingRuleOutput) EntryPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) int { return v.EntryPort }).(pulumi.IntOutput)
}

// The protocol used for traffic to the Load Balancer. The possible values are: `http`, `https`, `http2` or `tcp`.
func (o LoadBalancerForwardingRuleOutput) EntryProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) string { return v.EntryProtocol }).(pulumi.StringOutput)
}

// An integer representing the port on the backend Droplets to which the Load Balancer will send traffic.
func (o LoadBalancerForwardingRuleOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) int { return v.TargetPort }).(pulumi.IntOutput)
}

// The protocol used for traffic from the Load Balancer to the backend Droplets. The possible values are: `http`, `https`, `http2` or `tcp`.
func (o LoadBalancerForwardingRuleOutput) TargetProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) string { return v.TargetProtocol }).(pulumi.StringOutput)
}

// A boolean value indicating whether SSL encrypted traffic will be passed through to the backend Droplets. The default value is `false`.
func (o LoadBalancerForwardingRuleOutput) TlsPassthrough() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v LoadBalancerForwardingRule) *bool { return v.TlsPassthrough }).(pulumi.BoolPtrOutput)
}

type LoadBalancerForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (LoadBalancerForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]LoadBalancerForwardingRule)(nil)).Elem()
}

func (o LoadBalancerForwardingRuleArrayOutput) ToLoadBalancerForwardingRuleArrayOutput() LoadBalancerForwardingRuleArrayOutput {
	return o
}

func (o LoadBalancerForwardingRuleArrayOutput) ToLoadBalancerForwardingRuleArrayOutputWithContext(ctx context.Context) LoadBalancerForwardingRuleArrayOutput {
	return o
}

func (o LoadBalancerForwardingRuleArrayOutput) Index(i pulumi.IntInput) LoadBalancerForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) LoadBalancerForwardingRule {
		return vs[0].([]LoadBalancerForwardingRule)[vs[1].(int)]
	}).(LoadBalancerForwardingRuleOutput)
}

type LoadBalancerHealthcheck struct {
	// The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.
	CheckIntervalSeconds *int `pulumi:"checkIntervalSeconds"`
	// The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool. If not specified, the default value is `5`.
	HealthyThreshold *int `pulumi:"healthyThreshold"`
	// The path on the backend Droplets to which the Load Balancer instance will send a request.
	Path *string `pulumi:"path"`
	// An integer representing the port on the backend Droplets on which the health check will attempt a connection.
	Port int `pulumi:"port"`
	// The protocol used for health checks sent to the backend Droplets. The possible values are `http` or `tcp`.
	Protocol string `pulumi:"protocol"`
	// The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.
	ResponseTimeoutSeconds *int `pulumi:"responseTimeoutSeconds"`
	// The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool. If not specified, the default value is `3`.
	UnhealthyThreshold *int `pulumi:"unhealthyThreshold"`
}

// LoadBalancerHealthcheckInput is an input type that accepts LoadBalancerHealthcheckArgs and LoadBalancerHealthcheckOutput values.
// You can construct a concrete instance of `LoadBalancerHealthcheckInput` via:
//
// 		 LoadBalancerHealthcheckArgs{...}
//
type LoadBalancerHealthcheckInput interface {
	pulumi.Input

	ToLoadBalancerHealthcheckOutput() LoadBalancerHealthcheckOutput
	ToLoadBalancerHealthcheckOutputWithContext(context.Context) LoadBalancerHealthcheckOutput
}

type LoadBalancerHealthcheckArgs struct {
	// The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.
	CheckIntervalSeconds pulumi.IntPtrInput `pulumi:"checkIntervalSeconds"`
	// The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool. If not specified, the default value is `5`.
	HealthyThreshold pulumi.IntPtrInput `pulumi:"healthyThreshold"`
	// The path on the backend Droplets to which the Load Balancer instance will send a request.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// An integer representing the port on the backend Droplets on which the health check will attempt a connection.
	Port pulumi.IntInput `pulumi:"port"`
	// The protocol used for health checks sent to the backend Droplets. The possible values are `http` or `tcp`.
	Protocol pulumi.StringInput `pulumi:"protocol"`
	// The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.
	ResponseTimeoutSeconds pulumi.IntPtrInput `pulumi:"responseTimeoutSeconds"`
	// The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool. If not specified, the default value is `3`.
	UnhealthyThreshold pulumi.IntPtrInput `pulumi:"unhealthyThreshold"`
}

func (LoadBalancerHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerHealthcheck)(nil)).Elem()
}

func (i LoadBalancerHealthcheckArgs) ToLoadBalancerHealthcheckOutput() LoadBalancerHealthcheckOutput {
	return i.ToLoadBalancerHealthcheckOutputWithContext(context.Background())
}

func (i LoadBalancerHealthcheckArgs) ToLoadBalancerHealthcheckOutputWithContext(ctx context.Context) LoadBalancerHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerHealthcheckOutput)
}

func (i LoadBalancerHealthcheckArgs) ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput {
	return i.ToLoadBalancerHealthcheckPtrOutputWithContext(context.Background())
}

func (i LoadBalancerHealthcheckArgs) ToLoadBalancerHealthcheckPtrOutputWithContext(ctx context.Context) LoadBalancerHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerHealthcheckOutput).ToLoadBalancerHealthcheckPtrOutputWithContext(ctx)
}

// LoadBalancerHealthcheckPtrInput is an input type that accepts LoadBalancerHealthcheckArgs, LoadBalancerHealthcheckPtr and LoadBalancerHealthcheckPtrOutput values.
// You can construct a concrete instance of `LoadBalancerHealthcheckPtrInput` via:
//
// 		 LoadBalancerHealthcheckArgs{...}
//
//  or:
//
// 		 nil
//
type LoadBalancerHealthcheckPtrInput interface {
	pulumi.Input

	ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput
	ToLoadBalancerHealthcheckPtrOutputWithContext(context.Context) LoadBalancerHealthcheckPtrOutput
}

type loadBalancerHealthcheckPtrType LoadBalancerHealthcheckArgs

func LoadBalancerHealthcheckPtr(v *LoadBalancerHealthcheckArgs) LoadBalancerHealthcheckPtrInput {
	return (*loadBalancerHealthcheckPtrType)(v)
}

func (*loadBalancerHealthcheckPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerHealthcheck)(nil)).Elem()
}

func (i *loadBalancerHealthcheckPtrType) ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput {
	return i.ToLoadBalancerHealthcheckPtrOutputWithContext(context.Background())
}

func (i *loadBalancerHealthcheckPtrType) ToLoadBalancerHealthcheckPtrOutputWithContext(ctx context.Context) LoadBalancerHealthcheckPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerHealthcheckPtrOutput)
}

type LoadBalancerHealthcheckOutput struct{ *pulumi.OutputState }

func (LoadBalancerHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerHealthcheck)(nil)).Elem()
}

func (o LoadBalancerHealthcheckOutput) ToLoadBalancerHealthcheckOutput() LoadBalancerHealthcheckOutput {
	return o
}

func (o LoadBalancerHealthcheckOutput) ToLoadBalancerHealthcheckOutputWithContext(ctx context.Context) LoadBalancerHealthcheckOutput {
	return o
}

func (o LoadBalancerHealthcheckOutput) ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput {
	return o.ToLoadBalancerHealthcheckPtrOutputWithContext(context.Background())
}

func (o LoadBalancerHealthcheckOutput) ToLoadBalancerHealthcheckPtrOutputWithContext(ctx context.Context) LoadBalancerHealthcheckPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *LoadBalancerHealthcheck {
		return &v
	}).(LoadBalancerHealthcheckPtrOutput)
}

// The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.
func (o LoadBalancerHealthcheckOutput) CheckIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.CheckIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool. If not specified, the default value is `5`.
func (o LoadBalancerHealthcheckOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The path on the backend Droplets to which the Load Balancer instance will send a request.
func (o LoadBalancerHealthcheckOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// An integer representing the port on the backend Droplets on which the health check will attempt a connection.
func (o LoadBalancerHealthcheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used for health checks sent to the backend Droplets. The possible values are `http` or `tcp`.
func (o LoadBalancerHealthcheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.
func (o LoadBalancerHealthcheckOutput) ResponseTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.ResponseTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool. If not specified, the default value is `3`.
func (o LoadBalancerHealthcheckOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type LoadBalancerHealthcheckPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerHealthcheckPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerHealthcheck)(nil)).Elem()
}

func (o LoadBalancerHealthcheckPtrOutput) ToLoadBalancerHealthcheckPtrOutput() LoadBalancerHealthcheckPtrOutput {
	return o
}

func (o LoadBalancerHealthcheckPtrOutput) ToLoadBalancerHealthcheckPtrOutputWithContext(ctx context.Context) LoadBalancerHealthcheckPtrOutput {
	return o
}

func (o LoadBalancerHealthcheckPtrOutput) Elem() LoadBalancerHealthcheckOutput {
	return o.ApplyT(func(v *LoadBalancerHealthcheck) LoadBalancerHealthcheck { return *v }).(LoadBalancerHealthcheckOutput)
}

// The number of seconds between between two consecutive health checks. If not specified, the default value is `10`.
func (o LoadBalancerHealthcheckPtrOutput) CheckIntervalSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.CheckIntervalSeconds }).(pulumi.IntPtrOutput)
}

// The number of times a health check must pass for a backend Droplet to be marked "healthy" and be re-added to the pool. If not specified, the default value is `5`.
func (o LoadBalancerHealthcheckPtrOutput) HealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.HealthyThreshold }).(pulumi.IntPtrOutput)
}

// The path on the backend Droplets to which the Load Balancer instance will send a request.
func (o LoadBalancerHealthcheckPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// An integer representing the port on the backend Droplets on which the health check will attempt a connection.
func (o LoadBalancerHealthcheckPtrOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

// The protocol used for health checks sent to the backend Droplets. The possible values are `http` or `tcp`.
func (o LoadBalancerHealthcheckPtrOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) string { return v.Protocol }).(pulumi.StringOutput)
}

// The number of seconds the Load Balancer instance will wait for a response until marking a health check as failed. If not specified, the default value is `5`.
func (o LoadBalancerHealthcheckPtrOutput) ResponseTimeoutSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.ResponseTimeoutSeconds }).(pulumi.IntPtrOutput)
}

// The number of times a health check must fail for a backend Droplet to be marked "unhealthy" and be removed from the pool. If not specified, the default value is `3`.
func (o LoadBalancerHealthcheckPtrOutput) UnhealthyThreshold() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerHealthcheck) *int { return v.UnhealthyThreshold }).(pulumi.IntPtrOutput)
}

type LoadBalancerStickySessions struct {
	// The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.
	CookieName *string `pulumi:"cookieName"`
	// The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.
	CookieTtlSeconds *int `pulumi:"cookieTtlSeconds"`
	// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.
	Type *string `pulumi:"type"`
}

// LoadBalancerStickySessionsInput is an input type that accepts LoadBalancerStickySessionsArgs and LoadBalancerStickySessionsOutput values.
// You can construct a concrete instance of `LoadBalancerStickySessionsInput` via:
//
// 		 LoadBalancerStickySessionsArgs{...}
//
type LoadBalancerStickySessionsInput interface {
	pulumi.Input

	ToLoadBalancerStickySessionsOutput() LoadBalancerStickySessionsOutput
	ToLoadBalancerStickySessionsOutputWithContext(context.Context) LoadBalancerStickySessionsOutput
}

type LoadBalancerStickySessionsArgs struct {
	// The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.
	CookieName pulumi.StringPtrInput `pulumi:"cookieName"`
	// The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.
	CookieTtlSeconds pulumi.IntPtrInput `pulumi:"cookieTtlSeconds"`
	// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (LoadBalancerStickySessionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerStickySessions)(nil)).Elem()
}

func (i LoadBalancerStickySessionsArgs) ToLoadBalancerStickySessionsOutput() LoadBalancerStickySessionsOutput {
	return i.ToLoadBalancerStickySessionsOutputWithContext(context.Background())
}

func (i LoadBalancerStickySessionsArgs) ToLoadBalancerStickySessionsOutputWithContext(ctx context.Context) LoadBalancerStickySessionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerStickySessionsOutput)
}

func (i LoadBalancerStickySessionsArgs) ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput {
	return i.ToLoadBalancerStickySessionsPtrOutputWithContext(context.Background())
}

func (i LoadBalancerStickySessionsArgs) ToLoadBalancerStickySessionsPtrOutputWithContext(ctx context.Context) LoadBalancerStickySessionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerStickySessionsOutput).ToLoadBalancerStickySessionsPtrOutputWithContext(ctx)
}

// LoadBalancerStickySessionsPtrInput is an input type that accepts LoadBalancerStickySessionsArgs, LoadBalancerStickySessionsPtr and LoadBalancerStickySessionsPtrOutput values.
// You can construct a concrete instance of `LoadBalancerStickySessionsPtrInput` via:
//
// 		 LoadBalancerStickySessionsArgs{...}
//
//  or:
//
// 		 nil
//
type LoadBalancerStickySessionsPtrInput interface {
	pulumi.Input

	ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput
	ToLoadBalancerStickySessionsPtrOutputWithContext(context.Context) LoadBalancerStickySessionsPtrOutput
}

type loadBalancerStickySessionsPtrType LoadBalancerStickySessionsArgs

func LoadBalancerStickySessionsPtr(v *LoadBalancerStickySessionsArgs) LoadBalancerStickySessionsPtrInput {
	return (*loadBalancerStickySessionsPtrType)(v)
}

func (*loadBalancerStickySessionsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerStickySessions)(nil)).Elem()
}

func (i *loadBalancerStickySessionsPtrType) ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput {
	return i.ToLoadBalancerStickySessionsPtrOutputWithContext(context.Background())
}

func (i *loadBalancerStickySessionsPtrType) ToLoadBalancerStickySessionsPtrOutputWithContext(ctx context.Context) LoadBalancerStickySessionsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(LoadBalancerStickySessionsPtrOutput)
}

type LoadBalancerStickySessionsOutput struct{ *pulumi.OutputState }

func (LoadBalancerStickySessionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LoadBalancerStickySessions)(nil)).Elem()
}

func (o LoadBalancerStickySessionsOutput) ToLoadBalancerStickySessionsOutput() LoadBalancerStickySessionsOutput {
	return o
}

func (o LoadBalancerStickySessionsOutput) ToLoadBalancerStickySessionsOutputWithContext(ctx context.Context) LoadBalancerStickySessionsOutput {
	return o
}

func (o LoadBalancerStickySessionsOutput) ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput {
	return o.ToLoadBalancerStickySessionsPtrOutputWithContext(context.Background())
}

func (o LoadBalancerStickySessionsOutput) ToLoadBalancerStickySessionsPtrOutputWithContext(ctx context.Context) LoadBalancerStickySessionsPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *LoadBalancerStickySessions {
		return &v
	}).(LoadBalancerStickySessionsPtrOutput)
}

// The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.
func (o LoadBalancerStickySessionsOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.
func (o LoadBalancerStickySessionsOutput) CookieTtlSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *int { return v.CookieTtlSeconds }).(pulumi.IntPtrOutput)
}

// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.
func (o LoadBalancerStickySessionsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type LoadBalancerStickySessionsPtrOutput struct{ *pulumi.OutputState }

func (LoadBalancerStickySessionsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**LoadBalancerStickySessions)(nil)).Elem()
}

func (o LoadBalancerStickySessionsPtrOutput) ToLoadBalancerStickySessionsPtrOutput() LoadBalancerStickySessionsPtrOutput {
	return o
}

func (o LoadBalancerStickySessionsPtrOutput) ToLoadBalancerStickySessionsPtrOutputWithContext(ctx context.Context) LoadBalancerStickySessionsPtrOutput {
	return o
}

func (o LoadBalancerStickySessionsPtrOutput) Elem() LoadBalancerStickySessionsOutput {
	return o.ApplyT(func(v *LoadBalancerStickySessions) LoadBalancerStickySessions { return *v }).(LoadBalancerStickySessionsOutput)
}

// The name to be used for the cookie sent to the client. This attribute is required when using `cookies` for the sticky sessions type.
func (o LoadBalancerStickySessionsPtrOutput) CookieName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *string { return v.CookieName }).(pulumi.StringPtrOutput)
}

// The number of seconds until the cookie set by the Load Balancer expires. This attribute is required when using `cookies` for the sticky sessions type.
func (o LoadBalancerStickySessionsPtrOutput) CookieTtlSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *int { return v.CookieTtlSeconds }).(pulumi.IntPtrOutput)
}

// An attribute indicating how and if requests from a client will be persistently served by the same backend Droplet. The possible values are `cookies` or `none`. If not specified, the default value is `none`.
func (o LoadBalancerStickySessionsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LoadBalancerStickySessions) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type SpacesBucketCorsRule struct {
	// A list of headers that will be included in the CORS preflight request's `Access-Control-Request-Headers`. A header may contain one wildcard (e.g. `x-amz-*`).
	AllowedHeaders []string `pulumi:"allowedHeaders"`
	// A list of HTTP methods (e.g. `GET`) which are allowed from the specified origin.
	AllowedMethods []string `pulumi:"allowedMethods"`
	// A list of hosts from which requests using the specified methods are allowed. A host may contain one wildcard (e.g. http://*.example.com).
	AllowedOrigins []string `pulumi:"allowedOrigins"`
	// The time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds *int `pulumi:"maxAgeSeconds"`
}

// SpacesBucketCorsRuleInput is an input type that accepts SpacesBucketCorsRuleArgs and SpacesBucketCorsRuleOutput values.
// You can construct a concrete instance of `SpacesBucketCorsRuleInput` via:
//
// 		 SpacesBucketCorsRuleArgs{...}
//
type SpacesBucketCorsRuleInput interface {
	pulumi.Input

	ToSpacesBucketCorsRuleOutput() SpacesBucketCorsRuleOutput
	ToSpacesBucketCorsRuleOutputWithContext(context.Context) SpacesBucketCorsRuleOutput
}

type SpacesBucketCorsRuleArgs struct {
	// A list of headers that will be included in the CORS preflight request's `Access-Control-Request-Headers`. A header may contain one wildcard (e.g. `x-amz-*`).
	AllowedHeaders pulumi.StringArrayInput `pulumi:"allowedHeaders"`
	// A list of HTTP methods (e.g. `GET`) which are allowed from the specified origin.
	AllowedMethods pulumi.StringArrayInput `pulumi:"allowedMethods"`
	// A list of hosts from which requests using the specified methods are allowed. A host may contain one wildcard (e.g. http://*.example.com).
	AllowedOrigins pulumi.StringArrayInput `pulumi:"allowedOrigins"`
	// The time in seconds that browser can cache the response for a preflight request.
	MaxAgeSeconds pulumi.IntPtrInput `pulumi:"maxAgeSeconds"`
}

func (SpacesBucketCorsRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketCorsRule)(nil)).Elem()
}

func (i SpacesBucketCorsRuleArgs) ToSpacesBucketCorsRuleOutput() SpacesBucketCorsRuleOutput {
	return i.ToSpacesBucketCorsRuleOutputWithContext(context.Background())
}

func (i SpacesBucketCorsRuleArgs) ToSpacesBucketCorsRuleOutputWithContext(ctx context.Context) SpacesBucketCorsRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketCorsRuleOutput)
}

// SpacesBucketCorsRuleArrayInput is an input type that accepts SpacesBucketCorsRuleArray and SpacesBucketCorsRuleArrayOutput values.
// You can construct a concrete instance of `SpacesBucketCorsRuleArrayInput` via:
//
// 		 SpacesBucketCorsRuleArray{ SpacesBucketCorsRuleArgs{...} }
//
type SpacesBucketCorsRuleArrayInput interface {
	pulumi.Input

	ToSpacesBucketCorsRuleArrayOutput() SpacesBucketCorsRuleArrayOutput
	ToSpacesBucketCorsRuleArrayOutputWithContext(context.Context) SpacesBucketCorsRuleArrayOutput
}

type SpacesBucketCorsRuleArray []SpacesBucketCorsRuleInput

func (SpacesBucketCorsRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacesBucketCorsRule)(nil)).Elem()
}

func (i SpacesBucketCorsRuleArray) ToSpacesBucketCorsRuleArrayOutput() SpacesBucketCorsRuleArrayOutput {
	return i.ToSpacesBucketCorsRuleArrayOutputWithContext(context.Background())
}

func (i SpacesBucketCorsRuleArray) ToSpacesBucketCorsRuleArrayOutputWithContext(ctx context.Context) SpacesBucketCorsRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpacesBucketCorsRuleArrayOutput)
}

type SpacesBucketCorsRuleOutput struct{ *pulumi.OutputState }

func (SpacesBucketCorsRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpacesBucketCorsRule)(nil)).Elem()
}

func (o SpacesBucketCorsRuleOutput) ToSpacesBucketCorsRuleOutput() SpacesBucketCorsRuleOutput {
	return o
}

func (o SpacesBucketCorsRuleOutput) ToSpacesBucketCorsRuleOutputWithContext(ctx context.Context) SpacesBucketCorsRuleOutput {
	return o
}

// A list of headers that will be included in the CORS preflight request's `Access-Control-Request-Headers`. A header may contain one wildcard (e.g. `x-amz-*`).
func (o SpacesBucketCorsRuleOutput) AllowedHeaders() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpacesBucketCorsRule) []string { return v.AllowedHeaders }).(pulumi.StringArrayOutput)
}

// A list of HTTP methods (e.g. `GET`) which are allowed from the specified origin.
func (o SpacesBucketCorsRuleOutput) AllowedMethods() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpacesBucketCorsRule) []string { return v.AllowedMethods }).(pulumi.StringArrayOutput)
}

// A list of hosts from which requests using the specified methods are allowed. A host may contain one wildcard (e.g. http://*.example.com).
func (o SpacesBucketCorsRuleOutput) AllowedOrigins() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpacesBucketCorsRule) []string { return v.AllowedOrigins }).(pulumi.StringArrayOutput)
}

// The time in seconds that browser can cache the response for a preflight request.
func (o SpacesBucketCorsRuleOutput) MaxAgeSeconds() pulumi.IntPtrOutput {
	return o.ApplyT(func(v SpacesBucketCorsRule) *int { return v.MaxAgeSeconds }).(pulumi.IntPtrOutput)
}

type SpacesBucketCorsRuleArrayOutput struct{ *pulumi.OutputState }

func (SpacesBucketCorsRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SpacesBucketCorsRule)(nil)).Elem()
}

func (o SpacesBucketCorsRuleArrayOutput) ToSpacesBucketCorsRuleArrayOutput() SpacesBucketCorsRuleArrayOutput {
	return o
}

func (o SpacesBucketCorsRuleArrayOutput) ToSpacesBucketCorsRuleArrayOutputWithContext(ctx context.Context) SpacesBucketCorsRuleArrayOutput {
	return o
}

func (o SpacesBucketCorsRuleArrayOutput) Index(i pulumi.IntInput) SpacesBucketCorsRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SpacesBucketCorsRule {
		return vs[0].([]SpacesBucketCorsRule)[vs[1].(int)]
	}).(SpacesBucketCorsRuleOutput)
}

type GetDatabaseClusterMaintenanceWindow struct {
	// The day of the week on which to apply maintenance updates.
	Day string `pulumi:"day"`
	// The hour in UTC at which maintenance updates will be applied in 24 hour format.
	Hour string `pulumi:"hour"`
}

// GetDatabaseClusterMaintenanceWindowInput is an input type that accepts GetDatabaseClusterMaintenanceWindowArgs and GetDatabaseClusterMaintenanceWindowOutput values.
// You can construct a concrete instance of `GetDatabaseClusterMaintenanceWindowInput` via:
//
// 		 GetDatabaseClusterMaintenanceWindowArgs{...}
//
type GetDatabaseClusterMaintenanceWindowInput interface {
	pulumi.Input

	ToGetDatabaseClusterMaintenanceWindowOutput() GetDatabaseClusterMaintenanceWindowOutput
	ToGetDatabaseClusterMaintenanceWindowOutputWithContext(context.Context) GetDatabaseClusterMaintenanceWindowOutput
}

type GetDatabaseClusterMaintenanceWindowArgs struct {
	// The day of the week on which to apply maintenance updates.
	Day pulumi.StringInput `pulumi:"day"`
	// The hour in UTC at which maintenance updates will be applied in 24 hour format.
	Hour pulumi.StringInput `pulumi:"hour"`
}

func (GetDatabaseClusterMaintenanceWindowArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetDatabaseClusterMaintenanceWindowArgs) ToGetDatabaseClusterMaintenanceWindowOutput() GetDatabaseClusterMaintenanceWindowOutput {
	return i.ToGetDatabaseClusterMaintenanceWindowOutputWithContext(context.Background())
}

func (i GetDatabaseClusterMaintenanceWindowArgs) ToGetDatabaseClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetDatabaseClusterMaintenanceWindowOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseClusterMaintenanceWindowOutput)
}

// GetDatabaseClusterMaintenanceWindowArrayInput is an input type that accepts GetDatabaseClusterMaintenanceWindowArray and GetDatabaseClusterMaintenanceWindowArrayOutput values.
// You can construct a concrete instance of `GetDatabaseClusterMaintenanceWindowArrayInput` via:
//
// 		 GetDatabaseClusterMaintenanceWindowArray{ GetDatabaseClusterMaintenanceWindowArgs{...} }
//
type GetDatabaseClusterMaintenanceWindowArrayInput interface {
	pulumi.Input

	ToGetDatabaseClusterMaintenanceWindowArrayOutput() GetDatabaseClusterMaintenanceWindowArrayOutput
	ToGetDatabaseClusterMaintenanceWindowArrayOutputWithContext(context.Context) GetDatabaseClusterMaintenanceWindowArrayOutput
}

type GetDatabaseClusterMaintenanceWindowArray []GetDatabaseClusterMaintenanceWindowInput

func (GetDatabaseClusterMaintenanceWindowArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (i GetDatabaseClusterMaintenanceWindowArray) ToGetDatabaseClusterMaintenanceWindowArrayOutput() GetDatabaseClusterMaintenanceWindowArrayOutput {
	return i.ToGetDatabaseClusterMaintenanceWindowArrayOutputWithContext(context.Background())
}

func (i GetDatabaseClusterMaintenanceWindowArray) ToGetDatabaseClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDatabaseClusterMaintenanceWindowArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDatabaseClusterMaintenanceWindowArrayOutput)
}

type GetDatabaseClusterMaintenanceWindowOutput struct{ *pulumi.OutputState }

func (GetDatabaseClusterMaintenanceWindowOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetDatabaseClusterMaintenanceWindowOutput) ToGetDatabaseClusterMaintenanceWindowOutput() GetDatabaseClusterMaintenanceWindowOutput {
	return o
}

func (o GetDatabaseClusterMaintenanceWindowOutput) ToGetDatabaseClusterMaintenanceWindowOutputWithContext(ctx context.Context) GetDatabaseClusterMaintenanceWindowOutput {
	return o
}

// The day of the week on which to apply maintenance updates.
func (o GetDatabaseClusterMaintenanceWindowOutput) Day() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseClusterMaintenanceWindow) string { return v.Day }).(pulumi.StringOutput)
}

// The hour in UTC at which maintenance updates will be applied in 24 hour format.
func (o GetDatabaseClusterMaintenanceWindowOutput) Hour() pulumi.StringOutput {
	return o.ApplyT(func(v GetDatabaseClusterMaintenanceWindow) string { return v.Hour }).(pulumi.StringOutput)
}

type GetDatabaseClusterMaintenanceWindowArrayOutput struct{ *pulumi.OutputState }

func (GetDatabaseClusterMaintenanceWindowArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDatabaseClusterMaintenanceWindow)(nil)).Elem()
}

func (o GetDatabaseClusterMaintenanceWindowArrayOutput) ToGetDatabaseClusterMaintenanceWindowArrayOutput() GetDatabaseClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetDatabaseClusterMaintenanceWindowArrayOutput) ToGetDatabaseClusterMaintenanceWindowArrayOutputWithContext(ctx context.Context) GetDatabaseClusterMaintenanceWindowArrayOutput {
	return o
}

func (o GetDatabaseClusterMaintenanceWindowArrayOutput) Index(i pulumi.IntInput) GetDatabaseClusterMaintenanceWindowOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDatabaseClusterMaintenanceWindow {
		return vs[0].([]GetDatabaseClusterMaintenanceWindow)[vs[1].(int)]
	}).(GetDatabaseClusterMaintenanceWindowOutput)
}

type GetImagesFilter struct {
	// Filter the images by this key. This may be one of `distribution`, `errorMessage`,
	// `id`, `image`, `minDiskSize`, `name`, `private`, `regions`, `sizeGigabytes`, `slug`, `status`,
	// `tags`, or `type`.
	Key string `pulumi:"key"`
	// A list of values to match against the `key` field. Only retrieves images
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetImagesFilterInput is an input type that accepts GetImagesFilterArgs and GetImagesFilterOutput values.
// You can construct a concrete instance of `GetImagesFilterInput` via:
//
// 		 GetImagesFilterArgs{...}
//
type GetImagesFilterInput interface {
	pulumi.Input

	ToGetImagesFilterOutput() GetImagesFilterOutput
	ToGetImagesFilterOutputWithContext(context.Context) GetImagesFilterOutput
}

type GetImagesFilterArgs struct {
	// Filter the images by this key. This may be one of `distribution`, `errorMessage`,
	// `id`, `image`, `minDiskSize`, `name`, `private`, `regions`, `sizeGigabytes`, `slug`, `status`,
	// `tags`, or `type`.
	Key pulumi.StringInput `pulumi:"key"`
	// A list of values to match against the `key` field. Only retrieves images
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetImagesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return i.ToGetImagesFilterOutputWithContext(context.Background())
}

func (i GetImagesFilterArgs) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterOutput)
}

// GetImagesFilterArrayInput is an input type that accepts GetImagesFilterArray and GetImagesFilterArrayOutput values.
// You can construct a concrete instance of `GetImagesFilterArrayInput` via:
//
// 		 GetImagesFilterArray{ GetImagesFilterArgs{...} }
//
type GetImagesFilterArrayInput interface {
	pulumi.Input

	ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput
	ToGetImagesFilterArrayOutputWithContext(context.Context) GetImagesFilterArrayOutput
}

type GetImagesFilterArray []GetImagesFilterInput

func (GetImagesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return i.ToGetImagesFilterArrayOutputWithContext(context.Background())
}

func (i GetImagesFilterArray) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesFilterArrayOutput)
}

type GetImagesFilterOutput struct{ *pulumi.OutputState }

func (GetImagesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutput() GetImagesFilterOutput {
	return o
}

func (o GetImagesFilterOutput) ToGetImagesFilterOutputWithContext(ctx context.Context) GetImagesFilterOutput {
	return o
}

// Filter the images by this key. This may be one of `distribution`, `errorMessage`,
// `id`, `image`, `minDiskSize`, `name`, `private`, `regions`, `sizeGigabytes`, `slug`, `status`,
// `tags`, or `type`.
func (o GetImagesFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesFilter) string { return v.Key }).(pulumi.StringOutput)
}

// A list of values to match against the `key` field. Only retrieves images
// where the `key` field takes on one or more of the values provided here.
func (o GetImagesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetImagesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetImagesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesFilter)(nil)).Elem()
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutput() GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) ToGetImagesFilterArrayOutputWithContext(ctx context.Context) GetImagesFilterArrayOutput {
	return o
}

func (o GetImagesFilterArrayOutput) Index(i pulumi.IntInput) GetImagesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesFilter {
		return vs[0].([]GetImagesFilter)[vs[1].(int)]
	}).(GetImagesFilterOutput)
}

type GetImagesImage struct {
	Created       string   `pulumi:"created"`
	Distribution  string   `pulumi:"distribution"`
	ErrorMessage  string   `pulumi:"errorMessage"`
	Id            int      `pulumi:"id"`
	Image         string   `pulumi:"image"`
	MinDiskSize   int      `pulumi:"minDiskSize"`
	Name          string   `pulumi:"name"`
	Private       bool     `pulumi:"private"`
	Regions       []string `pulumi:"regions"`
	SizeGigabytes float64  `pulumi:"sizeGigabytes"`
	Slug          string   `pulumi:"slug"`
	Status        string   `pulumi:"status"`
	Tags          []string `pulumi:"tags"`
	Type          string   `pulumi:"type"`
}

// GetImagesImageInput is an input type that accepts GetImagesImageArgs and GetImagesImageOutput values.
// You can construct a concrete instance of `GetImagesImageInput` via:
//
// 		 GetImagesImageArgs{...}
//
type GetImagesImageInput interface {
	pulumi.Input

	ToGetImagesImageOutput() GetImagesImageOutput
	ToGetImagesImageOutputWithContext(context.Context) GetImagesImageOutput
}

type GetImagesImageArgs struct {
	Created       pulumi.StringInput      `pulumi:"created"`
	Distribution  pulumi.StringInput      `pulumi:"distribution"`
	ErrorMessage  pulumi.StringInput      `pulumi:"errorMessage"`
	Id            pulumi.IntInput         `pulumi:"id"`
	Image         pulumi.StringInput      `pulumi:"image"`
	MinDiskSize   pulumi.IntInput         `pulumi:"minDiskSize"`
	Name          pulumi.StringInput      `pulumi:"name"`
	Private       pulumi.BoolInput        `pulumi:"private"`
	Regions       pulumi.StringArrayInput `pulumi:"regions"`
	SizeGigabytes pulumi.Float64Input     `pulumi:"sizeGigabytes"`
	Slug          pulumi.StringInput      `pulumi:"slug"`
	Status        pulumi.StringInput      `pulumi:"status"`
	Tags          pulumi.StringArrayInput `pulumi:"tags"`
	Type          pulumi.StringInput      `pulumi:"type"`
}

func (GetImagesImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArgs) ToGetImagesImageOutput() GetImagesImageOutput {
	return i.ToGetImagesImageOutputWithContext(context.Background())
}

func (i GetImagesImageArgs) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageOutput)
}

// GetImagesImageArrayInput is an input type that accepts GetImagesImageArray and GetImagesImageArrayOutput values.
// You can construct a concrete instance of `GetImagesImageArrayInput` via:
//
// 		 GetImagesImageArray{ GetImagesImageArgs{...} }
//
type GetImagesImageArrayInput interface {
	pulumi.Input

	ToGetImagesImageArrayOutput() GetImagesImageArrayOutput
	ToGetImagesImageArrayOutputWithContext(context.Context) GetImagesImageArrayOutput
}

type GetImagesImageArray []GetImagesImageInput

func (GetImagesImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return i.ToGetImagesImageArrayOutputWithContext(context.Background())
}

func (i GetImagesImageArray) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesImageArrayOutput)
}

type GetImagesImageOutput struct{ *pulumi.OutputState }

func (GetImagesImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageOutput) ToGetImagesImageOutput() GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) ToGetImagesImageOutputWithContext(ctx context.Context) GetImagesImageOutput {
	return o
}

func (o GetImagesImageOutput) Created() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Created }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Distribution() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Distribution }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) ErrorMessage() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.ErrorMessage }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetImagesImageOutput) Image() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Image }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) MinDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetImagesImage) int { return v.MinDiskSize }).(pulumi.IntOutput)
}

func (o GetImagesImageOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Private() pulumi.BoolOutput {
	return o.ApplyT(func(v GetImagesImage) bool { return v.Private }).(pulumi.BoolOutput)
}

func (o GetImagesImageOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

func (o GetImagesImageOutput) SizeGigabytes() pulumi.Float64Output {
	return o.ApplyT(func(v GetImagesImage) float64 { return v.SizeGigabytes }).(pulumi.Float64Output)
}

func (o GetImagesImageOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Slug }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetImagesImageOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetImagesImage) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o GetImagesImageOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesImage) string { return v.Type }).(pulumi.StringOutput)
}

type GetImagesImageArrayOutput struct{ *pulumi.OutputState }

func (GetImagesImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesImage)(nil)).Elem()
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutput() GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) ToGetImagesImageArrayOutputWithContext(ctx context.Context) GetImagesImageArrayOutput {
	return o
}

func (o GetImagesImageArrayOutput) Index(i pulumi.IntInput) GetImagesImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesImage {
		return vs[0].([]GetImagesImage)[vs[1].(int)]
	}).(GetImagesImageOutput)
}

type GetImagesSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the images by this key. This may be one of `distribution`, `errorMessage`, `id`,
	// `image`, `minDiskSize`, `name`, `private`, `sizeGigabytes`, `slug`, `status`, or `type`.
	Key string `pulumi:"key"`
}

// GetImagesSortInput is an input type that accepts GetImagesSortArgs and GetImagesSortOutput values.
// You can construct a concrete instance of `GetImagesSortInput` via:
//
// 		 GetImagesSortArgs{...}
//
type GetImagesSortInput interface {
	pulumi.Input

	ToGetImagesSortOutput() GetImagesSortOutput
	ToGetImagesSortOutputWithContext(context.Context) GetImagesSortOutput
}

type GetImagesSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the images by this key. This may be one of `distribution`, `errorMessage`, `id`,
	// `image`, `minDiskSize`, `name`, `private`, `sizeGigabytes`, `slug`, `status`, or `type`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetImagesSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesSort)(nil)).Elem()
}

func (i GetImagesSortArgs) ToGetImagesSortOutput() GetImagesSortOutput {
	return i.ToGetImagesSortOutputWithContext(context.Background())
}

func (i GetImagesSortArgs) ToGetImagesSortOutputWithContext(ctx context.Context) GetImagesSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesSortOutput)
}

// GetImagesSortArrayInput is an input type that accepts GetImagesSortArray and GetImagesSortArrayOutput values.
// You can construct a concrete instance of `GetImagesSortArrayInput` via:
//
// 		 GetImagesSortArray{ GetImagesSortArgs{...} }
//
type GetImagesSortArrayInput interface {
	pulumi.Input

	ToGetImagesSortArrayOutput() GetImagesSortArrayOutput
	ToGetImagesSortArrayOutputWithContext(context.Context) GetImagesSortArrayOutput
}

type GetImagesSortArray []GetImagesSortInput

func (GetImagesSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesSort)(nil)).Elem()
}

func (i GetImagesSortArray) ToGetImagesSortArrayOutput() GetImagesSortArrayOutput {
	return i.ToGetImagesSortArrayOutputWithContext(context.Background())
}

func (i GetImagesSortArray) ToGetImagesSortArrayOutputWithContext(ctx context.Context) GetImagesSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetImagesSortArrayOutput)
}

type GetImagesSortOutput struct{ *pulumi.OutputState }

func (GetImagesSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesSort)(nil)).Elem()
}

func (o GetImagesSortOutput) ToGetImagesSortOutput() GetImagesSortOutput {
	return o
}

func (o GetImagesSortOutput) ToGetImagesSortOutputWithContext(ctx context.Context) GetImagesSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetImagesSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetImagesSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the images by this key. This may be one of `distribution`, `errorMessage`, `id`,
// `image`, `minDiskSize`, `name`, `private`, `sizeGigabytes`, `slug`, `status`, or `type`.
func (o GetImagesSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetImagesSortArrayOutput struct{ *pulumi.OutputState }

func (GetImagesSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetImagesSort)(nil)).Elem()
}

func (o GetImagesSortArrayOutput) ToGetImagesSortArrayOutput() GetImagesSortArrayOutput {
	return o
}

func (o GetImagesSortArrayOutput) ToGetImagesSortArrayOutputWithContext(ctx context.Context) GetImagesSortArrayOutput {
	return o
}

func (o GetImagesSortArrayOutput) Index(i pulumi.IntInput) GetImagesSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetImagesSort {
		return vs[0].([]GetImagesSort)[vs[1].(int)]
	}).(GetImagesSortOutput)
}

type GetKubernetesClusterKubeConfig struct {
	ClientCertificate    string `pulumi:"clientCertificate"`
	ClientKey            string `pulumi:"clientKey"`
	ClusterCaCertificate string `pulumi:"clusterCaCertificate"`
	ExpiresAt            string `pulumi:"expiresAt"`
	Host                 string `pulumi:"host"`
	RawConfig            string `pulumi:"rawConfig"`
	Token                string `pulumi:"token"`
}

// GetKubernetesClusterKubeConfigInput is an input type that accepts GetKubernetesClusterKubeConfigArgs and GetKubernetesClusterKubeConfigOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeConfigInput` via:
//
// 		 GetKubernetesClusterKubeConfigArgs{...}
//
type GetKubernetesClusterKubeConfigInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput
	ToGetKubernetesClusterKubeConfigOutputWithContext(context.Context) GetKubernetesClusterKubeConfigOutput
}

type GetKubernetesClusterKubeConfigArgs struct {
	ClientCertificate    pulumi.StringInput `pulumi:"clientCertificate"`
	ClientKey            pulumi.StringInput `pulumi:"clientKey"`
	ClusterCaCertificate pulumi.StringInput `pulumi:"clusterCaCertificate"`
	ExpiresAt            pulumi.StringInput `pulumi:"expiresAt"`
	Host                 pulumi.StringInput `pulumi:"host"`
	RawConfig            pulumi.StringInput `pulumi:"rawConfig"`
	Token                pulumi.StringInput `pulumi:"token"`
}

func (GetKubernetesClusterKubeConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeConfigArgs) ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput {
	return i.ToGetKubernetesClusterKubeConfigOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeConfigArgs) ToGetKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeConfigOutput)
}

// GetKubernetesClusterKubeConfigArrayInput is an input type that accepts GetKubernetesClusterKubeConfigArray and GetKubernetesClusterKubeConfigArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterKubeConfigArrayInput` via:
//
// 		 GetKubernetesClusterKubeConfigArray{ GetKubernetesClusterKubeConfigArgs{...} }
//
type GetKubernetesClusterKubeConfigArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput
	ToGetKubernetesClusterKubeConfigArrayOutputWithContext(context.Context) GetKubernetesClusterKubeConfigArrayOutput
}

type GetKubernetesClusterKubeConfigArray []GetKubernetesClusterKubeConfigInput

func (GetKubernetesClusterKubeConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (i GetKubernetesClusterKubeConfigArray) ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput {
	return i.ToGetKubernetesClusterKubeConfigArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterKubeConfigArray) ToGetKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterKubeConfigArrayOutput)
}

type GetKubernetesClusterKubeConfigOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeConfigOutput) ToGetKubernetesClusterKubeConfigOutput() GetKubernetesClusterKubeConfigOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigOutput) ToGetKubernetesClusterKubeConfigOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigOutput) ClientCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClientCertificate }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterKubeConfigOutput) ClientKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClientKey }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterKubeConfigOutput) ClusterCaCertificate() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ClusterCaCertificate }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterKubeConfigOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterKubeConfigOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Host }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterKubeConfigOutput) RawConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.RawConfig }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterKubeConfigOutput) Token() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterKubeConfig) string { return v.Token }).(pulumi.StringOutput)
}

type GetKubernetesClusterKubeConfigArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterKubeConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterKubeConfig)(nil)).Elem()
}

func (o GetKubernetesClusterKubeConfigArrayOutput) ToGetKubernetesClusterKubeConfigArrayOutput() GetKubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigArrayOutput) ToGetKubernetesClusterKubeConfigArrayOutputWithContext(ctx context.Context) GetKubernetesClusterKubeConfigArrayOutput {
	return o
}

func (o GetKubernetesClusterKubeConfigArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterKubeConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterKubeConfig {
		return vs[0].([]GetKubernetesClusterKubeConfig)[vs[1].(int)]
	}).(GetKubernetesClusterKubeConfigOutput)
}

type GetKubernetesClusterNodePool struct {
	ActualNodeCount int  `pulumi:"actualNodeCount"`
	AutoScale       bool `pulumi:"autoScale"`
	// The unique ID that can be used to identify and reference a Kubernetes cluster.
	Id       string            `pulumi:"id"`
	Labels   map[string]string `pulumi:"labels"`
	MaxNodes int               `pulumi:"maxNodes"`
	MinNodes int               `pulumi:"minNodes"`
	// The name of Kubernetes cluster.
	Name      string                             `pulumi:"name"`
	NodeCount int                                `pulumi:"nodeCount"`
	Nodes     []GetKubernetesClusterNodePoolNode `pulumi:"nodes"`
	Size      string                             `pulumi:"size"`
	// A list of tag names to be applied to the Kubernetes cluster.
	Tags []string `pulumi:"tags"`
}

// GetKubernetesClusterNodePoolInput is an input type that accepts GetKubernetesClusterNodePoolArgs and GetKubernetesClusterNodePoolOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolInput` via:
//
// 		 GetKubernetesClusterNodePoolArgs{...}
//
type GetKubernetesClusterNodePoolInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolOutput() GetKubernetesClusterNodePoolOutput
	ToGetKubernetesClusterNodePoolOutputWithContext(context.Context) GetKubernetesClusterNodePoolOutput
}

type GetKubernetesClusterNodePoolArgs struct {
	ActualNodeCount pulumi.IntInput  `pulumi:"actualNodeCount"`
	AutoScale       pulumi.BoolInput `pulumi:"autoScale"`
	// The unique ID that can be used to identify and reference a Kubernetes cluster.
	Id       pulumi.StringInput    `pulumi:"id"`
	Labels   pulumi.StringMapInput `pulumi:"labels"`
	MaxNodes pulumi.IntInput       `pulumi:"maxNodes"`
	MinNodes pulumi.IntInput       `pulumi:"minNodes"`
	// The name of Kubernetes cluster.
	Name      pulumi.StringInput                         `pulumi:"name"`
	NodeCount pulumi.IntInput                            `pulumi:"nodeCount"`
	Nodes     GetKubernetesClusterNodePoolNodeArrayInput `pulumi:"nodes"`
	Size      pulumi.StringInput                         `pulumi:"size"`
	// A list of tag names to be applied to the Kubernetes cluster.
	Tags pulumi.StringArrayInput `pulumi:"tags"`
}

func (GetKubernetesClusterNodePoolArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePool)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolArgs) ToGetKubernetesClusterNodePoolOutput() GetKubernetesClusterNodePoolOutput {
	return i.ToGetKubernetesClusterNodePoolOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolArgs) ToGetKubernetesClusterNodePoolOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolOutput)
}

// GetKubernetesClusterNodePoolArrayInput is an input type that accepts GetKubernetesClusterNodePoolArray and GetKubernetesClusterNodePoolArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolArrayInput` via:
//
// 		 GetKubernetesClusterNodePoolArray{ GetKubernetesClusterNodePoolArgs{...} }
//
type GetKubernetesClusterNodePoolArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolArrayOutput() GetKubernetesClusterNodePoolArrayOutput
	ToGetKubernetesClusterNodePoolArrayOutputWithContext(context.Context) GetKubernetesClusterNodePoolArrayOutput
}

type GetKubernetesClusterNodePoolArray []GetKubernetesClusterNodePoolInput

func (GetKubernetesClusterNodePoolArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePool)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolArray) ToGetKubernetesClusterNodePoolArrayOutput() GetKubernetesClusterNodePoolArrayOutput {
	return i.ToGetKubernetesClusterNodePoolArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolArray) ToGetKubernetesClusterNodePoolArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolArrayOutput)
}

type GetKubernetesClusterNodePoolOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePool)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolOutput) ToGetKubernetesClusterNodePoolOutput() GetKubernetesClusterNodePoolOutput {
	return o
}

func (o GetKubernetesClusterNodePoolOutput) ToGetKubernetesClusterNodePoolOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolOutput {
	return o
}

func (o GetKubernetesClusterNodePoolOutput) ActualNodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) int { return v.ActualNodeCount }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterNodePoolOutput) AutoScale() pulumi.BoolOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) bool { return v.AutoScale }).(pulumi.BoolOutput)
}

// The unique ID that can be used to identify and reference a Kubernetes cluster.
func (o GetKubernetesClusterNodePoolOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterNodePoolOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

func (o GetKubernetesClusterNodePoolOutput) MaxNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) int { return v.MaxNodes }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterNodePoolOutput) MinNodes() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) int { return v.MinNodes }).(pulumi.IntOutput)
}

// The name of Kubernetes cluster.
func (o GetKubernetesClusterNodePoolOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterNodePoolOutput) NodeCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) int { return v.NodeCount }).(pulumi.IntOutput)
}

func (o GetKubernetesClusterNodePoolOutput) Nodes() GetKubernetesClusterNodePoolNodeArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) []GetKubernetesClusterNodePoolNode { return v.Nodes }).(GetKubernetesClusterNodePoolNodeArrayOutput)
}

func (o GetKubernetesClusterNodePoolOutput) Size() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) string { return v.Size }).(pulumi.StringOutput)
}

// A list of tag names to be applied to the Kubernetes cluster.
func (o GetKubernetesClusterNodePoolOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePool) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

type GetKubernetesClusterNodePoolArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePool)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolArrayOutput) ToGetKubernetesClusterNodePoolArrayOutput() GetKubernetesClusterNodePoolArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolArrayOutput) ToGetKubernetesClusterNodePoolArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterNodePoolOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterNodePool {
		return vs[0].([]GetKubernetesClusterNodePool)[vs[1].(int)]
	}).(GetKubernetesClusterNodePoolOutput)
}

type GetKubernetesClusterNodePoolNode struct {
	// The date and time when the Kubernetes cluster was created.
	CreatedAt string `pulumi:"createdAt"`
	DropletId string `pulumi:"dropletId"`
	// The unique ID that can be used to identify and reference a Kubernetes cluster.
	Id string `pulumi:"id"`
	// The name of Kubernetes cluster.
	Name string `pulumi:"name"`
	// A string indicating the current status of the cluster. Potential values include running, provisioning, and errored.
	Status string `pulumi:"status"`
	// The date and time when the Kubernetes cluster was last updated.
	// * `kube_config.0` - A representation of the Kubernetes cluster's kubeconfig with the following attributes:
	// - `rawConfig` - The full contents of the Kubernetes cluster's kubeconfig file.
	// - `host` - The URL of the API server on the Kubernetes master node.
	// - `clusterCaCertificate` - The base64 encoded public certificate for the cluster's certificate authority.
	// - `token` - The DigitalOcean API access token used by clients to access the cluster.
	// - `clientKey` - The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	// - `clientCertificate` - The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	// - `expiresAt` - The date and time when the credentials will expire and need to be regenerated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetKubernetesClusterNodePoolNodeInput is an input type that accepts GetKubernetesClusterNodePoolNodeArgs and GetKubernetesClusterNodePoolNodeOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolNodeInput` via:
//
// 		 GetKubernetesClusterNodePoolNodeArgs{...}
//
type GetKubernetesClusterNodePoolNodeInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolNodeOutput() GetKubernetesClusterNodePoolNodeOutput
	ToGetKubernetesClusterNodePoolNodeOutputWithContext(context.Context) GetKubernetesClusterNodePoolNodeOutput
}

type GetKubernetesClusterNodePoolNodeArgs struct {
	// The date and time when the Kubernetes cluster was created.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	DropletId pulumi.StringInput `pulumi:"dropletId"`
	// The unique ID that can be used to identify and reference a Kubernetes cluster.
	Id pulumi.StringInput `pulumi:"id"`
	// The name of Kubernetes cluster.
	Name pulumi.StringInput `pulumi:"name"`
	// A string indicating the current status of the cluster. Potential values include running, provisioning, and errored.
	Status pulumi.StringInput `pulumi:"status"`
	// The date and time when the Kubernetes cluster was last updated.
	// * `kube_config.0` - A representation of the Kubernetes cluster's kubeconfig with the following attributes:
	// - `rawConfig` - The full contents of the Kubernetes cluster's kubeconfig file.
	// - `host` - The URL of the API server on the Kubernetes master node.
	// - `clusterCaCertificate` - The base64 encoded public certificate for the cluster's certificate authority.
	// - `token` - The DigitalOcean API access token used by clients to access the cluster.
	// - `clientKey` - The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	// - `clientCertificate` - The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
	// - `expiresAt` - The date and time when the credentials will expire and need to be regenerated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetKubernetesClusterNodePoolNodeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePoolNode)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolNodeArgs) ToGetKubernetesClusterNodePoolNodeOutput() GetKubernetesClusterNodePoolNodeOutput {
	return i.ToGetKubernetesClusterNodePoolNodeOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolNodeArgs) ToGetKubernetesClusterNodePoolNodeOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolNodeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolNodeOutput)
}

// GetKubernetesClusterNodePoolNodeArrayInput is an input type that accepts GetKubernetesClusterNodePoolNodeArray and GetKubernetesClusterNodePoolNodeArrayOutput values.
// You can construct a concrete instance of `GetKubernetesClusterNodePoolNodeArrayInput` via:
//
// 		 GetKubernetesClusterNodePoolNodeArray{ GetKubernetesClusterNodePoolNodeArgs{...} }
//
type GetKubernetesClusterNodePoolNodeArrayInput interface {
	pulumi.Input

	ToGetKubernetesClusterNodePoolNodeArrayOutput() GetKubernetesClusterNodePoolNodeArrayOutput
	ToGetKubernetesClusterNodePoolNodeArrayOutputWithContext(context.Context) GetKubernetesClusterNodePoolNodeArrayOutput
}

type GetKubernetesClusterNodePoolNodeArray []GetKubernetesClusterNodePoolNodeInput

func (GetKubernetesClusterNodePoolNodeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePoolNode)(nil)).Elem()
}

func (i GetKubernetesClusterNodePoolNodeArray) ToGetKubernetesClusterNodePoolNodeArrayOutput() GetKubernetesClusterNodePoolNodeArrayOutput {
	return i.ToGetKubernetesClusterNodePoolNodeArrayOutputWithContext(context.Background())
}

func (i GetKubernetesClusterNodePoolNodeArray) ToGetKubernetesClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolNodeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetKubernetesClusterNodePoolNodeArrayOutput)
}

type GetKubernetesClusterNodePoolNodeOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolNodeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetKubernetesClusterNodePoolNode)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolNodeOutput) ToGetKubernetesClusterNodePoolNodeOutput() GetKubernetesClusterNodePoolNodeOutput {
	return o
}

func (o GetKubernetesClusterNodePoolNodeOutput) ToGetKubernetesClusterNodePoolNodeOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolNodeOutput {
	return o
}

// The date and time when the Kubernetes cluster was created.
func (o GetKubernetesClusterNodePoolNodeOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetKubernetesClusterNodePoolNodeOutput) DropletId() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.DropletId }).(pulumi.StringOutput)
}

// The unique ID that can be used to identify and reference a Kubernetes cluster.
func (o GetKubernetesClusterNodePoolNodeOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.Id }).(pulumi.StringOutput)
}

// The name of Kubernetes cluster.
func (o GetKubernetesClusterNodePoolNodeOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.Name }).(pulumi.StringOutput)
}

// A string indicating the current status of the cluster. Potential values include running, provisioning, and errored.
func (o GetKubernetesClusterNodePoolNodeOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.Status }).(pulumi.StringOutput)
}

// The date and time when the Kubernetes cluster was last updated.
// * `kube_config.0` - A representation of the Kubernetes cluster's kubeconfig with the following attributes:
// - `rawConfig` - The full contents of the Kubernetes cluster's kubeconfig file.
// - `host` - The URL of the API server on the Kubernetes master node.
// - `clusterCaCertificate` - The base64 encoded public certificate for the cluster's certificate authority.
// - `token` - The DigitalOcean API access token used by clients to access the cluster.
// - `clientKey` - The base64 encoded private key used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
// - `clientCertificate` - The base64 encoded public certificate used by clients to access the cluster. Only available if token authentication is not supported on your cluster.
// - `expiresAt` - The date and time when the credentials will expire and need to be regenerated.
func (o GetKubernetesClusterNodePoolNodeOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetKubernetesClusterNodePoolNode) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetKubernetesClusterNodePoolNodeArrayOutput struct{ *pulumi.OutputState }

func (GetKubernetesClusterNodePoolNodeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetKubernetesClusterNodePoolNode)(nil)).Elem()
}

func (o GetKubernetesClusterNodePoolNodeArrayOutput) ToGetKubernetesClusterNodePoolNodeArrayOutput() GetKubernetesClusterNodePoolNodeArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolNodeArrayOutput) ToGetKubernetesClusterNodePoolNodeArrayOutputWithContext(ctx context.Context) GetKubernetesClusterNodePoolNodeArrayOutput {
	return o
}

func (o GetKubernetesClusterNodePoolNodeArrayOutput) Index(i pulumi.IntInput) GetKubernetesClusterNodePoolNodeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetKubernetesClusterNodePoolNode {
		return vs[0].([]GetKubernetesClusterNodePoolNode)[vs[1].(int)]
	}).(GetKubernetesClusterNodePoolNodeOutput)
}

type GetLoadBalancerForwardingRule struct {
	CertificateId  string `pulumi:"certificateId"`
	EntryPort      int    `pulumi:"entryPort"`
	EntryProtocol  string `pulumi:"entryProtocol"`
	TargetPort     int    `pulumi:"targetPort"`
	TargetProtocol string `pulumi:"targetProtocol"`
	TlsPassthrough bool   `pulumi:"tlsPassthrough"`
}

// GetLoadBalancerForwardingRuleInput is an input type that accepts GetLoadBalancerForwardingRuleArgs and GetLoadBalancerForwardingRuleOutput values.
// You can construct a concrete instance of `GetLoadBalancerForwardingRuleInput` via:
//
// 		 GetLoadBalancerForwardingRuleArgs{...}
//
type GetLoadBalancerForwardingRuleInput interface {
	pulumi.Input

	ToGetLoadBalancerForwardingRuleOutput() GetLoadBalancerForwardingRuleOutput
	ToGetLoadBalancerForwardingRuleOutputWithContext(context.Context) GetLoadBalancerForwardingRuleOutput
}

type GetLoadBalancerForwardingRuleArgs struct {
	CertificateId  pulumi.StringInput `pulumi:"certificateId"`
	EntryPort      pulumi.IntInput    `pulumi:"entryPort"`
	EntryProtocol  pulumi.StringInput `pulumi:"entryProtocol"`
	TargetPort     pulumi.IntInput    `pulumi:"targetPort"`
	TargetProtocol pulumi.StringInput `pulumi:"targetProtocol"`
	TlsPassthrough pulumi.BoolInput   `pulumi:"tlsPassthrough"`
}

func (GetLoadBalancerForwardingRuleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerForwardingRule)(nil)).Elem()
}

func (i GetLoadBalancerForwardingRuleArgs) ToGetLoadBalancerForwardingRuleOutput() GetLoadBalancerForwardingRuleOutput {
	return i.ToGetLoadBalancerForwardingRuleOutputWithContext(context.Background())
}

func (i GetLoadBalancerForwardingRuleArgs) ToGetLoadBalancerForwardingRuleOutputWithContext(ctx context.Context) GetLoadBalancerForwardingRuleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerForwardingRuleOutput)
}

// GetLoadBalancerForwardingRuleArrayInput is an input type that accepts GetLoadBalancerForwardingRuleArray and GetLoadBalancerForwardingRuleArrayOutput values.
// You can construct a concrete instance of `GetLoadBalancerForwardingRuleArrayInput` via:
//
// 		 GetLoadBalancerForwardingRuleArray{ GetLoadBalancerForwardingRuleArgs{...} }
//
type GetLoadBalancerForwardingRuleArrayInput interface {
	pulumi.Input

	ToGetLoadBalancerForwardingRuleArrayOutput() GetLoadBalancerForwardingRuleArrayOutput
	ToGetLoadBalancerForwardingRuleArrayOutputWithContext(context.Context) GetLoadBalancerForwardingRuleArrayOutput
}

type GetLoadBalancerForwardingRuleArray []GetLoadBalancerForwardingRuleInput

func (GetLoadBalancerForwardingRuleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerForwardingRule)(nil)).Elem()
}

func (i GetLoadBalancerForwardingRuleArray) ToGetLoadBalancerForwardingRuleArrayOutput() GetLoadBalancerForwardingRuleArrayOutput {
	return i.ToGetLoadBalancerForwardingRuleArrayOutputWithContext(context.Background())
}

func (i GetLoadBalancerForwardingRuleArray) ToGetLoadBalancerForwardingRuleArrayOutputWithContext(ctx context.Context) GetLoadBalancerForwardingRuleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerForwardingRuleArrayOutput)
}

type GetLoadBalancerForwardingRuleOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerForwardingRuleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerForwardingRule)(nil)).Elem()
}

func (o GetLoadBalancerForwardingRuleOutput) ToGetLoadBalancerForwardingRuleOutput() GetLoadBalancerForwardingRuleOutput {
	return o
}

func (o GetLoadBalancerForwardingRuleOutput) ToGetLoadBalancerForwardingRuleOutputWithContext(ctx context.Context) GetLoadBalancerForwardingRuleOutput {
	return o
}

func (o GetLoadBalancerForwardingRuleOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) string { return v.CertificateId }).(pulumi.StringOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) EntryPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) int { return v.EntryPort }).(pulumi.IntOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) EntryProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) string { return v.EntryProtocol }).(pulumi.StringOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) TargetPort() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) int { return v.TargetPort }).(pulumi.IntOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) TargetProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) string { return v.TargetProtocol }).(pulumi.StringOutput)
}

func (o GetLoadBalancerForwardingRuleOutput) TlsPassthrough() pulumi.BoolOutput {
	return o.ApplyT(func(v GetLoadBalancerForwardingRule) bool { return v.TlsPassthrough }).(pulumi.BoolOutput)
}

type GetLoadBalancerForwardingRuleArrayOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerForwardingRuleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetLoadBalancerForwardingRule)(nil)).Elem()
}

func (o GetLoadBalancerForwardingRuleArrayOutput) ToGetLoadBalancerForwardingRuleArrayOutput() GetLoadBalancerForwardingRuleArrayOutput {
	return o
}

func (o GetLoadBalancerForwardingRuleArrayOutput) ToGetLoadBalancerForwardingRuleArrayOutputWithContext(ctx context.Context) GetLoadBalancerForwardingRuleArrayOutput {
	return o
}

func (o GetLoadBalancerForwardingRuleArrayOutput) Index(i pulumi.IntInput) GetLoadBalancerForwardingRuleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetLoadBalancerForwardingRule {
		return vs[0].([]GetLoadBalancerForwardingRule)[vs[1].(int)]
	}).(GetLoadBalancerForwardingRuleOutput)
}

type GetLoadBalancerHealthcheck struct {
	CheckIntervalSeconds   int    `pulumi:"checkIntervalSeconds"`
	HealthyThreshold       int    `pulumi:"healthyThreshold"`
	Path                   string `pulumi:"path"`
	Port                   int    `pulumi:"port"`
	Protocol               string `pulumi:"protocol"`
	ResponseTimeoutSeconds int    `pulumi:"responseTimeoutSeconds"`
	UnhealthyThreshold     int    `pulumi:"unhealthyThreshold"`
}

// GetLoadBalancerHealthcheckInput is an input type that accepts GetLoadBalancerHealthcheckArgs and GetLoadBalancerHealthcheckOutput values.
// You can construct a concrete instance of `GetLoadBalancerHealthcheckInput` via:
//
// 		 GetLoadBalancerHealthcheckArgs{...}
//
type GetLoadBalancerHealthcheckInput interface {
	pulumi.Input

	ToGetLoadBalancerHealthcheckOutput() GetLoadBalancerHealthcheckOutput
	ToGetLoadBalancerHealthcheckOutputWithContext(context.Context) GetLoadBalancerHealthcheckOutput
}

type GetLoadBalancerHealthcheckArgs struct {
	CheckIntervalSeconds   pulumi.IntInput    `pulumi:"checkIntervalSeconds"`
	HealthyThreshold       pulumi.IntInput    `pulumi:"healthyThreshold"`
	Path                   pulumi.StringInput `pulumi:"path"`
	Port                   pulumi.IntInput    `pulumi:"port"`
	Protocol               pulumi.StringInput `pulumi:"protocol"`
	ResponseTimeoutSeconds pulumi.IntInput    `pulumi:"responseTimeoutSeconds"`
	UnhealthyThreshold     pulumi.IntInput    `pulumi:"unhealthyThreshold"`
}

func (GetLoadBalancerHealthcheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerHealthcheck)(nil)).Elem()
}

func (i GetLoadBalancerHealthcheckArgs) ToGetLoadBalancerHealthcheckOutput() GetLoadBalancerHealthcheckOutput {
	return i.ToGetLoadBalancerHealthcheckOutputWithContext(context.Background())
}

func (i GetLoadBalancerHealthcheckArgs) ToGetLoadBalancerHealthcheckOutputWithContext(ctx context.Context) GetLoadBalancerHealthcheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerHealthcheckOutput)
}

type GetLoadBalancerHealthcheckOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerHealthcheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerHealthcheck)(nil)).Elem()
}

func (o GetLoadBalancerHealthcheckOutput) ToGetLoadBalancerHealthcheckOutput() GetLoadBalancerHealthcheckOutput {
	return o
}

func (o GetLoadBalancerHealthcheckOutput) ToGetLoadBalancerHealthcheckOutputWithContext(ctx context.Context) GetLoadBalancerHealthcheckOutput {
	return o
}

func (o GetLoadBalancerHealthcheckOutput) CheckIntervalSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.CheckIntervalSeconds }).(pulumi.IntOutput)
}

func (o GetLoadBalancerHealthcheckOutput) HealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.HealthyThreshold }).(pulumi.IntOutput)
}

func (o GetLoadBalancerHealthcheckOutput) Path() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) string { return v.Path }).(pulumi.StringOutput)
}

func (o GetLoadBalancerHealthcheckOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetLoadBalancerHealthcheckOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetLoadBalancerHealthcheckOutput) ResponseTimeoutSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.ResponseTimeoutSeconds }).(pulumi.IntOutput)
}

func (o GetLoadBalancerHealthcheckOutput) UnhealthyThreshold() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerHealthcheck) int { return v.UnhealthyThreshold }).(pulumi.IntOutput)
}

type GetLoadBalancerStickySessions struct {
	CookieName       string `pulumi:"cookieName"`
	CookieTtlSeconds int    `pulumi:"cookieTtlSeconds"`
	Type             string `pulumi:"type"`
}

// GetLoadBalancerStickySessionsInput is an input type that accepts GetLoadBalancerStickySessionsArgs and GetLoadBalancerStickySessionsOutput values.
// You can construct a concrete instance of `GetLoadBalancerStickySessionsInput` via:
//
// 		 GetLoadBalancerStickySessionsArgs{...}
//
type GetLoadBalancerStickySessionsInput interface {
	pulumi.Input

	ToGetLoadBalancerStickySessionsOutput() GetLoadBalancerStickySessionsOutput
	ToGetLoadBalancerStickySessionsOutputWithContext(context.Context) GetLoadBalancerStickySessionsOutput
}

type GetLoadBalancerStickySessionsArgs struct {
	CookieName       pulumi.StringInput `pulumi:"cookieName"`
	CookieTtlSeconds pulumi.IntInput    `pulumi:"cookieTtlSeconds"`
	Type             pulumi.StringInput `pulumi:"type"`
}

func (GetLoadBalancerStickySessionsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerStickySessions)(nil)).Elem()
}

func (i GetLoadBalancerStickySessionsArgs) ToGetLoadBalancerStickySessionsOutput() GetLoadBalancerStickySessionsOutput {
	return i.ToGetLoadBalancerStickySessionsOutputWithContext(context.Background())
}

func (i GetLoadBalancerStickySessionsArgs) ToGetLoadBalancerStickySessionsOutputWithContext(ctx context.Context) GetLoadBalancerStickySessionsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetLoadBalancerStickySessionsOutput)
}

type GetLoadBalancerStickySessionsOutput struct{ *pulumi.OutputState }

func (GetLoadBalancerStickySessionsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetLoadBalancerStickySessions)(nil)).Elem()
}

func (o GetLoadBalancerStickySessionsOutput) ToGetLoadBalancerStickySessionsOutput() GetLoadBalancerStickySessionsOutput {
	return o
}

func (o GetLoadBalancerStickySessionsOutput) ToGetLoadBalancerStickySessionsOutputWithContext(ctx context.Context) GetLoadBalancerStickySessionsOutput {
	return o
}

func (o GetLoadBalancerStickySessionsOutput) CookieName() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerStickySessions) string { return v.CookieName }).(pulumi.StringOutput)
}

func (o GetLoadBalancerStickySessionsOutput) CookieTtlSeconds() pulumi.IntOutput {
	return o.ApplyT(func(v GetLoadBalancerStickySessions) int { return v.CookieTtlSeconds }).(pulumi.IntOutput)
}

func (o GetLoadBalancerStickySessionsOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetLoadBalancerStickySessions) string { return v.Type }).(pulumi.StringOutput)
}

type GetProjectsFilter struct {
	// Filter the projects by this key. This may be one of `name`,
	// `purpose`, `description`, `environment`, or `isDefault`.
	Key string `pulumi:"key"`
	// A list of values to match against the `key` field. Only retrieves projects
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetProjectsFilterInput is an input type that accepts GetProjectsFilterArgs and GetProjectsFilterOutput values.
// You can construct a concrete instance of `GetProjectsFilterInput` via:
//
// 		 GetProjectsFilterArgs{...}
//
type GetProjectsFilterInput interface {
	pulumi.Input

	ToGetProjectsFilterOutput() GetProjectsFilterOutput
	ToGetProjectsFilterOutputWithContext(context.Context) GetProjectsFilterOutput
}

type GetProjectsFilterArgs struct {
	// Filter the projects by this key. This may be one of `name`,
	// `purpose`, `description`, `environment`, or `isDefault`.
	Key pulumi.StringInput `pulumi:"key"`
	// A list of values to match against the `key` field. Only retrieves projects
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetProjectsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return i.ToGetProjectsFilterOutputWithContext(context.Background())
}

func (i GetProjectsFilterArgs) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterOutput)
}

// GetProjectsFilterArrayInput is an input type that accepts GetProjectsFilterArray and GetProjectsFilterArrayOutput values.
// You can construct a concrete instance of `GetProjectsFilterArrayInput` via:
//
// 		 GetProjectsFilterArray{ GetProjectsFilterArgs{...} }
//
type GetProjectsFilterArrayInput interface {
	pulumi.Input

	ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput
	ToGetProjectsFilterArrayOutputWithContext(context.Context) GetProjectsFilterArrayOutput
}

type GetProjectsFilterArray []GetProjectsFilterInput

func (GetProjectsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return i.ToGetProjectsFilterArrayOutputWithContext(context.Background())
}

func (i GetProjectsFilterArray) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsFilterArrayOutput)
}

type GetProjectsFilterOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutput() GetProjectsFilterOutput {
	return o
}

func (o GetProjectsFilterOutput) ToGetProjectsFilterOutputWithContext(ctx context.Context) GetProjectsFilterOutput {
	return o
}

// Filter the projects by this key. This may be one of `name`,
// `purpose`, `description`, `environment`, or `isDefault`.
func (o GetProjectsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// A list of values to match against the `key` field. Only retrieves projects
// where the `key` field takes on one or more of the values provided here.
func (o GetProjectsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetProjectsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsFilter)(nil)).Elem()
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutput() GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) ToGetProjectsFilterArrayOutputWithContext(ctx context.Context) GetProjectsFilterArrayOutput {
	return o
}

func (o GetProjectsFilterArrayOutput) Index(i pulumi.IntInput) GetProjectsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsFilter {
		return vs[0].([]GetProjectsFilter)[vs[1].(int)]
	}).(GetProjectsFilterOutput)
}

type GetProjectsProject struct {
	CreatedAt   string   `pulumi:"createdAt"`
	Description string   `pulumi:"description"`
	Environment string   `pulumi:"environment"`
	Id          string   `pulumi:"id"`
	IsDefault   bool     `pulumi:"isDefault"`
	Name        string   `pulumi:"name"`
	OwnerId     int      `pulumi:"ownerId"`
	OwnerUuid   string   `pulumi:"ownerUuid"`
	Purpose     string   `pulumi:"purpose"`
	Resources   []string `pulumi:"resources"`
	UpdatedAt   string   `pulumi:"updatedAt"`
}

// GetProjectsProjectInput is an input type that accepts GetProjectsProjectArgs and GetProjectsProjectOutput values.
// You can construct a concrete instance of `GetProjectsProjectInput` via:
//
// 		 GetProjectsProjectArgs{...}
//
type GetProjectsProjectInput interface {
	pulumi.Input

	ToGetProjectsProjectOutput() GetProjectsProjectOutput
	ToGetProjectsProjectOutputWithContext(context.Context) GetProjectsProjectOutput
}

type GetProjectsProjectArgs struct {
	CreatedAt   pulumi.StringInput      `pulumi:"createdAt"`
	Description pulumi.StringInput      `pulumi:"description"`
	Environment pulumi.StringInput      `pulumi:"environment"`
	Id          pulumi.StringInput      `pulumi:"id"`
	IsDefault   pulumi.BoolInput        `pulumi:"isDefault"`
	Name        pulumi.StringInput      `pulumi:"name"`
	OwnerId     pulumi.IntInput         `pulumi:"ownerId"`
	OwnerUuid   pulumi.StringInput      `pulumi:"ownerUuid"`
	Purpose     pulumi.StringInput      `pulumi:"purpose"`
	Resources   pulumi.StringArrayInput `pulumi:"resources"`
	UpdatedAt   pulumi.StringInput      `pulumi:"updatedAt"`
}

func (GetProjectsProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return i.ToGetProjectsProjectOutputWithContext(context.Background())
}

func (i GetProjectsProjectArgs) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectOutput)
}

// GetProjectsProjectArrayInput is an input type that accepts GetProjectsProjectArray and GetProjectsProjectArrayOutput values.
// You can construct a concrete instance of `GetProjectsProjectArrayInput` via:
//
// 		 GetProjectsProjectArray{ GetProjectsProjectArgs{...} }
//
type GetProjectsProjectArrayInput interface {
	pulumi.Input

	ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput
	ToGetProjectsProjectArrayOutputWithContext(context.Context) GetProjectsProjectArrayOutput
}

type GetProjectsProjectArray []GetProjectsProjectInput

func (GetProjectsProjectArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return i.ToGetProjectsProjectArrayOutputWithContext(context.Background())
}

func (i GetProjectsProjectArray) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsProjectArrayOutput)
}

type GetProjectsProjectOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutput() GetProjectsProjectOutput {
	return o
}

func (o GetProjectsProjectOutput) ToGetProjectsProjectOutputWithContext(ctx context.Context) GetProjectsProjectOutput {
	return o
}

func (o GetProjectsProjectOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.CreatedAt }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Environment() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Environment }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) IsDefault() pulumi.BoolOutput {
	return o.ApplyT(func(v GetProjectsProject) bool { return v.IsDefault }).(pulumi.BoolOutput)
}

func (o GetProjectsProjectOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) OwnerId() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectsProject) int { return v.OwnerId }).(pulumi.IntOutput)
}

func (o GetProjectsProjectOutput) OwnerUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.OwnerUuid }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Purpose() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.Purpose }).(pulumi.StringOutput)
}

func (o GetProjectsProjectOutput) Resources() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetProjectsProject) []string { return v.Resources }).(pulumi.StringArrayOutput)
}

func (o GetProjectsProjectOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsProject) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetProjectsProjectArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsProjectArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsProject)(nil)).Elem()
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutput() GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) ToGetProjectsProjectArrayOutputWithContext(ctx context.Context) GetProjectsProjectArrayOutput {
	return o
}

func (o GetProjectsProjectArrayOutput) Index(i pulumi.IntInput) GetProjectsProjectOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsProject {
		return vs[0].([]GetProjectsProject)[vs[1].(int)]
	}).(GetProjectsProjectOutput)
}

type GetProjectsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the projects by this key. This may be one of `name`,
	// `purpose`, `description`, or `environment`.
	Key string `pulumi:"key"`
}

// GetProjectsSortInput is an input type that accepts GetProjectsSortArgs and GetProjectsSortOutput values.
// You can construct a concrete instance of `GetProjectsSortInput` via:
//
// 		 GetProjectsSortArgs{...}
//
type GetProjectsSortInput interface {
	pulumi.Input

	ToGetProjectsSortOutput() GetProjectsSortOutput
	ToGetProjectsSortOutputWithContext(context.Context) GetProjectsSortOutput
}

type GetProjectsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the projects by this key. This may be one of `name`,
	// `purpose`, `description`, or `environment`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetProjectsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsSort)(nil)).Elem()
}

func (i GetProjectsSortArgs) ToGetProjectsSortOutput() GetProjectsSortOutput {
	return i.ToGetProjectsSortOutputWithContext(context.Background())
}

func (i GetProjectsSortArgs) ToGetProjectsSortOutputWithContext(ctx context.Context) GetProjectsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsSortOutput)
}

// GetProjectsSortArrayInput is an input type that accepts GetProjectsSortArray and GetProjectsSortArrayOutput values.
// You can construct a concrete instance of `GetProjectsSortArrayInput` via:
//
// 		 GetProjectsSortArray{ GetProjectsSortArgs{...} }
//
type GetProjectsSortArrayInput interface {
	pulumi.Input

	ToGetProjectsSortArrayOutput() GetProjectsSortArrayOutput
	ToGetProjectsSortArrayOutputWithContext(context.Context) GetProjectsSortArrayOutput
}

type GetProjectsSortArray []GetProjectsSortInput

func (GetProjectsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsSort)(nil)).Elem()
}

func (i GetProjectsSortArray) ToGetProjectsSortArrayOutput() GetProjectsSortArrayOutput {
	return i.ToGetProjectsSortArrayOutputWithContext(context.Background())
}

func (i GetProjectsSortArray) ToGetProjectsSortArrayOutputWithContext(ctx context.Context) GetProjectsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectsSortArrayOutput)
}

type GetProjectsSortOutput struct{ *pulumi.OutputState }

func (GetProjectsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectsSort)(nil)).Elem()
}

func (o GetProjectsSortOutput) ToGetProjectsSortOutput() GetProjectsSortOutput {
	return o
}

func (o GetProjectsSortOutput) ToGetProjectsSortOutputWithContext(ctx context.Context) GetProjectsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetProjectsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the projects by this key. This may be one of `name`,
// `purpose`, `description`, or `environment`.
func (o GetProjectsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetProjectsSortArrayOutput struct{ *pulumi.OutputState }

func (GetProjectsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectsSort)(nil)).Elem()
}

func (o GetProjectsSortArrayOutput) ToGetProjectsSortArrayOutput() GetProjectsSortArrayOutput {
	return o
}

func (o GetProjectsSortArrayOutput) ToGetProjectsSortArrayOutputWithContext(ctx context.Context) GetProjectsSortArrayOutput {
	return o
}

func (o GetProjectsSortArrayOutput) Index(i pulumi.IntInput) GetProjectsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectsSort {
		return vs[0].([]GetProjectsSort)[vs[1].(int)]
	}).(GetProjectsSortOutput)
}

type GetRegionsFilter struct {
	// Filter the regions by this key. This may be one of `slug`,
	// `name`, `available`, `features`, or `sizes`.
	Key string `pulumi:"key"`
	// A list of values to match against the `key` field. Only retrieves regions
	// where the `key` field takes on one or more of the values provided here.
	Values []string `pulumi:"values"`
}

// GetRegionsFilterInput is an input type that accepts GetRegionsFilterArgs and GetRegionsFilterOutput values.
// You can construct a concrete instance of `GetRegionsFilterInput` via:
//
// 		 GetRegionsFilterArgs{...}
//
type GetRegionsFilterInput interface {
	pulumi.Input

	ToGetRegionsFilterOutput() GetRegionsFilterOutput
	ToGetRegionsFilterOutputWithContext(context.Context) GetRegionsFilterOutput
}

type GetRegionsFilterArgs struct {
	// Filter the regions by this key. This may be one of `slug`,
	// `name`, `available`, `features`, or `sizes`.
	Key pulumi.StringInput `pulumi:"key"`
	// A list of values to match against the `key` field. Only retrieves regions
	// where the `key` field takes on one or more of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetRegionsFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsFilter)(nil)).Elem()
}

func (i GetRegionsFilterArgs) ToGetRegionsFilterOutput() GetRegionsFilterOutput {
	return i.ToGetRegionsFilterOutputWithContext(context.Background())
}

func (i GetRegionsFilterArgs) ToGetRegionsFilterOutputWithContext(ctx context.Context) GetRegionsFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsFilterOutput)
}

// GetRegionsFilterArrayInput is an input type that accepts GetRegionsFilterArray and GetRegionsFilterArrayOutput values.
// You can construct a concrete instance of `GetRegionsFilterArrayInput` via:
//
// 		 GetRegionsFilterArray{ GetRegionsFilterArgs{...} }
//
type GetRegionsFilterArrayInput interface {
	pulumi.Input

	ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput
	ToGetRegionsFilterArrayOutputWithContext(context.Context) GetRegionsFilterArrayOutput
}

type GetRegionsFilterArray []GetRegionsFilterInput

func (GetRegionsFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsFilter)(nil)).Elem()
}

func (i GetRegionsFilterArray) ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput {
	return i.ToGetRegionsFilterArrayOutputWithContext(context.Background())
}

func (i GetRegionsFilterArray) ToGetRegionsFilterArrayOutputWithContext(ctx context.Context) GetRegionsFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsFilterArrayOutput)
}

type GetRegionsFilterOutput struct{ *pulumi.OutputState }

func (GetRegionsFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsFilter)(nil)).Elem()
}

func (o GetRegionsFilterOutput) ToGetRegionsFilterOutput() GetRegionsFilterOutput {
	return o
}

func (o GetRegionsFilterOutput) ToGetRegionsFilterOutputWithContext(ctx context.Context) GetRegionsFilterOutput {
	return o
}

// Filter the regions by this key. This may be one of `slug`,
// `name`, `available`, `features`, or `sizes`.
func (o GetRegionsFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsFilter) string { return v.Key }).(pulumi.StringOutput)
}

// A list of values to match against the `key` field. Only retrieves regions
// where the `key` field takes on one or more of the values provided here.
func (o GetRegionsFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionsFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetRegionsFilterArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsFilter)(nil)).Elem()
}

func (o GetRegionsFilterArrayOutput) ToGetRegionsFilterArrayOutput() GetRegionsFilterArrayOutput {
	return o
}

func (o GetRegionsFilterArrayOutput) ToGetRegionsFilterArrayOutputWithContext(ctx context.Context) GetRegionsFilterArrayOutput {
	return o
}

func (o GetRegionsFilterArrayOutput) Index(i pulumi.IntInput) GetRegionsFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsFilter {
		return vs[0].([]GetRegionsFilter)[vs[1].(int)]
	}).(GetRegionsFilterOutput)
}

type GetRegionsRegion struct {
	Available bool     `pulumi:"available"`
	Features  []string `pulumi:"features"`
	Name      string   `pulumi:"name"`
	Sizes     []string `pulumi:"sizes"`
	Slug      string   `pulumi:"slug"`
}

// GetRegionsRegionInput is an input type that accepts GetRegionsRegionArgs and GetRegionsRegionOutput values.
// You can construct a concrete instance of `GetRegionsRegionInput` via:
//
// 		 GetRegionsRegionArgs{...}
//
type GetRegionsRegionInput interface {
	pulumi.Input

	ToGetRegionsRegionOutput() GetRegionsRegionOutput
	ToGetRegionsRegionOutputWithContext(context.Context) GetRegionsRegionOutput
}

type GetRegionsRegionArgs struct {
	Available pulumi.BoolInput        `pulumi:"available"`
	Features  pulumi.StringArrayInput `pulumi:"features"`
	Name      pulumi.StringInput      `pulumi:"name"`
	Sizes     pulumi.StringArrayInput `pulumi:"sizes"`
	Slug      pulumi.StringInput      `pulumi:"slug"`
}

func (GetRegionsRegionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return i.ToGetRegionsRegionOutputWithContext(context.Background())
}

func (i GetRegionsRegionArgs) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionOutput)
}

// GetRegionsRegionArrayInput is an input type that accepts GetRegionsRegionArray and GetRegionsRegionArrayOutput values.
// You can construct a concrete instance of `GetRegionsRegionArrayInput` via:
//
// 		 GetRegionsRegionArray{ GetRegionsRegionArgs{...} }
//
type GetRegionsRegionArrayInput interface {
	pulumi.Input

	ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput
	ToGetRegionsRegionArrayOutputWithContext(context.Context) GetRegionsRegionArrayOutput
}

type GetRegionsRegionArray []GetRegionsRegionInput

func (GetRegionsRegionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return i.ToGetRegionsRegionArrayOutputWithContext(context.Background())
}

func (i GetRegionsRegionArray) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsRegionArrayOutput)
}

type GetRegionsRegionOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutput() GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) ToGetRegionsRegionOutputWithContext(ctx context.Context) GetRegionsRegionOutput {
	return o
}

func (o GetRegionsRegionOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRegionsRegion) bool { return v.Available }).(pulumi.BoolOutput)
}

func (o GetRegionsRegionOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionsRegion) []string { return v.Features }).(pulumi.StringArrayOutput)
}

func (o GetRegionsRegionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRegionsRegionOutput) Sizes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionsRegion) []string { return v.Sizes }).(pulumi.StringArrayOutput)
}

func (o GetRegionsRegionOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsRegion) string { return v.Slug }).(pulumi.StringOutput)
}

type GetRegionsRegionArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsRegionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsRegion)(nil)).Elem()
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutput() GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) ToGetRegionsRegionArrayOutputWithContext(ctx context.Context) GetRegionsRegionArrayOutput {
	return o
}

func (o GetRegionsRegionArrayOutput) Index(i pulumi.IntInput) GetRegionsRegionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsRegion {
		return vs[0].([]GetRegionsRegion)[vs[1].(int)]
	}).(GetRegionsRegionOutput)
}

type GetRegionsSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the regions by this key. This may be one of `slug`,
	// `name`, or `available`.
	Key string `pulumi:"key"`
}

// GetRegionsSortInput is an input type that accepts GetRegionsSortArgs and GetRegionsSortOutput values.
// You can construct a concrete instance of `GetRegionsSortInput` via:
//
// 		 GetRegionsSortArgs{...}
//
type GetRegionsSortInput interface {
	pulumi.Input

	ToGetRegionsSortOutput() GetRegionsSortOutput
	ToGetRegionsSortOutputWithContext(context.Context) GetRegionsSortOutput
}

type GetRegionsSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the regions by this key. This may be one of `slug`,
	// `name`, or `available`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetRegionsSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsSort)(nil)).Elem()
}

func (i GetRegionsSortArgs) ToGetRegionsSortOutput() GetRegionsSortOutput {
	return i.ToGetRegionsSortOutputWithContext(context.Background())
}

func (i GetRegionsSortArgs) ToGetRegionsSortOutputWithContext(ctx context.Context) GetRegionsSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsSortOutput)
}

// GetRegionsSortArrayInput is an input type that accepts GetRegionsSortArray and GetRegionsSortArrayOutput values.
// You can construct a concrete instance of `GetRegionsSortArrayInput` via:
//
// 		 GetRegionsSortArray{ GetRegionsSortArgs{...} }
//
type GetRegionsSortArrayInput interface {
	pulumi.Input

	ToGetRegionsSortArrayOutput() GetRegionsSortArrayOutput
	ToGetRegionsSortArrayOutputWithContext(context.Context) GetRegionsSortArrayOutput
}

type GetRegionsSortArray []GetRegionsSortInput

func (GetRegionsSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsSort)(nil)).Elem()
}

func (i GetRegionsSortArray) ToGetRegionsSortArrayOutput() GetRegionsSortArrayOutput {
	return i.ToGetRegionsSortArrayOutputWithContext(context.Background())
}

func (i GetRegionsSortArray) ToGetRegionsSortArrayOutputWithContext(ctx context.Context) GetRegionsSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetRegionsSortArrayOutput)
}

type GetRegionsSortOutput struct{ *pulumi.OutputState }

func (GetRegionsSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionsSort)(nil)).Elem()
}

func (o GetRegionsSortOutput) ToGetRegionsSortOutput() GetRegionsSortOutput {
	return o
}

func (o GetRegionsSortOutput) ToGetRegionsSortOutputWithContext(ctx context.Context) GetRegionsSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetRegionsSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetRegionsSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the regions by this key. This may be one of `slug`,
// `name`, or `available`.
func (o GetRegionsSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionsSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetRegionsSortArrayOutput struct{ *pulumi.OutputState }

func (GetRegionsSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetRegionsSort)(nil)).Elem()
}

func (o GetRegionsSortArrayOutput) ToGetRegionsSortArrayOutput() GetRegionsSortArrayOutput {
	return o
}

func (o GetRegionsSortArrayOutput) ToGetRegionsSortArrayOutputWithContext(ctx context.Context) GetRegionsSortArrayOutput {
	return o
}

func (o GetRegionsSortArrayOutput) Index(i pulumi.IntInput) GetRegionsSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetRegionsSort {
		return vs[0].([]GetRegionsSort)[vs[1].(int)]
	}).(GetRegionsSortOutput)
}

type GetSizesFilter struct {
	// Filter the sizes by this key. This may be one of `slug`,
	// `regions`, `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`,
	// `priceHourly`, or `available`.
	Key string `pulumi:"key"`
	// Only retrieves images which keys has value that matches
	// one of the values provided here.
	Values []string `pulumi:"values"`
}

// GetSizesFilterInput is an input type that accepts GetSizesFilterArgs and GetSizesFilterOutput values.
// You can construct a concrete instance of `GetSizesFilterInput` via:
//
// 		 GetSizesFilterArgs{...}
//
type GetSizesFilterInput interface {
	pulumi.Input

	ToGetSizesFilterOutput() GetSizesFilterOutput
	ToGetSizesFilterOutputWithContext(context.Context) GetSizesFilterOutput
}

type GetSizesFilterArgs struct {
	// Filter the sizes by this key. This may be one of `slug`,
	// `regions`, `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`,
	// `priceHourly`, or `available`.
	Key pulumi.StringInput `pulumi:"key"`
	// Only retrieves images which keys has value that matches
	// one of the values provided here.
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetSizesFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesFilter)(nil)).Elem()
}

func (i GetSizesFilterArgs) ToGetSizesFilterOutput() GetSizesFilterOutput {
	return i.ToGetSizesFilterOutputWithContext(context.Background())
}

func (i GetSizesFilterArgs) ToGetSizesFilterOutputWithContext(ctx context.Context) GetSizesFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesFilterOutput)
}

// GetSizesFilterArrayInput is an input type that accepts GetSizesFilterArray and GetSizesFilterArrayOutput values.
// You can construct a concrete instance of `GetSizesFilterArrayInput` via:
//
// 		 GetSizesFilterArray{ GetSizesFilterArgs{...} }
//
type GetSizesFilterArrayInput interface {
	pulumi.Input

	ToGetSizesFilterArrayOutput() GetSizesFilterArrayOutput
	ToGetSizesFilterArrayOutputWithContext(context.Context) GetSizesFilterArrayOutput
}

type GetSizesFilterArray []GetSizesFilterInput

func (GetSizesFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesFilter)(nil)).Elem()
}

func (i GetSizesFilterArray) ToGetSizesFilterArrayOutput() GetSizesFilterArrayOutput {
	return i.ToGetSizesFilterArrayOutputWithContext(context.Background())
}

func (i GetSizesFilterArray) ToGetSizesFilterArrayOutputWithContext(ctx context.Context) GetSizesFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesFilterArrayOutput)
}

type GetSizesFilterOutput struct{ *pulumi.OutputState }

func (GetSizesFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesFilter)(nil)).Elem()
}

func (o GetSizesFilterOutput) ToGetSizesFilterOutput() GetSizesFilterOutput {
	return o
}

func (o GetSizesFilterOutput) ToGetSizesFilterOutputWithContext(ctx context.Context) GetSizesFilterOutput {
	return o
}

// Filter the sizes by this key. This may be one of `slug`,
// `regions`, `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`,
// `priceHourly`, or `available`.
func (o GetSizesFilterOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizesFilter) string { return v.Key }).(pulumi.StringOutput)
}

// Only retrieves images which keys has value that matches
// one of the values provided here.
func (o GetSizesFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSizesFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetSizesFilterArrayOutput struct{ *pulumi.OutputState }

func (GetSizesFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesFilter)(nil)).Elem()
}

func (o GetSizesFilterArrayOutput) ToGetSizesFilterArrayOutput() GetSizesFilterArrayOutput {
	return o
}

func (o GetSizesFilterArrayOutput) ToGetSizesFilterArrayOutputWithContext(ctx context.Context) GetSizesFilterArrayOutput {
	return o
}

func (o GetSizesFilterArrayOutput) Index(i pulumi.IntInput) GetSizesFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizesFilter {
		return vs[0].([]GetSizesFilter)[vs[1].(int)]
	}).(GetSizesFilterOutput)
}

type GetSizesSize struct {
	// This represents whether new Droplets can be created with this size.
	Available bool `pulumi:"available"`
	// The amount of disk space set aside for Droplets of this size. The value is measured in gigabytes.
	Disk int `pulumi:"disk"`
	// The amount of RAM allocated to Droplets created of this size. The value is measured in megabytes.
	Memory int `pulumi:"memory"`
	// The hourly cost of Droplets created in this size as measured hourly. The value is measured in US dollars.
	PriceHourly float64 `pulumi:"priceHourly"`
	// The monthly cost of Droplets created in this size if they are kept for an entire month. The value is measured in US dollars.
	PriceMonthly float64 `pulumi:"priceMonthly"`
	// List of region slugs where Droplets can be created in this size.
	Regions []string `pulumi:"regions"`
	// A human-readable string that is used to uniquely identify each size.
	Slug string `pulumi:"slug"`
	// The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.
	Transfer float64 `pulumi:"transfer"`
	// The number of CPUs allocated to Droplets of this size.
	Vcpus int `pulumi:"vcpus"`
}

// GetSizesSizeInput is an input type that accepts GetSizesSizeArgs and GetSizesSizeOutput values.
// You can construct a concrete instance of `GetSizesSizeInput` via:
//
// 		 GetSizesSizeArgs{...}
//
type GetSizesSizeInput interface {
	pulumi.Input

	ToGetSizesSizeOutput() GetSizesSizeOutput
	ToGetSizesSizeOutputWithContext(context.Context) GetSizesSizeOutput
}

type GetSizesSizeArgs struct {
	// This represents whether new Droplets can be created with this size.
	Available pulumi.BoolInput `pulumi:"available"`
	// The amount of disk space set aside for Droplets of this size. The value is measured in gigabytes.
	Disk pulumi.IntInput `pulumi:"disk"`
	// The amount of RAM allocated to Droplets created of this size. The value is measured in megabytes.
	Memory pulumi.IntInput `pulumi:"memory"`
	// The hourly cost of Droplets created in this size as measured hourly. The value is measured in US dollars.
	PriceHourly pulumi.Float64Input `pulumi:"priceHourly"`
	// The monthly cost of Droplets created in this size if they are kept for an entire month. The value is measured in US dollars.
	PriceMonthly pulumi.Float64Input `pulumi:"priceMonthly"`
	// List of region slugs where Droplets can be created in this size.
	Regions pulumi.StringArrayInput `pulumi:"regions"`
	// A human-readable string that is used to uniquely identify each size.
	Slug pulumi.StringInput `pulumi:"slug"`
	// The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.
	Transfer pulumi.Float64Input `pulumi:"transfer"`
	// The number of CPUs allocated to Droplets of this size.
	Vcpus pulumi.IntInput `pulumi:"vcpus"`
}

func (GetSizesSizeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesSize)(nil)).Elem()
}

func (i GetSizesSizeArgs) ToGetSizesSizeOutput() GetSizesSizeOutput {
	return i.ToGetSizesSizeOutputWithContext(context.Background())
}

func (i GetSizesSizeArgs) ToGetSizesSizeOutputWithContext(ctx context.Context) GetSizesSizeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesSizeOutput)
}

// GetSizesSizeArrayInput is an input type that accepts GetSizesSizeArray and GetSizesSizeArrayOutput values.
// You can construct a concrete instance of `GetSizesSizeArrayInput` via:
//
// 		 GetSizesSizeArray{ GetSizesSizeArgs{...} }
//
type GetSizesSizeArrayInput interface {
	pulumi.Input

	ToGetSizesSizeArrayOutput() GetSizesSizeArrayOutput
	ToGetSizesSizeArrayOutputWithContext(context.Context) GetSizesSizeArrayOutput
}

type GetSizesSizeArray []GetSizesSizeInput

func (GetSizesSizeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesSize)(nil)).Elem()
}

func (i GetSizesSizeArray) ToGetSizesSizeArrayOutput() GetSizesSizeArrayOutput {
	return i.ToGetSizesSizeArrayOutputWithContext(context.Background())
}

func (i GetSizesSizeArray) ToGetSizesSizeArrayOutputWithContext(ctx context.Context) GetSizesSizeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesSizeArrayOutput)
}

type GetSizesSizeOutput struct{ *pulumi.OutputState }

func (GetSizesSizeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesSize)(nil)).Elem()
}

func (o GetSizesSizeOutput) ToGetSizesSizeOutput() GetSizesSizeOutput {
	return o
}

func (o GetSizesSizeOutput) ToGetSizesSizeOutputWithContext(ctx context.Context) GetSizesSizeOutput {
	return o
}

// This represents whether new Droplets can be created with this size.
func (o GetSizesSizeOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetSizesSize) bool { return v.Available }).(pulumi.BoolOutput)
}

// The amount of disk space set aside for Droplets of this size. The value is measured in gigabytes.
func (o GetSizesSizeOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizesSize) int { return v.Disk }).(pulumi.IntOutput)
}

// The amount of RAM allocated to Droplets created of this size. The value is measured in megabytes.
func (o GetSizesSizeOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizesSize) int { return v.Memory }).(pulumi.IntOutput)
}

// The hourly cost of Droplets created in this size as measured hourly. The value is measured in US dollars.
func (o GetSizesSizeOutput) PriceHourly() pulumi.Float64Output {
	return o.ApplyT(func(v GetSizesSize) float64 { return v.PriceHourly }).(pulumi.Float64Output)
}

// The monthly cost of Droplets created in this size if they are kept for an entire month. The value is measured in US dollars.
func (o GetSizesSizeOutput) PriceMonthly() pulumi.Float64Output {
	return o.ApplyT(func(v GetSizesSize) float64 { return v.PriceMonthly }).(pulumi.Float64Output)
}

// List of region slugs where Droplets can be created in this size.
func (o GetSizesSizeOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetSizesSize) []string { return v.Regions }).(pulumi.StringArrayOutput)
}

// A human-readable string that is used to uniquely identify each size.
func (o GetSizesSizeOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizesSize) string { return v.Slug }).(pulumi.StringOutput)
}

// The amount of transfer bandwidth that is available for Droplets created in this size. This only counts traffic on the public interface. The value is given in terabytes.
func (o GetSizesSizeOutput) Transfer() pulumi.Float64Output {
	return o.ApplyT(func(v GetSizesSize) float64 { return v.Transfer }).(pulumi.Float64Output)
}

// The number of CPUs allocated to Droplets of this size.
func (o GetSizesSizeOutput) Vcpus() pulumi.IntOutput {
	return o.ApplyT(func(v GetSizesSize) int { return v.Vcpus }).(pulumi.IntOutput)
}

type GetSizesSizeArrayOutput struct{ *pulumi.OutputState }

func (GetSizesSizeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesSize)(nil)).Elem()
}

func (o GetSizesSizeArrayOutput) ToGetSizesSizeArrayOutput() GetSizesSizeArrayOutput {
	return o
}

func (o GetSizesSizeArrayOutput) ToGetSizesSizeArrayOutputWithContext(ctx context.Context) GetSizesSizeArrayOutput {
	return o
}

func (o GetSizesSizeArrayOutput) Index(i pulumi.IntInput) GetSizesSizeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizesSize {
		return vs[0].([]GetSizesSize)[vs[1].(int)]
	}).(GetSizesSizeOutput)
}

type GetSizesSort struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction *string `pulumi:"direction"`
	// Sort the sizes by this key. This may be one of `slug`,
	// `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`, or `priceHourly`.
	Key string `pulumi:"key"`
}

// GetSizesSortInput is an input type that accepts GetSizesSortArgs and GetSizesSortOutput values.
// You can construct a concrete instance of `GetSizesSortInput` via:
//
// 		 GetSizesSortArgs{...}
//
type GetSizesSortInput interface {
	pulumi.Input

	ToGetSizesSortOutput() GetSizesSortOutput
	ToGetSizesSortOutputWithContext(context.Context) GetSizesSortOutput
}

type GetSizesSortArgs struct {
	// The sort direction. This may be either `asc` or `desc`.
	Direction pulumi.StringPtrInput `pulumi:"direction"`
	// Sort the sizes by this key. This may be one of `slug`,
	// `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`, or `priceHourly`.
	Key pulumi.StringInput `pulumi:"key"`
}

func (GetSizesSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesSort)(nil)).Elem()
}

func (i GetSizesSortArgs) ToGetSizesSortOutput() GetSizesSortOutput {
	return i.ToGetSizesSortOutputWithContext(context.Background())
}

func (i GetSizesSortArgs) ToGetSizesSortOutputWithContext(ctx context.Context) GetSizesSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesSortOutput)
}

// GetSizesSortArrayInput is an input type that accepts GetSizesSortArray and GetSizesSortArrayOutput values.
// You can construct a concrete instance of `GetSizesSortArrayInput` via:
//
// 		 GetSizesSortArray{ GetSizesSortArgs{...} }
//
type GetSizesSortArrayInput interface {
	pulumi.Input

	ToGetSizesSortArrayOutput() GetSizesSortArrayOutput
	ToGetSizesSortArrayOutputWithContext(context.Context) GetSizesSortArrayOutput
}

type GetSizesSortArray []GetSizesSortInput

func (GetSizesSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesSort)(nil)).Elem()
}

func (i GetSizesSortArray) ToGetSizesSortArrayOutput() GetSizesSortArrayOutput {
	return i.ToGetSizesSortArrayOutputWithContext(context.Background())
}

func (i GetSizesSortArray) ToGetSizesSortArrayOutputWithContext(ctx context.Context) GetSizesSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetSizesSortArrayOutput)
}

type GetSizesSortOutput struct{ *pulumi.OutputState }

func (GetSizesSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSizesSort)(nil)).Elem()
}

func (o GetSizesSortOutput) ToGetSizesSortOutput() GetSizesSortOutput {
	return o
}

func (o GetSizesSortOutput) ToGetSizesSortOutputWithContext(ctx context.Context) GetSizesSortOutput {
	return o
}

// The sort direction. This may be either `asc` or `desc`.
func (o GetSizesSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSizesSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

// Sort the sizes by this key. This may be one of `slug`,
// `memory`, `vcpus`, `disk`, `transfer`, `priceMonthly`, or `priceHourly`.
func (o GetSizesSortOutput) Key() pulumi.StringOutput {
	return o.ApplyT(func(v GetSizesSort) string { return v.Key }).(pulumi.StringOutput)
}

type GetSizesSortArrayOutput struct{ *pulumi.OutputState }

func (GetSizesSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetSizesSort)(nil)).Elem()
}

func (o GetSizesSortArrayOutput) ToGetSizesSortArrayOutput() GetSizesSortArrayOutput {
	return o
}

func (o GetSizesSortArrayOutput) ToGetSizesSortArrayOutputWithContext(ctx context.Context) GetSizesSortArrayOutput {
	return o
}

func (o GetSizesSortArrayOutput) Index(i pulumi.IntInput) GetSizesSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetSizesSort {
		return vs[0].([]GetSizesSort)[vs[1].(int)]
	}).(GetSizesSortOutput)
}

func init() {
	pulumi.RegisterOutputType(DatabaseClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(DatabaseClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(DatabaseFirewallRuleOutput{})
	pulumi.RegisterOutputType(DatabaseFirewallRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallInboundRuleOutput{})
	pulumi.RegisterOutputType(FirewallInboundRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallOutboundRuleOutput{})
	pulumi.RegisterOutputType(FirewallOutboundRuleArrayOutput{})
	pulumi.RegisterOutputType(FirewallPendingChangeOutput{})
	pulumi.RegisterOutputType(FirewallPendingChangeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeConfigOutput{})
	pulumi.RegisterOutputType(KubernetesClusterKubeConfigArrayOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolPtrOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KubernetesClusterNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeOutput{})
	pulumi.RegisterOutputType(KubernetesNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerForwardingRuleOutput{})
	pulumi.RegisterOutputType(LoadBalancerForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(LoadBalancerHealthcheckOutput{})
	pulumi.RegisterOutputType(LoadBalancerHealthcheckPtrOutput{})
	pulumi.RegisterOutputType(LoadBalancerStickySessionsOutput{})
	pulumi.RegisterOutputType(LoadBalancerStickySessionsPtrOutput{})
	pulumi.RegisterOutputType(SpacesBucketCorsRuleOutput{})
	pulumi.RegisterOutputType(SpacesBucketCorsRuleArrayOutput{})
	pulumi.RegisterOutputType(GetDatabaseClusterMaintenanceWindowOutput{})
	pulumi.RegisterOutputType(GetDatabaseClusterMaintenanceWindowArrayOutput{})
	pulumi.RegisterOutputType(GetImagesFilterOutput{})
	pulumi.RegisterOutputType(GetImagesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetImagesImageOutput{})
	pulumi.RegisterOutputType(GetImagesImageArrayOutput{})
	pulumi.RegisterOutputType(GetImagesSortOutput{})
	pulumi.RegisterOutputType(GetImagesSortArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeConfigOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterKubeConfigArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolArrayOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolNodeOutput{})
	pulumi.RegisterOutputType(GetKubernetesClusterNodePoolNodeArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerForwardingRuleOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerForwardingRuleArrayOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerHealthcheckOutput{})
	pulumi.RegisterOutputType(GetLoadBalancerStickySessionsOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterOutput{})
	pulumi.RegisterOutputType(GetProjectsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectOutput{})
	pulumi.RegisterOutputType(GetProjectsProjectArrayOutput{})
	pulumi.RegisterOutputType(GetProjectsSortOutput{})
	pulumi.RegisterOutputType(GetProjectsSortArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsFilterOutput{})
	pulumi.RegisterOutputType(GetRegionsFilterArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionOutput{})
	pulumi.RegisterOutputType(GetRegionsRegionArrayOutput{})
	pulumi.RegisterOutputType(GetRegionsSortOutput{})
	pulumi.RegisterOutputType(GetRegionsSortArrayOutput{})
	pulumi.RegisterOutputType(GetSizesFilterOutput{})
	pulumi.RegisterOutputType(GetSizesFilterArrayOutput{})
	pulumi.RegisterOutputType(GetSizesSizeOutput{})
	pulumi.RegisterOutputType(GetSizesSizeArrayOutput{})
	pulumi.RegisterOutputType(GetSizesSortOutput{})
	pulumi.RegisterOutputType(GetSizesSortArrayOutput{})
}
