// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information on a DNS record. This data source provides the name, TTL, and zone
// file as configured on your DigitalOcean account. This is useful if the record
// in question is not managed by the provider.
//
// An error is triggered if the provided domain name or record are not managed with
// your DigitalOcean account.
func GetRecord(ctx *pulumi.Context, args *GetRecordArgs, opts ...pulumi.InvokeOption) (*GetRecordResult, error) {
	var rv GetRecordResult
	err := ctx.Invoke("digitalocean:index/getRecord:getRecord", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRecord.
type GetRecordArgs struct {
	// The domain name of the record.
	Domain string `pulumi:"domain"`
	// The name of the record.
	Name string `pulumi:"name"`
}

// A collection of values returned by getRecord.
type GetRecordResult struct {
	Data   string `pulumi:"data"`
	Domain string `pulumi:"domain"`
	Flags  int    `pulumi:"flags"`
	// The provider-assigned unique ID for this managed resource.
	Id       string `pulumi:"id"`
	Name     string `pulumi:"name"`
	Port     int    `pulumi:"port"`
	Priority int    `pulumi:"priority"`
	Tag      string `pulumi:"tag"`
	Ttl      int    `pulumi:"ttl"`
	Type     string `pulumi:"type"`
	Weight   int    `pulumi:"weight"`
}

func GetRecordOutput(ctx *pulumi.Context, args GetRecordOutputArgs, opts ...pulumi.InvokeOption) GetRecordResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRecordResult, error) {
			args := v.(GetRecordArgs)
			r, err := GetRecord(ctx, &args, opts...)
			var s GetRecordResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRecordResultOutput)
}

// A collection of arguments for invoking getRecord.
type GetRecordOutputArgs struct {
	// The domain name of the record.
	Domain pulumi.StringInput `pulumi:"domain"`
	// The name of the record.
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetRecordOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordArgs)(nil)).Elem()
}

// A collection of values returned by getRecord.
type GetRecordResultOutput struct{ *pulumi.OutputState }

func (GetRecordResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRecordResult)(nil)).Elem()
}

func (o GetRecordResultOutput) ToGetRecordResultOutput() GetRecordResultOutput {
	return o
}

func (o GetRecordResultOutput) ToGetRecordResultOutputWithContext(ctx context.Context) GetRecordResultOutput {
	return o
}

func (o GetRecordResultOutput) Data() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordResult) string { return v.Data }).(pulumi.StringOutput)
}

func (o GetRecordResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordResult) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetRecordResultOutput) Flags() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordResult) int { return v.Flags }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRecordResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetRecordResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetRecordResultOutput) Port() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordResult) int { return v.Port }).(pulumi.IntOutput)
}

func (o GetRecordResultOutput) Priority() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordResult) int { return v.Priority }).(pulumi.IntOutput)
}

func (o GetRecordResultOutput) Tag() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordResult) string { return v.Tag }).(pulumi.StringOutput)
}

func (o GetRecordResultOutput) Ttl() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordResult) int { return v.Ttl }).(pulumi.IntOutput)
}

func (o GetRecordResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetRecordResult) string { return v.Type }).(pulumi.StringOutput)
}

func (o GetRecordResultOutput) Weight() pulumi.IntOutput {
	return o.ApplyT(func(v GetRecordResult) int { return v.Weight }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRecordResultOutput{})
}
