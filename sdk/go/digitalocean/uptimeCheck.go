// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a [DigitalOcean Uptime Checks](https://docs.digitalocean.com/reference/api/api-reference/#tag/Uptime)
// resource. Uptime Checks provide the ability to monitor your endpoints from around the world, and alert you when they're slow, unavailable, or SSL certificates are expiring.
//
// ## Import
//
// Uptime checks can be imported using the uptime check's `id`, e.g.
//
// ```sh
//
//	$ pulumi import digitalocean:index/uptimeCheck:UptimeCheck target 5a4981aa-9653-4bd1-bef5-d6bff52042e4
//
// ```
type UptimeCheck struct {
	pulumi.CustomResourceState

	// A boolean value indicating whether the check is enabled/disabled.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// A human-friendly display name for the check.
	Name pulumi.StringOutput `pulumi:"name"`
	// An array containing the selected regions to perform healthchecks from: "usEast", "usWest", "euWest", "seAsia"
	Regions pulumi.StringArrayOutput `pulumi:"regions"`
	// The endpoint to perform healthchecks on.
	Target pulumi.StringOutput `pulumi:"target"`
	// The type of health check to perform: 'ping' 'http' 'https'.
	Type pulumi.StringPtrOutput `pulumi:"type"`
}

// NewUptimeCheck registers a new resource with the given unique name, arguments, and options.
func NewUptimeCheck(ctx *pulumi.Context,
	name string, args *UptimeCheckArgs, opts ...pulumi.ResourceOption) (*UptimeCheck, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Target == nil {
		return nil, errors.New("invalid value for required argument 'Target'")
	}
	var resource UptimeCheck
	err := ctx.RegisterResource("digitalocean:index/uptimeCheck:UptimeCheck", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUptimeCheck gets an existing UptimeCheck resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUptimeCheck(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UptimeCheckState, opts ...pulumi.ResourceOption) (*UptimeCheck, error) {
	var resource UptimeCheck
	err := ctx.ReadResource("digitalocean:index/uptimeCheck:UptimeCheck", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UptimeCheck resources.
type uptimeCheckState struct {
	// A boolean value indicating whether the check is enabled/disabled.
	Enabled *bool `pulumi:"enabled"`
	// A human-friendly display name for the check.
	Name *string `pulumi:"name"`
	// An array containing the selected regions to perform healthchecks from: "usEast", "usWest", "euWest", "seAsia"
	Regions []string `pulumi:"regions"`
	// The endpoint to perform healthchecks on.
	Target *string `pulumi:"target"`
	// The type of health check to perform: 'ping' 'http' 'https'.
	Type *string `pulumi:"type"`
}

type UptimeCheckState struct {
	// A boolean value indicating whether the check is enabled/disabled.
	Enabled pulumi.BoolPtrInput
	// A human-friendly display name for the check.
	Name pulumi.StringPtrInput
	// An array containing the selected regions to perform healthchecks from: "usEast", "usWest", "euWest", "seAsia"
	Regions pulumi.StringArrayInput
	// The endpoint to perform healthchecks on.
	Target pulumi.StringPtrInput
	// The type of health check to perform: 'ping' 'http' 'https'.
	Type pulumi.StringPtrInput
}

func (UptimeCheckState) ElementType() reflect.Type {
	return reflect.TypeOf((*uptimeCheckState)(nil)).Elem()
}

type uptimeCheckArgs struct {
	// A boolean value indicating whether the check is enabled/disabled.
	Enabled *bool `pulumi:"enabled"`
	// A human-friendly display name for the check.
	Name *string `pulumi:"name"`
	// An array containing the selected regions to perform healthchecks from: "usEast", "usWest", "euWest", "seAsia"
	Regions []string `pulumi:"regions"`
	// The endpoint to perform healthchecks on.
	Target string `pulumi:"target"`
	// The type of health check to perform: 'ping' 'http' 'https'.
	Type *string `pulumi:"type"`
}

// The set of arguments for constructing a UptimeCheck resource.
type UptimeCheckArgs struct {
	// A boolean value indicating whether the check is enabled/disabled.
	Enabled pulumi.BoolPtrInput
	// A human-friendly display name for the check.
	Name pulumi.StringPtrInput
	// An array containing the selected regions to perform healthchecks from: "usEast", "usWest", "euWest", "seAsia"
	Regions pulumi.StringArrayInput
	// The endpoint to perform healthchecks on.
	Target pulumi.StringInput
	// The type of health check to perform: 'ping' 'http' 'https'.
	Type pulumi.StringPtrInput
}

func (UptimeCheckArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*uptimeCheckArgs)(nil)).Elem()
}

type UptimeCheckInput interface {
	pulumi.Input

	ToUptimeCheckOutput() UptimeCheckOutput
	ToUptimeCheckOutputWithContext(ctx context.Context) UptimeCheckOutput
}

func (*UptimeCheck) ElementType() reflect.Type {
	return reflect.TypeOf((**UptimeCheck)(nil)).Elem()
}

func (i *UptimeCheck) ToUptimeCheckOutput() UptimeCheckOutput {
	return i.ToUptimeCheckOutputWithContext(context.Background())
}

func (i *UptimeCheck) ToUptimeCheckOutputWithContext(ctx context.Context) UptimeCheckOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeCheckOutput)
}

// UptimeCheckArrayInput is an input type that accepts UptimeCheckArray and UptimeCheckArrayOutput values.
// You can construct a concrete instance of `UptimeCheckArrayInput` via:
//
//	UptimeCheckArray{ UptimeCheckArgs{...} }
type UptimeCheckArrayInput interface {
	pulumi.Input

	ToUptimeCheckArrayOutput() UptimeCheckArrayOutput
	ToUptimeCheckArrayOutputWithContext(context.Context) UptimeCheckArrayOutput
}

type UptimeCheckArray []UptimeCheckInput

func (UptimeCheckArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UptimeCheck)(nil)).Elem()
}

func (i UptimeCheckArray) ToUptimeCheckArrayOutput() UptimeCheckArrayOutput {
	return i.ToUptimeCheckArrayOutputWithContext(context.Background())
}

func (i UptimeCheckArray) ToUptimeCheckArrayOutputWithContext(ctx context.Context) UptimeCheckArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeCheckArrayOutput)
}

// UptimeCheckMapInput is an input type that accepts UptimeCheckMap and UptimeCheckMapOutput values.
// You can construct a concrete instance of `UptimeCheckMapInput` via:
//
//	UptimeCheckMap{ "key": UptimeCheckArgs{...} }
type UptimeCheckMapInput interface {
	pulumi.Input

	ToUptimeCheckMapOutput() UptimeCheckMapOutput
	ToUptimeCheckMapOutputWithContext(context.Context) UptimeCheckMapOutput
}

type UptimeCheckMap map[string]UptimeCheckInput

func (UptimeCheckMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UptimeCheck)(nil)).Elem()
}

func (i UptimeCheckMap) ToUptimeCheckMapOutput() UptimeCheckMapOutput {
	return i.ToUptimeCheckMapOutputWithContext(context.Background())
}

func (i UptimeCheckMap) ToUptimeCheckMapOutputWithContext(ctx context.Context) UptimeCheckMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UptimeCheckMapOutput)
}

type UptimeCheckOutput struct{ *pulumi.OutputState }

func (UptimeCheckOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UptimeCheck)(nil)).Elem()
}

func (o UptimeCheckOutput) ToUptimeCheckOutput() UptimeCheckOutput {
	return o
}

func (o UptimeCheckOutput) ToUptimeCheckOutputWithContext(ctx context.Context) UptimeCheckOutput {
	return o
}

// A boolean value indicating whether the check is enabled/disabled.
func (o UptimeCheckOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// A human-friendly display name for the check.
func (o UptimeCheckOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// An array containing the selected regions to perform healthchecks from: "usEast", "usWest", "euWest", "seAsia"
func (o UptimeCheckOutput) Regions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.StringArrayOutput { return v.Regions }).(pulumi.StringArrayOutput)
}

// The endpoint to perform healthchecks on.
func (o UptimeCheckOutput) Target() pulumi.StringOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.StringOutput { return v.Target }).(pulumi.StringOutput)
}

// The type of health check to perform: 'ping' 'http' 'https'.
func (o UptimeCheckOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *UptimeCheck) pulumi.StringPtrOutput { return v.Type }).(pulumi.StringPtrOutput)
}

type UptimeCheckArrayOutput struct{ *pulumi.OutputState }

func (UptimeCheckArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UptimeCheck)(nil)).Elem()
}

func (o UptimeCheckArrayOutput) ToUptimeCheckArrayOutput() UptimeCheckArrayOutput {
	return o
}

func (o UptimeCheckArrayOutput) ToUptimeCheckArrayOutputWithContext(ctx context.Context) UptimeCheckArrayOutput {
	return o
}

func (o UptimeCheckArrayOutput) Index(i pulumi.IntInput) UptimeCheckOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UptimeCheck {
		return vs[0].([]*UptimeCheck)[vs[1].(int)]
	}).(UptimeCheckOutput)
}

type UptimeCheckMapOutput struct{ *pulumi.OutputState }

func (UptimeCheckMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UptimeCheck)(nil)).Elem()
}

func (o UptimeCheckMapOutput) ToUptimeCheckMapOutput() UptimeCheckMapOutput {
	return o
}

func (o UptimeCheckMapOutput) ToUptimeCheckMapOutputWithContext(ctx context.Context) UptimeCheckMapOutput {
	return o
}

func (o UptimeCheckMapOutput) MapIndex(k pulumi.StringInput) UptimeCheckOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UptimeCheck {
		return vs[0].(map[string]*UptimeCheck)[vs[1].(string)]
	}).(UptimeCheckOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UptimeCheckInput)(nil)).Elem(), &UptimeCheck{})
	pulumi.RegisterInputType(reflect.TypeOf((*UptimeCheckArrayInput)(nil)).Elem(), UptimeCheckArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UptimeCheckMapInput)(nil)).Elem(), UptimeCheckMap{})
	pulumi.RegisterOutputType(UptimeCheckOutput{})
	pulumi.RegisterOutputType(UptimeCheckArrayOutput{})
	pulumi.RegisterOutputType(UptimeCheckMapOutput{})
}
