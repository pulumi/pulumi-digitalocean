// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetTagsTag struct {
	// A count of the database clusters that the tag is applied to.
	DatabasesCount int `pulumi:"databasesCount"`
	// A count of the Droplets the tag is applied to.
	DropletsCount int `pulumi:"dropletsCount"`
	// A count of the images that the tag is applied to.
	ImagesCount int `pulumi:"imagesCount"`
	// The name of the tag.
	Name string `pulumi:"name"`
	// A count of the total number of resources that the tag is applied to.
	TotalResourceCount int `pulumi:"totalResourceCount"`
	// A count of the volume snapshots that the tag is applied to.
	VolumeSnapshotsCount int `pulumi:"volumeSnapshotsCount"`
	// A count of the volumes that the tag is applied to.
	VolumesCount int `pulumi:"volumesCount"`
}

// GetTagsTagInput is an input type that accepts GetTagsTagArgs and GetTagsTagOutput values.
// You can construct a concrete instance of `GetTagsTagInput` via:
//
//	GetTagsTagArgs{...}
type GetTagsTagInput interface {
	pulumi.Input

	ToGetTagsTagOutput() GetTagsTagOutput
	ToGetTagsTagOutputWithContext(context.Context) GetTagsTagOutput
}

type GetTagsTagArgs struct {
	// A count of the database clusters that the tag is applied to.
	DatabasesCount pulumi.IntInput `pulumi:"databasesCount"`
	// A count of the Droplets the tag is applied to.
	DropletsCount pulumi.IntInput `pulumi:"dropletsCount"`
	// A count of the images that the tag is applied to.
	ImagesCount pulumi.IntInput `pulumi:"imagesCount"`
	// The name of the tag.
	Name pulumi.StringInput `pulumi:"name"`
	// A count of the total number of resources that the tag is applied to.
	TotalResourceCount pulumi.IntInput `pulumi:"totalResourceCount"`
	// A count of the volume snapshots that the tag is applied to.
	VolumeSnapshotsCount pulumi.IntInput `pulumi:"volumeSnapshotsCount"`
	// A count of the volumes that the tag is applied to.
	VolumesCount pulumi.IntInput `pulumi:"volumesCount"`
}

func (GetTagsTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArgs) ToGetTagsTagOutput() GetTagsTagOutput {
	return i.ToGetTagsTagOutputWithContext(context.Background())
}

func (i GetTagsTagArgs) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagOutput)
}

// GetTagsTagArrayInput is an input type that accepts GetTagsTagArray and GetTagsTagArrayOutput values.
// You can construct a concrete instance of `GetTagsTagArrayInput` via:
//
//	GetTagsTagArray{ GetTagsTagArgs{...} }
type GetTagsTagArrayInput interface {
	pulumi.Input

	ToGetTagsTagArrayOutput() GetTagsTagArrayOutput
	ToGetTagsTagArrayOutputWithContext(context.Context) GetTagsTagArrayOutput
}

type GetTagsTagArray []GetTagsTagInput

func (GetTagsTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return i.ToGetTagsTagArrayOutputWithContext(context.Background())
}

func (i GetTagsTagArray) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTagsTagArrayOutput)
}

type GetTagsTagOutput struct{ *pulumi.OutputState }

func (GetTagsTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagOutput) ToGetTagsTagOutput() GetTagsTagOutput {
	return o
}

func (o GetTagsTagOutput) ToGetTagsTagOutputWithContext(ctx context.Context) GetTagsTagOutput {
	return o
}

// A count of the database clusters that the tag is applied to.
func (o GetTagsTagOutput) DatabasesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.DatabasesCount }).(pulumi.IntOutput)
}

// A count of the Droplets the tag is applied to.
func (o GetTagsTagOutput) DropletsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.DropletsCount }).(pulumi.IntOutput)
}

// A count of the images that the tag is applied to.
func (o GetTagsTagOutput) ImagesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.ImagesCount }).(pulumi.IntOutput)
}

// The name of the tag.
func (o GetTagsTagOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetTagsTag) string { return v.Name }).(pulumi.StringOutput)
}

// A count of the total number of resources that the tag is applied to.
func (o GetTagsTagOutput) TotalResourceCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.TotalResourceCount }).(pulumi.IntOutput)
}

// A count of the volume snapshots that the tag is applied to.
func (o GetTagsTagOutput) VolumeSnapshotsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.VolumeSnapshotsCount }).(pulumi.IntOutput)
}

// A count of the volumes that the tag is applied to.
func (o GetTagsTagOutput) VolumesCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetTagsTag) int { return v.VolumesCount }).(pulumi.IntOutput)
}

type GetTagsTagArrayOutput struct{ *pulumi.OutputState }

func (GetTagsTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTagsTag)(nil)).Elem()
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutput() GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) ToGetTagsTagArrayOutputWithContext(ctx context.Context) GetTagsTagArrayOutput {
	return o
}

func (o GetTagsTagArrayOutput) Index(i pulumi.IntInput) GetTagsTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTagsTag {
		return vs[0].([]GetTagsTag)[vs[1].(int)]
	}).(GetTagsTagOutput)
}

type GetVpcNatGatewayEgress struct {
	// List of public gateway IPs
	PublicGateways []GetVpcNatGatewayEgressPublicGateway `pulumi:"publicGateways"`
}

// GetVpcNatGatewayEgressInput is an input type that accepts GetVpcNatGatewayEgressArgs and GetVpcNatGatewayEgressOutput values.
// You can construct a concrete instance of `GetVpcNatGatewayEgressInput` via:
//
//	GetVpcNatGatewayEgressArgs{...}
type GetVpcNatGatewayEgressInput interface {
	pulumi.Input

	ToGetVpcNatGatewayEgressOutput() GetVpcNatGatewayEgressOutput
	ToGetVpcNatGatewayEgressOutputWithContext(context.Context) GetVpcNatGatewayEgressOutput
}

type GetVpcNatGatewayEgressArgs struct {
	// List of public gateway IPs
	PublicGateways GetVpcNatGatewayEgressPublicGatewayArrayInput `pulumi:"publicGateways"`
}

func (GetVpcNatGatewayEgressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcNatGatewayEgress)(nil)).Elem()
}

func (i GetVpcNatGatewayEgressArgs) ToGetVpcNatGatewayEgressOutput() GetVpcNatGatewayEgressOutput {
	return i.ToGetVpcNatGatewayEgressOutputWithContext(context.Background())
}

func (i GetVpcNatGatewayEgressArgs) ToGetVpcNatGatewayEgressOutputWithContext(ctx context.Context) GetVpcNatGatewayEgressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcNatGatewayEgressOutput)
}

// GetVpcNatGatewayEgressArrayInput is an input type that accepts GetVpcNatGatewayEgressArray and GetVpcNatGatewayEgressArrayOutput values.
// You can construct a concrete instance of `GetVpcNatGatewayEgressArrayInput` via:
//
//	GetVpcNatGatewayEgressArray{ GetVpcNatGatewayEgressArgs{...} }
type GetVpcNatGatewayEgressArrayInput interface {
	pulumi.Input

	ToGetVpcNatGatewayEgressArrayOutput() GetVpcNatGatewayEgressArrayOutput
	ToGetVpcNatGatewayEgressArrayOutputWithContext(context.Context) GetVpcNatGatewayEgressArrayOutput
}

type GetVpcNatGatewayEgressArray []GetVpcNatGatewayEgressInput

func (GetVpcNatGatewayEgressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcNatGatewayEgress)(nil)).Elem()
}

func (i GetVpcNatGatewayEgressArray) ToGetVpcNatGatewayEgressArrayOutput() GetVpcNatGatewayEgressArrayOutput {
	return i.ToGetVpcNatGatewayEgressArrayOutputWithContext(context.Background())
}

func (i GetVpcNatGatewayEgressArray) ToGetVpcNatGatewayEgressArrayOutputWithContext(ctx context.Context) GetVpcNatGatewayEgressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcNatGatewayEgressArrayOutput)
}

type GetVpcNatGatewayEgressOutput struct{ *pulumi.OutputState }

func (GetVpcNatGatewayEgressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcNatGatewayEgress)(nil)).Elem()
}

func (o GetVpcNatGatewayEgressOutput) ToGetVpcNatGatewayEgressOutput() GetVpcNatGatewayEgressOutput {
	return o
}

func (o GetVpcNatGatewayEgressOutput) ToGetVpcNatGatewayEgressOutputWithContext(ctx context.Context) GetVpcNatGatewayEgressOutput {
	return o
}

// List of public gateway IPs
func (o GetVpcNatGatewayEgressOutput) PublicGateways() GetVpcNatGatewayEgressPublicGatewayArrayOutput {
	return o.ApplyT(func(v GetVpcNatGatewayEgress) []GetVpcNatGatewayEgressPublicGateway { return v.PublicGateways }).(GetVpcNatGatewayEgressPublicGatewayArrayOutput)
}

type GetVpcNatGatewayEgressArrayOutput struct{ *pulumi.OutputState }

func (GetVpcNatGatewayEgressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcNatGatewayEgress)(nil)).Elem()
}

func (o GetVpcNatGatewayEgressArrayOutput) ToGetVpcNatGatewayEgressArrayOutput() GetVpcNatGatewayEgressArrayOutput {
	return o
}

func (o GetVpcNatGatewayEgressArrayOutput) ToGetVpcNatGatewayEgressArrayOutputWithContext(ctx context.Context) GetVpcNatGatewayEgressArrayOutput {
	return o
}

func (o GetVpcNatGatewayEgressArrayOutput) Index(i pulumi.IntInput) GetVpcNatGatewayEgressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcNatGatewayEgress {
		return vs[0].([]GetVpcNatGatewayEgress)[vs[1].(int)]
	}).(GetVpcNatGatewayEgressOutput)
}

type GetVpcNatGatewayEgressPublicGateway struct {
	// IPv4 address
	Ipv4 string `pulumi:"ipv4"`
}

// GetVpcNatGatewayEgressPublicGatewayInput is an input type that accepts GetVpcNatGatewayEgressPublicGatewayArgs and GetVpcNatGatewayEgressPublicGatewayOutput values.
// You can construct a concrete instance of `GetVpcNatGatewayEgressPublicGatewayInput` via:
//
//	GetVpcNatGatewayEgressPublicGatewayArgs{...}
type GetVpcNatGatewayEgressPublicGatewayInput interface {
	pulumi.Input

	ToGetVpcNatGatewayEgressPublicGatewayOutput() GetVpcNatGatewayEgressPublicGatewayOutput
	ToGetVpcNatGatewayEgressPublicGatewayOutputWithContext(context.Context) GetVpcNatGatewayEgressPublicGatewayOutput
}

type GetVpcNatGatewayEgressPublicGatewayArgs struct {
	// IPv4 address
	Ipv4 pulumi.StringInput `pulumi:"ipv4"`
}

func (GetVpcNatGatewayEgressPublicGatewayArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcNatGatewayEgressPublicGateway)(nil)).Elem()
}

func (i GetVpcNatGatewayEgressPublicGatewayArgs) ToGetVpcNatGatewayEgressPublicGatewayOutput() GetVpcNatGatewayEgressPublicGatewayOutput {
	return i.ToGetVpcNatGatewayEgressPublicGatewayOutputWithContext(context.Background())
}

func (i GetVpcNatGatewayEgressPublicGatewayArgs) ToGetVpcNatGatewayEgressPublicGatewayOutputWithContext(ctx context.Context) GetVpcNatGatewayEgressPublicGatewayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcNatGatewayEgressPublicGatewayOutput)
}

// GetVpcNatGatewayEgressPublicGatewayArrayInput is an input type that accepts GetVpcNatGatewayEgressPublicGatewayArray and GetVpcNatGatewayEgressPublicGatewayArrayOutput values.
// You can construct a concrete instance of `GetVpcNatGatewayEgressPublicGatewayArrayInput` via:
//
//	GetVpcNatGatewayEgressPublicGatewayArray{ GetVpcNatGatewayEgressPublicGatewayArgs{...} }
type GetVpcNatGatewayEgressPublicGatewayArrayInput interface {
	pulumi.Input

	ToGetVpcNatGatewayEgressPublicGatewayArrayOutput() GetVpcNatGatewayEgressPublicGatewayArrayOutput
	ToGetVpcNatGatewayEgressPublicGatewayArrayOutputWithContext(context.Context) GetVpcNatGatewayEgressPublicGatewayArrayOutput
}

type GetVpcNatGatewayEgressPublicGatewayArray []GetVpcNatGatewayEgressPublicGatewayInput

func (GetVpcNatGatewayEgressPublicGatewayArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcNatGatewayEgressPublicGateway)(nil)).Elem()
}

func (i GetVpcNatGatewayEgressPublicGatewayArray) ToGetVpcNatGatewayEgressPublicGatewayArrayOutput() GetVpcNatGatewayEgressPublicGatewayArrayOutput {
	return i.ToGetVpcNatGatewayEgressPublicGatewayArrayOutputWithContext(context.Background())
}

func (i GetVpcNatGatewayEgressPublicGatewayArray) ToGetVpcNatGatewayEgressPublicGatewayArrayOutputWithContext(ctx context.Context) GetVpcNatGatewayEgressPublicGatewayArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcNatGatewayEgressPublicGatewayArrayOutput)
}

type GetVpcNatGatewayEgressPublicGatewayOutput struct{ *pulumi.OutputState }

func (GetVpcNatGatewayEgressPublicGatewayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcNatGatewayEgressPublicGateway)(nil)).Elem()
}

func (o GetVpcNatGatewayEgressPublicGatewayOutput) ToGetVpcNatGatewayEgressPublicGatewayOutput() GetVpcNatGatewayEgressPublicGatewayOutput {
	return o
}

func (o GetVpcNatGatewayEgressPublicGatewayOutput) ToGetVpcNatGatewayEgressPublicGatewayOutputWithContext(ctx context.Context) GetVpcNatGatewayEgressPublicGatewayOutput {
	return o
}

// IPv4 address
func (o GetVpcNatGatewayEgressPublicGatewayOutput) Ipv4() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcNatGatewayEgressPublicGateway) string { return v.Ipv4 }).(pulumi.StringOutput)
}

type GetVpcNatGatewayEgressPublicGatewayArrayOutput struct{ *pulumi.OutputState }

func (GetVpcNatGatewayEgressPublicGatewayArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcNatGatewayEgressPublicGateway)(nil)).Elem()
}

func (o GetVpcNatGatewayEgressPublicGatewayArrayOutput) ToGetVpcNatGatewayEgressPublicGatewayArrayOutput() GetVpcNatGatewayEgressPublicGatewayArrayOutput {
	return o
}

func (o GetVpcNatGatewayEgressPublicGatewayArrayOutput) ToGetVpcNatGatewayEgressPublicGatewayArrayOutputWithContext(ctx context.Context) GetVpcNatGatewayEgressPublicGatewayArrayOutput {
	return o
}

func (o GetVpcNatGatewayEgressPublicGatewayArrayOutput) Index(i pulumi.IntInput) GetVpcNatGatewayEgressPublicGatewayOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcNatGatewayEgressPublicGateway {
		return vs[0].([]GetVpcNatGatewayEgressPublicGateway)[vs[1].(int)]
	}).(GetVpcNatGatewayEgressPublicGatewayOutput)
}

type GetVpcNatGatewayVpc struct {
	// Indicates if this is the default VPC NAT Gateway in the VPC
	DefaultGateway bool `pulumi:"defaultGateway"`
	// Gateway IP of the VPC NAT Gateway
	GatewayIp string `pulumi:"gatewayIp"`
	// ID of the ingress VPC
	VpcUuid string `pulumi:"vpcUuid"`
}

// GetVpcNatGatewayVpcInput is an input type that accepts GetVpcNatGatewayVpcArgs and GetVpcNatGatewayVpcOutput values.
// You can construct a concrete instance of `GetVpcNatGatewayVpcInput` via:
//
//	GetVpcNatGatewayVpcArgs{...}
type GetVpcNatGatewayVpcInput interface {
	pulumi.Input

	ToGetVpcNatGatewayVpcOutput() GetVpcNatGatewayVpcOutput
	ToGetVpcNatGatewayVpcOutputWithContext(context.Context) GetVpcNatGatewayVpcOutput
}

type GetVpcNatGatewayVpcArgs struct {
	// Indicates if this is the default VPC NAT Gateway in the VPC
	DefaultGateway pulumi.BoolInput `pulumi:"defaultGateway"`
	// Gateway IP of the VPC NAT Gateway
	GatewayIp pulumi.StringInput `pulumi:"gatewayIp"`
	// ID of the ingress VPC
	VpcUuid pulumi.StringInput `pulumi:"vpcUuid"`
}

func (GetVpcNatGatewayVpcArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcNatGatewayVpc)(nil)).Elem()
}

func (i GetVpcNatGatewayVpcArgs) ToGetVpcNatGatewayVpcOutput() GetVpcNatGatewayVpcOutput {
	return i.ToGetVpcNatGatewayVpcOutputWithContext(context.Background())
}

func (i GetVpcNatGatewayVpcArgs) ToGetVpcNatGatewayVpcOutputWithContext(ctx context.Context) GetVpcNatGatewayVpcOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcNatGatewayVpcOutput)
}

// GetVpcNatGatewayVpcArrayInput is an input type that accepts GetVpcNatGatewayVpcArray and GetVpcNatGatewayVpcArrayOutput values.
// You can construct a concrete instance of `GetVpcNatGatewayVpcArrayInput` via:
//
//	GetVpcNatGatewayVpcArray{ GetVpcNatGatewayVpcArgs{...} }
type GetVpcNatGatewayVpcArrayInput interface {
	pulumi.Input

	ToGetVpcNatGatewayVpcArrayOutput() GetVpcNatGatewayVpcArrayOutput
	ToGetVpcNatGatewayVpcArrayOutputWithContext(context.Context) GetVpcNatGatewayVpcArrayOutput
}

type GetVpcNatGatewayVpcArray []GetVpcNatGatewayVpcInput

func (GetVpcNatGatewayVpcArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcNatGatewayVpc)(nil)).Elem()
}

func (i GetVpcNatGatewayVpcArray) ToGetVpcNatGatewayVpcArrayOutput() GetVpcNatGatewayVpcArrayOutput {
	return i.ToGetVpcNatGatewayVpcArrayOutputWithContext(context.Background())
}

func (i GetVpcNatGatewayVpcArray) ToGetVpcNatGatewayVpcArrayOutputWithContext(ctx context.Context) GetVpcNatGatewayVpcArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetVpcNatGatewayVpcArrayOutput)
}

type GetVpcNatGatewayVpcOutput struct{ *pulumi.OutputState }

func (GetVpcNatGatewayVpcOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetVpcNatGatewayVpc)(nil)).Elem()
}

func (o GetVpcNatGatewayVpcOutput) ToGetVpcNatGatewayVpcOutput() GetVpcNatGatewayVpcOutput {
	return o
}

func (o GetVpcNatGatewayVpcOutput) ToGetVpcNatGatewayVpcOutputWithContext(ctx context.Context) GetVpcNatGatewayVpcOutput {
	return o
}

// Indicates if this is the default VPC NAT Gateway in the VPC
func (o GetVpcNatGatewayVpcOutput) DefaultGateway() pulumi.BoolOutput {
	return o.ApplyT(func(v GetVpcNatGatewayVpc) bool { return v.DefaultGateway }).(pulumi.BoolOutput)
}

// Gateway IP of the VPC NAT Gateway
func (o GetVpcNatGatewayVpcOutput) GatewayIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcNatGatewayVpc) string { return v.GatewayIp }).(pulumi.StringOutput)
}

// ID of the ingress VPC
func (o GetVpcNatGatewayVpcOutput) VpcUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetVpcNatGatewayVpc) string { return v.VpcUuid }).(pulumi.StringOutput)
}

type GetVpcNatGatewayVpcArrayOutput struct{ *pulumi.OutputState }

func (GetVpcNatGatewayVpcArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetVpcNatGatewayVpc)(nil)).Elem()
}

func (o GetVpcNatGatewayVpcArrayOutput) ToGetVpcNatGatewayVpcArrayOutput() GetVpcNatGatewayVpcArrayOutput {
	return o
}

func (o GetVpcNatGatewayVpcArrayOutput) ToGetVpcNatGatewayVpcArrayOutputWithContext(ctx context.Context) GetVpcNatGatewayVpcArrayOutput {
	return o
}

func (o GetVpcNatGatewayVpcArrayOutput) Index(i pulumi.IntInput) GetVpcNatGatewayVpcOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetVpcNatGatewayVpc {
		return vs[0].([]GetVpcNatGatewayVpc)[vs[1].(int)]
	}).(GetVpcNatGatewayVpcOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagInput)(nil)).Elem(), GetTagsTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTagsTagArrayInput)(nil)).Elem(), GetTagsTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcNatGatewayEgressInput)(nil)).Elem(), GetVpcNatGatewayEgressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcNatGatewayEgressArrayInput)(nil)).Elem(), GetVpcNatGatewayEgressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcNatGatewayEgressPublicGatewayInput)(nil)).Elem(), GetVpcNatGatewayEgressPublicGatewayArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcNatGatewayEgressPublicGatewayArrayInput)(nil)).Elem(), GetVpcNatGatewayEgressPublicGatewayArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcNatGatewayVpcInput)(nil)).Elem(), GetVpcNatGatewayVpcArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetVpcNatGatewayVpcArrayInput)(nil)).Elem(), GetVpcNatGatewayVpcArray{})
	pulumi.RegisterOutputType(GetTagsTagOutput{})
	pulumi.RegisterOutputType(GetTagsTagArrayOutput{})
	pulumi.RegisterOutputType(GetVpcNatGatewayEgressOutput{})
	pulumi.RegisterOutputType(GetVpcNatGatewayEgressArrayOutput{})
	pulumi.RegisterOutputType(GetVpcNatGatewayEgressPublicGatewayOutput{})
	pulumi.RegisterOutputType(GetVpcNatGatewayEgressPublicGatewayArrayOutput{})
	pulumi.RegisterOutputType(GetVpcNatGatewayVpcOutput{})
	pulumi.RegisterOutputType(GetVpcNatGatewayVpcArrayOutput{})
}
