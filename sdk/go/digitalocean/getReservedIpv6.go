// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupReservedIpv6(ctx *pulumi.Context, args *LookupReservedIpv6Args, opts ...pulumi.InvokeOption) (*LookupReservedIpv6Result, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupReservedIpv6Result
	err := ctx.Invoke("digitalocean:index/getReservedIpv6:getReservedIpv6", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReservedIpv6.
type LookupReservedIpv6Args struct {
	Ip string `pulumi:"ip"`
}

// A collection of values returned by getReservedIpv6.
type LookupReservedIpv6Result struct {
	DropletId int `pulumi:"dropletId"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	Ip         string `pulumi:"ip"`
	RegionSlug string `pulumi:"regionSlug"`
	Urn        string `pulumi:"urn"`
}

func LookupReservedIpv6Output(ctx *pulumi.Context, args LookupReservedIpv6OutputArgs, opts ...pulumi.InvokeOption) LookupReservedIpv6ResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupReservedIpv6ResultOutput, error) {
			args := v.(LookupReservedIpv6Args)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv LookupReservedIpv6Result
			secret, err := ctx.InvokePackageRaw("digitalocean:index/getReservedIpv6:getReservedIpv6", args, &rv, "", opts...)
			if err != nil {
				return LookupReservedIpv6ResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(LookupReservedIpv6ResultOutput)
			if secret {
				return pulumi.ToSecret(output).(LookupReservedIpv6ResultOutput), nil
			}
			return output, nil
		}).(LookupReservedIpv6ResultOutput)
}

// A collection of arguments for invoking getReservedIpv6.
type LookupReservedIpv6OutputArgs struct {
	Ip pulumi.StringInput `pulumi:"ip"`
}

func (LookupReservedIpv6OutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservedIpv6Args)(nil)).Elem()
}

// A collection of values returned by getReservedIpv6.
type LookupReservedIpv6ResultOutput struct{ *pulumi.OutputState }

func (LookupReservedIpv6ResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupReservedIpv6Result)(nil)).Elem()
}

func (o LookupReservedIpv6ResultOutput) ToLookupReservedIpv6ResultOutput() LookupReservedIpv6ResultOutput {
	return o
}

func (o LookupReservedIpv6ResultOutput) ToLookupReservedIpv6ResultOutputWithContext(ctx context.Context) LookupReservedIpv6ResultOutput {
	return o
}

func (o LookupReservedIpv6ResultOutput) DropletId() pulumi.IntOutput {
	return o.ApplyT(func(v LookupReservedIpv6Result) int { return v.DropletId }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupReservedIpv6ResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservedIpv6Result) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupReservedIpv6ResultOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservedIpv6Result) string { return v.Ip }).(pulumi.StringOutput)
}

func (o LookupReservedIpv6ResultOutput) RegionSlug() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservedIpv6Result) string { return v.RegionSlug }).(pulumi.StringOutput)
}

func (o LookupReservedIpv6ResultOutput) Urn() pulumi.StringOutput {
	return o.ApplyT(func(v LookupReservedIpv6Result) string { return v.Urn }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupReservedIpv6ResultOutput{})
}
