// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetGenaiAgentsByOpenaiApiKey(ctx *pulumi.Context, args *GetGenaiAgentsByOpenaiApiKeyArgs, opts ...pulumi.InvokeOption) (*GetGenaiAgentsByOpenaiApiKeyResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetGenaiAgentsByOpenaiApiKeyResult
	err := ctx.Invoke("digitalocean:index/getGenaiAgentsByOpenaiApiKey:getGenaiAgentsByOpenaiApiKey", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGenaiAgentsByOpenaiApiKey.
type GetGenaiAgentsByOpenaiApiKeyArgs struct {
	Uuid string `pulumi:"uuid"`
}

// A collection of values returned by getGenaiAgentsByOpenaiApiKey.
type GetGenaiAgentsByOpenaiApiKeyResult struct {
	Agents []GetGenaiAgentsByOpenaiApiKeyAgent `pulumi:"agents"`
	// The provider-assigned unique ID for this managed resource.
	Id   string `pulumi:"id"`
	Uuid string `pulumi:"uuid"`
}

func GetGenaiAgentsByOpenaiApiKeyOutput(ctx *pulumi.Context, args GetGenaiAgentsByOpenaiApiKeyOutputArgs, opts ...pulumi.InvokeOption) GetGenaiAgentsByOpenaiApiKeyResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetGenaiAgentsByOpenaiApiKeyResultOutput, error) {
			args := v.(GetGenaiAgentsByOpenaiApiKeyArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("digitalocean:index/getGenaiAgentsByOpenaiApiKey:getGenaiAgentsByOpenaiApiKey", args, GetGenaiAgentsByOpenaiApiKeyResultOutput{}, options).(GetGenaiAgentsByOpenaiApiKeyResultOutput), nil
		}).(GetGenaiAgentsByOpenaiApiKeyResultOutput)
}

// A collection of arguments for invoking getGenaiAgentsByOpenaiApiKey.
type GetGenaiAgentsByOpenaiApiKeyOutputArgs struct {
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetGenaiAgentsByOpenaiApiKeyOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGenaiAgentsByOpenaiApiKeyArgs)(nil)).Elem()
}

// A collection of values returned by getGenaiAgentsByOpenaiApiKey.
type GetGenaiAgentsByOpenaiApiKeyResultOutput struct{ *pulumi.OutputState }

func (GetGenaiAgentsByOpenaiApiKeyResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetGenaiAgentsByOpenaiApiKeyResult)(nil)).Elem()
}

func (o GetGenaiAgentsByOpenaiApiKeyResultOutput) ToGetGenaiAgentsByOpenaiApiKeyResultOutput() GetGenaiAgentsByOpenaiApiKeyResultOutput {
	return o
}

func (o GetGenaiAgentsByOpenaiApiKeyResultOutput) ToGetGenaiAgentsByOpenaiApiKeyResultOutputWithContext(ctx context.Context) GetGenaiAgentsByOpenaiApiKeyResultOutput {
	return o
}

func (o GetGenaiAgentsByOpenaiApiKeyResultOutput) Agents() GetGenaiAgentsByOpenaiApiKeyAgentArrayOutput {
	return o.ApplyT(func(v GetGenaiAgentsByOpenaiApiKeyResult) []GetGenaiAgentsByOpenaiApiKeyAgent { return v.Agents }).(GetGenaiAgentsByOpenaiApiKeyAgentArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetGenaiAgentsByOpenaiApiKeyResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenaiAgentsByOpenaiApiKeyResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetGenaiAgentsByOpenaiApiKeyResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetGenaiAgentsByOpenaiApiKeyResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetGenaiAgentsByOpenaiApiKeyResultOutput{})
}
