// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a DigitalOcean Cloud Firewall resource. This can be used to create,
// modify, and delete Firewalls.
type Firewall struct {
	s *pulumi.ResourceState
}

// NewFirewall registers a new resource with the given unique name, arguments, and options.
func NewFirewall(ctx *pulumi.Context,
	name string, args *FirewallArgs, opts ...pulumi.ResourceOpt) (*Firewall, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["dropletIds"] = nil
		inputs["inboundRules"] = nil
		inputs["name"] = nil
		inputs["outboundRules"] = nil
		inputs["tags"] = nil
	} else {
		inputs["dropletIds"] = args.DropletIds
		inputs["inboundRules"] = args.InboundRules
		inputs["name"] = args.Name
		inputs["outboundRules"] = args.OutboundRules
		inputs["tags"] = args.Tags
	}
	inputs["createdAt"] = nil
	inputs["pendingChanges"] = nil
	inputs["status"] = nil
	s, err := ctx.RegisterResource("digitalocean:index/firewall:Firewall", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Firewall{s: s}, nil
}

// GetFirewall gets an existing Firewall resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetFirewall(ctx *pulumi.Context,
	name string, id pulumi.ID, state *FirewallState, opts ...pulumi.ResourceOpt) (*Firewall, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["createdAt"] = state.CreatedAt
		inputs["dropletIds"] = state.DropletIds
		inputs["inboundRules"] = state.InboundRules
		inputs["name"] = state.Name
		inputs["outboundRules"] = state.OutboundRules
		inputs["pendingChanges"] = state.PendingChanges
		inputs["status"] = state.Status
		inputs["tags"] = state.Tags
	}
	s, err := ctx.ReadResource("digitalocean:index/firewall:Firewall", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Firewall{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Firewall) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Firewall) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// A time value given in ISO8601 combined date and time format
// that represents when the Firewall was created.
func (r *Firewall) CreatedAt() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["createdAt"])
}

// The list of the IDs of the Droplets assigned
// to the Firewall.
func (r *Firewall) DropletIds() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["dropletIds"])
}

// The inbound access rule block for the Firewall.
// The `inbound_rule` block is documented below.
func (r *Firewall) InboundRules() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["inboundRules"])
}

// The Firewall name
func (r *Firewall) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// The outbound access rule block for the Firewall.
// The `outbound_rule` block is documented below.
func (r *Firewall) OutboundRules() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["outboundRules"])
}

// An list of object containing the fields, "droplet_id",
// "removing", and "status".  It is provided to detail exactly which Droplets
// are having their security policies updated.  When empty, all changes
// have been successfully applied.
func (r *Firewall) PendingChanges() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["pendingChanges"])
}

// A status string indicating the current state of the Firewall.
// This can be "waiting", "succeeded", or "failed".
func (r *Firewall) Status() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["status"])
}

// The names of the Tags assigned to the Firewall.
func (r *Firewall) Tags() *pulumi.ArrayOutput {
	return (*pulumi.ArrayOutput)(r.s.State["tags"])
}

// Input properties used for looking up and filtering Firewall resources.
type FirewallState struct {
	// A time value given in ISO8601 combined date and time format
	// that represents when the Firewall was created.
	CreatedAt interface{}
	// The list of the IDs of the Droplets assigned
	// to the Firewall.
	DropletIds interface{}
	// The inbound access rule block for the Firewall.
	// The `inbound_rule` block is documented below.
	InboundRules interface{}
	// The Firewall name
	Name interface{}
	// The outbound access rule block for the Firewall.
	// The `outbound_rule` block is documented below.
	OutboundRules interface{}
	// An list of object containing the fields, "droplet_id",
	// "removing", and "status".  It is provided to detail exactly which Droplets
	// are having their security policies updated.  When empty, all changes
	// have been successfully applied.
	PendingChanges interface{}
	// A status string indicating the current state of the Firewall.
	// This can be "waiting", "succeeded", or "failed".
	Status interface{}
	// The names of the Tags assigned to the Firewall.
	Tags interface{}
}

// The set of arguments for constructing a Firewall resource.
type FirewallArgs struct {
	// The list of the IDs of the Droplets assigned
	// to the Firewall.
	DropletIds interface{}
	// The inbound access rule block for the Firewall.
	// The `inbound_rule` block is documented below.
	InboundRules interface{}
	// The Firewall name
	Name interface{}
	// The outbound access rule block for the Firewall.
	// The `outbound_rule` block is documented below.
	OutboundRules interface{}
	// The names of the Tags assigned to the Firewall.
	Tags interface{}
}
