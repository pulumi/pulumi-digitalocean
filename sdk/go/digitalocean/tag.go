// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// Provides a DigitalOcean Tag resource. A Tag is a label that can be applied to a
// Droplet resource in order to better organize or facilitate the lookups and
// actions on it. Tags created with this resource can be referenced in your Droplet
// configuration via their ID or name.
//
// > This content is derived from https://github.com/terraform-providers/terraform-provider-digitalocean/blob/master/website/docs/r/tag.html.markdown.
type Tag struct {
	s *pulumi.ResourceState
}

// NewTag registers a new resource with the given unique name, arguments, and options.
func NewTag(ctx *pulumi.Context,
	name string, args *TagArgs, opts ...pulumi.ResourceOpt) (*Tag, error) {
	inputs := make(map[string]interface{})
	if args == nil {
		inputs["name"] = nil
	} else {
		inputs["name"] = args.Name
	}
	s, err := ctx.RegisterResource("digitalocean:index/tag:Tag", name, true, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Tag{s: s}, nil
}

// GetTag gets an existing Tag resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetTag(ctx *pulumi.Context,
	name string, id pulumi.ID, state *TagState, opts ...pulumi.ResourceOpt) (*Tag, error) {
	inputs := make(map[string]interface{})
	if state != nil {
		inputs["name"] = state.Name
	}
	s, err := ctx.ReadResource("digitalocean:index/tag:Tag", name, id, inputs, opts...)
	if err != nil {
		return nil, err
	}
	return &Tag{s: s}, nil
}

// URN is this resource's unique name assigned by Pulumi.
func (r *Tag) URN() *pulumi.URNOutput {
	return r.s.URN()
}

// ID is this resource's unique identifier assigned by its provider.
func (r *Tag) ID() *pulumi.IDOutput {
	return r.s.ID()
}

// The name of the tag
func (r *Tag) Name() *pulumi.StringOutput {
	return (*pulumi.StringOutput)(r.s.State["name"])
}

// Input properties used for looking up and filtering Tag resources.
type TagState struct {
	// The name of the tag
	Name interface{}
}

// The set of arguments for constructing a Tag resource.
type TagArgs struct {
	// The name of the tag
	Name interface{}
}
