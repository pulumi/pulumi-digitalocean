// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides a virtual resource that can be used to change advanced configuration
// options for a DigitalOcean managed Opensearch database cluster.
//
// > **Note** Opensearch configurations are only removed from state when destroyed. The remote configuration is not unset.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleDatabaseCluster, err := digitalocean.NewDatabaseCluster(ctx, "example", &digitalocean.DatabaseClusterArgs{
//				Name:      pulumi.String("example-opensearch-cluster"),
//				Engine:    pulumi.String("opensearch"),
//				Version:   pulumi.String("2"),
//				Size:      pulumi.String(digitalocean.DatabaseSlug_DB_1VPCU2GB),
//				Region:    pulumi.String(digitalocean.RegionNYC3),
//				NodeCount: pulumi.Int(1),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = digitalocean.NewDatabaseOpensearchConfig(ctx, "example", &digitalocean.DatabaseOpensearchConfigArgs{
//				ClusterId:                                        exampleDatabaseCluster.ID(),
//				IsmEnabled:                                       pulumi.Bool(true),
//				IsmHistoryEnabled:                                pulumi.Bool(true),
//				IsmHistoryMaxAgeHours:                            pulumi.Int(24),
//				IsmHistoryMaxDocs:                                pulumi.Int(2500000),
//				IsmHistoryRolloverCheckPeriodHours:               pulumi.Int(8),
//				IsmHistoryRolloverRetentionPeriodDays:            pulumi.Int(30),
//				HttpMaxContentLengthBytes:                        pulumi.Int(100000000),
//				HttpMaxHeaderSizeBytes:                           pulumi.Int(8192),
//				HttpMaxInitialLineLengthBytes:                    pulumi.Int(4096),
//				IndicesQueryBoolMaxClauseCount:                   pulumi.Int(1024),
//				SearchMaxBuckets:                                 pulumi.Int(10000),
//				IndicesFielddataCacheSizePercentage:              pulumi.Int(3),
//				IndicesMemoryIndexBufferSizePercentage:           pulumi.Int(10),
//				IndicesMemoryMinIndexBufferSizeMb:                pulumi.Int(48),
//				IndicesMemoryMaxIndexBufferSizeMb:                pulumi.Int(3),
//				IndicesQueriesCacheSizePercentage:                pulumi.Int(10),
//				IndicesRecoveryMaxMbPerSec:                       pulumi.Int(40),
//				IndicesRecoveryMaxConcurrentFileChunks:           pulumi.Int(2),
//				ActionAutoCreateIndexEnabled:                     pulumi.Bool(true),
//				ActionDestructiveRequiresName:                    pulumi.Bool(false),
//				EnableSecurityAudit:                              pulumi.Bool(false),
//				ThreadPoolSearchSize:                             pulumi.Int(1),
//				ThreadPoolSearchThrottledSize:                    pulumi.Int(1),
//				ThreadPoolSearchThrottledQueueSize:               pulumi.Int(10),
//				ThreadPoolSearchQueueSize:                        pulumi.Int(10),
//				ThreadPoolGetSize:                                pulumi.Int(1),
//				ThreadPoolGetQueueSize:                           pulumi.Int(10),
//				ThreadPoolAnalyzeSize:                            pulumi.Int(1),
//				ThreadPoolAnalyzeQueueSize:                       pulumi.Int(10),
//				ThreadPoolWriteSize:                              pulumi.Int(1),
//				ThreadPoolWriteQueueSize:                         pulumi.Int(10),
//				ThreadPoolForceMergeSize:                         pulumi.Int(1),
//				OverrideMainResponseVersion:                      pulumi.Bool(false),
//				ScriptMaxCompilationsRate:                        pulumi.String("use-context"),
//				ClusterMaxShardsPerNode:                          pulumi.Int(100),
//				ClusterRoutingAllocationNodeConcurrentRecoveries: pulumi.Int(2),
//				PluginsAlertingFilterByBackendRolesEnabled:       pulumi.Bool(false),
//				ReindexRemoteWhitelists: pulumi.StringArray{
//					pulumi.String("cloud.digitalocean.com:8080"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// A Opensearch database cluster's configuration can be imported using the `id` the parent cluster, e.g.
//
// ```sh
// $ pulumi import digitalocean:index/databaseOpensearchConfig:DatabaseOpensearchConfig example 4b62829a-9c42-465b-aaa3-84051048e712
// ```
type DatabaseOpensearchConfig struct {
	pulumi.CustomResourceState

	// Specifices whether to allow automatic creation of indices. Default: `true`
	ActionAutoCreateIndexEnabled pulumi.BoolOutput `pulumi:"actionAutoCreateIndexEnabled"`
	// Specifies whether to require explicit index names when deleting indices.
	ActionDestructiveRequiresName pulumi.BoolOutput `pulumi:"actionDestructiveRequiresName"`
	// The ID of the target Opensearch cluster.
	ClusterId pulumi.StringOutput `pulumi:"clusterId"`
	// Maximum number of shards allowed per data node.
	ClusterMaxShardsPerNode pulumi.IntOutput `pulumi:"clusterMaxShardsPerNode"`
	// Maximum concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen per node. Default: `2`
	ClusterRoutingAllocationNodeConcurrentRecoveries pulumi.IntOutput `pulumi:"clusterRoutingAllocationNodeConcurrentRecoveries"`
	// Specifies whether to allow security audit logging. Default: `false`
	EnableSecurityAudit pulumi.BoolOutput `pulumi:"enableSecurityAudit"`
	// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes. Default: `100000000`
	HttpMaxContentLengthBytes pulumi.IntOutput `pulumi:"httpMaxContentLengthBytes"`
	// Maximum size of allowed headers, in bytes. Default: `8192`
	HttpMaxHeaderSizeBytes pulumi.IntOutput `pulumi:"httpMaxHeaderSizeBytes"`
	// Maximum length of an HTTP URL, in bytes. Default: `4096`
	HttpMaxInitialLineLengthBytes pulumi.IntOutput `pulumi:"httpMaxInitialLineLengthBytes"`
	// Maximum amount of heap memory used for field data cache, expressed as a percentage. Decreasing the value too much will increase overhead of loading field data. Increasing the value too much will decrease amount of heap available for other operations.
	IndicesFielddataCacheSizePercentage pulumi.IntOutput `pulumi:"indicesFielddataCacheSizePercentage"`
	// Total amount of heap used for indexing buffer before writing segments to disk, expressed as a percentage. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance. Default: `10`
	IndicesMemoryIndexBufferSizePercentage pulumi.IntOutput `pulumi:"indicesMemoryIndexBufferSizePercentage"`
	// Maximum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. The default is unbounded.
	IndicesMemoryMaxIndexBufferSizeMb pulumi.IntOutput `pulumi:"indicesMemoryMaxIndexBufferSizeMb"`
	// Minimum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. Default: `48`
	IndicesMemoryMinIndexBufferSizeMb pulumi.IntOutput `pulumi:"indicesMemoryMinIndexBufferSizeMb"`
	// Maximum amount of heap used for query cache. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other functionality. Default: `10`
	IndicesQueriesCacheSizePercentage pulumi.IntOutput `pulumi:"indicesQueriesCacheSizePercentage"`
	// Maximum number of clauses Lucene BooleanQuery can have. Only increase it if necessary, as it may cause performance issues. Default: `1024`
	IndicesQueryBoolMaxClauseCount pulumi.IntOutput `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Maximum number of file chunks sent in parallel for each recovery. Default: `2`
	IndicesRecoveryMaxConcurrentFileChunks pulumi.IntOutput `pulumi:"indicesRecoveryMaxConcurrentFileChunks"`
	// Limits total inbound and outbound recovery traffic for each node, expressed in mb per second. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Default: `40`
	IndicesRecoveryMaxMbPerSec pulumi.IntOutput `pulumi:"indicesRecoveryMaxMbPerSec"`
	// Specifies whether ISM is enabled or not. Default: `true`
	IsmEnabled pulumi.BoolOutput `pulumi:"ismEnabled"`
	// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. Default: `true`
	IsmHistoryEnabled pulumi.BoolOutput `pulumi:"ismHistoryEnabled"`
	// Maximum age before rolling over the audit history index, in hours. Default: `24`
	IsmHistoryMaxAgeHours pulumi.IntOutput `pulumi:"ismHistoryMaxAgeHours"`
	// Maximum number of documents before rolling over the audit history index. Default: `2500000`
	IsmHistoryMaxDocs pulumi.IntOutput `pulumi:"ismHistoryMaxDocs"`
	// The time between rollover checks for the audit history index, in hours. Default: `8`
	IsmHistoryRolloverCheckPeriodHours pulumi.IntOutput `pulumi:"ismHistoryRolloverCheckPeriodHours"`
	// Length of time long audit history indices are kept, in days. Default: `30`
	IsmHistoryRolloverRetentionPeriodDays pulumi.IntOutput `pulumi:"ismHistoryRolloverRetentionPeriodDays"`
	// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default: `false`
	OverrideMainResponseVersion pulumi.BoolOutput `pulumi:"overrideMainResponseVersion"`
	// Enable or disable filtering of alerting by backend roles. Default: `false`
	PluginsAlertingFilterByBackendRolesEnabled pulumi.BoolOutput `pulumi:"pluginsAlertingFilterByBackendRolesEnabled"`
	// Allowlist of remote IP addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
	ReindexRemoteWhitelists pulumi.StringArrayOutput `pulumi:"reindexRemoteWhitelists"`
	// Limits the number of inline script compilations within a period of time. Default is `use-context`
	ScriptMaxCompilationsRate pulumi.StringOutput `pulumi:"scriptMaxCompilationsRate"`
	// Maximum number of aggregation buckets allowed in a single response. Default: `10000`
	SearchMaxBuckets pulumi.IntOutput `pulumi:"searchMaxBuckets"`
	// Size of queue for operations in the analyze thread pool.
	ThreadPoolAnalyzeQueueSize pulumi.IntOutput `pulumi:"threadPoolAnalyzeQueueSize"`
	// Number of workers in the analyze operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize pulumi.IntOutput `pulumi:"threadPoolAnalyzeSize"`
	// Number of workers in the force merge operation thread pool. This pool is used for forcing a merge between shards of one or more indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize pulumi.IntOutput `pulumi:"threadPoolForceMergeSize"`
	// Size of queue for operations in the get thread pool.
	ThreadPoolGetQueueSize pulumi.IntOutput `pulumi:"threadPoolGetQueueSize"`
	// Number of workers in the get operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize pulumi.IntOutput `pulumi:"threadPoolGetSize"`
	// Size of queue for operations in the search thread pool.
	ThreadPoolSearchQueueSize pulumi.IntOutput `pulumi:"threadPoolSearchQueueSize"`
	// Number of workers in the search operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize pulumi.IntOutput `pulumi:"threadPoolSearchSize"`
	// Size of queue for operations in the search throttled thread pool.
	ThreadPoolSearchThrottledQueueSize pulumi.IntOutput `pulumi:"threadPoolSearchThrottledQueueSize"`
	// Number of workers in the search throttled operation thread pool. This pool is used for searching frozen indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize pulumi.IntOutput `pulumi:"threadPoolSearchThrottledSize"`
	// Size of queue for operations in the write thread pool.
	ThreadPoolWriteQueueSize pulumi.IntOutput `pulumi:"threadPoolWriteQueueSize"`
	// Number of workers in the write operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize pulumi.IntOutput `pulumi:"threadPoolWriteSize"`
}

// NewDatabaseOpensearchConfig registers a new resource with the given unique name, arguments, and options.
func NewDatabaseOpensearchConfig(ctx *pulumi.Context,
	name string, args *DatabaseOpensearchConfigArgs, opts ...pulumi.ResourceOption) (*DatabaseOpensearchConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ClusterId == nil {
		return nil, errors.New("invalid value for required argument 'ClusterId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DatabaseOpensearchConfig
	err := ctx.RegisterResource("digitalocean:index/databaseOpensearchConfig:DatabaseOpensearchConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDatabaseOpensearchConfig gets an existing DatabaseOpensearchConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDatabaseOpensearchConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DatabaseOpensearchConfigState, opts ...pulumi.ResourceOption) (*DatabaseOpensearchConfig, error) {
	var resource DatabaseOpensearchConfig
	err := ctx.ReadResource("digitalocean:index/databaseOpensearchConfig:DatabaseOpensearchConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DatabaseOpensearchConfig resources.
type databaseOpensearchConfigState struct {
	// Specifices whether to allow automatic creation of indices. Default: `true`
	ActionAutoCreateIndexEnabled *bool `pulumi:"actionAutoCreateIndexEnabled"`
	// Specifies whether to require explicit index names when deleting indices.
	ActionDestructiveRequiresName *bool `pulumi:"actionDestructiveRequiresName"`
	// The ID of the target Opensearch cluster.
	ClusterId *string `pulumi:"clusterId"`
	// Maximum number of shards allowed per data node.
	ClusterMaxShardsPerNode *int `pulumi:"clusterMaxShardsPerNode"`
	// Maximum concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen per node. Default: `2`
	ClusterRoutingAllocationNodeConcurrentRecoveries *int `pulumi:"clusterRoutingAllocationNodeConcurrentRecoveries"`
	// Specifies whether to allow security audit logging. Default: `false`
	EnableSecurityAudit *bool `pulumi:"enableSecurityAudit"`
	// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes. Default: `100000000`
	HttpMaxContentLengthBytes *int `pulumi:"httpMaxContentLengthBytes"`
	// Maximum size of allowed headers, in bytes. Default: `8192`
	HttpMaxHeaderSizeBytes *int `pulumi:"httpMaxHeaderSizeBytes"`
	// Maximum length of an HTTP URL, in bytes. Default: `4096`
	HttpMaxInitialLineLengthBytes *int `pulumi:"httpMaxInitialLineLengthBytes"`
	// Maximum amount of heap memory used for field data cache, expressed as a percentage. Decreasing the value too much will increase overhead of loading field data. Increasing the value too much will decrease amount of heap available for other operations.
	IndicesFielddataCacheSizePercentage *int `pulumi:"indicesFielddataCacheSizePercentage"`
	// Total amount of heap used for indexing buffer before writing segments to disk, expressed as a percentage. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance. Default: `10`
	IndicesMemoryIndexBufferSizePercentage *int `pulumi:"indicesMemoryIndexBufferSizePercentage"`
	// Maximum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. The default is unbounded.
	IndicesMemoryMaxIndexBufferSizeMb *int `pulumi:"indicesMemoryMaxIndexBufferSizeMb"`
	// Minimum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. Default: `48`
	IndicesMemoryMinIndexBufferSizeMb *int `pulumi:"indicesMemoryMinIndexBufferSizeMb"`
	// Maximum amount of heap used for query cache. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other functionality. Default: `10`
	IndicesQueriesCacheSizePercentage *int `pulumi:"indicesQueriesCacheSizePercentage"`
	// Maximum number of clauses Lucene BooleanQuery can have. Only increase it if necessary, as it may cause performance issues. Default: `1024`
	IndicesQueryBoolMaxClauseCount *int `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Maximum number of file chunks sent in parallel for each recovery. Default: `2`
	IndicesRecoveryMaxConcurrentFileChunks *int `pulumi:"indicesRecoveryMaxConcurrentFileChunks"`
	// Limits total inbound and outbound recovery traffic for each node, expressed in mb per second. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Default: `40`
	IndicesRecoveryMaxMbPerSec *int `pulumi:"indicesRecoveryMaxMbPerSec"`
	// Specifies whether ISM is enabled or not. Default: `true`
	IsmEnabled *bool `pulumi:"ismEnabled"`
	// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. Default: `true`
	IsmHistoryEnabled *bool `pulumi:"ismHistoryEnabled"`
	// Maximum age before rolling over the audit history index, in hours. Default: `24`
	IsmHistoryMaxAgeHours *int `pulumi:"ismHistoryMaxAgeHours"`
	// Maximum number of documents before rolling over the audit history index. Default: `2500000`
	IsmHistoryMaxDocs *int `pulumi:"ismHistoryMaxDocs"`
	// The time between rollover checks for the audit history index, in hours. Default: `8`
	IsmHistoryRolloverCheckPeriodHours *int `pulumi:"ismHistoryRolloverCheckPeriodHours"`
	// Length of time long audit history indices are kept, in days. Default: `30`
	IsmHistoryRolloverRetentionPeriodDays *int `pulumi:"ismHistoryRolloverRetentionPeriodDays"`
	// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default: `false`
	OverrideMainResponseVersion *bool `pulumi:"overrideMainResponseVersion"`
	// Enable or disable filtering of alerting by backend roles. Default: `false`
	PluginsAlertingFilterByBackendRolesEnabled *bool `pulumi:"pluginsAlertingFilterByBackendRolesEnabled"`
	// Allowlist of remote IP addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
	ReindexRemoteWhitelists []string `pulumi:"reindexRemoteWhitelists"`
	// Limits the number of inline script compilations within a period of time. Default is `use-context`
	ScriptMaxCompilationsRate *string `pulumi:"scriptMaxCompilationsRate"`
	// Maximum number of aggregation buckets allowed in a single response. Default: `10000`
	SearchMaxBuckets *int `pulumi:"searchMaxBuckets"`
	// Size of queue for operations in the analyze thread pool.
	ThreadPoolAnalyzeQueueSize *int `pulumi:"threadPoolAnalyzeQueueSize"`
	// Number of workers in the analyze operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize *int `pulumi:"threadPoolAnalyzeSize"`
	// Number of workers in the force merge operation thread pool. This pool is used for forcing a merge between shards of one or more indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize *int `pulumi:"threadPoolForceMergeSize"`
	// Size of queue for operations in the get thread pool.
	ThreadPoolGetQueueSize *int `pulumi:"threadPoolGetQueueSize"`
	// Number of workers in the get operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize *int `pulumi:"threadPoolGetSize"`
	// Size of queue for operations in the search thread pool.
	ThreadPoolSearchQueueSize *int `pulumi:"threadPoolSearchQueueSize"`
	// Number of workers in the search operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize *int `pulumi:"threadPoolSearchSize"`
	// Size of queue for operations in the search throttled thread pool.
	ThreadPoolSearchThrottledQueueSize *int `pulumi:"threadPoolSearchThrottledQueueSize"`
	// Number of workers in the search throttled operation thread pool. This pool is used for searching frozen indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize *int `pulumi:"threadPoolSearchThrottledSize"`
	// Size of queue for operations in the write thread pool.
	ThreadPoolWriteQueueSize *int `pulumi:"threadPoolWriteQueueSize"`
	// Number of workers in the write operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize *int `pulumi:"threadPoolWriteSize"`
}

type DatabaseOpensearchConfigState struct {
	// Specifices whether to allow automatic creation of indices. Default: `true`
	ActionAutoCreateIndexEnabled pulumi.BoolPtrInput
	// Specifies whether to require explicit index names when deleting indices.
	ActionDestructiveRequiresName pulumi.BoolPtrInput
	// The ID of the target Opensearch cluster.
	ClusterId pulumi.StringPtrInput
	// Maximum number of shards allowed per data node.
	ClusterMaxShardsPerNode pulumi.IntPtrInput
	// Maximum concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen per node. Default: `2`
	ClusterRoutingAllocationNodeConcurrentRecoveries pulumi.IntPtrInput
	// Specifies whether to allow security audit logging. Default: `false`
	EnableSecurityAudit pulumi.BoolPtrInput
	// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes. Default: `100000000`
	HttpMaxContentLengthBytes pulumi.IntPtrInput
	// Maximum size of allowed headers, in bytes. Default: `8192`
	HttpMaxHeaderSizeBytes pulumi.IntPtrInput
	// Maximum length of an HTTP URL, in bytes. Default: `4096`
	HttpMaxInitialLineLengthBytes pulumi.IntPtrInput
	// Maximum amount of heap memory used for field data cache, expressed as a percentage. Decreasing the value too much will increase overhead of loading field data. Increasing the value too much will decrease amount of heap available for other operations.
	IndicesFielddataCacheSizePercentage pulumi.IntPtrInput
	// Total amount of heap used for indexing buffer before writing segments to disk, expressed as a percentage. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance. Default: `10`
	IndicesMemoryIndexBufferSizePercentage pulumi.IntPtrInput
	// Maximum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. The default is unbounded.
	IndicesMemoryMaxIndexBufferSizeMb pulumi.IntPtrInput
	// Minimum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. Default: `48`
	IndicesMemoryMinIndexBufferSizeMb pulumi.IntPtrInput
	// Maximum amount of heap used for query cache. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other functionality. Default: `10`
	IndicesQueriesCacheSizePercentage pulumi.IntPtrInput
	// Maximum number of clauses Lucene BooleanQuery can have. Only increase it if necessary, as it may cause performance issues. Default: `1024`
	IndicesQueryBoolMaxClauseCount pulumi.IntPtrInput
	// Maximum number of file chunks sent in parallel for each recovery. Default: `2`
	IndicesRecoveryMaxConcurrentFileChunks pulumi.IntPtrInput
	// Limits total inbound and outbound recovery traffic for each node, expressed in mb per second. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Default: `40`
	IndicesRecoveryMaxMbPerSec pulumi.IntPtrInput
	// Specifies whether ISM is enabled or not. Default: `true`
	IsmEnabled pulumi.BoolPtrInput
	// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. Default: `true`
	IsmHistoryEnabled pulumi.BoolPtrInput
	// Maximum age before rolling over the audit history index, in hours. Default: `24`
	IsmHistoryMaxAgeHours pulumi.IntPtrInput
	// Maximum number of documents before rolling over the audit history index. Default: `2500000`
	IsmHistoryMaxDocs pulumi.IntPtrInput
	// The time between rollover checks for the audit history index, in hours. Default: `8`
	IsmHistoryRolloverCheckPeriodHours pulumi.IntPtrInput
	// Length of time long audit history indices are kept, in days. Default: `30`
	IsmHistoryRolloverRetentionPeriodDays pulumi.IntPtrInput
	// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default: `false`
	OverrideMainResponseVersion pulumi.BoolPtrInput
	// Enable or disable filtering of alerting by backend roles. Default: `false`
	PluginsAlertingFilterByBackendRolesEnabled pulumi.BoolPtrInput
	// Allowlist of remote IP addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
	ReindexRemoteWhitelists pulumi.StringArrayInput
	// Limits the number of inline script compilations within a period of time. Default is `use-context`
	ScriptMaxCompilationsRate pulumi.StringPtrInput
	// Maximum number of aggregation buckets allowed in a single response. Default: `10000`
	SearchMaxBuckets pulumi.IntPtrInput
	// Size of queue for operations in the analyze thread pool.
	ThreadPoolAnalyzeQueueSize pulumi.IntPtrInput
	// Number of workers in the analyze operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize pulumi.IntPtrInput
	// Number of workers in the force merge operation thread pool. This pool is used for forcing a merge between shards of one or more indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize pulumi.IntPtrInput
	// Size of queue for operations in the get thread pool.
	ThreadPoolGetQueueSize pulumi.IntPtrInput
	// Number of workers in the get operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize pulumi.IntPtrInput
	// Size of queue for operations in the search thread pool.
	ThreadPoolSearchQueueSize pulumi.IntPtrInput
	// Number of workers in the search operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize pulumi.IntPtrInput
	// Size of queue for operations in the search throttled thread pool.
	ThreadPoolSearchThrottledQueueSize pulumi.IntPtrInput
	// Number of workers in the search throttled operation thread pool. This pool is used for searching frozen indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize pulumi.IntPtrInput
	// Size of queue for operations in the write thread pool.
	ThreadPoolWriteQueueSize pulumi.IntPtrInput
	// Number of workers in the write operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize pulumi.IntPtrInput
}

func (DatabaseOpensearchConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseOpensearchConfigState)(nil)).Elem()
}

type databaseOpensearchConfigArgs struct {
	// Specifices whether to allow automatic creation of indices. Default: `true`
	ActionAutoCreateIndexEnabled *bool `pulumi:"actionAutoCreateIndexEnabled"`
	// Specifies whether to require explicit index names when deleting indices.
	ActionDestructiveRequiresName *bool `pulumi:"actionDestructiveRequiresName"`
	// The ID of the target Opensearch cluster.
	ClusterId string `pulumi:"clusterId"`
	// Maximum number of shards allowed per data node.
	ClusterMaxShardsPerNode *int `pulumi:"clusterMaxShardsPerNode"`
	// Maximum concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen per node. Default: `2`
	ClusterRoutingAllocationNodeConcurrentRecoveries *int `pulumi:"clusterRoutingAllocationNodeConcurrentRecoveries"`
	// Specifies whether to allow security audit logging. Default: `false`
	EnableSecurityAudit *bool `pulumi:"enableSecurityAudit"`
	// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes. Default: `100000000`
	HttpMaxContentLengthBytes *int `pulumi:"httpMaxContentLengthBytes"`
	// Maximum size of allowed headers, in bytes. Default: `8192`
	HttpMaxHeaderSizeBytes *int `pulumi:"httpMaxHeaderSizeBytes"`
	// Maximum length of an HTTP URL, in bytes. Default: `4096`
	HttpMaxInitialLineLengthBytes *int `pulumi:"httpMaxInitialLineLengthBytes"`
	// Maximum amount of heap memory used for field data cache, expressed as a percentage. Decreasing the value too much will increase overhead of loading field data. Increasing the value too much will decrease amount of heap available for other operations.
	IndicesFielddataCacheSizePercentage *int `pulumi:"indicesFielddataCacheSizePercentage"`
	// Total amount of heap used for indexing buffer before writing segments to disk, expressed as a percentage. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance. Default: `10`
	IndicesMemoryIndexBufferSizePercentage *int `pulumi:"indicesMemoryIndexBufferSizePercentage"`
	// Maximum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. The default is unbounded.
	IndicesMemoryMaxIndexBufferSizeMb *int `pulumi:"indicesMemoryMaxIndexBufferSizeMb"`
	// Minimum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. Default: `48`
	IndicesMemoryMinIndexBufferSizeMb *int `pulumi:"indicesMemoryMinIndexBufferSizeMb"`
	// Maximum amount of heap used for query cache. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other functionality. Default: `10`
	IndicesQueriesCacheSizePercentage *int `pulumi:"indicesQueriesCacheSizePercentage"`
	// Maximum number of clauses Lucene BooleanQuery can have. Only increase it if necessary, as it may cause performance issues. Default: `1024`
	IndicesQueryBoolMaxClauseCount *int `pulumi:"indicesQueryBoolMaxClauseCount"`
	// Maximum number of file chunks sent in parallel for each recovery. Default: `2`
	IndicesRecoveryMaxConcurrentFileChunks *int `pulumi:"indicesRecoveryMaxConcurrentFileChunks"`
	// Limits total inbound and outbound recovery traffic for each node, expressed in mb per second. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Default: `40`
	IndicesRecoveryMaxMbPerSec *int `pulumi:"indicesRecoveryMaxMbPerSec"`
	// Specifies whether ISM is enabled or not. Default: `true`
	IsmEnabled *bool `pulumi:"ismEnabled"`
	// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. Default: `true`
	IsmHistoryEnabled *bool `pulumi:"ismHistoryEnabled"`
	// Maximum age before rolling over the audit history index, in hours. Default: `24`
	IsmHistoryMaxAgeHours *int `pulumi:"ismHistoryMaxAgeHours"`
	// Maximum number of documents before rolling over the audit history index. Default: `2500000`
	IsmHistoryMaxDocs *int `pulumi:"ismHistoryMaxDocs"`
	// The time between rollover checks for the audit history index, in hours. Default: `8`
	IsmHistoryRolloverCheckPeriodHours *int `pulumi:"ismHistoryRolloverCheckPeriodHours"`
	// Length of time long audit history indices are kept, in days. Default: `30`
	IsmHistoryRolloverRetentionPeriodDays *int `pulumi:"ismHistoryRolloverRetentionPeriodDays"`
	// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default: `false`
	OverrideMainResponseVersion *bool `pulumi:"overrideMainResponseVersion"`
	// Enable or disable filtering of alerting by backend roles. Default: `false`
	PluginsAlertingFilterByBackendRolesEnabled *bool `pulumi:"pluginsAlertingFilterByBackendRolesEnabled"`
	// Allowlist of remote IP addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
	ReindexRemoteWhitelists []string `pulumi:"reindexRemoteWhitelists"`
	// Limits the number of inline script compilations within a period of time. Default is `use-context`
	ScriptMaxCompilationsRate *string `pulumi:"scriptMaxCompilationsRate"`
	// Maximum number of aggregation buckets allowed in a single response. Default: `10000`
	SearchMaxBuckets *int `pulumi:"searchMaxBuckets"`
	// Size of queue for operations in the analyze thread pool.
	ThreadPoolAnalyzeQueueSize *int `pulumi:"threadPoolAnalyzeQueueSize"`
	// Number of workers in the analyze operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize *int `pulumi:"threadPoolAnalyzeSize"`
	// Number of workers in the force merge operation thread pool. This pool is used for forcing a merge between shards of one or more indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize *int `pulumi:"threadPoolForceMergeSize"`
	// Size of queue for operations in the get thread pool.
	ThreadPoolGetQueueSize *int `pulumi:"threadPoolGetQueueSize"`
	// Number of workers in the get operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize *int `pulumi:"threadPoolGetSize"`
	// Size of queue for operations in the search thread pool.
	ThreadPoolSearchQueueSize *int `pulumi:"threadPoolSearchQueueSize"`
	// Number of workers in the search operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize *int `pulumi:"threadPoolSearchSize"`
	// Size of queue for operations in the search throttled thread pool.
	ThreadPoolSearchThrottledQueueSize *int `pulumi:"threadPoolSearchThrottledQueueSize"`
	// Number of workers in the search throttled operation thread pool. This pool is used for searching frozen indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize *int `pulumi:"threadPoolSearchThrottledSize"`
	// Size of queue for operations in the write thread pool.
	ThreadPoolWriteQueueSize *int `pulumi:"threadPoolWriteQueueSize"`
	// Number of workers in the write operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize *int `pulumi:"threadPoolWriteSize"`
}

// The set of arguments for constructing a DatabaseOpensearchConfig resource.
type DatabaseOpensearchConfigArgs struct {
	// Specifices whether to allow automatic creation of indices. Default: `true`
	ActionAutoCreateIndexEnabled pulumi.BoolPtrInput
	// Specifies whether to require explicit index names when deleting indices.
	ActionDestructiveRequiresName pulumi.BoolPtrInput
	// The ID of the target Opensearch cluster.
	ClusterId pulumi.StringInput
	// Maximum number of shards allowed per data node.
	ClusterMaxShardsPerNode pulumi.IntPtrInput
	// Maximum concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen per node. Default: `2`
	ClusterRoutingAllocationNodeConcurrentRecoveries pulumi.IntPtrInput
	// Specifies whether to allow security audit logging. Default: `false`
	EnableSecurityAudit pulumi.BoolPtrInput
	// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes. Default: `100000000`
	HttpMaxContentLengthBytes pulumi.IntPtrInput
	// Maximum size of allowed headers, in bytes. Default: `8192`
	HttpMaxHeaderSizeBytes pulumi.IntPtrInput
	// Maximum length of an HTTP URL, in bytes. Default: `4096`
	HttpMaxInitialLineLengthBytes pulumi.IntPtrInput
	// Maximum amount of heap memory used for field data cache, expressed as a percentage. Decreasing the value too much will increase overhead of loading field data. Increasing the value too much will decrease amount of heap available for other operations.
	IndicesFielddataCacheSizePercentage pulumi.IntPtrInput
	// Total amount of heap used for indexing buffer before writing segments to disk, expressed as a percentage. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance. Default: `10`
	IndicesMemoryIndexBufferSizePercentage pulumi.IntPtrInput
	// Maximum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. The default is unbounded.
	IndicesMemoryMaxIndexBufferSizeMb pulumi.IntPtrInput
	// Minimum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. Default: `48`
	IndicesMemoryMinIndexBufferSizeMb pulumi.IntPtrInput
	// Maximum amount of heap used for query cache. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other functionality. Default: `10`
	IndicesQueriesCacheSizePercentage pulumi.IntPtrInput
	// Maximum number of clauses Lucene BooleanQuery can have. Only increase it if necessary, as it may cause performance issues. Default: `1024`
	IndicesQueryBoolMaxClauseCount pulumi.IntPtrInput
	// Maximum number of file chunks sent in parallel for each recovery. Default: `2`
	IndicesRecoveryMaxConcurrentFileChunks pulumi.IntPtrInput
	// Limits total inbound and outbound recovery traffic for each node, expressed in mb per second. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Default: `40`
	IndicesRecoveryMaxMbPerSec pulumi.IntPtrInput
	// Specifies whether ISM is enabled or not. Default: `true`
	IsmEnabled pulumi.BoolPtrInput
	// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. Default: `true`
	IsmHistoryEnabled pulumi.BoolPtrInput
	// Maximum age before rolling over the audit history index, in hours. Default: `24`
	IsmHistoryMaxAgeHours pulumi.IntPtrInput
	// Maximum number of documents before rolling over the audit history index. Default: `2500000`
	IsmHistoryMaxDocs pulumi.IntPtrInput
	// The time between rollover checks for the audit history index, in hours. Default: `8`
	IsmHistoryRolloverCheckPeriodHours pulumi.IntPtrInput
	// Length of time long audit history indices are kept, in days. Default: `30`
	IsmHistoryRolloverRetentionPeriodDays pulumi.IntPtrInput
	// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default: `false`
	OverrideMainResponseVersion pulumi.BoolPtrInput
	// Enable or disable filtering of alerting by backend roles. Default: `false`
	PluginsAlertingFilterByBackendRolesEnabled pulumi.BoolPtrInput
	// Allowlist of remote IP addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
	ReindexRemoteWhitelists pulumi.StringArrayInput
	// Limits the number of inline script compilations within a period of time. Default is `use-context`
	ScriptMaxCompilationsRate pulumi.StringPtrInput
	// Maximum number of aggregation buckets allowed in a single response. Default: `10000`
	SearchMaxBuckets pulumi.IntPtrInput
	// Size of queue for operations in the analyze thread pool.
	ThreadPoolAnalyzeQueueSize pulumi.IntPtrInput
	// Number of workers in the analyze operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolAnalyzeSize pulumi.IntPtrInput
	// Number of workers in the force merge operation thread pool. This pool is used for forcing a merge between shards of one or more indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolForceMergeSize pulumi.IntPtrInput
	// Size of queue for operations in the get thread pool.
	ThreadPoolGetQueueSize pulumi.IntPtrInput
	// Number of workers in the get operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolGetSize pulumi.IntPtrInput
	// Size of queue for operations in the search thread pool.
	ThreadPoolSearchQueueSize pulumi.IntPtrInput
	// Number of workers in the search operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchSize pulumi.IntPtrInput
	// Size of queue for operations in the search throttled thread pool.
	ThreadPoolSearchThrottledQueueSize pulumi.IntPtrInput
	// Number of workers in the search throttled operation thread pool. This pool is used for searching frozen indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolSearchThrottledSize pulumi.IntPtrInput
	// Size of queue for operations in the write thread pool.
	ThreadPoolWriteQueueSize pulumi.IntPtrInput
	// Number of workers in the write operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
	ThreadPoolWriteSize pulumi.IntPtrInput
}

func (DatabaseOpensearchConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*databaseOpensearchConfigArgs)(nil)).Elem()
}

type DatabaseOpensearchConfigInput interface {
	pulumi.Input

	ToDatabaseOpensearchConfigOutput() DatabaseOpensearchConfigOutput
	ToDatabaseOpensearchConfigOutputWithContext(ctx context.Context) DatabaseOpensearchConfigOutput
}

func (*DatabaseOpensearchConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseOpensearchConfig)(nil)).Elem()
}

func (i *DatabaseOpensearchConfig) ToDatabaseOpensearchConfigOutput() DatabaseOpensearchConfigOutput {
	return i.ToDatabaseOpensearchConfigOutputWithContext(context.Background())
}

func (i *DatabaseOpensearchConfig) ToDatabaseOpensearchConfigOutputWithContext(ctx context.Context) DatabaseOpensearchConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchConfigOutput)
}

// DatabaseOpensearchConfigArrayInput is an input type that accepts DatabaseOpensearchConfigArray and DatabaseOpensearchConfigArrayOutput values.
// You can construct a concrete instance of `DatabaseOpensearchConfigArrayInput` via:
//
//	DatabaseOpensearchConfigArray{ DatabaseOpensearchConfigArgs{...} }
type DatabaseOpensearchConfigArrayInput interface {
	pulumi.Input

	ToDatabaseOpensearchConfigArrayOutput() DatabaseOpensearchConfigArrayOutput
	ToDatabaseOpensearchConfigArrayOutputWithContext(context.Context) DatabaseOpensearchConfigArrayOutput
}

type DatabaseOpensearchConfigArray []DatabaseOpensearchConfigInput

func (DatabaseOpensearchConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseOpensearchConfig)(nil)).Elem()
}

func (i DatabaseOpensearchConfigArray) ToDatabaseOpensearchConfigArrayOutput() DatabaseOpensearchConfigArrayOutput {
	return i.ToDatabaseOpensearchConfigArrayOutputWithContext(context.Background())
}

func (i DatabaseOpensearchConfigArray) ToDatabaseOpensearchConfigArrayOutputWithContext(ctx context.Context) DatabaseOpensearchConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchConfigArrayOutput)
}

// DatabaseOpensearchConfigMapInput is an input type that accepts DatabaseOpensearchConfigMap and DatabaseOpensearchConfigMapOutput values.
// You can construct a concrete instance of `DatabaseOpensearchConfigMapInput` via:
//
//	DatabaseOpensearchConfigMap{ "key": DatabaseOpensearchConfigArgs{...} }
type DatabaseOpensearchConfigMapInput interface {
	pulumi.Input

	ToDatabaseOpensearchConfigMapOutput() DatabaseOpensearchConfigMapOutput
	ToDatabaseOpensearchConfigMapOutputWithContext(context.Context) DatabaseOpensearchConfigMapOutput
}

type DatabaseOpensearchConfigMap map[string]DatabaseOpensearchConfigInput

func (DatabaseOpensearchConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseOpensearchConfig)(nil)).Elem()
}

func (i DatabaseOpensearchConfigMap) ToDatabaseOpensearchConfigMapOutput() DatabaseOpensearchConfigMapOutput {
	return i.ToDatabaseOpensearchConfigMapOutputWithContext(context.Background())
}

func (i DatabaseOpensearchConfigMap) ToDatabaseOpensearchConfigMapOutputWithContext(ctx context.Context) DatabaseOpensearchConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DatabaseOpensearchConfigMapOutput)
}

type DatabaseOpensearchConfigOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DatabaseOpensearchConfig)(nil)).Elem()
}

func (o DatabaseOpensearchConfigOutput) ToDatabaseOpensearchConfigOutput() DatabaseOpensearchConfigOutput {
	return o
}

func (o DatabaseOpensearchConfigOutput) ToDatabaseOpensearchConfigOutputWithContext(ctx context.Context) DatabaseOpensearchConfigOutput {
	return o
}

// Specifices whether to allow automatic creation of indices. Default: `true`
func (o DatabaseOpensearchConfigOutput) ActionAutoCreateIndexEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.BoolOutput { return v.ActionAutoCreateIndexEnabled }).(pulumi.BoolOutput)
}

// Specifies whether to require explicit index names when deleting indices.
func (o DatabaseOpensearchConfigOutput) ActionDestructiveRequiresName() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.BoolOutput { return v.ActionDestructiveRequiresName }).(pulumi.BoolOutput)
}

// The ID of the target Opensearch cluster.
func (o DatabaseOpensearchConfigOutput) ClusterId() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.StringOutput { return v.ClusterId }).(pulumi.StringOutput)
}

// Maximum number of shards allowed per data node.
func (o DatabaseOpensearchConfigOutput) ClusterMaxShardsPerNode() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ClusterMaxShardsPerNode }).(pulumi.IntOutput)
}

// Maximum concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen per node. Default: `2`
func (o DatabaseOpensearchConfigOutput) ClusterRoutingAllocationNodeConcurrentRecoveries() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput {
		return v.ClusterRoutingAllocationNodeConcurrentRecoveries
	}).(pulumi.IntOutput)
}

// Specifies whether to allow security audit logging. Default: `false`
func (o DatabaseOpensearchConfigOutput) EnableSecurityAudit() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.BoolOutput { return v.EnableSecurityAudit }).(pulumi.BoolOutput)
}

// Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes. Default: `100000000`
func (o DatabaseOpensearchConfigOutput) HttpMaxContentLengthBytes() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.HttpMaxContentLengthBytes }).(pulumi.IntOutput)
}

// Maximum size of allowed headers, in bytes. Default: `8192`
func (o DatabaseOpensearchConfigOutput) HttpMaxHeaderSizeBytes() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.HttpMaxHeaderSizeBytes }).(pulumi.IntOutput)
}

// Maximum length of an HTTP URL, in bytes. Default: `4096`
func (o DatabaseOpensearchConfigOutput) HttpMaxInitialLineLengthBytes() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.HttpMaxInitialLineLengthBytes }).(pulumi.IntOutput)
}

// Maximum amount of heap memory used for field data cache, expressed as a percentage. Decreasing the value too much will increase overhead of loading field data. Increasing the value too much will decrease amount of heap available for other operations.
func (o DatabaseOpensearchConfigOutput) IndicesFielddataCacheSizePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IndicesFielddataCacheSizePercentage }).(pulumi.IntOutput)
}

// Total amount of heap used for indexing buffer before writing segments to disk, expressed as a percentage. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance. Default: `10`
func (o DatabaseOpensearchConfigOutput) IndicesMemoryIndexBufferSizePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IndicesMemoryIndexBufferSizePercentage }).(pulumi.IntOutput)
}

// Maximum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. The default is unbounded.
func (o DatabaseOpensearchConfigOutput) IndicesMemoryMaxIndexBufferSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IndicesMemoryMaxIndexBufferSizeMb }).(pulumi.IntOutput)
}

// Minimum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. Default: `48`
func (o DatabaseOpensearchConfigOutput) IndicesMemoryMinIndexBufferSizeMb() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IndicesMemoryMinIndexBufferSizeMb }).(pulumi.IntOutput)
}

// Maximum amount of heap used for query cache. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other functionality. Default: `10`
func (o DatabaseOpensearchConfigOutput) IndicesQueriesCacheSizePercentage() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IndicesQueriesCacheSizePercentage }).(pulumi.IntOutput)
}

// Maximum number of clauses Lucene BooleanQuery can have. Only increase it if necessary, as it may cause performance issues. Default: `1024`
func (o DatabaseOpensearchConfigOutput) IndicesQueryBoolMaxClauseCount() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IndicesQueryBoolMaxClauseCount }).(pulumi.IntOutput)
}

// Maximum number of file chunks sent in parallel for each recovery. Default: `2`
func (o DatabaseOpensearchConfigOutput) IndicesRecoveryMaxConcurrentFileChunks() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IndicesRecoveryMaxConcurrentFileChunks }).(pulumi.IntOutput)
}

// Limits total inbound and outbound recovery traffic for each node, expressed in mb per second. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Default: `40`
func (o DatabaseOpensearchConfigOutput) IndicesRecoveryMaxMbPerSec() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IndicesRecoveryMaxMbPerSec }).(pulumi.IntOutput)
}

// Specifies whether ISM is enabled or not. Default: `true`
func (o DatabaseOpensearchConfigOutput) IsmEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.BoolOutput { return v.IsmEnabled }).(pulumi.BoolOutput)
}

// Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. Default: `true`
func (o DatabaseOpensearchConfigOutput) IsmHistoryEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.BoolOutput { return v.IsmHistoryEnabled }).(pulumi.BoolOutput)
}

// Maximum age before rolling over the audit history index, in hours. Default: `24`
func (o DatabaseOpensearchConfigOutput) IsmHistoryMaxAgeHours() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IsmHistoryMaxAgeHours }).(pulumi.IntOutput)
}

// Maximum number of documents before rolling over the audit history index. Default: `2500000`
func (o DatabaseOpensearchConfigOutput) IsmHistoryMaxDocs() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IsmHistoryMaxDocs }).(pulumi.IntOutput)
}

// The time between rollover checks for the audit history index, in hours. Default: `8`
func (o DatabaseOpensearchConfigOutput) IsmHistoryRolloverCheckPeriodHours() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IsmHistoryRolloverCheckPeriodHours }).(pulumi.IntOutput)
}

// Length of time long audit history indices are kept, in days. Default: `30`
func (o DatabaseOpensearchConfigOutput) IsmHistoryRolloverRetentionPeriodDays() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.IsmHistoryRolloverRetentionPeriodDays }).(pulumi.IntOutput)
}

// Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default: `false`
func (o DatabaseOpensearchConfigOutput) OverrideMainResponseVersion() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.BoolOutput { return v.OverrideMainResponseVersion }).(pulumi.BoolOutput)
}

// Enable or disable filtering of alerting by backend roles. Default: `false`
func (o DatabaseOpensearchConfigOutput) PluginsAlertingFilterByBackendRolesEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.BoolOutput {
		return v.PluginsAlertingFilterByBackendRolesEnabled
	}).(pulumi.BoolOutput)
}

// Allowlist of remote IP addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
func (o DatabaseOpensearchConfigOutput) ReindexRemoteWhitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.StringArrayOutput { return v.ReindexRemoteWhitelists }).(pulumi.StringArrayOutput)
}

// Limits the number of inline script compilations within a period of time. Default is `use-context`
func (o DatabaseOpensearchConfigOutput) ScriptMaxCompilationsRate() pulumi.StringOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.StringOutput { return v.ScriptMaxCompilationsRate }).(pulumi.StringOutput)
}

// Maximum number of aggregation buckets allowed in a single response. Default: `10000`
func (o DatabaseOpensearchConfigOutput) SearchMaxBuckets() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.SearchMaxBuckets }).(pulumi.IntOutput)
}

// Size of queue for operations in the analyze thread pool.
func (o DatabaseOpensearchConfigOutput) ThreadPoolAnalyzeQueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolAnalyzeQueueSize }).(pulumi.IntOutput)
}

// Number of workers in the analyze operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o DatabaseOpensearchConfigOutput) ThreadPoolAnalyzeSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolAnalyzeSize }).(pulumi.IntOutput)
}

// Number of workers in the force merge operation thread pool. This pool is used for forcing a merge between shards of one or more indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o DatabaseOpensearchConfigOutput) ThreadPoolForceMergeSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolForceMergeSize }).(pulumi.IntOutput)
}

// Size of queue for operations in the get thread pool.
func (o DatabaseOpensearchConfigOutput) ThreadPoolGetQueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolGetQueueSize }).(pulumi.IntOutput)
}

// Number of workers in the get operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o DatabaseOpensearchConfigOutput) ThreadPoolGetSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolGetSize }).(pulumi.IntOutput)
}

// Size of queue for operations in the search thread pool.
func (o DatabaseOpensearchConfigOutput) ThreadPoolSearchQueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolSearchQueueSize }).(pulumi.IntOutput)
}

// Number of workers in the search operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o DatabaseOpensearchConfigOutput) ThreadPoolSearchSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolSearchSize }).(pulumi.IntOutput)
}

// Size of queue for operations in the search throttled thread pool.
func (o DatabaseOpensearchConfigOutput) ThreadPoolSearchThrottledQueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolSearchThrottledQueueSize }).(pulumi.IntOutput)
}

// Number of workers in the search throttled operation thread pool. This pool is used for searching frozen indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o DatabaseOpensearchConfigOutput) ThreadPoolSearchThrottledSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolSearchThrottledSize }).(pulumi.IntOutput)
}

// Size of queue for operations in the write thread pool.
func (o DatabaseOpensearchConfigOutput) ThreadPoolWriteQueueSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolWriteQueueSize }).(pulumi.IntOutput)
}

// Number of workers in the write operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
func (o DatabaseOpensearchConfigOutput) ThreadPoolWriteSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DatabaseOpensearchConfig) pulumi.IntOutput { return v.ThreadPoolWriteSize }).(pulumi.IntOutput)
}

type DatabaseOpensearchConfigArrayOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DatabaseOpensearchConfig)(nil)).Elem()
}

func (o DatabaseOpensearchConfigArrayOutput) ToDatabaseOpensearchConfigArrayOutput() DatabaseOpensearchConfigArrayOutput {
	return o
}

func (o DatabaseOpensearchConfigArrayOutput) ToDatabaseOpensearchConfigArrayOutputWithContext(ctx context.Context) DatabaseOpensearchConfigArrayOutput {
	return o
}

func (o DatabaseOpensearchConfigArrayOutput) Index(i pulumi.IntInput) DatabaseOpensearchConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DatabaseOpensearchConfig {
		return vs[0].([]*DatabaseOpensearchConfig)[vs[1].(int)]
	}).(DatabaseOpensearchConfigOutput)
}

type DatabaseOpensearchConfigMapOutput struct{ *pulumi.OutputState }

func (DatabaseOpensearchConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DatabaseOpensearchConfig)(nil)).Elem()
}

func (o DatabaseOpensearchConfigMapOutput) ToDatabaseOpensearchConfigMapOutput() DatabaseOpensearchConfigMapOutput {
	return o
}

func (o DatabaseOpensearchConfigMapOutput) ToDatabaseOpensearchConfigMapOutputWithContext(ctx context.Context) DatabaseOpensearchConfigMapOutput {
	return o
}

func (o DatabaseOpensearchConfigMapOutput) MapIndex(k pulumi.StringInput) DatabaseOpensearchConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DatabaseOpensearchConfig {
		return vs[0].(map[string]*DatabaseOpensearchConfig)[vs[1].(string)]
	}).(DatabaseOpensearchConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchConfigInput)(nil)).Elem(), &DatabaseOpensearchConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchConfigArrayInput)(nil)).Elem(), DatabaseOpensearchConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DatabaseOpensearchConfigMapInput)(nil)).Elem(), DatabaseOpensearchConfigMap{})
	pulumi.RegisterOutputType(DatabaseOpensearchConfigOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchConfigArrayOutput{})
	pulumi.RegisterOutputType(DatabaseOpensearchConfigMapOutput{})
}
