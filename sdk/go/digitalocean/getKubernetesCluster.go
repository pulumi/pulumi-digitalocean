// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// > This content is derived from https://github.com/terraform-providers/terraform-provider-digitalocean/blob/master/website/docs/d/kubernetes_cluster.html.markdown.
func LookupKubernetesCluster(ctx *pulumi.Context, args *GetKubernetesClusterArgs) (*GetKubernetesClusterResult, error) {
	inputs := make(map[string]interface{})
	if args != nil {
		inputs["name"] = args.Name
		inputs["tags"] = args.Tags
	}
	outputs, err := ctx.Invoke("digitalocean:index/getKubernetesCluster:getKubernetesCluster", inputs)
	if err != nil {
		return nil, err
	}
	return &GetKubernetesClusterResult{
		ClusterSubnet: outputs["clusterSubnet"],
		CreatedAt: outputs["createdAt"],
		Endpoint: outputs["endpoint"],
		Ipv4Address: outputs["ipv4Address"],
		KubeConfigs: outputs["kubeConfigs"],
		Name: outputs["name"],
		NodePools: outputs["nodePools"],
		Region: outputs["region"],
		ServiceSubnet: outputs["serviceSubnet"],
		Status: outputs["status"],
		Tags: outputs["tags"],
		UpdatedAt: outputs["updatedAt"],
		Version: outputs["version"],
		Id: outputs["id"],
	}, nil
}

// A collection of arguments for invoking getKubernetesCluster.
type GetKubernetesClusterArgs struct {
	// The name of Kubernetes cluster.
	Name interface{}
	Tags interface{}
}

// A collection of values returned by getKubernetesCluster.
type GetKubernetesClusterResult struct {
	// The range of IP addresses in the overlay network of the Kubernetes cluster.
	ClusterSubnet interface{}
	// The date and time when the Kubernetes cluster was created.
	CreatedAt interface{}
	// The base URL of the API server on the Kubernetes master node.
	Endpoint interface{}
	// The public IPv4 address of the Kubernetes master node.
	Ipv4Address interface{}
	KubeConfigs interface{}
	Name interface{}
	// A list of node pools associated with the cluster. Each node pool exports the following attributes:
	// - `id` -  The unique ID that can be used to identify and reference the node pool.
	// - `name` - The name of the node pool.
	// - `size` - The slug identifier for the type of Droplet used as workers in the node pool.
	// - `nodeCount` - The number of Droplet instances in the node pool.
	// - `tags` - A list of tag names applied to the node pool.
	// - `nodes` - A list of nodes in the pool. Each node exports the following attributes:
	// + `id` -  A unique ID that can be used to identify and reference the node.
	// + `name` - The auto-generated name for the node.
	// + `status` -  A string indicating the current status of the individual node.
	// + `createdAt` - The date and time when the node was created.
	// + `updatedAt` - The date and time when the node was last updated.
	NodePools interface{}
	// The slug identifier for the region where the Kubernetes cluster is located.
	Region interface{}
	// The range of assignable IP addresses for services running in the Kubernetes cluster.
	ServiceSubnet interface{}
	// A string indicating the current status of the cluster. Potential values include running, provisioning, and errored.
	Status interface{}
	// A list of tag names to be applied to the Kubernetes cluster.
	Tags interface{}
	// The date and time when the Kubernetes cluster was last updated.
	// * `kube_config.0` - A representation of the Kubernetes cluster's kubeconfig with the following attributes:
	// - `rawConfig` - The full contents of the Kubernetes cluster's kubeconfig file.
	// - `host` - The URL of the API server on the Kubernetes master node.
	// - `clientKey` - The base64 encoded private key used by clients to access the cluster.
	// - `clientCertificate` - The base64 encoded public certificate used by clients to access the cluster.
	// - `clusterCaCertificate` - The base64 encoded public certificate for the cluster's certificate authority.
	UpdatedAt interface{}
	// The slug identifier for the version of Kubernetes used for the cluster.
	Version interface{}
	// id is the provider-assigned unique ID for this managed resource.
	Id interface{}
}
