// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// Provides access to the available DigitalOcean Kubernetes Service versions.
//
// ## Example Usage
// ### Output a list of all available versions
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-digitalocean/sdk/v2/go/digitalocean"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := digitalocean.GetKubernetesVersions(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("k8s-versions", example.ValidVersions)
// 		return nil
// 	})
// }
// ```
// ### Create a Kubernetes cluster using the most recent version available
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-digitalocean/sdk/v2/go/digitalocean"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		example, err := digitalocean.GetKubernetesVersions(ctx, nil, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = digitalocean.NewKubernetesCluster(ctx, "example_cluster", &digitalocean.KubernetesClusterArgs{
// 			Region:  pulumi.String("lon1"),
// 			Version: pulumi.String(example.LatestVersion),
// 			NodePool: &digitalocean.KubernetesClusterNodePoolArgs{
// 				Name:      pulumi.String("default"),
// 				Size:      pulumi.String("s-1vcpu-2gb"),
// 				NodeCount: pulumi.Int(3),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
// ### Pin a Kubernetes cluster to a specific minor version
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-digitalocean/sdk/v2/go/digitalocean"
// 	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		opt0 := "1.16."
// 		example, err := digitalocean.GetKubernetesVersions(ctx, &digitalocean.GetKubernetesVersionsArgs{
// 			VersionPrefix: &opt0,
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		_, err = digitalocean.NewKubernetesCluster(ctx, "example_cluster", &digitalocean.KubernetesClusterArgs{
// 			Region:  pulumi.String("lon1"),
// 			Version: pulumi.String(example.LatestVersion),
// 			NodePool: &digitalocean.KubernetesClusterNodePoolArgs{
// 				Name:      pulumi.String("default"),
// 				Size:      pulumi.String("s-1vcpu-2gb"),
// 				NodeCount: pulumi.Int(3),
// 			},
// 		})
// 		if err != nil {
// 			return err
// 		}
// 		return nil
// 	})
// }
// ```
func GetKubernetesVersions(ctx *pulumi.Context, args *GetKubernetesVersionsArgs, opts ...pulumi.InvokeOption) (*GetKubernetesVersionsResult, error) {
	var rv GetKubernetesVersionsResult
	err := ctx.Invoke("digitalocean:index/getKubernetesVersions:getKubernetesVersions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getKubernetesVersions.
type GetKubernetesVersionsArgs struct {
	// If provided, this provider will only return versions that match the string prefix. For example, `1.15.` will match all 1.15.x series releases.
	VersionPrefix *string `pulumi:"versionPrefix"`
}

// A collection of values returned by getKubernetesVersions.
type GetKubernetesVersionsResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The most recent version available.
	LatestVersion string `pulumi:"latestVersion"`
	// A list of available versions.
	ValidVersions []string `pulumi:"validVersions"`
	VersionPrefix *string  `pulumi:"versionPrefix"`
}
