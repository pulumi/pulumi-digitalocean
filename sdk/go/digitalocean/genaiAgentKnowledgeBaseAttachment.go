// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GenaiAgentKnowledgeBaseAttachment struct {
	pulumi.CustomResourceState

	// A unique identifier for an agent.
	AgentUuid pulumi.StringOutput `pulumi:"agentUuid"`
	// A unique identifier for a knowledge base.
	KnowledgeBaseUuid pulumi.StringOutput `pulumi:"knowledgeBaseUuid"`
}

// NewGenaiAgentKnowledgeBaseAttachment registers a new resource with the given unique name, arguments, and options.
func NewGenaiAgentKnowledgeBaseAttachment(ctx *pulumi.Context,
	name string, args *GenaiAgentKnowledgeBaseAttachmentArgs, opts ...pulumi.ResourceOption) (*GenaiAgentKnowledgeBaseAttachment, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AgentUuid == nil {
		return nil, errors.New("invalid value for required argument 'AgentUuid'")
	}
	if args.KnowledgeBaseUuid == nil {
		return nil, errors.New("invalid value for required argument 'KnowledgeBaseUuid'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GenaiAgentKnowledgeBaseAttachment
	err := ctx.RegisterResource("digitalocean:index/genaiAgentKnowledgeBaseAttachment:GenaiAgentKnowledgeBaseAttachment", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGenaiAgentKnowledgeBaseAttachment gets an existing GenaiAgentKnowledgeBaseAttachment resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGenaiAgentKnowledgeBaseAttachment(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GenaiAgentKnowledgeBaseAttachmentState, opts ...pulumi.ResourceOption) (*GenaiAgentKnowledgeBaseAttachment, error) {
	var resource GenaiAgentKnowledgeBaseAttachment
	err := ctx.ReadResource("digitalocean:index/genaiAgentKnowledgeBaseAttachment:GenaiAgentKnowledgeBaseAttachment", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GenaiAgentKnowledgeBaseAttachment resources.
type genaiAgentKnowledgeBaseAttachmentState struct {
	// A unique identifier for an agent.
	AgentUuid *string `pulumi:"agentUuid"`
	// A unique identifier for a knowledge base.
	KnowledgeBaseUuid *string `pulumi:"knowledgeBaseUuid"`
}

type GenaiAgentKnowledgeBaseAttachmentState struct {
	// A unique identifier for an agent.
	AgentUuid pulumi.StringPtrInput
	// A unique identifier for a knowledge base.
	KnowledgeBaseUuid pulumi.StringPtrInput
}

func (GenaiAgentKnowledgeBaseAttachmentState) ElementType() reflect.Type {
	return reflect.TypeOf((*genaiAgentKnowledgeBaseAttachmentState)(nil)).Elem()
}

type genaiAgentKnowledgeBaseAttachmentArgs struct {
	// A unique identifier for an agent.
	AgentUuid string `pulumi:"agentUuid"`
	// A unique identifier for a knowledge base.
	KnowledgeBaseUuid string `pulumi:"knowledgeBaseUuid"`
}

// The set of arguments for constructing a GenaiAgentKnowledgeBaseAttachment resource.
type GenaiAgentKnowledgeBaseAttachmentArgs struct {
	// A unique identifier for an agent.
	AgentUuid pulumi.StringInput
	// A unique identifier for a knowledge base.
	KnowledgeBaseUuid pulumi.StringInput
}

func (GenaiAgentKnowledgeBaseAttachmentArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*genaiAgentKnowledgeBaseAttachmentArgs)(nil)).Elem()
}

type GenaiAgentKnowledgeBaseAttachmentInput interface {
	pulumi.Input

	ToGenaiAgentKnowledgeBaseAttachmentOutput() GenaiAgentKnowledgeBaseAttachmentOutput
	ToGenaiAgentKnowledgeBaseAttachmentOutputWithContext(ctx context.Context) GenaiAgentKnowledgeBaseAttachmentOutput
}

func (*GenaiAgentKnowledgeBaseAttachment) ElementType() reflect.Type {
	return reflect.TypeOf((**GenaiAgentKnowledgeBaseAttachment)(nil)).Elem()
}

func (i *GenaiAgentKnowledgeBaseAttachment) ToGenaiAgentKnowledgeBaseAttachmentOutput() GenaiAgentKnowledgeBaseAttachmentOutput {
	return i.ToGenaiAgentKnowledgeBaseAttachmentOutputWithContext(context.Background())
}

func (i *GenaiAgentKnowledgeBaseAttachment) ToGenaiAgentKnowledgeBaseAttachmentOutputWithContext(ctx context.Context) GenaiAgentKnowledgeBaseAttachmentOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenaiAgentKnowledgeBaseAttachmentOutput)
}

// GenaiAgentKnowledgeBaseAttachmentArrayInput is an input type that accepts GenaiAgentKnowledgeBaseAttachmentArray and GenaiAgentKnowledgeBaseAttachmentArrayOutput values.
// You can construct a concrete instance of `GenaiAgentKnowledgeBaseAttachmentArrayInput` via:
//
//	GenaiAgentKnowledgeBaseAttachmentArray{ GenaiAgentKnowledgeBaseAttachmentArgs{...} }
type GenaiAgentKnowledgeBaseAttachmentArrayInput interface {
	pulumi.Input

	ToGenaiAgentKnowledgeBaseAttachmentArrayOutput() GenaiAgentKnowledgeBaseAttachmentArrayOutput
	ToGenaiAgentKnowledgeBaseAttachmentArrayOutputWithContext(context.Context) GenaiAgentKnowledgeBaseAttachmentArrayOutput
}

type GenaiAgentKnowledgeBaseAttachmentArray []GenaiAgentKnowledgeBaseAttachmentInput

func (GenaiAgentKnowledgeBaseAttachmentArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GenaiAgentKnowledgeBaseAttachment)(nil)).Elem()
}

func (i GenaiAgentKnowledgeBaseAttachmentArray) ToGenaiAgentKnowledgeBaseAttachmentArrayOutput() GenaiAgentKnowledgeBaseAttachmentArrayOutput {
	return i.ToGenaiAgentKnowledgeBaseAttachmentArrayOutputWithContext(context.Background())
}

func (i GenaiAgentKnowledgeBaseAttachmentArray) ToGenaiAgentKnowledgeBaseAttachmentArrayOutputWithContext(ctx context.Context) GenaiAgentKnowledgeBaseAttachmentArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenaiAgentKnowledgeBaseAttachmentArrayOutput)
}

// GenaiAgentKnowledgeBaseAttachmentMapInput is an input type that accepts GenaiAgentKnowledgeBaseAttachmentMap and GenaiAgentKnowledgeBaseAttachmentMapOutput values.
// You can construct a concrete instance of `GenaiAgentKnowledgeBaseAttachmentMapInput` via:
//
//	GenaiAgentKnowledgeBaseAttachmentMap{ "key": GenaiAgentKnowledgeBaseAttachmentArgs{...} }
type GenaiAgentKnowledgeBaseAttachmentMapInput interface {
	pulumi.Input

	ToGenaiAgentKnowledgeBaseAttachmentMapOutput() GenaiAgentKnowledgeBaseAttachmentMapOutput
	ToGenaiAgentKnowledgeBaseAttachmentMapOutputWithContext(context.Context) GenaiAgentKnowledgeBaseAttachmentMapOutput
}

type GenaiAgentKnowledgeBaseAttachmentMap map[string]GenaiAgentKnowledgeBaseAttachmentInput

func (GenaiAgentKnowledgeBaseAttachmentMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GenaiAgentKnowledgeBaseAttachment)(nil)).Elem()
}

func (i GenaiAgentKnowledgeBaseAttachmentMap) ToGenaiAgentKnowledgeBaseAttachmentMapOutput() GenaiAgentKnowledgeBaseAttachmentMapOutput {
	return i.ToGenaiAgentKnowledgeBaseAttachmentMapOutputWithContext(context.Background())
}

func (i GenaiAgentKnowledgeBaseAttachmentMap) ToGenaiAgentKnowledgeBaseAttachmentMapOutputWithContext(ctx context.Context) GenaiAgentKnowledgeBaseAttachmentMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GenaiAgentKnowledgeBaseAttachmentMapOutput)
}

type GenaiAgentKnowledgeBaseAttachmentOutput struct{ *pulumi.OutputState }

func (GenaiAgentKnowledgeBaseAttachmentOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GenaiAgentKnowledgeBaseAttachment)(nil)).Elem()
}

func (o GenaiAgentKnowledgeBaseAttachmentOutput) ToGenaiAgentKnowledgeBaseAttachmentOutput() GenaiAgentKnowledgeBaseAttachmentOutput {
	return o
}

func (o GenaiAgentKnowledgeBaseAttachmentOutput) ToGenaiAgentKnowledgeBaseAttachmentOutputWithContext(ctx context.Context) GenaiAgentKnowledgeBaseAttachmentOutput {
	return o
}

// A unique identifier for an agent.
func (o GenaiAgentKnowledgeBaseAttachmentOutput) AgentUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *GenaiAgentKnowledgeBaseAttachment) pulumi.StringOutput { return v.AgentUuid }).(pulumi.StringOutput)
}

// A unique identifier for a knowledge base.
func (o GenaiAgentKnowledgeBaseAttachmentOutput) KnowledgeBaseUuid() pulumi.StringOutput {
	return o.ApplyT(func(v *GenaiAgentKnowledgeBaseAttachment) pulumi.StringOutput { return v.KnowledgeBaseUuid }).(pulumi.StringOutput)
}

type GenaiAgentKnowledgeBaseAttachmentArrayOutput struct{ *pulumi.OutputState }

func (GenaiAgentKnowledgeBaseAttachmentArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GenaiAgentKnowledgeBaseAttachment)(nil)).Elem()
}

func (o GenaiAgentKnowledgeBaseAttachmentArrayOutput) ToGenaiAgentKnowledgeBaseAttachmentArrayOutput() GenaiAgentKnowledgeBaseAttachmentArrayOutput {
	return o
}

func (o GenaiAgentKnowledgeBaseAttachmentArrayOutput) ToGenaiAgentKnowledgeBaseAttachmentArrayOutputWithContext(ctx context.Context) GenaiAgentKnowledgeBaseAttachmentArrayOutput {
	return o
}

func (o GenaiAgentKnowledgeBaseAttachmentArrayOutput) Index(i pulumi.IntInput) GenaiAgentKnowledgeBaseAttachmentOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GenaiAgentKnowledgeBaseAttachment {
		return vs[0].([]*GenaiAgentKnowledgeBaseAttachment)[vs[1].(int)]
	}).(GenaiAgentKnowledgeBaseAttachmentOutput)
}

type GenaiAgentKnowledgeBaseAttachmentMapOutput struct{ *pulumi.OutputState }

func (GenaiAgentKnowledgeBaseAttachmentMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GenaiAgentKnowledgeBaseAttachment)(nil)).Elem()
}

func (o GenaiAgentKnowledgeBaseAttachmentMapOutput) ToGenaiAgentKnowledgeBaseAttachmentMapOutput() GenaiAgentKnowledgeBaseAttachmentMapOutput {
	return o
}

func (o GenaiAgentKnowledgeBaseAttachmentMapOutput) ToGenaiAgentKnowledgeBaseAttachmentMapOutputWithContext(ctx context.Context) GenaiAgentKnowledgeBaseAttachmentMapOutput {
	return o
}

func (o GenaiAgentKnowledgeBaseAttachmentMapOutput) MapIndex(k pulumi.StringInput) GenaiAgentKnowledgeBaseAttachmentOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GenaiAgentKnowledgeBaseAttachment {
		return vs[0].(map[string]*GenaiAgentKnowledgeBaseAttachment)[vs[1].(string)]
	}).(GenaiAgentKnowledgeBaseAttachmentOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GenaiAgentKnowledgeBaseAttachmentInput)(nil)).Elem(), &GenaiAgentKnowledgeBaseAttachment{})
	pulumi.RegisterInputType(reflect.TypeOf((*GenaiAgentKnowledgeBaseAttachmentArrayInput)(nil)).Elem(), GenaiAgentKnowledgeBaseAttachmentArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GenaiAgentKnowledgeBaseAttachmentMapInput)(nil)).Elem(), GenaiAgentKnowledgeBaseAttachmentMap{})
	pulumi.RegisterOutputType(GenaiAgentKnowledgeBaseAttachmentOutput{})
	pulumi.RegisterOutputType(GenaiAgentKnowledgeBaseAttachmentArrayOutput{})
	pulumi.RegisterOutputType(GenaiAgentKnowledgeBaseAttachmentMapOutput{})
}
