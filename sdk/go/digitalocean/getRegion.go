// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Get information on a single DigitalOcean region. This is useful to find out
// what Droplet sizes and features are supported within a region.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
// 	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean"
// 	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
// )
//
// func main() {
// 	pulumi.Run(func(ctx *pulumi.Context) error {
// 		sfo2, err := digitalocean.GetRegion(ctx, &GetRegionArgs{
// 			Slug: "sfo2",
// 		}, nil)
// 		if err != nil {
// 			return err
// 		}
// 		ctx.Export("regionName", sfo2.Name)
// 		return nil
// 	})
// }
// ```
func GetRegion(ctx *pulumi.Context, args *GetRegionArgs, opts ...pulumi.InvokeOption) (*GetRegionResult, error) {
	var rv GetRegionResult
	err := ctx.Invoke("digitalocean:index/getRegion:getRegion", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRegion.
type GetRegionArgs struct {
	// A human-readable string that is used as a unique identifier for each region.
	Slug string `pulumi:"slug"`
}

// A collection of values returned by getRegion.
type GetRegionResult struct {
	// A boolean value that represents whether new Droplets can be created in this region.
	Available bool `pulumi:"available"`
	// A set of features available in this region.
	Features []string `pulumi:"features"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The display name of the region.
	Name string `pulumi:"name"`
	// A set of identifying slugs for the Droplet sizes available in this region.
	Sizes []string `pulumi:"sizes"`
	// A human-readable string that is used as a unique identifier for each region.
	Slug string `pulumi:"slug"`
}

func GetRegionOutput(ctx *pulumi.Context, args GetRegionOutputArgs, opts ...pulumi.InvokeOption) GetRegionResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetRegionResult, error) {
			args := v.(GetRegionArgs)
			r, err := GetRegion(ctx, &args, opts...)
			var s GetRegionResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetRegionResultOutput)
}

// A collection of arguments for invoking getRegion.
type GetRegionOutputArgs struct {
	// A human-readable string that is used as a unique identifier for each region.
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetRegionOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionArgs)(nil)).Elem()
}

// A collection of values returned by getRegion.
type GetRegionResultOutput struct{ *pulumi.OutputState }

func (GetRegionResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRegionResult)(nil)).Elem()
}

func (o GetRegionResultOutput) ToGetRegionResultOutput() GetRegionResultOutput {
	return o
}

func (o GetRegionResultOutput) ToGetRegionResultOutputWithContext(ctx context.Context) GetRegionResultOutput {
	return o
}

// A boolean value that represents whether new Droplets can be created in this region.
func (o GetRegionResultOutput) Available() pulumi.BoolOutput {
	return o.ApplyT(func(v GetRegionResult) bool { return v.Available }).(pulumi.BoolOutput)
}

// A set of features available in this region.
func (o GetRegionResultOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionResult) []string { return v.Features }).(pulumi.StringArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRegionResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Id }).(pulumi.StringOutput)
}

// The display name of the region.
func (o GetRegionResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Name }).(pulumi.StringOutput)
}

// A set of identifying slugs for the Droplet sizes available in this region.
func (o GetRegionResultOutput) Sizes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetRegionResult) []string { return v.Sizes }).(pulumi.StringArrayOutput)
}

// A human-readable string that is used as a unique identifier for each region.
func (o GetRegionResultOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetRegionResult) string { return v.Slug }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRegionResultOutput{})
}
