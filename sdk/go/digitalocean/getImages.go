// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package digitalocean

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-digitalocean/sdk/v4/go/digitalocean/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

// Get information on images for use in other resources (e.g. creating a Droplet
// based on a snapshot), with the ability to filter and sort the results. If no filters are specified,
// all images will be returned.
//
// This data source is useful if the image in question is not managed by the provider or you need to utilize any
// of the image's data.
//
// Note: You can use the `getImage` data source to obtain metadata
// about a single image if you already know the `slug`, unique `name`, or `id` to retrieve.
func GetImages(ctx *pulumi.Context, args *GetImagesArgs, opts ...pulumi.InvokeOption) (*GetImagesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetImagesResult
	err := ctx.Invoke("digitalocean:index/getImages:getImages", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getImages.
type GetImagesArgs struct {
	// Filter the results.
	// The `filter` block is documented below.
	Filters []GetImagesFilter `pulumi:"filters"`
	// Sort the results.
	// The `sort` block is documented below.
	Sorts []GetImagesSort `pulumi:"sorts"`
}

// A collection of values returned by getImages.
type GetImagesResult struct {
	Filters []GetImagesFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A set of images satisfying any `filter` and `sort` criteria. Each image has the following attributes:
	Images []GetImagesImage `pulumi:"images"`
	Sorts  []GetImagesSort  `pulumi:"sorts"`
}

func GetImagesOutput(ctx *pulumi.Context, args GetImagesOutputArgs, opts ...pulumi.InvokeOption) GetImagesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetImagesResult, error) {
			args := v.(GetImagesArgs)
			r, err := GetImages(ctx, &args, opts...)
			var s GetImagesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetImagesResultOutput)
}

// A collection of arguments for invoking getImages.
type GetImagesOutputArgs struct {
	// Filter the results.
	// The `filter` block is documented below.
	Filters GetImagesFilterArrayInput `pulumi:"filters"`
	// Sort the results.
	// The `sort` block is documented below.
	Sorts GetImagesSortArrayInput `pulumi:"sorts"`
}

func (GetImagesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesArgs)(nil)).Elem()
}

// A collection of values returned by getImages.
type GetImagesResultOutput struct{ *pulumi.OutputState }

func (GetImagesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetImagesResult)(nil)).Elem()
}

func (o GetImagesResultOutput) ToGetImagesResultOutput() GetImagesResultOutput {
	return o
}

func (o GetImagesResultOutput) ToGetImagesResultOutputWithContext(ctx context.Context) GetImagesResultOutput {
	return o
}

func (o GetImagesResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetImagesResult] {
	return pulumix.Output[GetImagesResult]{
		OutputState: o.OutputState,
	}
}

func (o GetImagesResultOutput) Filters() GetImagesFilterArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []GetImagesFilter { return v.Filters }).(GetImagesFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetImagesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetImagesResult) string { return v.Id }).(pulumi.StringOutput)
}

// A set of images satisfying any `filter` and `sort` criteria. Each image has the following attributes:
func (o GetImagesResultOutput) Images() GetImagesImageArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []GetImagesImage { return v.Images }).(GetImagesImageArrayOutput)
}

func (o GetImagesResultOutput) Sorts() GetImagesSortArrayOutput {
	return o.ApplyT(func(v GetImagesResult) []GetImagesSort { return v.Sorts }).(GetImagesSortArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetImagesResultOutput{})
}
