# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class Cdn(pulumi.CustomResource):
    certificate_id: pulumi.Output[str]
    created_at: pulumi.Output[str]
    """
    The date and time when the CDN Endpoint was created.
    """
    custom_domain: pulumi.Output[str]
    """
    The fully qualified domain name (FQDN) of the custom subdomain used with the CDN Endpoint.
    """
    endpoint: pulumi.Output[str]
    """
    The fully qualified domain name (FQDN) from which the CDN-backed content is served.
    """
    origin: pulumi.Output[str]
    """
    The fully qualified domain name, (FQDN) for a Space.
    """
    ttl: pulumi.Output[float]
    """
    The time to live for the CDN Endpoint, in seconds. Default is 3600 seconds.
    * `certificate_id`- (Optional) The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
    """
    def __init__(__self__, resource_name, opts=None, certificate_id=None, custom_domain=None, origin=None, ttl=None, __name__=None, __opts__=None):
        """
        Provides a DigitalOcean CDN Endpoint resource for use with Spaces.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] custom_domain: The fully qualified domain name (FQDN) of the custom subdomain used with the CDN Endpoint.
        :param pulumi.Input[str] origin: The fully qualified domain name, (FQDN) for a Space.
        :param pulumi.Input[float] ttl: The time to live for the CDN Endpoint, in seconds. Default is 3600 seconds.
               * `certificate_id`- (Optional) The ID of a DigitalOcean managed TLS certificate used for SSL when a custom subdomain is provided.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['certificate_id'] = certificate_id

        __props__['custom_domain'] = custom_domain

        if origin is None:
            raise TypeError("Missing required property 'origin'")
        __props__['origin'] = origin

        __props__['ttl'] = ttl

        __props__['created_at'] = None
        __props__['endpoint'] = None

        super(Cdn, __self__).__init__(
            'digitalocean:index/cdn:Cdn',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

