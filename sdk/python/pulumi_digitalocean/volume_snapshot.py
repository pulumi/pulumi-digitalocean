# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from . import utilities, tables

class VolumeSnapshot(pulumi.CustomResource):
    created_at: pulumi.Output[str]
    """
    The date and time the volume snapshot was created.
    """
    min_disk_size: pulumi.Output[float]
    """
    The minimum size in gigabytes required for a volume to be created based on this volume snapshot.
    """
    name: pulumi.Output[str]
    """
    A name for the volume snapshot.
    """
    regions: pulumi.Output[list]
    """
    A list of DigitalOcean region "slugs" indicating where the volume snapshot is available.
    """
    size: pulumi.Output[float]
    """
    The billable size of the volume snapshot in gigabytes.
    """
    volume_id: pulumi.Output[str]
    """
    The ID of the volume from which the volume snapshot originated.
    """
    def __init__(__self__, resource_name, opts=None, name=None, volume_id=None, __name__=None, __opts__=None):
        """
        Provides a DigitalOcean Volume Snapshot which can be used to create a snapshot from an existing volume.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] name: A name for the volume snapshot.
        :param pulumi.Input[str] volume_id: The ID of the volume from which the volume snapshot originated.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['name'] = name

        if volume_id is None:
            raise TypeError("Missing required property 'volume_id'")
        __props__['volume_id'] = volume_id

        __props__['created_at'] = None
        __props__['min_disk_size'] = None
        __props__['regions'] = None
        __props__['size'] = None

        super(VolumeSnapshot, __self__).__init__(
            'digitalocean:index/volumeSnapshot:VolumeSnapshot',
            resource_name,
            __props__,
            opts)


    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

