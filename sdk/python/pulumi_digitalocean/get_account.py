# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Union
from . import utilities, tables

class GetAccountResult:
    """
    A collection of values returned by getAccount.
    """
    def __init__(__self__, droplet_limit=None, email=None, email_verified=None, floating_ip_limit=None, id=None, status=None, status_message=None, uuid=None):
        if droplet_limit and not isinstance(droplet_limit, float):
            raise TypeError("Expected argument 'droplet_limit' to be a float")
        __self__.droplet_limit = droplet_limit
        if email and not isinstance(email, str):
            raise TypeError("Expected argument 'email' to be a str")
        __self__.email = email
        if email_verified and not isinstance(email_verified, bool):
            raise TypeError("Expected argument 'email_verified' to be a bool")
        __self__.email_verified = email_verified
        if floating_ip_limit and not isinstance(floating_ip_limit, float):
            raise TypeError("Expected argument 'floating_ip_limit' to be a float")
        __self__.floating_ip_limit = floating_ip_limit
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        __self__.status = status
        if status_message and not isinstance(status_message, str):
            raise TypeError("Expected argument 'status_message' to be a str")
        __self__.status_message = status_message
        if uuid and not isinstance(uuid, str):
            raise TypeError("Expected argument 'uuid' to be a str")
        __self__.uuid = uuid
class AwaitableGetAccountResult(GetAccountResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetAccountResult(
            droplet_limit=self.droplet_limit,
            email=self.email,
            email_verified=self.email_verified,
            floating_ip_limit=self.floating_ip_limit,
            id=self.id,
            status=self.status,
            status_message=self.status_message,
            uuid=self.uuid)

def get_account(opts=None):
    """
    Get information on your DigitalOcean account.

    ## Example Usage

    Get the account:

    ```python
    import pulumi
    import pulumi_digitalocean as digitalocean

    example = digitalocean.get_account()
    ```
    """
    __args__ = dict()


    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('digitalocean:index/getAccount:getAccount', __args__, opts=opts).value

    return AwaitableGetAccountResult(
        droplet_limit=__ret__.get('dropletLimit'),
        email=__ret__.get('email'),
        email_verified=__ret__.get('emailVerified'),
        floating_ip_limit=__ret__.get('floatingIpLimit'),
        id=__ret__.get('id'),
        status=__ret__.get('status'),
        status_message=__ret__.get('statusMessage'),
        uuid=__ret__.get('uuid'))
