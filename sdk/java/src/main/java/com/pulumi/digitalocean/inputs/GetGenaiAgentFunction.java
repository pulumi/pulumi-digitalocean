// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGenaiAgentFunction extends com.pulumi.resources.InvokeArgs {

    public static final GetGenaiAgentFunction Empty = new GetGenaiAgentFunction();

    /**
     * API Key value
     * 
     */
    @Import(name="apiKey")
    private @Nullable String apiKey;

    /**
     * @return API Key value
     * 
     */
    public Optional<String> apiKey() {
        return Optional.ofNullable(this.apiKey);
    }

    /**
     * Created At timestamp for the Function
     * 
     */
    @Import(name="createdAt", required=true)
    private String createdAt;

    /**
     * @return Created At timestamp for the Function
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }

    /**
     * Description of the Function
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Description of the Function
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Name of function
     * 
     */
    @Import(name="faasname")
    private @Nullable String faasname;

    /**
     * @return Name of function
     * 
     */
    public Optional<String> faasname() {
        return Optional.ofNullable(this.faasname);
    }

    /**
     * Namespace of function
     * 
     */
    @Import(name="faasnamespace")
    private @Nullable String faasnamespace;

    /**
     * @return Namespace of function
     * 
     */
    public Optional<String> faasnamespace() {
        return Optional.ofNullable(this.faasnamespace);
    }

    /**
     * Guardrail UUID for the Function
     * 
     */
    @Import(name="guardrailUuid")
    private @Nullable String guardrailUuid;

    /**
     * @return Guardrail UUID for the Function
     * 
     */
    public Optional<String> guardrailUuid() {
        return Optional.ofNullable(this.guardrailUuid);
    }

    /**
     * Name of function
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of function
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Updated At timestamp for the Agent
     * 
     */
    @Import(name="updatedAt", required=true)
    private String updatedAt;

    /**
     * @return Updated At timestamp for the Agent
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    /**
     * Url of the Deployment
     * 
     */
    @Import(name="url")
    private @Nullable String url;

    /**
     * @return Url of the Deployment
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }

    /**
     * API Key value
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return API Key value
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetGenaiAgentFunction() {}

    private GetGenaiAgentFunction(GetGenaiAgentFunction $) {
        this.apiKey = $.apiKey;
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.faasname = $.faasname;
        this.faasnamespace = $.faasnamespace;
        this.guardrailUuid = $.guardrailUuid;
        this.name = $.name;
        this.updatedAt = $.updatedAt;
        this.url = $.url;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGenaiAgentFunction defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGenaiAgentFunction $;

        public Builder() {
            $ = new GetGenaiAgentFunction();
        }

        public Builder(GetGenaiAgentFunction defaults) {
            $ = new GetGenaiAgentFunction(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiKey API Key value
         * 
         * @return builder
         * 
         */
        public Builder apiKey(@Nullable String apiKey) {
            $.apiKey = apiKey;
            return this;
        }

        /**
         * @param createdAt Created At timestamp for the Function
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param description Description of the Function
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param faasname Name of function
         * 
         * @return builder
         * 
         */
        public Builder faasname(@Nullable String faasname) {
            $.faasname = faasname;
            return this;
        }

        /**
         * @param faasnamespace Namespace of function
         * 
         * @return builder
         * 
         */
        public Builder faasnamespace(@Nullable String faasnamespace) {
            $.faasnamespace = faasnamespace;
            return this;
        }

        /**
         * @param guardrailUuid Guardrail UUID for the Function
         * 
         * @return builder
         * 
         */
        public Builder guardrailUuid(@Nullable String guardrailUuid) {
            $.guardrailUuid = guardrailUuid;
            return this;
        }

        /**
         * @param name Name of function
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param updatedAt Updated At timestamp for the Agent
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param url Url of the Deployment
         * 
         * @return builder
         * 
         */
        public Builder url(@Nullable String url) {
            $.url = url;
            return this;
        }

        /**
         * @param uuid API Key value
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetGenaiAgentFunction build() {
            if ($.createdAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentFunction", "createdAt");
            }
            if ($.updatedAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentFunction", "updatedAt");
            }
            return $;
        }
    }

}
