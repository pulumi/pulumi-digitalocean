// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetAppDedicatedIpArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetAppDedicatedIpArgs Empty = new GetAppDedicatedIpArgs();

    /**
     * The ID of the dedicated egress IP.
     * 
     */
    @Import(name="id", required=true)
    private Output<String> id;

    /**
     * @return The ID of the dedicated egress IP.
     * 
     */
    public Output<String> id() {
        return this.id;
    }

    /**
     * The IP address of the dedicated egress IP.
     * 
     */
    @Import(name="ip", required=true)
    private Output<String> ip;

    /**
     * @return The IP address of the dedicated egress IP.
     * 
     */
    public Output<String> ip() {
        return this.ip;
    }

    /**
     * The status of the dedicated egress IP.
     * 
     */
    @Import(name="status", required=true)
    private Output<String> status;

    /**
     * @return The status of the dedicated egress IP.
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    private GetAppDedicatedIpArgs() {}

    private GetAppDedicatedIpArgs(GetAppDedicatedIpArgs $) {
        this.id = $.id;
        this.ip = $.ip;
        this.status = $.status;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetAppDedicatedIpArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetAppDedicatedIpArgs $;

        public Builder() {
            $ = new GetAppDedicatedIpArgs();
        }

        public Builder(GetAppDedicatedIpArgs defaults) {
            $ = new GetAppDedicatedIpArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The ID of the dedicated egress IP.
         * 
         * @return builder
         * 
         */
        public Builder id(Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The ID of the dedicated egress IP.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param ip The IP address of the dedicated egress IP.
         * 
         * @return builder
         * 
         */
        public Builder ip(Output<String> ip) {
            $.ip = ip;
            return this;
        }

        /**
         * @param ip The IP address of the dedicated egress IP.
         * 
         * @return builder
         * 
         */
        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param status The status of the dedicated egress IP.
         * 
         * @return builder
         * 
         */
        public Builder status(Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status The status of the dedicated egress IP.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public GetAppDedicatedIpArgs build() {
            if ($.id == null) {
                throw new MissingRequiredPropertyException("GetAppDedicatedIpArgs", "id");
            }
            if ($.ip == null) {
                throw new MissingRequiredPropertyException("GetAppDedicatedIpArgs", "ip");
            }
            if ($.status == null) {
                throw new MissingRequiredPropertyException("GetAppDedicatedIpArgs", "status");
            }
            return $;
        }
    }

}
