// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetFloatingIpPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFloatingIpPlainArgs Empty = new GetFloatingIpPlainArgs();

    /**
     * The allocated IP address of the specific floating IP to retrieve.
     * 
     */
    @Import(name="ipAddress", required=true)
    private String ipAddress;

    /**
     * @return The allocated IP address of the specific floating IP to retrieve.
     * 
     */
    public String ipAddress() {
        return this.ipAddress;
    }

    private GetFloatingIpPlainArgs() {}

    private GetFloatingIpPlainArgs(GetFloatingIpPlainArgs $) {
        this.ipAddress = $.ipAddress;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFloatingIpPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFloatingIpPlainArgs $;

        public Builder() {
            $ = new GetFloatingIpPlainArgs();
        }

        public Builder(GetFloatingIpPlainArgs defaults) {
            $ = new GetFloatingIpPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ipAddress The allocated IP address of the specific floating IP to retrieve.
         * 
         * @return builder
         * 
         */
        public Builder ipAddress(String ipAddress) {
            $.ipAddress = ipAddress;
            return this;
        }

        public GetFloatingIpPlainArgs build() {
            if ($.ipAddress == null) {
                throw new MissingRequiredPropertyException("GetFloatingIpPlainArgs", "ipAddress");
            }
            return $;
        }
    }

}
