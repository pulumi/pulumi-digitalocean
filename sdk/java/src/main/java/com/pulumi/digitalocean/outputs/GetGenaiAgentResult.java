// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.digitalocean.outputs.GetGenaiAgentAgentGuardrail;
import com.pulumi.digitalocean.outputs.GetGenaiAgentAnthropicApiKey;
import com.pulumi.digitalocean.outputs.GetGenaiAgentApiKey;
import com.pulumi.digitalocean.outputs.GetGenaiAgentApiKeyInfo;
import com.pulumi.digitalocean.outputs.GetGenaiAgentChatbot;
import com.pulumi.digitalocean.outputs.GetGenaiAgentChatbotIdentifier;
import com.pulumi.digitalocean.outputs.GetGenaiAgentChildAgent;
import com.pulumi.digitalocean.outputs.GetGenaiAgentDeployment;
import com.pulumi.digitalocean.outputs.GetGenaiAgentFunction;
import com.pulumi.digitalocean.outputs.GetGenaiAgentKnowledgeBase;
import com.pulumi.digitalocean.outputs.GetGenaiAgentModel;
import com.pulumi.digitalocean.outputs.GetGenaiAgentOpenAiApiKey;
import com.pulumi.digitalocean.outputs.GetGenaiAgentParentAgent;
import com.pulumi.digitalocean.outputs.GetGenaiAgentTemplate;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGenaiAgentResult {
    private @Nullable List<GetGenaiAgentAgentGuardrail> agentGuardrails;
    private String agentId;
    private @Nullable List<GetGenaiAgentAnthropicApiKey> anthropicApiKeys;
    private @Nullable List<GetGenaiAgentApiKeyInfo> apiKeyInfos;
    private @Nullable List<GetGenaiAgentApiKey> apiKeys;
    private @Nullable List<GetGenaiAgentChatbotIdentifier> chatbotIdentifiers;
    private @Nullable List<GetGenaiAgentChatbot> chatbots;
    private List<GetGenaiAgentChildAgent> childAgents;
    private String createdAt;
    private @Nullable List<GetGenaiAgentDeployment> deployments;
    private @Nullable String description;
    private @Nullable List<GetGenaiAgentFunction> functions;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String ifCase;
    private String instruction;
    private @Nullable Integer k;
    private @Nullable List<GetGenaiAgentKnowledgeBase> knowledgeBases;
    private @Nullable Integer maxTokens;
    private String modelUuid;
    private List<GetGenaiAgentModel> models;
    private String name;
    private @Nullable List<GetGenaiAgentOpenAiApiKey> openAiApiKeys;
    private List<GetGenaiAgentParentAgent> parentAgents;
    private String projectId;
    private String region;
    private @Nullable String retrievalMethod;
    private String routeCreatedAt;
    private @Nullable String routeCreatedBy;
    private @Nullable String routeName;
    private @Nullable String routeUuid;
    private @Nullable List<String> tags;
    private @Nullable Double temperature;
    private @Nullable List<GetGenaiAgentTemplate> templates;
    private @Nullable Double topP;
    private String updatedAt;
    private @Nullable String url;
    private @Nullable String userId;

    private GetGenaiAgentResult() {}
    public List<GetGenaiAgentAgentGuardrail> agentGuardrails() {
        return this.agentGuardrails == null ? List.of() : this.agentGuardrails;
    }
    public String agentId() {
        return this.agentId;
    }
    public List<GetGenaiAgentAnthropicApiKey> anthropicApiKeys() {
        return this.anthropicApiKeys == null ? List.of() : this.anthropicApiKeys;
    }
    public List<GetGenaiAgentApiKeyInfo> apiKeyInfos() {
        return this.apiKeyInfos == null ? List.of() : this.apiKeyInfos;
    }
    public List<GetGenaiAgentApiKey> apiKeys() {
        return this.apiKeys == null ? List.of() : this.apiKeys;
    }
    public List<GetGenaiAgentChatbotIdentifier> chatbotIdentifiers() {
        return this.chatbotIdentifiers == null ? List.of() : this.chatbotIdentifiers;
    }
    public List<GetGenaiAgentChatbot> chatbots() {
        return this.chatbots == null ? List.of() : this.chatbots;
    }
    public List<GetGenaiAgentChildAgent> childAgents() {
        return this.childAgents;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public List<GetGenaiAgentDeployment> deployments() {
        return this.deployments == null ? List.of() : this.deployments;
    }
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }
    public List<GetGenaiAgentFunction> functions() {
        return this.functions == null ? List.of() : this.functions;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> ifCase() {
        return Optional.ofNullable(this.ifCase);
    }
    public String instruction() {
        return this.instruction;
    }
    public Optional<Integer> k() {
        return Optional.ofNullable(this.k);
    }
    public List<GetGenaiAgentKnowledgeBase> knowledgeBases() {
        return this.knowledgeBases == null ? List.of() : this.knowledgeBases;
    }
    public Optional<Integer> maxTokens() {
        return Optional.ofNullable(this.maxTokens);
    }
    public String modelUuid() {
        return this.modelUuid;
    }
    public List<GetGenaiAgentModel> models() {
        return this.models;
    }
    public String name() {
        return this.name;
    }
    public List<GetGenaiAgentOpenAiApiKey> openAiApiKeys() {
        return this.openAiApiKeys == null ? List.of() : this.openAiApiKeys;
    }
    public List<GetGenaiAgentParentAgent> parentAgents() {
        return this.parentAgents;
    }
    public String projectId() {
        return this.projectId;
    }
    public String region() {
        return this.region;
    }
    public Optional<String> retrievalMethod() {
        return Optional.ofNullable(this.retrievalMethod);
    }
    public String routeCreatedAt() {
        return this.routeCreatedAt;
    }
    public Optional<String> routeCreatedBy() {
        return Optional.ofNullable(this.routeCreatedBy);
    }
    public Optional<String> routeName() {
        return Optional.ofNullable(this.routeName);
    }
    public Optional<String> routeUuid() {
        return Optional.ofNullable(this.routeUuid);
    }
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    public Optional<Double> temperature() {
        return Optional.ofNullable(this.temperature);
    }
    public List<GetGenaiAgentTemplate> templates() {
        return this.templates == null ? List.of() : this.templates;
    }
    public Optional<Double> topP() {
        return Optional.ofNullable(this.topP);
    }
    public String updatedAt() {
        return this.updatedAt;
    }
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGenaiAgentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetGenaiAgentAgentGuardrail> agentGuardrails;
        private String agentId;
        private @Nullable List<GetGenaiAgentAnthropicApiKey> anthropicApiKeys;
        private @Nullable List<GetGenaiAgentApiKeyInfo> apiKeyInfos;
        private @Nullable List<GetGenaiAgentApiKey> apiKeys;
        private @Nullable List<GetGenaiAgentChatbotIdentifier> chatbotIdentifiers;
        private @Nullable List<GetGenaiAgentChatbot> chatbots;
        private List<GetGenaiAgentChildAgent> childAgents;
        private String createdAt;
        private @Nullable List<GetGenaiAgentDeployment> deployments;
        private @Nullable String description;
        private @Nullable List<GetGenaiAgentFunction> functions;
        private String id;
        private @Nullable String ifCase;
        private String instruction;
        private @Nullable Integer k;
        private @Nullable List<GetGenaiAgentKnowledgeBase> knowledgeBases;
        private @Nullable Integer maxTokens;
        private String modelUuid;
        private List<GetGenaiAgentModel> models;
        private String name;
        private @Nullable List<GetGenaiAgentOpenAiApiKey> openAiApiKeys;
        private List<GetGenaiAgentParentAgent> parentAgents;
        private String projectId;
        private String region;
        private @Nullable String retrievalMethod;
        private String routeCreatedAt;
        private @Nullable String routeCreatedBy;
        private @Nullable String routeName;
        private @Nullable String routeUuid;
        private @Nullable List<String> tags;
        private @Nullable Double temperature;
        private @Nullable List<GetGenaiAgentTemplate> templates;
        private @Nullable Double topP;
        private String updatedAt;
        private @Nullable String url;
        private @Nullable String userId;
        public Builder() {}
        public Builder(GetGenaiAgentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentGuardrails = defaults.agentGuardrails;
    	      this.agentId = defaults.agentId;
    	      this.anthropicApiKeys = defaults.anthropicApiKeys;
    	      this.apiKeyInfos = defaults.apiKeyInfos;
    	      this.apiKeys = defaults.apiKeys;
    	      this.chatbotIdentifiers = defaults.chatbotIdentifiers;
    	      this.chatbots = defaults.chatbots;
    	      this.childAgents = defaults.childAgents;
    	      this.createdAt = defaults.createdAt;
    	      this.deployments = defaults.deployments;
    	      this.description = defaults.description;
    	      this.functions = defaults.functions;
    	      this.id = defaults.id;
    	      this.ifCase = defaults.ifCase;
    	      this.instruction = defaults.instruction;
    	      this.k = defaults.k;
    	      this.knowledgeBases = defaults.knowledgeBases;
    	      this.maxTokens = defaults.maxTokens;
    	      this.modelUuid = defaults.modelUuid;
    	      this.models = defaults.models;
    	      this.name = defaults.name;
    	      this.openAiApiKeys = defaults.openAiApiKeys;
    	      this.parentAgents = defaults.parentAgents;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.retrievalMethod = defaults.retrievalMethod;
    	      this.routeCreatedAt = defaults.routeCreatedAt;
    	      this.routeCreatedBy = defaults.routeCreatedBy;
    	      this.routeName = defaults.routeName;
    	      this.routeUuid = defaults.routeUuid;
    	      this.tags = defaults.tags;
    	      this.temperature = defaults.temperature;
    	      this.templates = defaults.templates;
    	      this.topP = defaults.topP;
    	      this.updatedAt = defaults.updatedAt;
    	      this.url = defaults.url;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder agentGuardrails(@Nullable List<GetGenaiAgentAgentGuardrail> agentGuardrails) {

            this.agentGuardrails = agentGuardrails;
            return this;
        }
        public Builder agentGuardrails(GetGenaiAgentAgentGuardrail... agentGuardrails) {
            return agentGuardrails(List.of(agentGuardrails));
        }
        @CustomType.Setter
        public Builder agentId(String agentId) {
            if (agentId == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "agentId");
            }
            this.agentId = agentId;
            return this;
        }
        @CustomType.Setter
        public Builder anthropicApiKeys(@Nullable List<GetGenaiAgentAnthropicApiKey> anthropicApiKeys) {

            this.anthropicApiKeys = anthropicApiKeys;
            return this;
        }
        public Builder anthropicApiKeys(GetGenaiAgentAnthropicApiKey... anthropicApiKeys) {
            return anthropicApiKeys(List.of(anthropicApiKeys));
        }
        @CustomType.Setter
        public Builder apiKeyInfos(@Nullable List<GetGenaiAgentApiKeyInfo> apiKeyInfos) {

            this.apiKeyInfos = apiKeyInfos;
            return this;
        }
        public Builder apiKeyInfos(GetGenaiAgentApiKeyInfo... apiKeyInfos) {
            return apiKeyInfos(List.of(apiKeyInfos));
        }
        @CustomType.Setter
        public Builder apiKeys(@Nullable List<GetGenaiAgentApiKey> apiKeys) {

            this.apiKeys = apiKeys;
            return this;
        }
        public Builder apiKeys(GetGenaiAgentApiKey... apiKeys) {
            return apiKeys(List.of(apiKeys));
        }
        @CustomType.Setter
        public Builder chatbotIdentifiers(@Nullable List<GetGenaiAgentChatbotIdentifier> chatbotIdentifiers) {

            this.chatbotIdentifiers = chatbotIdentifiers;
            return this;
        }
        public Builder chatbotIdentifiers(GetGenaiAgentChatbotIdentifier... chatbotIdentifiers) {
            return chatbotIdentifiers(List.of(chatbotIdentifiers));
        }
        @CustomType.Setter
        public Builder chatbots(@Nullable List<GetGenaiAgentChatbot> chatbots) {

            this.chatbots = chatbots;
            return this;
        }
        public Builder chatbots(GetGenaiAgentChatbot... chatbots) {
            return chatbots(List.of(chatbots));
        }
        @CustomType.Setter
        public Builder childAgents(List<GetGenaiAgentChildAgent> childAgents) {
            if (childAgents == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "childAgents");
            }
            this.childAgents = childAgents;
            return this;
        }
        public Builder childAgents(GetGenaiAgentChildAgent... childAgents) {
            return childAgents(List.of(childAgents));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder deployments(@Nullable List<GetGenaiAgentDeployment> deployments) {

            this.deployments = deployments;
            return this;
        }
        public Builder deployments(GetGenaiAgentDeployment... deployments) {
            return deployments(List.of(deployments));
        }
        @CustomType.Setter
        public Builder description(@Nullable String description) {

            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder functions(@Nullable List<GetGenaiAgentFunction> functions) {

            this.functions = functions;
            return this;
        }
        public Builder functions(GetGenaiAgentFunction... functions) {
            return functions(List.of(functions));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder ifCase(@Nullable String ifCase) {

            this.ifCase = ifCase;
            return this;
        }
        @CustomType.Setter
        public Builder instruction(String instruction) {
            if (instruction == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "instruction");
            }
            this.instruction = instruction;
            return this;
        }
        @CustomType.Setter
        public Builder k(@Nullable Integer k) {

            this.k = k;
            return this;
        }
        @CustomType.Setter
        public Builder knowledgeBases(@Nullable List<GetGenaiAgentKnowledgeBase> knowledgeBases) {

            this.knowledgeBases = knowledgeBases;
            return this;
        }
        public Builder knowledgeBases(GetGenaiAgentKnowledgeBase... knowledgeBases) {
            return knowledgeBases(List.of(knowledgeBases));
        }
        @CustomType.Setter
        public Builder maxTokens(@Nullable Integer maxTokens) {

            this.maxTokens = maxTokens;
            return this;
        }
        @CustomType.Setter
        public Builder modelUuid(String modelUuid) {
            if (modelUuid == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "modelUuid");
            }
            this.modelUuid = modelUuid;
            return this;
        }
        @CustomType.Setter
        public Builder models(List<GetGenaiAgentModel> models) {
            if (models == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "models");
            }
            this.models = models;
            return this;
        }
        public Builder models(GetGenaiAgentModel... models) {
            return models(List.of(models));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder openAiApiKeys(@Nullable List<GetGenaiAgentOpenAiApiKey> openAiApiKeys) {

            this.openAiApiKeys = openAiApiKeys;
            return this;
        }
        public Builder openAiApiKeys(GetGenaiAgentOpenAiApiKey... openAiApiKeys) {
            return openAiApiKeys(List.of(openAiApiKeys));
        }
        @CustomType.Setter
        public Builder parentAgents(List<GetGenaiAgentParentAgent> parentAgents) {
            if (parentAgents == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "parentAgents");
            }
            this.parentAgents = parentAgents;
            return this;
        }
        public Builder parentAgents(GetGenaiAgentParentAgent... parentAgents) {
            return parentAgents(List.of(parentAgents));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder retrievalMethod(@Nullable String retrievalMethod) {

            this.retrievalMethod = retrievalMethod;
            return this;
        }
        @CustomType.Setter
        public Builder routeCreatedAt(String routeCreatedAt) {
            if (routeCreatedAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "routeCreatedAt");
            }
            this.routeCreatedAt = routeCreatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder routeCreatedBy(@Nullable String routeCreatedBy) {

            this.routeCreatedBy = routeCreatedBy;
            return this;
        }
        @CustomType.Setter
        public Builder routeName(@Nullable String routeName) {

            this.routeName = routeName;
            return this;
        }
        @CustomType.Setter
        public Builder routeUuid(@Nullable String routeUuid) {

            this.routeUuid = routeUuid;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder temperature(@Nullable Double temperature) {

            this.temperature = temperature;
            return this;
        }
        @CustomType.Setter
        public Builder templates(@Nullable List<GetGenaiAgentTemplate> templates) {

            this.templates = templates;
            return this;
        }
        public Builder templates(GetGenaiAgentTemplate... templates) {
            return templates(List.of(templates));
        }
        @CustomType.Setter
        public Builder topP(@Nullable Double topP) {

            this.topP = topP;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentResult", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        @CustomType.Setter
        public Builder userId(@Nullable String userId) {

            this.userId = userId;
            return this;
        }
        public GetGenaiAgentResult build() {
            final var _resultValue = new GetGenaiAgentResult();
            _resultValue.agentGuardrails = agentGuardrails;
            _resultValue.agentId = agentId;
            _resultValue.anthropicApiKeys = anthropicApiKeys;
            _resultValue.apiKeyInfos = apiKeyInfos;
            _resultValue.apiKeys = apiKeys;
            _resultValue.chatbotIdentifiers = chatbotIdentifiers;
            _resultValue.chatbots = chatbots;
            _resultValue.childAgents = childAgents;
            _resultValue.createdAt = createdAt;
            _resultValue.deployments = deployments;
            _resultValue.description = description;
            _resultValue.functions = functions;
            _resultValue.id = id;
            _resultValue.ifCase = ifCase;
            _resultValue.instruction = instruction;
            _resultValue.k = k;
            _resultValue.knowledgeBases = knowledgeBases;
            _resultValue.maxTokens = maxTokens;
            _resultValue.modelUuid = modelUuid;
            _resultValue.models = models;
            _resultValue.name = name;
            _resultValue.openAiApiKeys = openAiApiKeys;
            _resultValue.parentAgents = parentAgents;
            _resultValue.projectId = projectId;
            _resultValue.region = region;
            _resultValue.retrievalMethod = retrievalMethod;
            _resultValue.routeCreatedAt = routeCreatedAt;
            _resultValue.routeCreatedBy = routeCreatedBy;
            _resultValue.routeName = routeName;
            _resultValue.routeUuid = routeUuid;
            _resultValue.tags = tags;
            _resultValue.temperature = temperature;
            _resultValue.templates = templates;
            _resultValue.topP = topP;
            _resultValue.updatedAt = updatedAt;
            _resultValue.url = url;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
