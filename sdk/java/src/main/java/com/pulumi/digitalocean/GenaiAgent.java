// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.digitalocean.GenaiAgentArgs;
import com.pulumi.digitalocean.Utilities;
import com.pulumi.digitalocean.inputs.GenaiAgentState;
import com.pulumi.digitalocean.outputs.GenaiAgentAgentGuardrail;
import com.pulumi.digitalocean.outputs.GenaiAgentAnthropicApiKey;
import com.pulumi.digitalocean.outputs.GenaiAgentApiKey;
import com.pulumi.digitalocean.outputs.GenaiAgentApiKeyInfo;
import com.pulumi.digitalocean.outputs.GenaiAgentChatbot;
import com.pulumi.digitalocean.outputs.GenaiAgentChatbotIdentifier;
import com.pulumi.digitalocean.outputs.GenaiAgentChildAgent;
import com.pulumi.digitalocean.outputs.GenaiAgentDeployment;
import com.pulumi.digitalocean.outputs.GenaiAgentFunction;
import com.pulumi.digitalocean.outputs.GenaiAgentKnowledgeBase;
import com.pulumi.digitalocean.outputs.GenaiAgentModel;
import com.pulumi.digitalocean.outputs.GenaiAgentOpenAiApiKey;
import com.pulumi.digitalocean.outputs.GenaiAgentParentAgent;
import com.pulumi.digitalocean.outputs.GenaiAgentTemplate;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

@ResourceType(type="digitalocean:index/genaiAgent:GenaiAgent")
public class GenaiAgent extends com.pulumi.resources.CustomResource {
    /**
     * AgentGuardrail represents a Guardrail attached to Gen AI Agent
     * 
     */
    @Export(name="agentGuardrails", refs={List.class,GenaiAgentAgentGuardrail.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentAgentGuardrail>> agentGuardrails;

    /**
     * @return AgentGuardrail represents a Guardrail attached to Gen AI Agent
     * 
     */
    public Output<Optional<List<GenaiAgentAgentGuardrail>>> agentGuardrails() {
        return Codegen.optional(this.agentGuardrails);
    }
    /**
     * Anthropic API Key information
     * 
     */
    @Export(name="anthropicApiKeys", refs={List.class,GenaiAgentAnthropicApiKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentAnthropicApiKey>> anthropicApiKeys;

    /**
     * @return Anthropic API Key information
     * 
     */
    public Output<Optional<List<GenaiAgentAnthropicApiKey>>> anthropicApiKeys() {
        return Codegen.optional(this.anthropicApiKeys);
    }
    /**
     * Optional Anthropic API key ID to use with Anthropic models
     * 
     */
    @Export(name="anthropicKeyUuid", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> anthropicKeyUuid;

    /**
     * @return Optional Anthropic API key ID to use with Anthropic models
     * 
     */
    public Output<Optional<String>> anthropicKeyUuid() {
        return Codegen.optional(this.anthropicKeyUuid);
    }
    /**
     * List of API Key Infos
     * 
     */
    @Export(name="apiKeyInfos", refs={List.class,GenaiAgentApiKeyInfo.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentApiKeyInfo>> apiKeyInfos;

    /**
     * @return List of API Key Infos
     * 
     */
    public Output<Optional<List<GenaiAgentApiKeyInfo>>> apiKeyInfos() {
        return Codegen.optional(this.apiKeyInfos);
    }
    /**
     * List of API Keys
     * 
     */
    @Export(name="apiKeys", refs={List.class,GenaiAgentApiKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentApiKey>> apiKeys;

    /**
     * @return List of API Keys
     * 
     */
    public Output<Optional<List<GenaiAgentApiKey>>> apiKeys() {
        return Codegen.optional(this.apiKeys);
    }
    /**
     * List of Chatbot Identifiers
     * 
     */
    @Export(name="chatbotIdentifiers", refs={List.class,GenaiAgentChatbotIdentifier.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentChatbotIdentifier>> chatbotIdentifiers;

    /**
     * @return List of Chatbot Identifiers
     * 
     */
    public Output<Optional<List<GenaiAgentChatbotIdentifier>>> chatbotIdentifiers() {
        return Codegen.optional(this.chatbotIdentifiers);
    }
    /**
     * ChatBot configuration
     * 
     */
    @Export(name="chatbots", refs={List.class,GenaiAgentChatbot.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentChatbot>> chatbots;

    /**
     * @return ChatBot configuration
     * 
     */
    public Output<Optional<List<GenaiAgentChatbot>>> chatbots() {
        return Codegen.optional(this.chatbots);
    }
    /**
     * List of child agents
     * 
     */
    @Export(name="childAgents", refs={List.class,GenaiAgentChildAgent.class}, tree="[0,1]")
    private Output<List<GenaiAgentChildAgent>> childAgents;

    /**
     * @return List of child agents
     * 
     */
    public Output<List<GenaiAgentChildAgent>> childAgents() {
        return this.childAgents;
    }
    /**
     * Timestamp when the Agent was created
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> createdAt;

    /**
     * @return Timestamp when the Agent was created
     * 
     */
    public Output<Optional<String>> createdAt() {
        return Codegen.optional(this.createdAt);
    }
    /**
     * List of API Key Infos
     * 
     */
    @Export(name="deployments", refs={List.class,GenaiAgentDeployment.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentDeployment>> deployments;

    /**
     * @return List of API Key Infos
     * 
     */
    public Output<Optional<List<GenaiAgentDeployment>>> deployments() {
        return Codegen.optional(this.deployments);
    }
    /**
     * Description for the Agent
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Description for the Agent
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * List of Functions
     * 
     */
    @Export(name="functions", refs={List.class,GenaiAgentFunction.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentFunction>> functions;

    /**
     * @return List of Functions
     * 
     */
    public Output<Optional<List<GenaiAgentFunction>>> functions() {
        return Codegen.optional(this.functions);
    }
    /**
     * If case condition
     * 
     */
    @Export(name="ifCase", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> ifCase;

    /**
     * @return If case condition
     * 
     */
    public Output<Optional<String>> ifCase() {
        return Codegen.optional(this.ifCase);
    }
    /**
     * Instruction for the Agent
     * 
     */
    @Export(name="instruction", refs={String.class}, tree="[0]")
    private Output<String> instruction;

    /**
     * @return Instruction for the Agent
     * 
     */
    public Output<String> instruction() {
        return this.instruction;
    }
    /**
     * K value
     * 
     */
    @Export(name="k", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> k;

    /**
     * @return K value
     * 
     */
    public Output<Optional<Integer>> k() {
        return Codegen.optional(this.k);
    }
    /**
     * Ids of the knowledge base(s) to attach to the agent
     * 
     */
    @Export(name="knowledgeBaseUuids", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> knowledgeBaseUuids;

    /**
     * @return Ids of the knowledge base(s) to attach to the agent
     * 
     */
    public Output<Optional<List<String>>> knowledgeBaseUuids() {
        return Codegen.optional(this.knowledgeBaseUuids);
    }
    /**
     * List of Knowledge Bases
     * 
     */
    @Export(name="knowledgeBases", refs={List.class,GenaiAgentKnowledgeBase.class}, tree="[0,1]")
    private Output<List<GenaiAgentKnowledgeBase>> knowledgeBases;

    /**
     * @return List of Knowledge Bases
     * 
     */
    public Output<List<GenaiAgentKnowledgeBase>> knowledgeBases() {
        return this.knowledgeBases;
    }
    /**
     * Maximum tokens allowed
     * 
     */
    @Export(name="maxTokens", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> maxTokens;

    /**
     * @return Maximum tokens allowed
     * 
     */
    public Output<Optional<Integer>> maxTokens() {
        return Codegen.optional(this.maxTokens);
    }
    /**
     * Model UUID of the Agent
     * 
     */
    @Export(name="modelUuid", refs={String.class}, tree="[0]")
    private Output<String> modelUuid;

    /**
     * @return Model UUID of the Agent
     * 
     */
    public Output<String> modelUuid() {
        return this.modelUuid;
    }
    /**
     * Model of the Agent
     * 
     */
    @Export(name="models", refs={List.class,GenaiAgentModel.class}, tree="[0,1]")
    private Output<List<GenaiAgentModel>> models;

    /**
     * @return Model of the Agent
     * 
     */
    public Output<List<GenaiAgentModel>> models() {
        return this.models;
    }
    /**
     * Name of the Agent
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Name of the Agent
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * OpenAI API Key information
     * 
     */
    @Export(name="openAiApiKeys", refs={List.class,GenaiAgentOpenAiApiKey.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentOpenAiApiKey>> openAiApiKeys;

    /**
     * @return OpenAI API Key information
     * 
     */
    public Output<Optional<List<GenaiAgentOpenAiApiKey>>> openAiApiKeys() {
        return Codegen.optional(this.openAiApiKeys);
    }
    /**
     * Optional OpenAI API key ID to use with OpenAI models
     * 
     */
    @Export(name="openAiKeyUuid", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> openAiKeyUuid;

    /**
     * @return Optional OpenAI API key ID to use with OpenAI models
     * 
     */
    public Output<Optional<String>> openAiKeyUuid() {
        return Codegen.optional(this.openAiKeyUuid);
    }
    /**
     * List of child agents
     * 
     */
    @Export(name="parentAgents", refs={List.class,GenaiAgentParentAgent.class}, tree="[0,1]")
    private Output<List<GenaiAgentParentAgent>> parentAgents;

    /**
     * @return List of child agents
     * 
     */
    public Output<List<GenaiAgentParentAgent>> parentAgents() {
        return this.parentAgents;
    }
    /**
     * Project ID of the Agent
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return Project ID of the Agent
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Indicates if the agent should provide citations in responses
     * 
     */
    @Export(name="provideCitations", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> provideCitations;

    /**
     * @return Indicates if the agent should provide citations in responses
     * 
     */
    public Output<Optional<Boolean>> provideCitations() {
        return Codegen.optional(this.provideCitations);
    }
    /**
     * Region where the Agent is deployed
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return Region where the Agent is deployed
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * Retrieval method used
     * 
     */
    @Export(name="retrievalMethod", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> retrievalMethod;

    /**
     * @return Retrieval method used
     * 
     */
    public Output<Optional<String>> retrievalMethod() {
        return Codegen.optional(this.retrievalMethod);
    }
    /**
     * Timestamp when the route was created
     * 
     */
    @Export(name="routeCreatedAt", refs={String.class}, tree="[0]")
    private Output<String> routeCreatedAt;

    /**
     * @return Timestamp when the route was created
     * 
     */
    public Output<String> routeCreatedAt() {
        return this.routeCreatedAt;
    }
    /**
     * User who created the route
     * 
     */
    @Export(name="routeCreatedBy", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routeCreatedBy;

    /**
     * @return User who created the route
     * 
     */
    public Output<Optional<String>> routeCreatedBy() {
        return Codegen.optional(this.routeCreatedBy);
    }
    /**
     * Route name
     * 
     */
    @Export(name="routeName", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routeName;

    /**
     * @return Route name
     * 
     */
    public Output<Optional<String>> routeName() {
        return Codegen.optional(this.routeName);
    }
    /**
     * Route UUID
     * 
     */
    @Export(name="routeUuid", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> routeUuid;

    /**
     * @return Route UUID
     * 
     */
    public Output<Optional<String>> routeUuid() {
        return Codegen.optional(this.routeUuid);
    }
    /**
     * List of Tags
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return List of Tags
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * Agent temperature setting
     * 
     */
    @Export(name="temperature", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> temperature;

    /**
     * @return Agent temperature setting
     * 
     */
    public Output<Optional<Double>> temperature() {
        return Codegen.optional(this.temperature);
    }
    /**
     * Agent Template
     * 
     */
    @Export(name="templates", refs={List.class,GenaiAgentTemplate.class}, tree="[0,1]")
    private Output</* @Nullable */ List<GenaiAgentTemplate>> templates;

    /**
     * @return Agent Template
     * 
     */
    public Output<Optional<List<GenaiAgentTemplate>>> templates() {
        return Codegen.optional(this.templates);
    }
    /**
     * Top P sampling parameter
     * 
     */
    @Export(name="topP", refs={Double.class}, tree="[0]")
    private Output</* @Nullable */ Double> topP;

    /**
     * @return Top P sampling parameter
     * 
     */
    public Output<Optional<Double>> topP() {
        return Codegen.optional(this.topP);
    }
    /**
     * Timestamp when the Agent was updated
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return Timestamp when the Agent was updated
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * URL for the Agent
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> url;

    /**
     * @return URL for the Agent
     * 
     */
    public Output<Optional<String>> url() {
        return Codegen.optional(this.url);
    }
    /**
     * User ID linked with the Agent
     * 
     */
    @Export(name="userId", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> userId;

    /**
     * @return User ID linked with the Agent
     * 
     */
    public Output<Optional<String>> userId() {
        return Codegen.optional(this.userId);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public GenaiAgent(java.lang.String name) {
        this(name, GenaiAgentArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public GenaiAgent(java.lang.String name, GenaiAgentArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public GenaiAgent(java.lang.String name, GenaiAgentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/genaiAgent:GenaiAgent", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private GenaiAgent(java.lang.String name, Output<java.lang.String> id, @Nullable GenaiAgentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/genaiAgent:GenaiAgent", name, state, makeResourceOptions(options, id), false);
    }

    private static GenaiAgentArgs makeArgs(GenaiAgentArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? GenaiAgentArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static GenaiAgent get(java.lang.String name, Output<java.lang.String> id, @Nullable GenaiAgentState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new GenaiAgent(name, id, state, options);
    }
}
