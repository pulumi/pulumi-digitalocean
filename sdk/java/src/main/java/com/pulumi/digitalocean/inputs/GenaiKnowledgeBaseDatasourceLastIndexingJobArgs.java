// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenaiKnowledgeBaseDatasourceLastIndexingJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenaiKnowledgeBaseDatasourceLastIndexingJobArgs Empty = new GenaiKnowledgeBaseDatasourceLastIndexingJobArgs();

    /**
     * Number of completed datasources in the last indexing job
     * 
     */
    @Import(name="completedDatasources")
    private @Nullable Output<Integer> completedDatasources;

    /**
     * @return Number of completed datasources in the last indexing job
     * 
     */
    public Optional<Output<Integer>> completedDatasources() {
        return Optional.ofNullable(this.completedDatasources);
    }

    /**
     * Created At timestamp for the last indexing job
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Created At timestamp for the last indexing job
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Datasource UUIDs for the last indexing job
     * 
     */
    @Import(name="dataSourceUuids")
    private @Nullable Output<List<String>> dataSourceUuids;

    /**
     * @return Datasource UUIDs for the last indexing job
     * 
     */
    public Optional<Output<List<String>>> dataSourceUuids() {
        return Optional.ofNullable(this.dataSourceUuids);
    }

    /**
     * Timestamp when the last indexing job finished
     * 
     */
    @Import(name="finishedAt")
    private @Nullable Output<String> finishedAt;

    /**
     * @return Timestamp when the last indexing job finished
     * 
     */
    public Optional<Output<String>> finishedAt() {
        return Optional.ofNullable(this.finishedAt);
    }

    /**
     * UUID  of the Knowledge Base for the last indexing job
     * 
     */
    @Import(name="knowledgeBaseUuid")
    private @Nullable Output<String> knowledgeBaseUuid;

    /**
     * @return UUID  of the Knowledge Base for the last indexing job
     * 
     */
    public Optional<Output<String>> knowledgeBaseUuid() {
        return Optional.ofNullable(this.knowledgeBaseUuid);
    }

    /**
     * Phase of the last indexing job
     * 
     */
    @Import(name="phase")
    private @Nullable Output<String> phase;

    /**
     * @return Phase of the last indexing job
     * 
     */
    public Optional<Output<String>> phase() {
        return Optional.ofNullable(this.phase);
    }

    /**
     * Timestamp when the last indexing job started
     * 
     */
    @Import(name="startedAt")
    private @Nullable Output<String> startedAt;

    /**
     * @return Timestamp when the last indexing job started
     * 
     */
    public Optional<Output<String>> startedAt() {
        return Optional.ofNullable(this.startedAt);
    }

    /**
     * Number of tokens processed in the last indexing job
     * 
     */
    @Import(name="tokens")
    private @Nullable Output<Integer> tokens;

    /**
     * @return Number of tokens processed in the last indexing job
     * 
     */
    public Optional<Output<Integer>> tokens() {
        return Optional.ofNullable(this.tokens);
    }

    /**
     * Total number of datasources in the last indexing job
     * 
     */
    @Import(name="totalDatasources")
    private @Nullable Output<Integer> totalDatasources;

    /**
     * @return Total number of datasources in the last indexing job
     * 
     */
    public Optional<Output<Integer>> totalDatasources() {
        return Optional.ofNullable(this.totalDatasources);
    }

    /**
     * Timestamp when the last indexing job updated
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Timestamp when the last indexing job updated
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * UUID  of the last indexing job
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return UUID  of the last indexing job
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GenaiKnowledgeBaseDatasourceLastIndexingJobArgs() {}

    private GenaiKnowledgeBaseDatasourceLastIndexingJobArgs(GenaiKnowledgeBaseDatasourceLastIndexingJobArgs $) {
        this.completedDatasources = $.completedDatasources;
        this.createdAt = $.createdAt;
        this.dataSourceUuids = $.dataSourceUuids;
        this.finishedAt = $.finishedAt;
        this.knowledgeBaseUuid = $.knowledgeBaseUuid;
        this.phase = $.phase;
        this.startedAt = $.startedAt;
        this.tokens = $.tokens;
        this.totalDatasources = $.totalDatasources;
        this.updatedAt = $.updatedAt;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenaiKnowledgeBaseDatasourceLastIndexingJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenaiKnowledgeBaseDatasourceLastIndexingJobArgs $;

        public Builder() {
            $ = new GenaiKnowledgeBaseDatasourceLastIndexingJobArgs();
        }

        public Builder(GenaiKnowledgeBaseDatasourceLastIndexingJobArgs defaults) {
            $ = new GenaiKnowledgeBaseDatasourceLastIndexingJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param completedDatasources Number of completed datasources in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder completedDatasources(@Nullable Output<Integer> completedDatasources) {
            $.completedDatasources = completedDatasources;
            return this;
        }

        /**
         * @param completedDatasources Number of completed datasources in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder completedDatasources(Integer completedDatasources) {
            return completedDatasources(Output.of(completedDatasources));
        }

        /**
         * @param createdAt Created At timestamp for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Created At timestamp for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param dataSourceUuids Datasource UUIDs for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder dataSourceUuids(@Nullable Output<List<String>> dataSourceUuids) {
            $.dataSourceUuids = dataSourceUuids;
            return this;
        }

        /**
         * @param dataSourceUuids Datasource UUIDs for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder dataSourceUuids(List<String> dataSourceUuids) {
            return dataSourceUuids(Output.of(dataSourceUuids));
        }

        /**
         * @param dataSourceUuids Datasource UUIDs for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder dataSourceUuids(String... dataSourceUuids) {
            return dataSourceUuids(List.of(dataSourceUuids));
        }

        /**
         * @param finishedAt Timestamp when the last indexing job finished
         * 
         * @return builder
         * 
         */
        public Builder finishedAt(@Nullable Output<String> finishedAt) {
            $.finishedAt = finishedAt;
            return this;
        }

        /**
         * @param finishedAt Timestamp when the last indexing job finished
         * 
         * @return builder
         * 
         */
        public Builder finishedAt(String finishedAt) {
            return finishedAt(Output.of(finishedAt));
        }

        /**
         * @param knowledgeBaseUuid UUID  of the Knowledge Base for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseUuid(@Nullable Output<String> knowledgeBaseUuid) {
            $.knowledgeBaseUuid = knowledgeBaseUuid;
            return this;
        }

        /**
         * @param knowledgeBaseUuid UUID  of the Knowledge Base for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseUuid(String knowledgeBaseUuid) {
            return knowledgeBaseUuid(Output.of(knowledgeBaseUuid));
        }

        /**
         * @param phase Phase of the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder phase(@Nullable Output<String> phase) {
            $.phase = phase;
            return this;
        }

        /**
         * @param phase Phase of the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder phase(String phase) {
            return phase(Output.of(phase));
        }

        /**
         * @param startedAt Timestamp when the last indexing job started
         * 
         * @return builder
         * 
         */
        public Builder startedAt(@Nullable Output<String> startedAt) {
            $.startedAt = startedAt;
            return this;
        }

        /**
         * @param startedAt Timestamp when the last indexing job started
         * 
         * @return builder
         * 
         */
        public Builder startedAt(String startedAt) {
            return startedAt(Output.of(startedAt));
        }

        /**
         * @param tokens Number of tokens processed in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder tokens(@Nullable Output<Integer> tokens) {
            $.tokens = tokens;
            return this;
        }

        /**
         * @param tokens Number of tokens processed in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder tokens(Integer tokens) {
            return tokens(Output.of(tokens));
        }

        /**
         * @param totalDatasources Total number of datasources in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder totalDatasources(@Nullable Output<Integer> totalDatasources) {
            $.totalDatasources = totalDatasources;
            return this;
        }

        /**
         * @param totalDatasources Total number of datasources in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder totalDatasources(Integer totalDatasources) {
            return totalDatasources(Output.of(totalDatasources));
        }

        /**
         * @param updatedAt Timestamp when the last indexing job updated
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Timestamp when the last indexing job updated
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param uuid UUID  of the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid UUID  of the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GenaiKnowledgeBaseDatasourceLastIndexingJobArgs build() {
            return $;
        }
    }

}
