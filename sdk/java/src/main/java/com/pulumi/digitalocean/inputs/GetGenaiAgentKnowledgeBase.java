// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.GetGenaiAgentKnowledgeBaseLastIndexingJob;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGenaiAgentKnowledgeBase extends com.pulumi.resources.InvokeArgs {

    public static final GetGenaiAgentKnowledgeBase Empty = new GetGenaiAgentKnowledgeBase();

    /**
     * Timestamp when the Knowledge Base was added to the Agent
     * 
     */
    @Import(name="addedToAgentAt", required=true)
    private String addedToAgentAt;

    /**
     * @return Timestamp when the Knowledge Base was added to the Agent
     * 
     */
    public String addedToAgentAt() {
        return this.addedToAgentAt;
    }

    /**
     * Created At timestamp for the Knowledge Base
     * 
     */
    @Import(name="createdAt", required=true)
    private String createdAt;

    /**
     * @return Created At timestamp for the Knowledge Base
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }

    /**
     * Database ID of the Knowledge Base
     * 
     */
    @Import(name="databaseId")
    private @Nullable String databaseId;

    /**
     * @return Database ID of the Knowledge Base
     * 
     */
    public Optional<String> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }

    /**
     * Embedding model UUID for the Knowledge Base
     * 
     */
    @Import(name="embeddingModelUuid")
    private @Nullable String embeddingModelUuid;

    /**
     * @return Embedding model UUID for the Knowledge Base
     * 
     */
    public Optional<String> embeddingModelUuid() {
        return Optional.ofNullable(this.embeddingModelUuid);
    }

    /**
     * Indicates if the Knowledge Base is public
     * 
     */
    @Import(name="isPublic")
    private @Nullable Boolean isPublic;

    /**
     * @return Indicates if the Knowledge Base is public
     * 
     */
    public Optional<Boolean> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }

    /**
     * Last indexing job for the Knowledge Base
     * 
     */
    @Import(name="lastIndexingJobs")
    private @Nullable List<GetGenaiAgentKnowledgeBaseLastIndexingJob> lastIndexingJobs;

    /**
     * @return Last indexing job for the Knowledge Base
     * 
     */
    public Optional<List<GetGenaiAgentKnowledgeBaseLastIndexingJob>> lastIndexingJobs() {
        return Optional.ofNullable(this.lastIndexingJobs);
    }

    /**
     * Name of the Knowledge Base
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the Knowledge Base
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Project ID of the Knowledge Base
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return Project ID of the Knowledge Base
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Region of the Knowledge Base
     * 
     */
    @Import(name="region")
    private @Nullable String region;

    /**
     * @return Region of the Knowledge Base
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * List of tags
     * 
     */
    @Import(name="tags")
    private @Nullable List<String> tags;

    /**
     * @return List of tags
     * 
     */
    public Optional<List<String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Timestamp when the Knowledge Base was updated
     * 
     */
    @Import(name="updatedAt", required=true)
    private String updatedAt;

    /**
     * @return Timestamp when the Knowledge Base was updated
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    /**
     * User ID of the Knowledge Base
     * 
     */
    @Import(name="userId")
    private @Nullable String userId;

    /**
     * @return User ID of the Knowledge Base
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    /**
     * UUID of the Knowledge Base
     * 
     */
    @Import(name="uuid", required=true)
    private String uuid;

    /**
     * @return UUID of the Knowledge Base
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    private GetGenaiAgentKnowledgeBase() {}

    private GetGenaiAgentKnowledgeBase(GetGenaiAgentKnowledgeBase $) {
        this.addedToAgentAt = $.addedToAgentAt;
        this.createdAt = $.createdAt;
        this.databaseId = $.databaseId;
        this.embeddingModelUuid = $.embeddingModelUuid;
        this.isPublic = $.isPublic;
        this.lastIndexingJobs = $.lastIndexingJobs;
        this.name = $.name;
        this.projectId = $.projectId;
        this.region = $.region;
        this.tags = $.tags;
        this.updatedAt = $.updatedAt;
        this.userId = $.userId;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGenaiAgentKnowledgeBase defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGenaiAgentKnowledgeBase $;

        public Builder() {
            $ = new GetGenaiAgentKnowledgeBase();
        }

        public Builder(GetGenaiAgentKnowledgeBase defaults) {
            $ = new GetGenaiAgentKnowledgeBase(Objects.requireNonNull(defaults));
        }

        /**
         * @param addedToAgentAt Timestamp when the Knowledge Base was added to the Agent
         * 
         * @return builder
         * 
         */
        public Builder addedToAgentAt(String addedToAgentAt) {
            $.addedToAgentAt = addedToAgentAt;
            return this;
        }

        /**
         * @param createdAt Created At timestamp for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param databaseId Database ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable String databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param embeddingModelUuid Embedding model UUID for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder embeddingModelUuid(@Nullable String embeddingModelUuid) {
            $.embeddingModelUuid = embeddingModelUuid;
            return this;
        }

        /**
         * @param isPublic Indicates if the Knowledge Base is public
         * 
         * @return builder
         * 
         */
        public Builder isPublic(@Nullable Boolean isPublic) {
            $.isPublic = isPublic;
            return this;
        }

        /**
         * @param lastIndexingJobs Last indexing job for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder lastIndexingJobs(@Nullable List<GetGenaiAgentKnowledgeBaseLastIndexingJob> lastIndexingJobs) {
            $.lastIndexingJobs = lastIndexingJobs;
            return this;
        }

        /**
         * @param lastIndexingJobs Last indexing job for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder lastIndexingJobs(GetGenaiAgentKnowledgeBaseLastIndexingJob... lastIndexingJobs) {
            return lastIndexingJobs(List.of(lastIndexingJobs));
        }

        /**
         * @param name Name of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param projectId Project ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param region Region of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable String region) {
            $.region = region;
            return this;
        }

        /**
         * @param tags List of tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable List<String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags List of tags
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updatedAt Timestamp when the Knowledge Base was updated
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param userId User ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable String userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param uuid UUID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetGenaiAgentKnowledgeBase build() {
            if ($.addedToAgentAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentKnowledgeBase", "addedToAgentAt");
            }
            if ($.createdAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentKnowledgeBase", "createdAt");
            }
            if ($.updatedAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentKnowledgeBase", "updatedAt");
            }
            if ($.uuid == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentKnowledgeBase", "uuid");
            }
            return $;
        }
    }

}
