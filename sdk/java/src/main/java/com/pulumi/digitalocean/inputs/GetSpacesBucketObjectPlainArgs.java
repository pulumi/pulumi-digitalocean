// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetSpacesBucketObjectPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetSpacesBucketObjectPlainArgs Empty = new GetSpacesBucketObjectPlainArgs();

    /**
     * The name of the bucket to read the object from.
     * 
     */
    @Import(name="bucket", required=true)
    private String bucket;

    /**
     * @return The name of the bucket to read the object from.
     * 
     */
    public String bucket() {
        return this.bucket;
    }

    /**
     * The full path to the object inside the bucket
     * 
     */
    @Import(name="key", required=true)
    private String key;

    /**
     * @return The full path to the object inside the bucket
     * 
     */
    public String key() {
        return this.key;
    }

    @Import(name="range")
    private @Nullable String range;

    public Optional<String> range() {
        return Optional.ofNullable(this.range);
    }

    /**
     * The slug of the region where the bucket is stored.
     * 
     */
    @Import(name="region", required=true)
    private String region;

    /**
     * @return The slug of the region where the bucket is stored.
     * 
     */
    public String region() {
        return this.region;
    }

    /**
     * Specific version ID of the object returned (defaults to latest version)
     * 
     */
    @Import(name="versionId")
    private @Nullable String versionId;

    /**
     * @return Specific version ID of the object returned (defaults to latest version)
     * 
     */
    public Optional<String> versionId() {
        return Optional.ofNullable(this.versionId);
    }

    private GetSpacesBucketObjectPlainArgs() {}

    private GetSpacesBucketObjectPlainArgs(GetSpacesBucketObjectPlainArgs $) {
        this.bucket = $.bucket;
        this.key = $.key;
        this.range = $.range;
        this.region = $.region;
        this.versionId = $.versionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetSpacesBucketObjectPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetSpacesBucketObjectPlainArgs $;

        public Builder() {
            $ = new GetSpacesBucketObjectPlainArgs();
        }

        public Builder(GetSpacesBucketObjectPlainArgs defaults) {
            $ = new GetSpacesBucketObjectPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket to read the object from.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param key The full path to the object inside the bucket
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            $.key = key;
            return this;
        }

        public Builder range(@Nullable String range) {
            $.range = range;
            return this;
        }

        /**
         * @param region The slug of the region where the bucket is stored.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            $.region = region;
            return this;
        }

        /**
         * @param versionId Specific version ID of the object returned (defaults to latest version)
         * 
         * @return builder
         * 
         */
        public Builder versionId(@Nullable String versionId) {
            $.versionId = versionId;
            return this;
        }

        public GetSpacesBucketObjectPlainArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("GetSpacesBucketObjectPlainArgs", "bucket");
            }
            if ($.key == null) {
                throw new MissingRequiredPropertyException("GetSpacesBucketObjectPlainArgs", "key");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GetSpacesBucketObjectPlainArgs", "region");
            }
            return $;
        }
    }

}
