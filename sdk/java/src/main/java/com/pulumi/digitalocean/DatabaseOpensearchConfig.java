// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.digitalocean.DatabaseOpensearchConfigArgs;
import com.pulumi.digitalocean.Utilities;
import com.pulumi.digitalocean.inputs.DatabaseOpensearchConfigState;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a virtual resource that can be used to change advanced configuration
 * options for a DigitalOcean managed Opensearch database cluster.
 * 
 * &gt; **Note** Opensearch configurations are only removed from state when destroyed. The remote configuration is not unset.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.digitalocean.DatabaseCluster;
 * import com.pulumi.digitalocean.DatabaseClusterArgs;
 * import com.pulumi.digitalocean.DatabaseOpensearchConfig;
 * import com.pulumi.digitalocean.DatabaseOpensearchConfigArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleDatabaseCluster = new DatabaseCluster("exampleDatabaseCluster", DatabaseClusterArgs.builder()
 *             .name("example-opensearch-cluster")
 *             .engine("opensearch")
 *             .version("2")
 *             .size("db-s-1vcpu-2gb")
 *             .region("nyc3")
 *             .nodeCount(1)
 *             .build());
 * 
 *         var example = new DatabaseOpensearchConfig("example", DatabaseOpensearchConfigArgs.builder()
 *             .clusterId(exampleDatabaseCluster.id())
 *             .ismEnabled(true)
 *             .ismHistoryEnabled(true)
 *             .ismHistoryMaxAgeHours(24)
 *             .ismHistoryMaxDocs(2500000)
 *             .ismHistoryRolloverCheckPeriodHours(8)
 *             .ismHistoryRolloverRetentionPeriodDays(30)
 *             .httpMaxContentLengthBytes(100000000)
 *             .httpMaxHeaderSizeBytes(8192)
 *             .httpMaxInitialLineLengthBytes(4096)
 *             .indicesQueryBoolMaxClauseCount(1024)
 *             .searchMaxBuckets(10000)
 *             .indicesFielddataCacheSizePercentage(3)
 *             .indicesMemoryIndexBufferSizePercentage(10)
 *             .indicesMemoryMinIndexBufferSizeMb(48)
 *             .indicesMemoryMaxIndexBufferSizeMb(3)
 *             .indicesQueriesCacheSizePercentage(10)
 *             .indicesRecoveryMaxMbPerSec(40)
 *             .indicesRecoveryMaxConcurrentFileChunks(2)
 *             .actionAutoCreateIndexEnabled(true)
 *             .actionDestructiveRequiresName(false)
 *             .enableSecurityAudit(false)
 *             .threadPoolSearchSize(1)
 *             .threadPoolSearchThrottledSize(1)
 *             .threadPoolSearchThrottledQueueSize(10)
 *             .threadPoolSearchQueueSize(10)
 *             .threadPoolGetSize(1)
 *             .threadPoolGetQueueSize(10)
 *             .threadPoolAnalyzeSize(1)
 *             .threadPoolAnalyzeQueueSize(10)
 *             .threadPoolWriteSize(1)
 *             .threadPoolWriteQueueSize(10)
 *             .threadPoolForceMergeSize(1)
 *             .overrideMainResponseVersion(false)
 *             .scriptMaxCompilationsRate("use-context")
 *             .clusterMaxShardsPerNode(100)
 *             .clusterRoutingAllocationNodeConcurrentRecoveries(2)
 *             .pluginsAlertingFilterByBackendRolesEnabled(false)
 *             .reindexRemoteWhitelists("cloud.digitalocean.com:8080")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * A Opensearch database cluster&#39;s configuration can be imported using the `id` the parent cluster, e.g.
 * 
 * ```sh
 * $ pulumi import digitalocean:index/databaseOpensearchConfig:DatabaseOpensearchConfig example 4b62829a-9c42-465b-aaa3-84051048e712
 * ```
 * 
 */
@ResourceType(type="digitalocean:index/databaseOpensearchConfig:DatabaseOpensearchConfig")
public class DatabaseOpensearchConfig extends com.pulumi.resources.CustomResource {
    /**
     * Specifies whether ISM is enabled or not. Default: `true`
     * 
     */
    @Export(name="actionAutoCreateIndexEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionAutoCreateIndexEnabled;

    /**
     * @return Specifies whether ISM is enabled or not. Default: `true`
     * 
     */
    public Output<Boolean> actionAutoCreateIndexEnabled() {
        return this.actionAutoCreateIndexEnabled;
    }
    /**
     * Specifies whether to require explicit index names when deleting indices.
     * 
     */
    @Export(name="actionDestructiveRequiresName", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> actionDestructiveRequiresName;

    /**
     * @return Specifies whether to require explicit index names when deleting indices.
     * 
     */
    public Output<Boolean> actionDestructiveRequiresName() {
        return this.actionDestructiveRequiresName;
    }
    /**
     * The ID of the target Opensearch cluster.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return The ID of the target Opensearch cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * Maximum number of shards allowed per data node.
     * 
     */
    @Export(name="clusterMaxShardsPerNode", refs={Integer.class}, tree="[0]")
    private Output<Integer> clusterMaxShardsPerNode;

    /**
     * @return Maximum number of shards allowed per data node.
     * 
     */
    public Output<Integer> clusterMaxShardsPerNode() {
        return this.clusterMaxShardsPerNode;
    }
    /**
     * Maximum concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen per node. Default: `2`
     * 
     */
    @Export(name="clusterRoutingAllocationNodeConcurrentRecoveries", refs={Integer.class}, tree="[0]")
    private Output<Integer> clusterRoutingAllocationNodeConcurrentRecoveries;

    /**
     * @return Maximum concurrent incoming/outgoing shard recoveries (normally replicas) are allowed to happen per node. Default: `2`
     * 
     */
    public Output<Integer> clusterRoutingAllocationNodeConcurrentRecoveries() {
        return this.clusterRoutingAllocationNodeConcurrentRecoveries;
    }
    /**
     * Specifies whether to allow security audit logging. Default: `false`
     * 
     */
    @Export(name="enableSecurityAudit", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> enableSecurityAudit;

    /**
     * @return Specifies whether to allow security audit logging. Default: `false`
     * 
     */
    public Output<Boolean> enableSecurityAudit() {
        return this.enableSecurityAudit;
    }
    /**
     * Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes. Default: `100000000`
     * 
     */
    @Export(name="httpMaxContentLengthBytes", refs={Integer.class}, tree="[0]")
    private Output<Integer> httpMaxContentLengthBytes;

    /**
     * @return Maximum content length for HTTP requests to the OpenSearch HTTP API, in bytes. Default: `100000000`
     * 
     */
    public Output<Integer> httpMaxContentLengthBytes() {
        return this.httpMaxContentLengthBytes;
    }
    /**
     * Maximum size of allowed headers, in bytes. Default: `8192`
     * 
     */
    @Export(name="httpMaxHeaderSizeBytes", refs={Integer.class}, tree="[0]")
    private Output<Integer> httpMaxHeaderSizeBytes;

    /**
     * @return Maximum size of allowed headers, in bytes. Default: `8192`
     * 
     */
    public Output<Integer> httpMaxHeaderSizeBytes() {
        return this.httpMaxHeaderSizeBytes;
    }
    /**
     * Maximum length of an HTTP URL, in bytes. Default: `4096`
     * 
     */
    @Export(name="httpMaxInitialLineLengthBytes", refs={Integer.class}, tree="[0]")
    private Output<Integer> httpMaxInitialLineLengthBytes;

    /**
     * @return Maximum length of an HTTP URL, in bytes. Default: `4096`
     * 
     */
    public Output<Integer> httpMaxInitialLineLengthBytes() {
        return this.httpMaxInitialLineLengthBytes;
    }
    /**
     * Maximum amount of heap memory used for field data cache, expressed as a percentage. Decreasing the value too much will increase overhead of loading field data. Increasing the value too much will decrease amount of heap available for other operations.
     * 
     */
    @Export(name="indicesFielddataCacheSizePercentage", refs={Integer.class}, tree="[0]")
    private Output<Integer> indicesFielddataCacheSizePercentage;

    /**
     * @return Maximum amount of heap memory used for field data cache, expressed as a percentage. Decreasing the value too much will increase overhead of loading field data. Increasing the value too much will decrease amount of heap available for other operations.
     * 
     */
    public Output<Integer> indicesFielddataCacheSizePercentage() {
        return this.indicesFielddataCacheSizePercentage;
    }
    /**
     * Total amount of heap used for indexing buffer before writing segments to disk, expressed as a percentage. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance. Default: `10`
     * 
     */
    @Export(name="indicesMemoryIndexBufferSizePercentage", refs={Integer.class}, tree="[0]")
    private Output<Integer> indicesMemoryIndexBufferSizePercentage;

    /**
     * @return Total amount of heap used for indexing buffer before writing segments to disk, expressed as a percentage. Too low value will slow down indexing; too high value will increase indexing performance but causes performance issues for query performance. Default: `10`
     * 
     */
    public Output<Integer> indicesMemoryIndexBufferSizePercentage() {
        return this.indicesMemoryIndexBufferSizePercentage;
    }
    /**
     * Maximum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. The default is unbounded.
     * 
     */
    @Export(name="indicesMemoryMaxIndexBufferSizeMb", refs={Integer.class}, tree="[0]")
    private Output<Integer> indicesMemoryMaxIndexBufferSizeMb;

    /**
     * @return Maximum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. The default is unbounded.
     * 
     */
    public Output<Integer> indicesMemoryMaxIndexBufferSizeMb() {
        return this.indicesMemoryMaxIndexBufferSizeMb;
    }
    /**
     * Minimum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. Default: `48`
     * 
     */
    @Export(name="indicesMemoryMinIndexBufferSizeMb", refs={Integer.class}, tree="[0]")
    private Output<Integer> indicesMemoryMinIndexBufferSizeMb;

    /**
     * @return Minimum amount of heap used for indexing buffer before writing segments to disk, in mb. Works in conjunction with indices_memory_index_buffer_size_percentage, each being enforced. Default: `48`
     * 
     */
    public Output<Integer> indicesMemoryMinIndexBufferSizeMb() {
        return this.indicesMemoryMinIndexBufferSizeMb;
    }
    /**
     * Maximum amount of heap used for query cache. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other functionality. Default: `10`
     * 
     */
    @Export(name="indicesQueriesCacheSizePercentage", refs={Integer.class}, tree="[0]")
    private Output<Integer> indicesQueriesCacheSizePercentage;

    /**
     * @return Maximum amount of heap used for query cache. Too low value will decrease query performance and increase performance for other operations; too high value will cause issues with other functionality. Default: `10`
     * 
     */
    public Output<Integer> indicesQueriesCacheSizePercentage() {
        return this.indicesQueriesCacheSizePercentage;
    }
    /**
     * Maximum number of clauses Lucene BooleanQuery can have. Only increase it if necessary, as it may cause performance issues. Default: `1024`
     * 
     */
    @Export(name="indicesQueryBoolMaxClauseCount", refs={Integer.class}, tree="[0]")
    private Output<Integer> indicesQueryBoolMaxClauseCount;

    /**
     * @return Maximum number of clauses Lucene BooleanQuery can have. Only increase it if necessary, as it may cause performance issues. Default: `1024`
     * 
     */
    public Output<Integer> indicesQueryBoolMaxClauseCount() {
        return this.indicesQueryBoolMaxClauseCount;
    }
    /**
     * Maximum number of file chunks sent in parallel for each recovery. Default: `2`
     * 
     */
    @Export(name="indicesRecoveryMaxConcurrentFileChunks", refs={Integer.class}, tree="[0]")
    private Output<Integer> indicesRecoveryMaxConcurrentFileChunks;

    /**
     * @return Maximum number of file chunks sent in parallel for each recovery. Default: `2`
     * 
     */
    public Output<Integer> indicesRecoveryMaxConcurrentFileChunks() {
        return this.indicesRecoveryMaxConcurrentFileChunks;
    }
    /**
     * Limits total inbound and outbound recovery traffic for each node, expressed in mb per second. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Default: `40`
     * 
     */
    @Export(name="indicesRecoveryMaxMbPerSec", refs={Integer.class}, tree="[0]")
    private Output<Integer> indicesRecoveryMaxMbPerSec;

    /**
     * @return Limits total inbound and outbound recovery traffic for each node, expressed in mb per second. Applies to both peer recoveries as well as snapshot recoveries (i.e., restores from a snapshot). Default: `40`
     * 
     */
    public Output<Integer> indicesRecoveryMaxMbPerSec() {
        return this.indicesRecoveryMaxMbPerSec;
    }
    /**
     * Specifies whether ISM is enabled or not. Default: `true`
     * 
     */
    @Export(name="ismEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ismEnabled;

    /**
     * @return Specifies whether ISM is enabled or not. Default: `true`
     * 
     */
    public Output<Boolean> ismEnabled() {
        return this.ismEnabled;
    }
    /**
     * Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. Default: `true`
     * 
     */
    @Export(name="ismHistoryEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> ismHistoryEnabled;

    /**
     * @return Specifies whether audit history is enabled or not. The logs from ISM are automatically indexed to a logs document. Default: `true`
     * 
     */
    public Output<Boolean> ismHistoryEnabled() {
        return this.ismHistoryEnabled;
    }
    /**
     * Maximum age before rolling over the audit history index, in hours. Default: `24`
     * 
     */
    @Export(name="ismHistoryMaxAgeHours", refs={Integer.class}, tree="[0]")
    private Output<Integer> ismHistoryMaxAgeHours;

    /**
     * @return Maximum age before rolling over the audit history index, in hours. Default: `24`
     * 
     */
    public Output<Integer> ismHistoryMaxAgeHours() {
        return this.ismHistoryMaxAgeHours;
    }
    /**
     * Maximum number of documents before rolling over the audit history index. Default: `2500000`
     * 
     */
    @Export(name="ismHistoryMaxDocs", refs={Integer.class}, tree="[0]")
    private Output<Integer> ismHistoryMaxDocs;

    /**
     * @return Maximum number of documents before rolling over the audit history index. Default: `2500000`
     * 
     */
    public Output<Integer> ismHistoryMaxDocs() {
        return this.ismHistoryMaxDocs;
    }
    /**
     * The time between rollover checks for the audit history index, in hours. Default: `8`
     * 
     */
    @Export(name="ismHistoryRolloverCheckPeriodHours", refs={Integer.class}, tree="[0]")
    private Output<Integer> ismHistoryRolloverCheckPeriodHours;

    /**
     * @return The time between rollover checks for the audit history index, in hours. Default: `8`
     * 
     */
    public Output<Integer> ismHistoryRolloverCheckPeriodHours() {
        return this.ismHistoryRolloverCheckPeriodHours;
    }
    /**
     * Length of time long audit history indices are kept, in days. Default: `30`
     * 
     */
    @Export(name="ismHistoryRolloverRetentionPeriodDays", refs={Integer.class}, tree="[0]")
    private Output<Integer> ismHistoryRolloverRetentionPeriodDays;

    /**
     * @return Length of time long audit history indices are kept, in days. Default: `30`
     * 
     */
    public Output<Integer> ismHistoryRolloverRetentionPeriodDays() {
        return this.ismHistoryRolloverRetentionPeriodDays;
    }
    /**
     * Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default: `false`
     * 
     */
    @Export(name="overrideMainResponseVersion", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> overrideMainResponseVersion;

    /**
     * @return Compatibility mode sets OpenSearch to report its version as 7.10 so clients continue to work. Default: `false`
     * 
     */
    public Output<Boolean> overrideMainResponseVersion() {
        return this.overrideMainResponseVersion;
    }
    /**
     * Enable or disable filtering of alerting by backend roles. Default: `false`
     * 
     */
    @Export(name="pluginsAlertingFilterByBackendRolesEnabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> pluginsAlertingFilterByBackendRolesEnabled;

    /**
     * @return Enable or disable filtering of alerting by backend roles. Default: `false`
     * 
     */
    public Output<Boolean> pluginsAlertingFilterByBackendRolesEnabled() {
        return this.pluginsAlertingFilterByBackendRolesEnabled;
    }
    /**
     * Allowlist of remote IP addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
     * 
     */
    @Export(name="reindexRemoteWhitelists", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> reindexRemoteWhitelists;

    /**
     * @return Allowlist of remote IP addresses for reindexing. Changing this value will cause all OpenSearch instances to restart.
     * 
     */
    public Output<Optional<List<String>>> reindexRemoteWhitelists() {
        return Codegen.optional(this.reindexRemoteWhitelists);
    }
    /**
     * Limits the number of inline script compilations within a period of time. Default is `use-context`
     * 
     */
    @Export(name="scriptMaxCompilationsRate", refs={String.class}, tree="[0]")
    private Output<String> scriptMaxCompilationsRate;

    /**
     * @return Limits the number of inline script compilations within a period of time. Default is `use-context`
     * 
     */
    public Output<String> scriptMaxCompilationsRate() {
        return this.scriptMaxCompilationsRate;
    }
    /**
     * Maximum number of aggregation buckets allowed in a single response. Default: `10000`
     * 
     */
    @Export(name="searchMaxBuckets", refs={Integer.class}, tree="[0]")
    private Output<Integer> searchMaxBuckets;

    /**
     * @return Maximum number of aggregation buckets allowed in a single response. Default: `10000`
     * 
     */
    public Output<Integer> searchMaxBuckets() {
        return this.searchMaxBuckets;
    }
    /**
     * Size of queue for operations in the analyze thread pool.
     * 
     */
    @Export(name="threadPoolAnalyzeQueueSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolAnalyzeQueueSize;

    /**
     * @return Size of queue for operations in the analyze thread pool.
     * 
     */
    public Output<Integer> threadPoolAnalyzeQueueSize() {
        return this.threadPoolAnalyzeQueueSize;
    }
    /**
     * Number of workers in the analyze operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    @Export(name="threadPoolAnalyzeSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolAnalyzeSize;

    /**
     * @return Number of workers in the analyze operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Output<Integer> threadPoolAnalyzeSize() {
        return this.threadPoolAnalyzeSize;
    }
    /**
     * Number of workers in the force merge operation thread pool. This pool is used for forcing a merge between shards of one or more indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    @Export(name="threadPoolForceMergeSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolForceMergeSize;

    /**
     * @return Number of workers in the force merge operation thread pool. This pool is used for forcing a merge between shards of one or more indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Output<Integer> threadPoolForceMergeSize() {
        return this.threadPoolForceMergeSize;
    }
    /**
     * Size of queue for operations in the get thread pool.
     * 
     */
    @Export(name="threadPoolGetQueueSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolGetQueueSize;

    /**
     * @return Size of queue for operations in the get thread pool.
     * 
     */
    public Output<Integer> threadPoolGetQueueSize() {
        return this.threadPoolGetQueueSize;
    }
    /**
     * Number of workers in the get operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    @Export(name="threadPoolGetSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolGetSize;

    /**
     * @return Number of workers in the get operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Output<Integer> threadPoolGetSize() {
        return this.threadPoolGetSize;
    }
    /**
     * Size of queue for operations in the search thread pool.
     * 
     */
    @Export(name="threadPoolSearchQueueSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolSearchQueueSize;

    /**
     * @return Size of queue for operations in the search thread pool.
     * 
     */
    public Output<Integer> threadPoolSearchQueueSize() {
        return this.threadPoolSearchQueueSize;
    }
    /**
     * Number of workers in the search operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    @Export(name="threadPoolSearchSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolSearchSize;

    /**
     * @return Number of workers in the search operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Output<Integer> threadPoolSearchSize() {
        return this.threadPoolSearchSize;
    }
    /**
     * Size of queue for operations in the search throttled thread pool.
     * 
     */
    @Export(name="threadPoolSearchThrottledQueueSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolSearchThrottledQueueSize;

    /**
     * @return Size of queue for operations in the search throttled thread pool.
     * 
     */
    public Output<Integer> threadPoolSearchThrottledQueueSize() {
        return this.threadPoolSearchThrottledQueueSize;
    }
    /**
     * Number of workers in the search throttled operation thread pool. This pool is used for searching frozen indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    @Export(name="threadPoolSearchThrottledSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolSearchThrottledSize;

    /**
     * @return Number of workers in the search throttled operation thread pool. This pool is used for searching frozen indices. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Output<Integer> threadPoolSearchThrottledSize() {
        return this.threadPoolSearchThrottledSize;
    }
    /**
     * Size of queue for operations in the write thread pool.
     * 
     */
    @Export(name="threadPoolWriteQueueSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolWriteQueueSize;

    /**
     * @return Size of queue for operations in the write thread pool.
     * 
     */
    public Output<Integer> threadPoolWriteQueueSize() {
        return this.threadPoolWriteQueueSize;
    }
    /**
     * Number of workers in the write operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    @Export(name="threadPoolWriteSize", refs={Integer.class}, tree="[0]")
    private Output<Integer> threadPoolWriteSize;

    /**
     * @return Number of workers in the write operation thread pool. Do note this may have maximum value depending on CPU count - value is automatically lowered if set to higher than maximum value.
     * 
     */
    public Output<Integer> threadPoolWriteSize() {
        return this.threadPoolWriteSize;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseOpensearchConfig(java.lang.String name) {
        this(name, DatabaseOpensearchConfigArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseOpensearchConfig(java.lang.String name, DatabaseOpensearchConfigArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseOpensearchConfig(java.lang.String name, DatabaseOpensearchConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/databaseOpensearchConfig:DatabaseOpensearchConfig", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DatabaseOpensearchConfig(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseOpensearchConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/databaseOpensearchConfig:DatabaseOpensearchConfig", name, state, makeResourceOptions(options, id), false);
    }

    private static DatabaseOpensearchConfigArgs makeArgs(DatabaseOpensearchConfigArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DatabaseOpensearchConfigArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseOpensearchConfig get(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseOpensearchConfigState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseOpensearchConfig(name, id, state, options);
    }
}
