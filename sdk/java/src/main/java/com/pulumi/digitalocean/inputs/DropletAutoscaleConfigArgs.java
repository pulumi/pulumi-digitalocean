// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DropletAutoscaleConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final DropletAutoscaleConfigArgs Empty = new DropletAutoscaleConfigArgs();

    /**
     * The cooldown duration between scaling events for the Droplet Autoscale pool.
     * 
     */
    @Import(name="cooldownMinutes")
    private @Nullable Output<Integer> cooldownMinutes;

    /**
     * @return The cooldown duration between scaling events for the Droplet Autoscale pool.
     * 
     */
    public Optional<Output<Integer>> cooldownMinutes() {
        return Optional.ofNullable(this.cooldownMinutes);
    }

    /**
     * The maximum number of instances to maintain in the Droplet Autoscale pool.
     * 
     */
    @Import(name="maxInstances")
    private @Nullable Output<Integer> maxInstances;

    /**
     * @return The maximum number of instances to maintain in the Droplet Autoscale pool.
     * 
     */
    public Optional<Output<Integer>> maxInstances() {
        return Optional.ofNullable(this.maxInstances);
    }

    /**
     * The minimum number of instances to maintain in the Droplet Autoscale pool.
     * 
     */
    @Import(name="minInstances")
    private @Nullable Output<Integer> minInstances;

    /**
     * @return The minimum number of instances to maintain in the Droplet Autoscale pool.
     * 
     */
    public Optional<Output<Integer>> minInstances() {
        return Optional.ofNullable(this.minInstances);
    }

    /**
     * The target average CPU load (in range `[0, 1]`) to maintain in the Droplet Autoscale pool.
     * 
     */
    @Import(name="targetCpuUtilization")
    private @Nullable Output<Double> targetCpuUtilization;

    /**
     * @return The target average CPU load (in range `[0, 1]`) to maintain in the Droplet Autoscale pool.
     * 
     */
    public Optional<Output<Double>> targetCpuUtilization() {
        return Optional.ofNullable(this.targetCpuUtilization);
    }

    /**
     * The target average Memory load (in range `[0, 1]`) to maintain in the Droplet Autoscale
     * pool.
     * 
     */
    @Import(name="targetMemoryUtilization")
    private @Nullable Output<Double> targetMemoryUtilization;

    /**
     * @return The target average Memory load (in range `[0, 1]`) to maintain in the Droplet Autoscale
     * pool.
     * 
     */
    public Optional<Output<Double>> targetMemoryUtilization() {
        return Optional.ofNullable(this.targetMemoryUtilization);
    }

    /**
     * The static number of instances to maintain in the pool Droplet Autoscale pool. This
     * argument cannot be used with any other config options.
     * 
     */
    @Import(name="targetNumberInstances")
    private @Nullable Output<Integer> targetNumberInstances;

    /**
     * @return The static number of instances to maintain in the pool Droplet Autoscale pool. This
     * argument cannot be used with any other config options.
     * 
     */
    public Optional<Output<Integer>> targetNumberInstances() {
        return Optional.ofNullable(this.targetNumberInstances);
    }

    private DropletAutoscaleConfigArgs() {}

    private DropletAutoscaleConfigArgs(DropletAutoscaleConfigArgs $) {
        this.cooldownMinutes = $.cooldownMinutes;
        this.maxInstances = $.maxInstances;
        this.minInstances = $.minInstances;
        this.targetCpuUtilization = $.targetCpuUtilization;
        this.targetMemoryUtilization = $.targetMemoryUtilization;
        this.targetNumberInstances = $.targetNumberInstances;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DropletAutoscaleConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DropletAutoscaleConfigArgs $;

        public Builder() {
            $ = new DropletAutoscaleConfigArgs();
        }

        public Builder(DropletAutoscaleConfigArgs defaults) {
            $ = new DropletAutoscaleConfigArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cooldownMinutes The cooldown duration between scaling events for the Droplet Autoscale pool.
         * 
         * @return builder
         * 
         */
        public Builder cooldownMinutes(@Nullable Output<Integer> cooldownMinutes) {
            $.cooldownMinutes = cooldownMinutes;
            return this;
        }

        /**
         * @param cooldownMinutes The cooldown duration between scaling events for the Droplet Autoscale pool.
         * 
         * @return builder
         * 
         */
        public Builder cooldownMinutes(Integer cooldownMinutes) {
            return cooldownMinutes(Output.of(cooldownMinutes));
        }

        /**
         * @param maxInstances The maximum number of instances to maintain in the Droplet Autoscale pool.
         * 
         * @return builder
         * 
         */
        public Builder maxInstances(@Nullable Output<Integer> maxInstances) {
            $.maxInstances = maxInstances;
            return this;
        }

        /**
         * @param maxInstances The maximum number of instances to maintain in the Droplet Autoscale pool.
         * 
         * @return builder
         * 
         */
        public Builder maxInstances(Integer maxInstances) {
            return maxInstances(Output.of(maxInstances));
        }

        /**
         * @param minInstances The minimum number of instances to maintain in the Droplet Autoscale pool.
         * 
         * @return builder
         * 
         */
        public Builder minInstances(@Nullable Output<Integer> minInstances) {
            $.minInstances = minInstances;
            return this;
        }

        /**
         * @param minInstances The minimum number of instances to maintain in the Droplet Autoscale pool.
         * 
         * @return builder
         * 
         */
        public Builder minInstances(Integer minInstances) {
            return minInstances(Output.of(minInstances));
        }

        /**
         * @param targetCpuUtilization The target average CPU load (in range `[0, 1]`) to maintain in the Droplet Autoscale pool.
         * 
         * @return builder
         * 
         */
        public Builder targetCpuUtilization(@Nullable Output<Double> targetCpuUtilization) {
            $.targetCpuUtilization = targetCpuUtilization;
            return this;
        }

        /**
         * @param targetCpuUtilization The target average CPU load (in range `[0, 1]`) to maintain in the Droplet Autoscale pool.
         * 
         * @return builder
         * 
         */
        public Builder targetCpuUtilization(Double targetCpuUtilization) {
            return targetCpuUtilization(Output.of(targetCpuUtilization));
        }

        /**
         * @param targetMemoryUtilization The target average Memory load (in range `[0, 1]`) to maintain in the Droplet Autoscale
         * pool.
         * 
         * @return builder
         * 
         */
        public Builder targetMemoryUtilization(@Nullable Output<Double> targetMemoryUtilization) {
            $.targetMemoryUtilization = targetMemoryUtilization;
            return this;
        }

        /**
         * @param targetMemoryUtilization The target average Memory load (in range `[0, 1]`) to maintain in the Droplet Autoscale
         * pool.
         * 
         * @return builder
         * 
         */
        public Builder targetMemoryUtilization(Double targetMemoryUtilization) {
            return targetMemoryUtilization(Output.of(targetMemoryUtilization));
        }

        /**
         * @param targetNumberInstances The static number of instances to maintain in the pool Droplet Autoscale pool. This
         * argument cannot be used with any other config options.
         * 
         * @return builder
         * 
         */
        public Builder targetNumberInstances(@Nullable Output<Integer> targetNumberInstances) {
            $.targetNumberInstances = targetNumberInstances;
            return this;
        }

        /**
         * @param targetNumberInstances The static number of instances to maintain in the pool Droplet Autoscale pool. This
         * argument cannot be used with any other config options.
         * 
         * @return builder
         * 
         */
        public Builder targetNumberInstances(Integer targetNumberInstances) {
            return targetNumberInstances(Output.of(targetNumberInstances));
        }

        public DropletAutoscaleConfigArgs build() {
            return $;
        }
    }

}
