// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class AppSpecServiceAlertDestinationsSlackWebhookArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSpecServiceAlertDestinationsSlackWebhookArgs Empty = new AppSpecServiceAlertDestinationsSlackWebhookArgs();

    /**
     * The Slack channel to send notifications to.
     * 
     */
    @Import(name="channel", required=true)
    private Output<String> channel;

    /**
     * @return The Slack channel to send notifications to.
     * 
     */
    public Output<String> channel() {
        return this.channel;
    }

    /**
     * The Slack webhook URL.
     * 
     */
    @Import(name="url", required=true)
    private Output<String> url;

    /**
     * @return The Slack webhook URL.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    private AppSpecServiceAlertDestinationsSlackWebhookArgs() {}

    private AppSpecServiceAlertDestinationsSlackWebhookArgs(AppSpecServiceAlertDestinationsSlackWebhookArgs $) {
        this.channel = $.channel;
        this.url = $.url;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSpecServiceAlertDestinationsSlackWebhookArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSpecServiceAlertDestinationsSlackWebhookArgs $;

        public Builder() {
            $ = new AppSpecServiceAlertDestinationsSlackWebhookArgs();
        }

        public Builder(AppSpecServiceAlertDestinationsSlackWebhookArgs defaults) {
            $ = new AppSpecServiceAlertDestinationsSlackWebhookArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param channel The Slack channel to send notifications to.
         * 
         * @return builder
         * 
         */
        public Builder channel(Output<String> channel) {
            $.channel = channel;
            return this;
        }

        /**
         * @param channel The Slack channel to send notifications to.
         * 
         * @return builder
         * 
         */
        public Builder channel(String channel) {
            return channel(Output.of(channel));
        }

        /**
         * @param url The Slack webhook URL.
         * 
         * @return builder
         * 
         */
        public Builder url(Output<String> url) {
            $.url = url;
            return this;
        }

        /**
         * @param url The Slack webhook URL.
         * 
         * @return builder
         * 
         */
        public Builder url(String url) {
            return url(Output.of(url));
        }

        public AppSpecServiceAlertDestinationsSlackWebhookArgs build() {
            if ($.channel == null) {
                throw new MissingRequiredPropertyException("AppSpecServiceAlertDestinationsSlackWebhookArgs", "channel");
            }
            if ($.url == null) {
                throw new MissingRequiredPropertyException("AppSpecServiceAlertDestinationsSlackWebhookArgs", "url");
            }
            return $;
        }
    }

}
