// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenaiAgentOpenAiApiKeyArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenaiAgentOpenAiApiKeyArgs Empty = new GenaiAgentOpenAiApiKeyArgs();

    /**
     * Timestamp when the API Key was created
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return Timestamp when the API Key was created
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * Created By user ID for the API Key
     * 
     */
    @Import(name="createdBy")
    private @Nullable Output<String> createdBy;

    /**
     * @return Created By user ID for the API Key
     * 
     */
    public Optional<Output<String>> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * Deleted At timestamp for the API Key
     * 
     */
    @Import(name="deletedAt")
    private @Nullable Output<String> deletedAt;

    /**
     * @return Deleted At timestamp for the API Key
     * 
     */
    public Optional<Output<String>> deletedAt() {
        return Optional.ofNullable(this.deletedAt);
    }

    /**
     * Name of the API Key
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the API Key
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Updated At timestamp for the API Key
     * 
     */
    @Import(name="updatedAt")
    private @Nullable Output<String> updatedAt;

    /**
     * @return Updated At timestamp for the API Key
     * 
     */
    public Optional<Output<String>> updatedAt() {
        return Optional.ofNullable(this.updatedAt);
    }

    /**
     * API Key value
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return API Key value
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GenaiAgentOpenAiApiKeyArgs() {}

    private GenaiAgentOpenAiApiKeyArgs(GenaiAgentOpenAiApiKeyArgs $) {
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.deletedAt = $.deletedAt;
        this.name = $.name;
        this.updatedAt = $.updatedAt;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenaiAgentOpenAiApiKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenaiAgentOpenAiApiKeyArgs $;

        public Builder() {
            $ = new GenaiAgentOpenAiApiKeyArgs();
        }

        public Builder(GenaiAgentOpenAiApiKeyArgs defaults) {
            $ = new GenaiAgentOpenAiApiKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Timestamp when the API Key was created
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Timestamp when the API Key was created
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param createdBy Created By user ID for the API Key
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable Output<String> createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param createdBy Created By user ID for the API Key
         * 
         * @return builder
         * 
         */
        public Builder createdBy(String createdBy) {
            return createdBy(Output.of(createdBy));
        }

        /**
         * @param deletedAt Deleted At timestamp for the API Key
         * 
         * @return builder
         * 
         */
        public Builder deletedAt(@Nullable Output<String> deletedAt) {
            $.deletedAt = deletedAt;
            return this;
        }

        /**
         * @param deletedAt Deleted At timestamp for the API Key
         * 
         * @return builder
         * 
         */
        public Builder deletedAt(String deletedAt) {
            return deletedAt(Output.of(deletedAt));
        }

        /**
         * @param name Name of the API Key
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the API Key
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param updatedAt Updated At timestamp for the API Key
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(@Nullable Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Updated At timestamp for the API Key
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param uuid API Key value
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid API Key value
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GenaiAgentOpenAiApiKeyArgs build() {
            return $;
        }
    }

}
