// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.digitalocean.SpacesKeyArgs;
import com.pulumi.digitalocean.Utilities;
import com.pulumi.digitalocean.inputs.SpacesKeyState;
import com.pulumi.digitalocean.outputs.SpacesKeyGrant;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a key resource for Spaces, DigitalOcean&#39;s object storage product.
 * 
 * The [Spaces API](https://docs.digitalocean.com/reference/api/spaces-api/) was
 * designed to be interoperable with Amazon&#39;s AWS S3 API. This allows users to
 * interact with the service while using the tools they already know. Spaces
 * mirrors S3&#39;s authentication framework and requests to Spaces require a key pair
 * similar to Amazon&#39;s Access ID and Secret Key.
 * 
 * As a Spaces owner, you limit othersâ€™ access to your buckets using Spaces access
 * keys. Access keys can provide several levels of permissions to create, destroy,
 * read, and write to specific associated buckets. However, access keys only limit
 * access to certain commands using the S3 API or CLI, not the control panel or
 * other DigitalOcean resources.
 * 
 * ## Example Usage
 * 
 * ### Create a New Key
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.digitalocean.SpacesKey;
 * import com.pulumi.digitalocean.SpacesKeyArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foobar = new SpacesKey("foobar", SpacesKeyArgs.builder()
 *             .name("foobar")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Create a New Key with Grants
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.digitalocean.SpacesKey;
 * import com.pulumi.digitalocean.SpacesKeyArgs;
 * import com.pulumi.digitalocean.inputs.SpacesKeyGrantArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foobar = new SpacesKey("foobar", SpacesKeyArgs.builder()
 *             .name("foobar")
 *             .grants(SpacesKeyGrantArgs.builder()
 *                 .bucket("my-bucket")
 *                 .permission("read")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### Create a New Key with full access
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.digitalocean.SpacesKey;
 * import com.pulumi.digitalocean.SpacesKeyArgs;
 * import com.pulumi.digitalocean.inputs.SpacesKeyGrantArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var foobar = new SpacesKey("foobar", SpacesKeyArgs.builder()
 *             .name("foobar")
 *             .grants(SpacesKeyGrantArgs.builder()
 *                 .bucket("")
 *                 .permission("fullaccess")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 */
@ResourceType(type="digitalocean:index/spacesKey:SpacesKey")
public class SpacesKey extends com.pulumi.resources.CustomResource {
    /**
     * The access key ID of the key
     * 
     */
    @Export(name="accessKey", refs={String.class}, tree="[0]")
    private Output<String> accessKey;

    /**
     * @return The access key ID of the key
     * 
     */
    public Output<String> accessKey() {
        return this.accessKey;
    }
    /**
     * The creation time of the key
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The creation time of the key
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * A grant for the key (documented below).
     * 
     */
    @Export(name="grants", refs={List.class,SpacesKeyGrant.class}, tree="[0,1]")
    private Output</* @Nullable */ List<SpacesKeyGrant>> grants;

    /**
     * @return A grant for the key (documented below).
     * 
     */
    public Output<Optional<List<SpacesKeyGrant>>> grants() {
        return Codegen.optional(this.grants);
    }
    /**
     * The name of the key
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the key
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The access key secret of the key
     * 
     */
    @Export(name="secretKey", refs={String.class}, tree="[0]")
    private Output<String> secretKey;

    /**
     * @return The access key secret of the key
     * 
     */
    public Output<String> secretKey() {
        return this.secretKey;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpacesKey(java.lang.String name) {
        this(name, SpacesKeyArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpacesKey(java.lang.String name, @Nullable SpacesKeyArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpacesKey(java.lang.String name, @Nullable SpacesKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/spacesKey:SpacesKey", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private SpacesKey(java.lang.String name, Output<java.lang.String> id, @Nullable SpacesKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/spacesKey:SpacesKey", name, state, makeResourceOptions(options, id), false);
    }

    private static SpacesKeyArgs makeArgs(@Nullable SpacesKeyArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SpacesKeyArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "secretKey"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpacesKey get(java.lang.String name, Output<java.lang.String> id, @Nullable SpacesKeyState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpacesKey(name, id, state, options);
    }
}
