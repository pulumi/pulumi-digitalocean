// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDropletSnapshotResult {
    /**
     * @return The date and time the Droplet snapshot was created.
     * 
     */
    private String createdAt;
    /**
     * @return The ID of the Droplet from which the Droplet snapshot originated.
     * 
     */
    private String dropletId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The minimum size in gigabytes required for a Droplet to be created based on this Droplet snapshot.
     * 
     */
    private Integer minDiskSize;
    private @Nullable Boolean mostRecent;
    private @Nullable String name;
    private @Nullable String nameRegex;
    private @Nullable String region;
    /**
     * @return A list of DigitalOcean region &#34;slugs&#34; indicating where the Droplet snapshot is available.
     * 
     */
    private List<String> regions;
    /**
     * @return The billable size of the Droplet snapshot in gigabytes.
     * 
     */
    private Double size;

    private GetDropletSnapshotResult() {}
    /**
     * @return The date and time the Droplet snapshot was created.
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The ID of the Droplet from which the Droplet snapshot originated.
     * 
     */
    public String dropletId() {
        return this.dropletId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The minimum size in gigabytes required for a Droplet to be created based on this Droplet snapshot.
     * 
     */
    public Integer minDiskSize() {
        return this.minDiskSize;
    }
    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    public Optional<String> nameRegex() {
        return Optional.ofNullable(this.nameRegex);
    }
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return A list of DigitalOcean region &#34;slugs&#34; indicating where the Droplet snapshot is available.
     * 
     */
    public List<String> regions() {
        return this.regions;
    }
    /**
     * @return The billable size of the Droplet snapshot in gigabytes.
     * 
     */
    public Double size() {
        return this.size;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDropletSnapshotResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String createdAt;
        private String dropletId;
        private String id;
        private Integer minDiskSize;
        private @Nullable Boolean mostRecent;
        private @Nullable String name;
        private @Nullable String nameRegex;
        private @Nullable String region;
        private List<String> regions;
        private Double size;
        public Builder() {}
        public Builder(GetDropletSnapshotResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.createdAt = defaults.createdAt;
    	      this.dropletId = defaults.dropletId;
    	      this.id = defaults.id;
    	      this.minDiskSize = defaults.minDiskSize;
    	      this.mostRecent = defaults.mostRecent;
    	      this.name = defaults.name;
    	      this.nameRegex = defaults.nameRegex;
    	      this.region = defaults.region;
    	      this.regions = defaults.regions;
    	      this.size = defaults.size;
        }

        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            this.createdAt = Objects.requireNonNull(createdAt);
            return this;
        }
        @CustomType.Setter
        public Builder dropletId(String dropletId) {
            this.dropletId = Objects.requireNonNull(dropletId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder minDiskSize(Integer minDiskSize) {
            this.minDiskSize = Objects.requireNonNull(minDiskSize);
            return this;
        }
        @CustomType.Setter
        public Builder mostRecent(@Nullable Boolean mostRecent) {
            this.mostRecent = mostRecent;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder nameRegex(@Nullable String nameRegex) {
            this.nameRegex = nameRegex;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder regions(List<String> regions) {
            this.regions = Objects.requireNonNull(regions);
            return this;
        }
        public Builder regions(String... regions) {
            return regions(List.of(regions));
        }
        @CustomType.Setter
        public Builder size(Double size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        public GetDropletSnapshotResult build() {
            final var _resultValue = new GetDropletSnapshotResult();
            _resultValue.createdAt = createdAt;
            _resultValue.dropletId = dropletId;
            _resultValue.id = id;
            _resultValue.minDiskSize = minDiskSize;
            _resultValue.mostRecent = mostRecent;
            _resultValue.name = name;
            _resultValue.nameRegex = nameRegex;
            _resultValue.region = region;
            _resultValue.regions = regions;
            _resultValue.size = size;
            return _resultValue;
        }
    }
}
