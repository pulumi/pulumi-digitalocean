// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSpecFunctionRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSpecFunctionRouteArgs Empty = new AppSpecFunctionRouteArgs();

    /**
     * Paths must start with `/` and must be unique within the app.
     * 
     */
    @Import(name="path")
    private @Nullable Output<String> path;

    /**
     * @return Paths must start with `/` and must be unique within the app.
     * 
     */
    public Optional<Output<String>> path() {
        return Optional.ofNullable(this.path);
    }

    /**
     * An optional flag to preserve the path that is forwarded to the backend service.
     * 
     */
    @Import(name="preservePathPrefix")
    private @Nullable Output<Boolean> preservePathPrefix;

    /**
     * @return An optional flag to preserve the path that is forwarded to the backend service.
     * 
     */
    public Optional<Output<Boolean>> preservePathPrefix() {
        return Optional.ofNullable(this.preservePathPrefix);
    }

    private AppSpecFunctionRouteArgs() {}

    private AppSpecFunctionRouteArgs(AppSpecFunctionRouteArgs $) {
        this.path = $.path;
        this.preservePathPrefix = $.preservePathPrefix;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSpecFunctionRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSpecFunctionRouteArgs $;

        public Builder() {
            $ = new AppSpecFunctionRouteArgs();
        }

        public Builder(AppSpecFunctionRouteArgs defaults) {
            $ = new AppSpecFunctionRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param path Paths must start with `/` and must be unique within the app.
         * 
         * @return builder
         * 
         */
        public Builder path(@Nullable Output<String> path) {
            $.path = path;
            return this;
        }

        /**
         * @param path Paths must start with `/` and must be unique within the app.
         * 
         * @return builder
         * 
         */
        public Builder path(String path) {
            return path(Output.of(path));
        }

        /**
         * @param preservePathPrefix An optional flag to preserve the path that is forwarded to the backend service.
         * 
         * @return builder
         * 
         */
        public Builder preservePathPrefix(@Nullable Output<Boolean> preservePathPrefix) {
            $.preservePathPrefix = preservePathPrefix;
            return this;
        }

        /**
         * @param preservePathPrefix An optional flag to preserve the path that is forwarded to the backend service.
         * 
         * @return builder
         * 
         */
        public Builder preservePathPrefix(Boolean preservePathPrefix) {
            return preservePathPrefix(Output.of(preservePathPrefix));
        }

        public AppSpecFunctionRouteArgs build() {
            return $;
        }
    }

}
