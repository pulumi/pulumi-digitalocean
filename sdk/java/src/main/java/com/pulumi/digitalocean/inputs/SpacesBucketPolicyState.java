// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpacesBucketPolicyState extends com.pulumi.resources.ResourceArgs {

    public static final SpacesBucketPolicyState Empty = new SpacesBucketPolicyState();

    /**
     * The name of the bucket to which to apply the policy.
     * 
     */
    @Import(name="bucket")
    private @Nullable Output<String> bucket;

    /**
     * @return The name of the bucket to which to apply the policy.
     * 
     */
    public Optional<Output<String>> bucket() {
        return Optional.ofNullable(this.bucket);
    }

    /**
     * The text of the policy.
     * 
     */
    @Import(name="policy")
    private @Nullable Output<String> policy;

    /**
     * @return The text of the policy.
     * 
     */
    public Optional<Output<String>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * The region where the bucket resides.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The region where the bucket resides.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    private SpacesBucketPolicyState() {}

    private SpacesBucketPolicyState(SpacesBucketPolicyState $) {
        this.bucket = $.bucket;
        this.policy = $.policy;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpacesBucketPolicyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpacesBucketPolicyState $;

        public Builder() {
            $ = new SpacesBucketPolicyState();
        }

        public Builder(SpacesBucketPolicyState defaults) {
            $ = new SpacesBucketPolicyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket The name of the bucket to which to apply the policy.
         * 
         * @return builder
         * 
         */
        public Builder bucket(@Nullable Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket The name of the bucket to which to apply the policy.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param policy The text of the policy.
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<String> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy The text of the policy.
         * 
         * @return builder
         * 
         */
        public Builder policy(String policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param region The region where the bucket resides.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The region where the bucket resides.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public SpacesBucketPolicyState build() {
            return $;
        }
    }

}
