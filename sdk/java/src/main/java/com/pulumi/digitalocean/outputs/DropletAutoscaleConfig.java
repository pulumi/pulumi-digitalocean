// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Double;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DropletAutoscaleConfig {
    /**
     * @return The cooldown duration between scaling events for the Droplet Autoscale pool.
     * 
     */
    private @Nullable Integer cooldownMinutes;
    /**
     * @return The maximum number of instances to maintain in the Droplet Autoscale pool.
     * 
     */
    private @Nullable Integer maxInstances;
    /**
     * @return The minimum number of instances to maintain in the Droplet Autoscale pool.
     * 
     */
    private @Nullable Integer minInstances;
    /**
     * @return The target average CPU load (in range `[0, 1]`) to maintain in the Droplet Autoscale pool.
     * 
     */
    private @Nullable Double targetCpuUtilization;
    /**
     * @return The target average Memory load (in range `[0, 1]`) to maintain in the Droplet Autoscale
     * pool.
     * 
     */
    private @Nullable Double targetMemoryUtilization;
    /**
     * @return The static number of instances to maintain in the pool Droplet Autoscale pool. This
     * argument cannot be used with any other config options.
     * 
     */
    private @Nullable Integer targetNumberInstances;

    private DropletAutoscaleConfig() {}
    /**
     * @return The cooldown duration between scaling events for the Droplet Autoscale pool.
     * 
     */
    public Optional<Integer> cooldownMinutes() {
        return Optional.ofNullable(this.cooldownMinutes);
    }
    /**
     * @return The maximum number of instances to maintain in the Droplet Autoscale pool.
     * 
     */
    public Optional<Integer> maxInstances() {
        return Optional.ofNullable(this.maxInstances);
    }
    /**
     * @return The minimum number of instances to maintain in the Droplet Autoscale pool.
     * 
     */
    public Optional<Integer> minInstances() {
        return Optional.ofNullable(this.minInstances);
    }
    /**
     * @return The target average CPU load (in range `[0, 1]`) to maintain in the Droplet Autoscale pool.
     * 
     */
    public Optional<Double> targetCpuUtilization() {
        return Optional.ofNullable(this.targetCpuUtilization);
    }
    /**
     * @return The target average Memory load (in range `[0, 1]`) to maintain in the Droplet Autoscale
     * pool.
     * 
     */
    public Optional<Double> targetMemoryUtilization() {
        return Optional.ofNullable(this.targetMemoryUtilization);
    }
    /**
     * @return The static number of instances to maintain in the pool Droplet Autoscale pool. This
     * argument cannot be used with any other config options.
     * 
     */
    public Optional<Integer> targetNumberInstances() {
        return Optional.ofNullable(this.targetNumberInstances);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DropletAutoscaleConfig defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer cooldownMinutes;
        private @Nullable Integer maxInstances;
        private @Nullable Integer minInstances;
        private @Nullable Double targetCpuUtilization;
        private @Nullable Double targetMemoryUtilization;
        private @Nullable Integer targetNumberInstances;
        public Builder() {}
        public Builder(DropletAutoscaleConfig defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.cooldownMinutes = defaults.cooldownMinutes;
    	      this.maxInstances = defaults.maxInstances;
    	      this.minInstances = defaults.minInstances;
    	      this.targetCpuUtilization = defaults.targetCpuUtilization;
    	      this.targetMemoryUtilization = defaults.targetMemoryUtilization;
    	      this.targetNumberInstances = defaults.targetNumberInstances;
        }

        @CustomType.Setter
        public Builder cooldownMinutes(@Nullable Integer cooldownMinutes) {

            this.cooldownMinutes = cooldownMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder maxInstances(@Nullable Integer maxInstances) {

            this.maxInstances = maxInstances;
            return this;
        }
        @CustomType.Setter
        public Builder minInstances(@Nullable Integer minInstances) {

            this.minInstances = minInstances;
            return this;
        }
        @CustomType.Setter
        public Builder targetCpuUtilization(@Nullable Double targetCpuUtilization) {

            this.targetCpuUtilization = targetCpuUtilization;
            return this;
        }
        @CustomType.Setter
        public Builder targetMemoryUtilization(@Nullable Double targetMemoryUtilization) {

            this.targetMemoryUtilization = targetMemoryUtilization;
            return this;
        }
        @CustomType.Setter
        public Builder targetNumberInstances(@Nullable Integer targetNumberInstances) {

            this.targetNumberInstances = targetNumberInstances;
            return this;
        }
        public DropletAutoscaleConfig build() {
            final var _resultValue = new DropletAutoscaleConfig();
            _resultValue.cooldownMinutes = cooldownMinutes;
            _resultValue.maxInstances = maxInstances;
            _resultValue.minInstances = minInstances;
            _resultValue.targetCpuUtilization = targetCpuUtilization;
            _resultValue.targetMemoryUtilization = targetMemoryUtilization;
            _resultValue.targetNumberInstances = targetNumberInstances;
            return _resultValue;
        }
    }
}
