// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.AppSpecServiceAlertDestinationsSlackWebhookArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSpecServiceAlertDestinationsArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSpecServiceAlertDestinationsArgs Empty = new AppSpecServiceAlertDestinationsArgs();

    /**
     * Determines which emails receive alerts. The emails must be team members. If not set, the team&#39;s email is used by default.
     * 
     */
    @Import(name="emails")
    private @Nullable Output<List<String>> emails;

    /**
     * @return Determines which emails receive alerts. The emails must be team members. If not set, the team&#39;s email is used by default.
     * 
     */
    public Optional<Output<List<String>>> emails() {
        return Optional.ofNullable(this.emails);
    }

    /**
     * Determines which slack channels or users receive alerts.
     * 
     */
    @Import(name="slackWebhooks")
    private @Nullable Output<List<AppSpecServiceAlertDestinationsSlackWebhookArgs>> slackWebhooks;

    /**
     * @return Determines which slack channels or users receive alerts.
     * 
     */
    public Optional<Output<List<AppSpecServiceAlertDestinationsSlackWebhookArgs>>> slackWebhooks() {
        return Optional.ofNullable(this.slackWebhooks);
    }

    private AppSpecServiceAlertDestinationsArgs() {}

    private AppSpecServiceAlertDestinationsArgs(AppSpecServiceAlertDestinationsArgs $) {
        this.emails = $.emails;
        this.slackWebhooks = $.slackWebhooks;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSpecServiceAlertDestinationsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSpecServiceAlertDestinationsArgs $;

        public Builder() {
            $ = new AppSpecServiceAlertDestinationsArgs();
        }

        public Builder(AppSpecServiceAlertDestinationsArgs defaults) {
            $ = new AppSpecServiceAlertDestinationsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param emails Determines which emails receive alerts. The emails must be team members. If not set, the team&#39;s email is used by default.
         * 
         * @return builder
         * 
         */
        public Builder emails(@Nullable Output<List<String>> emails) {
            $.emails = emails;
            return this;
        }

        /**
         * @param emails Determines which emails receive alerts. The emails must be team members. If not set, the team&#39;s email is used by default.
         * 
         * @return builder
         * 
         */
        public Builder emails(List<String> emails) {
            return emails(Output.of(emails));
        }

        /**
         * @param emails Determines which emails receive alerts. The emails must be team members. If not set, the team&#39;s email is used by default.
         * 
         * @return builder
         * 
         */
        public Builder emails(String... emails) {
            return emails(List.of(emails));
        }

        /**
         * @param slackWebhooks Determines which slack channels or users receive alerts.
         * 
         * @return builder
         * 
         */
        public Builder slackWebhooks(@Nullable Output<List<AppSpecServiceAlertDestinationsSlackWebhookArgs>> slackWebhooks) {
            $.slackWebhooks = slackWebhooks;
            return this;
        }

        /**
         * @param slackWebhooks Determines which slack channels or users receive alerts.
         * 
         * @return builder
         * 
         */
        public Builder slackWebhooks(List<AppSpecServiceAlertDestinationsSlackWebhookArgs> slackWebhooks) {
            return slackWebhooks(Output.of(slackWebhooks));
        }

        /**
         * @param slackWebhooks Determines which slack channels or users receive alerts.
         * 
         * @return builder
         * 
         */
        public Builder slackWebhooks(AppSpecServiceAlertDestinationsSlackWebhookArgs... slackWebhooks) {
            return slackWebhooks(List.of(slackWebhooks));
        }

        public AppSpecServiceAlertDestinationsArgs build() {
            return $;
        }
    }

}
