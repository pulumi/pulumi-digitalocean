// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.digitalocean.outputs.GetGenaiAgentsAgentKnowledgeBaseLastIndexingJob;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGenaiAgentsAgentKnowledgeBase {
    /**
     * @return Timestamp when the Knowledge Base was added to the Agent
     * 
     */
    private String addedToAgentAt;
    /**
     * @return Created At timestamp for the Knowledge Base
     * 
     */
    private String createdAt;
    /**
     * @return Database ID of the Knowledge Base
     * 
     */
    private @Nullable String databaseId;
    /**
     * @return Embedding model UUID for the Knowledge Base
     * 
     */
    private @Nullable String embeddingModelUuid;
    /**
     * @return Indicates if the Knowledge Base is public
     * 
     */
    private @Nullable Boolean isPublic;
    /**
     * @return Last indexing job for the Knowledge Base
     * 
     */
    private @Nullable List<GetGenaiAgentsAgentKnowledgeBaseLastIndexingJob> lastIndexingJobs;
    /**
     * @return Name of the Knowledge Base
     * 
     */
    private @Nullable String name;
    /**
     * @return Project ID of the Knowledge Base
     * 
     */
    private @Nullable String projectId;
    /**
     * @return Region of the Knowledge Base
     * 
     */
    private @Nullable String region;
    /**
     * @return List of tags
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return Timestamp when the Knowledge Base was updated
     * 
     */
    private String updatedAt;
    /**
     * @return User ID of the Knowledge Base
     * 
     */
    private @Nullable String userId;

    private GetGenaiAgentsAgentKnowledgeBase() {}
    /**
     * @return Timestamp when the Knowledge Base was added to the Agent
     * 
     */
    public String addedToAgentAt() {
        return this.addedToAgentAt;
    }
    /**
     * @return Created At timestamp for the Knowledge Base
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Database ID of the Knowledge Base
     * 
     */
    public Optional<String> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }
    /**
     * @return Embedding model UUID for the Knowledge Base
     * 
     */
    public Optional<String> embeddingModelUuid() {
        return Optional.ofNullable(this.embeddingModelUuid);
    }
    /**
     * @return Indicates if the Knowledge Base is public
     * 
     */
    public Optional<Boolean> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }
    /**
     * @return Last indexing job for the Knowledge Base
     * 
     */
    public List<GetGenaiAgentsAgentKnowledgeBaseLastIndexingJob> lastIndexingJobs() {
        return this.lastIndexingJobs == null ? List.of() : this.lastIndexingJobs;
    }
    /**
     * @return Name of the Knowledge Base
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Project ID of the Knowledge Base
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    /**
     * @return Region of the Knowledge Base
     * 
     */
    public Optional<String> region() {
        return Optional.ofNullable(this.region);
    }
    /**
     * @return List of tags
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return Timestamp when the Knowledge Base was updated
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return User ID of the Knowledge Base
     * 
     */
    public Optional<String> userId() {
        return Optional.ofNullable(this.userId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGenaiAgentsAgentKnowledgeBase defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String addedToAgentAt;
        private String createdAt;
        private @Nullable String databaseId;
        private @Nullable String embeddingModelUuid;
        private @Nullable Boolean isPublic;
        private @Nullable List<GetGenaiAgentsAgentKnowledgeBaseLastIndexingJob> lastIndexingJobs;
        private @Nullable String name;
        private @Nullable String projectId;
        private @Nullable String region;
        private @Nullable List<String> tags;
        private String updatedAt;
        private @Nullable String userId;
        public Builder() {}
        public Builder(GetGenaiAgentsAgentKnowledgeBase defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addedToAgentAt = defaults.addedToAgentAt;
    	      this.createdAt = defaults.createdAt;
    	      this.databaseId = defaults.databaseId;
    	      this.embeddingModelUuid = defaults.embeddingModelUuid;
    	      this.isPublic = defaults.isPublic;
    	      this.lastIndexingJobs = defaults.lastIndexingJobs;
    	      this.name = defaults.name;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.tags = defaults.tags;
    	      this.updatedAt = defaults.updatedAt;
    	      this.userId = defaults.userId;
        }

        @CustomType.Setter
        public Builder addedToAgentAt(String addedToAgentAt) {
            if (addedToAgentAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentsAgentKnowledgeBase", "addedToAgentAt");
            }
            this.addedToAgentAt = addedToAgentAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentsAgentKnowledgeBase", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder databaseId(@Nullable String databaseId) {

            this.databaseId = databaseId;
            return this;
        }
        @CustomType.Setter
        public Builder embeddingModelUuid(@Nullable String embeddingModelUuid) {

            this.embeddingModelUuid = embeddingModelUuid;
            return this;
        }
        @CustomType.Setter
        public Builder isPublic(@Nullable Boolean isPublic) {

            this.isPublic = isPublic;
            return this;
        }
        @CustomType.Setter
        public Builder lastIndexingJobs(@Nullable List<GetGenaiAgentsAgentKnowledgeBaseLastIndexingJob> lastIndexingJobs) {

            this.lastIndexingJobs = lastIndexingJobs;
            return this;
        }
        public Builder lastIndexingJobs(GetGenaiAgentsAgentKnowledgeBaseLastIndexingJob... lastIndexingJobs) {
            return lastIndexingJobs(List.of(lastIndexingJobs));
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder region(@Nullable String region) {

            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {

            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentsAgentKnowledgeBase", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder userId(@Nullable String userId) {

            this.userId = userId;
            return this;
        }
        public GetGenaiAgentsAgentKnowledgeBase build() {
            final var _resultValue = new GetGenaiAgentsAgentKnowledgeBase();
            _resultValue.addedToAgentAt = addedToAgentAt;
            _resultValue.createdAt = createdAt;
            _resultValue.databaseId = databaseId;
            _resultValue.embeddingModelUuid = embeddingModelUuid;
            _resultValue.isPublic = isPublic;
            _resultValue.lastIndexingJobs = lastIndexingJobs;
            _resultValue.name = name;
            _resultValue.projectId = projectId;
            _resultValue.region = region;
            _resultValue.tags = tags;
            _resultValue.updatedAt = updatedAt;
            _resultValue.userId = userId;
            return _resultValue;
        }
    }
}
