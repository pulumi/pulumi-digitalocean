// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetRegionsRegion {
    /**
     * @return A boolean value that represents whether new Droplets can be created in this region.
     * 
     */
    private Boolean available;
    /**
     * @return A set of features available in this region.
     * 
     */
    private List<String> features;
    /**
     * @return The display name of the region.
     * 
     */
    private String name;
    /**
     * @return A set of identifying slugs for the Droplet sizes available in this region.
     * 
     */
    private List<String> sizes;
    /**
     * @return A human-readable string that is used as a unique identifier for each region.
     * 
     */
    private String slug;

    private GetRegionsRegion() {}
    /**
     * @return A boolean value that represents whether new Droplets can be created in this region.
     * 
     */
    public Boolean available() {
        return this.available;
    }
    /**
     * @return A set of features available in this region.
     * 
     */
    public List<String> features() {
        return this.features;
    }
    /**
     * @return The display name of the region.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return A set of identifying slugs for the Droplet sizes available in this region.
     * 
     */
    public List<String> sizes() {
        return this.sizes;
    }
    /**
     * @return A human-readable string that is used as a unique identifier for each region.
     * 
     */
    public String slug() {
        return this.slug;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRegionsRegion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Boolean available;
        private List<String> features;
        private String name;
        private List<String> sizes;
        private String slug;
        public Builder() {}
        public Builder(GetRegionsRegion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.available = defaults.available;
    	      this.features = defaults.features;
    	      this.name = defaults.name;
    	      this.sizes = defaults.sizes;
    	      this.slug = defaults.slug;
        }

        @CustomType.Setter
        public Builder available(Boolean available) {
            this.available = Objects.requireNonNull(available);
            return this;
        }
        @CustomType.Setter
        public Builder features(List<String> features) {
            this.features = Objects.requireNonNull(features);
            return this;
        }
        public Builder features(String... features) {
            return features(List.of(features));
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder sizes(List<String> sizes) {
            this.sizes = Objects.requireNonNull(sizes);
            return this;
        }
        public Builder sizes(String... sizes) {
            return sizes(List.of(sizes));
        }
        @CustomType.Setter
        public Builder slug(String slug) {
            this.slug = Objects.requireNonNull(slug);
            return this;
        }
        public GetRegionsRegion build() {
            final var _resultValue = new GetRegionsRegion();
            _resultValue.available = available;
            _resultValue.features = features;
            _resultValue.name = name;
            _resultValue.sizes = sizes;
            _resultValue.slug = slug;
            return _resultValue;
        }
    }
}
