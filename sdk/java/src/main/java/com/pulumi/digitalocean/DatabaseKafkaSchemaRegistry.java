// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.digitalocean.DatabaseKafkaSchemaRegistryArgs;
import com.pulumi.digitalocean.Utilities;
import com.pulumi.digitalocean.inputs.DatabaseKafkaSchemaRegistryState;
import java.lang.String;
import javax.annotation.Nullable;

/**
 * Provides a DigitalOcean Kafka schema registry for Kafka clusters.
 * 
 * ## Example Usage
 * 
 * ### Create a new Kafka Schema Registry
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.digitalocean.DatabaseCluster;
 * import com.pulumi.digitalocean.DatabaseClusterArgs;
 * import com.pulumi.digitalocean.DatabaseKafkaSchemaRegistry;
 * import com.pulumi.digitalocean.DatabaseKafkaSchemaRegistryArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var kafka_example = new DatabaseCluster("kafka-example", DatabaseClusterArgs.builder()
 *             .name("example-kafka-cluster")
 *             .engine("kafka")
 *             .version("3.5")
 *             .size("gd-2vcpu-8gb")
 *             .region("blr1")
 *             .nodeCount(3)
 *             .tags("production")
 *             .build());
 * 
 *         var schema_01 = new DatabaseKafkaSchemaRegistry("schema-01", DatabaseKafkaSchemaRegistryArgs.builder()
 *             .clusterId(kafka_example.id())
 *             .subjectName("test-schema")
 *             .schemaType("avro")
 *             .schema("""
 * {
 *   "type": "record",
 *   "namespace": "example",
 *   "name": "TestRecord",
 *   "fields": [
 *     {"name": "id", "type": "string"},
 *     {"name": "name", "type": "string"},
 *     {"name": "value", "type": "int"}
 *   ]
 * }
 *             """)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 */
@ResourceType(type="digitalocean:index/databaseKafkaSchemaRegistry:DatabaseKafkaSchemaRegistry")
public class DatabaseKafkaSchemaRegistry extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the target Kafka cluster.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return The ID of the target Kafka cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * The schema definition as a string.
     * 
     */
    @Export(name="schema", refs={String.class}, tree="[0]")
    private Output<String> schema;

    /**
     * @return The schema definition as a string.
     * 
     */
    public Output<String> schema() {
        return this.schema;
    }
    /**
     * The schema type. Available values are: avro, json, or protobuf.
     * 
     */
    @Export(name="schemaType", refs={String.class}, tree="[0]")
    private Output<String> schemaType;

    /**
     * @return The schema type. Available values are: avro, json, or protobuf.
     * 
     */
    public Output<String> schemaType() {
        return this.schemaType;
    }
    /**
     * The name of the schema subject.
     * 
     */
    @Export(name="subjectName", refs={String.class}, tree="[0]")
    private Output<String> subjectName;

    /**
     * @return The name of the schema subject.
     * 
     */
    public Output<String> subjectName() {
        return this.subjectName;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseKafkaSchemaRegistry(java.lang.String name) {
        this(name, DatabaseKafkaSchemaRegistryArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseKafkaSchemaRegistry(java.lang.String name, DatabaseKafkaSchemaRegistryArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseKafkaSchemaRegistry(java.lang.String name, DatabaseKafkaSchemaRegistryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/databaseKafkaSchemaRegistry:DatabaseKafkaSchemaRegistry", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DatabaseKafkaSchemaRegistry(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseKafkaSchemaRegistryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/databaseKafkaSchemaRegistry:DatabaseKafkaSchemaRegistry", name, state, makeResourceOptions(options, id), false);
    }

    private static DatabaseKafkaSchemaRegistryArgs makeArgs(DatabaseKafkaSchemaRegistryArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DatabaseKafkaSchemaRegistryArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseKafkaSchemaRegistry get(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseKafkaSchemaRegistryState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseKafkaSchemaRegistry(name, id, state, options);
    }
}
