// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSshKeyResult {
    /**
     * @return The fingerprint of the public key of the ssh key.
     * 
     */
    private String fingerprint;
    /**
     * @return The ID of the ssh key.
     * 
     */
    private Integer id;
    private String name;
    /**
     * @return The public key of the ssh key.
     * 
     */
    private String publicKey;

    private GetSshKeyResult() {}
    /**
     * @return The fingerprint of the public key of the ssh key.
     * 
     */
    public String fingerprint() {
        return this.fingerprint;
    }
    /**
     * @return The ID of the ssh key.
     * 
     */
    public Integer id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The public key of the ssh key.
     * 
     */
    public String publicKey() {
        return this.publicKey;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSshKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String fingerprint;
        private Integer id;
        private String name;
        private String publicKey;
        public Builder() {}
        public Builder(GetSshKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.fingerprint = defaults.fingerprint;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.publicKey = defaults.publicKey;
        }

        @CustomType.Setter
        public Builder fingerprint(String fingerprint) {
            if (fingerprint == null) {
              throw new MissingRequiredPropertyException("GetSshKeyResult", "fingerprint");
            }
            this.fingerprint = fingerprint;
            return this;
        }
        @CustomType.Setter
        public Builder id(Integer id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetSshKeyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSshKeyResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder publicKey(String publicKey) {
            if (publicKey == null) {
              throw new MissingRequiredPropertyException("GetSshKeyResult", "publicKey");
            }
            this.publicKey = publicKey;
            return this;
        }
        public GetSshKeyResult build() {
            final var _resultValue = new GetSshKeyResult();
            _resultValue.fingerprint = fingerprint;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.publicKey = publicKey;
            return _resultValue;
        }
    }
}
