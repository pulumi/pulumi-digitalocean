// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGenaiAgentApiKeyInfo extends com.pulumi.resources.InvokeArgs {

    public static final GetGenaiAgentApiKeyInfo Empty = new GetGenaiAgentApiKeyInfo();

    /**
     * API Key value
     * 
     */
    @Import(name="createdAt", required=true)
    private String createdAt;

    /**
     * @return API Key value
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }

    /**
     * Created By user ID for the API Key
     * 
     */
    @Import(name="createdBy")
    private @Nullable String createdBy;

    /**
     * @return Created By user ID for the API Key
     * 
     */
    public Optional<String> createdBy() {
        return Optional.ofNullable(this.createdBy);
    }

    /**
     * Deleted At timestamp for the API Key
     * 
     */
    @Import(name="deletedAt", required=true)
    private String deletedAt;

    /**
     * @return Deleted At timestamp for the API Key
     * 
     */
    public String deletedAt() {
        return this.deletedAt;
    }

    /**
     * Name of the API Key
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the API Key
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Updated At timestamp for the API Key
     * 
     */
    @Import(name="secretKey")
    private @Nullable String secretKey;

    /**
     * @return Updated At timestamp for the API Key
     * 
     */
    public Optional<String> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    /**
     * API Key value
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return API Key value
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetGenaiAgentApiKeyInfo() {}

    private GetGenaiAgentApiKeyInfo(GetGenaiAgentApiKeyInfo $) {
        this.createdAt = $.createdAt;
        this.createdBy = $.createdBy;
        this.deletedAt = $.deletedAt;
        this.name = $.name;
        this.secretKey = $.secretKey;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGenaiAgentApiKeyInfo defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGenaiAgentApiKeyInfo $;

        public Builder() {
            $ = new GetGenaiAgentApiKeyInfo();
        }

        public Builder(GetGenaiAgentApiKeyInfo defaults) {
            $ = new GetGenaiAgentApiKeyInfo(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt API Key value
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdBy Created By user ID for the API Key
         * 
         * @return builder
         * 
         */
        public Builder createdBy(@Nullable String createdBy) {
            $.createdBy = createdBy;
            return this;
        }

        /**
         * @param deletedAt Deleted At timestamp for the API Key
         * 
         * @return builder
         * 
         */
        public Builder deletedAt(String deletedAt) {
            $.deletedAt = deletedAt;
            return this;
        }

        /**
         * @param name Name of the API Key
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param secretKey Updated At timestamp for the API Key
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable String secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param uuid API Key value
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetGenaiAgentApiKeyInfo build() {
            if ($.createdAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentApiKeyInfo", "createdAt");
            }
            if ($.deletedAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentApiKeyInfo", "deletedAt");
            }
            return $;
        }
    }

}
