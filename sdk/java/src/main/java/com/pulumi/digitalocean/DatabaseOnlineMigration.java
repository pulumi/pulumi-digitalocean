// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.digitalocean.DatabaseOnlineMigrationArgs;
import com.pulumi.digitalocean.Utilities;
import com.pulumi.digitalocean.inputs.DatabaseOnlineMigrationState;
import com.pulumi.digitalocean.outputs.DatabaseOnlineMigrationSource;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides a virtual resource that can be used to start an online migration
 * for a DigitalOcean managed database cluster. Migrating a cluster establishes a
 * connection with an existing cluster and replicates its contents to the target
 * cluster. If the existing database is continuously being written to, the migration
 * process will continue for up to two weeks unless it is manually stopped.
 * Online migration is only available for MySQL, PostgreSQL, Caching, and Valkey clusters.
 * 
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.digitalocean.DatabaseCluster;
 * import com.pulumi.digitalocean.DatabaseClusterArgs;
 * import com.pulumi.digitalocean.DatabaseDb;
 * import com.pulumi.digitalocean.DatabaseDbArgs;
 * import com.pulumi.digitalocean.DatabaseOnlineMigration;
 * import com.pulumi.digitalocean.DatabaseOnlineMigrationArgs;
 * import com.pulumi.digitalocean.inputs.DatabaseOnlineMigrationSourceArgs;
 * import com.pulumi.resources.CustomResourceOptions;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var source = new DatabaseCluster("source", DatabaseClusterArgs.builder()
 *             .name("st01")
 *             .engine("mysql")
 *             .version("8")
 *             .size("db-s-1vcpu-1gb")
 *             .region("nyc1")
 *             .nodeCount(1)
 *             .tags("production")
 *             .build());
 * 
 *         var destination = new DatabaseCluster("destination", DatabaseClusterArgs.builder()
 *             .name("dt01")
 *             .engine("mysql")
 *             .version("8")
 *             .size("db-s-1vcpu-1gb")
 *             .region("nyc1")
 *             .nodeCount(1)
 *             .tags("production")
 *             .build());
 * 
 *         var sourceDb = new DatabaseDb("sourceDb", DatabaseDbArgs.builder()
 *             .clusterId(source.id())
 *             .name("terraform-db-om-source")
 *             .build());
 * 
 *         var foobar = new DatabaseOnlineMigration("foobar", DatabaseOnlineMigrationArgs.builder()
 *             .clusterId(destination.id())
 *             .source(DatabaseOnlineMigrationSourceArgs.builder()
 *                 .host(source.host())
 *                 .dbName(sourceDb.name())
 *                 .port(source.port())
 *                 .username(source.user())
 *                 .password(source.password())
 *                 .build())
 *             .build(), CustomResourceOptions.builder()
 *                 .dependsOn(                
 *                     destination,
 *                     source,
 *                     sourceDb)
 *                 .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * A MySQL database cluster&#39;s online_migration can be imported using the `id` the parent cluster, e.g.
 * 
 * ```sh
 * $ pulumi import digitalocean:index/databaseOnlineMigration:DatabaseOnlineMigration example 4b62829a-9c42-465b-aaa3-84051048e712
 * ```
 * 
 */
@ResourceType(type="digitalocean:index/databaseOnlineMigration:DatabaseOnlineMigration")
public class DatabaseOnlineMigration extends com.pulumi.resources.CustomResource {
    /**
     * The ID of the target MySQL cluster.
     * 
     */
    @Export(name="clusterId", refs={String.class}, tree="[0]")
    private Output<String> clusterId;

    /**
     * @return The ID of the target MySQL cluster.
     * 
     */
    public Output<String> clusterId() {
        return this.clusterId;
    }
    /**
     * The date and time when the online migration was created
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return The date and time when the online migration was created
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * When set to true, enables SSL encryption when connecting to the source database.
     * 
     */
    @Export(name="disableSsl", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> disableSsl;

    /**
     * @return When set to true, enables SSL encryption when connecting to the source database.
     * 
     */
    public Output<Optional<Boolean>> disableSsl() {
        return Codegen.optional(this.disableSsl);
    }
    /**
     * A list of databases that should be ignored during migration.
     * 
     */
    @Export(name="ignoreDbs", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> ignoreDbs;

    /**
     * @return A list of databases that should be ignored during migration.
     * 
     */
    public Output<Optional<List<String>>> ignoreDbs() {
        return Codegen.optional(this.ignoreDbs);
    }
    /**
     * Configuration for migration
     * 
     */
    @Export(name="source", refs={DatabaseOnlineMigrationSource.class}, tree="[0]")
    private Output<DatabaseOnlineMigrationSource> source;

    /**
     * @return Configuration for migration
     * 
     */
    public Output<DatabaseOnlineMigrationSource> source() {
        return this.source;
    }
    /**
     * The status of the online migration
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return The status of the online migration
     * 
     */
    public Output<String> status() {
        return this.status;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DatabaseOnlineMigration(java.lang.String name) {
        this(name, DatabaseOnlineMigrationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DatabaseOnlineMigration(java.lang.String name, DatabaseOnlineMigrationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DatabaseOnlineMigration(java.lang.String name, DatabaseOnlineMigrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/databaseOnlineMigration:DatabaseOnlineMigration", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DatabaseOnlineMigration(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseOnlineMigrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/databaseOnlineMigration:DatabaseOnlineMigration", name, state, makeResourceOptions(options, id), false);
    }

    private static DatabaseOnlineMigrationArgs makeArgs(DatabaseOnlineMigrationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DatabaseOnlineMigrationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DatabaseOnlineMigration get(java.lang.String name, Output<java.lang.String> id, @Nullable DatabaseOnlineMigrationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DatabaseOnlineMigration(name, id, state, options);
    }
}
