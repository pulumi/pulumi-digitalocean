// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DropletBackupPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final DropletBackupPolicyArgs Empty = new DropletBackupPolicyArgs();

    /**
     * The hour of the day that the backup window will start (`0`, `4`, `8`, `12`, `16`, `20`).
     * 
     */
    @Import(name="hour")
    private @Nullable Output<Integer> hour;

    /**
     * @return The hour of the day that the backup window will start (`0`, `4`, `8`, `12`, `16`, `20`).
     * 
     */
    public Optional<Output<Integer>> hour() {
        return Optional.ofNullable(this.hour);
    }

    /**
     * The backup plan used for the Droplet. The plan can be either `daily` or `weekly`.
     * 
     */
    @Import(name="plan")
    private @Nullable Output<String> plan;

    /**
     * @return The backup plan used for the Droplet. The plan can be either `daily` or `weekly`.
     * 
     */
    public Optional<Output<String>> plan() {
        return Optional.ofNullable(this.plan);
    }

    /**
     * The day of the week on which the backup will occur (`SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`).
     * 
     */
    @Import(name="weekday")
    private @Nullable Output<String> weekday;

    /**
     * @return The day of the week on which the backup will occur (`SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`).
     * 
     */
    public Optional<Output<String>> weekday() {
        return Optional.ofNullable(this.weekday);
    }

    private DropletBackupPolicyArgs() {}

    private DropletBackupPolicyArgs(DropletBackupPolicyArgs $) {
        this.hour = $.hour;
        this.plan = $.plan;
        this.weekday = $.weekday;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DropletBackupPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DropletBackupPolicyArgs $;

        public Builder() {
            $ = new DropletBackupPolicyArgs();
        }

        public Builder(DropletBackupPolicyArgs defaults) {
            $ = new DropletBackupPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param hour The hour of the day that the backup window will start (`0`, `4`, `8`, `12`, `16`, `20`).
         * 
         * @return builder
         * 
         */
        public Builder hour(@Nullable Output<Integer> hour) {
            $.hour = hour;
            return this;
        }

        /**
         * @param hour The hour of the day that the backup window will start (`0`, `4`, `8`, `12`, `16`, `20`).
         * 
         * @return builder
         * 
         */
        public Builder hour(Integer hour) {
            return hour(Output.of(hour));
        }

        /**
         * @param plan The backup plan used for the Droplet. The plan can be either `daily` or `weekly`.
         * 
         * @return builder
         * 
         */
        public Builder plan(@Nullable Output<String> plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param plan The backup plan used for the Droplet. The plan can be either `daily` or `weekly`.
         * 
         * @return builder
         * 
         */
        public Builder plan(String plan) {
            return plan(Output.of(plan));
        }

        /**
         * @param weekday The day of the week on which the backup will occur (`SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`).
         * 
         * @return builder
         * 
         */
        public Builder weekday(@Nullable Output<String> weekday) {
            $.weekday = weekday;
            return this;
        }

        /**
         * @param weekday The day of the week on which the backup will occur (`SUN`, `MON`, `TUE`, `WED`, `THU`, `FRI`, `SAT`).
         * 
         * @return builder
         * 
         */
        public Builder weekday(String weekday) {
            return weekday(Output.of(weekday));
        }

        public DropletBackupPolicyArgs build() {
            return $;
        }
    }

}
