// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.FirewallInboundRuleArgs;
import com.pulumi.digitalocean.inputs.FirewallOutboundRuleArgs;
import com.pulumi.digitalocean.inputs.FirewallPendingChangeArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallState extends com.pulumi.resources.ResourceArgs {

    public static final FirewallState Empty = new FirewallState();

    /**
     * A time value given in ISO8601 combined date and time format
     * that represents when the Firewall was created.
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return A time value given in ISO8601 combined date and time format
     * that represents when the Firewall was created.
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * The list of the IDs of the Droplets assigned
     * to the Firewall (max. 10). If you want to assign more droplets to the
     * Firewall, add Tags to them and use the `tags` argument below.
     * 
     */
    @Import(name="dropletIds")
    private @Nullable Output<List<Integer>> dropletIds;

    /**
     * @return The list of the IDs of the Droplets assigned
     * to the Firewall (max. 10). If you want to assign more droplets to the
     * Firewall, add Tags to them and use the `tags` argument below.
     * 
     */
    public Optional<Output<List<Integer>>> dropletIds() {
        return Optional.ofNullable(this.dropletIds);
    }

    /**
     * The inbound access rule block for the Firewall.
     * The `inbound_rule` block is documented below.
     * 
     */
    @Import(name="inboundRules")
    private @Nullable Output<List<FirewallInboundRuleArgs>> inboundRules;

    /**
     * @return The inbound access rule block for the Firewall.
     * The `inbound_rule` block is documented below.
     * 
     */
    public Optional<Output<List<FirewallInboundRuleArgs>>> inboundRules() {
        return Optional.ofNullable(this.inboundRules);
    }

    /**
     * The Firewall name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Firewall name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The outbound access rule block for the Firewall.
     * The `outbound_rule` block is documented below.
     * 
     */
    @Import(name="outboundRules")
    private @Nullable Output<List<FirewallOutboundRuleArgs>> outboundRules;

    /**
     * @return The outbound access rule block for the Firewall.
     * The `outbound_rule` block is documented below.
     * 
     */
    public Optional<Output<List<FirewallOutboundRuleArgs>>> outboundRules() {
        return Optional.ofNullable(this.outboundRules);
    }

    /**
     * An list of object containing the fields, &#34;droplet_id&#34;,
     * &#34;removing&#34;, and &#34;status&#34;.  It is provided to detail exactly which Droplets
     * are having their security policies updated.  When empty, all changes
     * have been successfully applied.
     * 
     */
    @Import(name="pendingChanges")
    private @Nullable Output<List<FirewallPendingChangeArgs>> pendingChanges;

    /**
     * @return An list of object containing the fields, &#34;droplet_id&#34;,
     * &#34;removing&#34;, and &#34;status&#34;.  It is provided to detail exactly which Droplets
     * are having their security policies updated.  When empty, all changes
     * have been successfully applied.
     * 
     */
    public Optional<Output<List<FirewallPendingChangeArgs>>> pendingChanges() {
        return Optional.ofNullable(this.pendingChanges);
    }

    /**
     * A status string indicating the current state of the Firewall.
     * This can be &#34;waiting&#34;, &#34;succeeded&#34;, or &#34;failed&#34;.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return A status string indicating the current state of the Firewall.
     * This can be &#34;waiting&#34;, &#34;succeeded&#34;, or &#34;failed&#34;.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    /**
     * The names of the Tags assigned to the Firewall (max. 5).
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The names of the Tags assigned to the Firewall (max. 5).
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FirewallState() {}

    private FirewallState(FirewallState $) {
        this.createdAt = $.createdAt;
        this.dropletIds = $.dropletIds;
        this.inboundRules = $.inboundRules;
        this.name = $.name;
        this.outboundRules = $.outboundRules;
        this.pendingChanges = $.pendingChanges;
        this.status = $.status;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallState $;

        public Builder() {
            $ = new FirewallState();
        }

        public Builder(FirewallState defaults) {
            $ = new FirewallState(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt A time value given in ISO8601 combined date and time format
         * that represents when the Firewall was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt A time value given in ISO8601 combined date and time format
         * that represents when the Firewall was created.
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param dropletIds The list of the IDs of the Droplets assigned
         * to the Firewall (max. 10). If you want to assign more droplets to the
         * Firewall, add Tags to them and use the `tags` argument below.
         * 
         * @return builder
         * 
         */
        public Builder dropletIds(@Nullable Output<List<Integer>> dropletIds) {
            $.dropletIds = dropletIds;
            return this;
        }

        /**
         * @param dropletIds The list of the IDs of the Droplets assigned
         * to the Firewall (max. 10). If you want to assign more droplets to the
         * Firewall, add Tags to them and use the `tags` argument below.
         * 
         * @return builder
         * 
         */
        public Builder dropletIds(List<Integer> dropletIds) {
            return dropletIds(Output.of(dropletIds));
        }

        /**
         * @param dropletIds The list of the IDs of the Droplets assigned
         * to the Firewall (max. 10). If you want to assign more droplets to the
         * Firewall, add Tags to them and use the `tags` argument below.
         * 
         * @return builder
         * 
         */
        public Builder dropletIds(Integer... dropletIds) {
            return dropletIds(List.of(dropletIds));
        }

        /**
         * @param inboundRules The inbound access rule block for the Firewall.
         * The `inbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inboundRules(@Nullable Output<List<FirewallInboundRuleArgs>> inboundRules) {
            $.inboundRules = inboundRules;
            return this;
        }

        /**
         * @param inboundRules The inbound access rule block for the Firewall.
         * The `inbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inboundRules(List<FirewallInboundRuleArgs> inboundRules) {
            return inboundRules(Output.of(inboundRules));
        }

        /**
         * @param inboundRules The inbound access rule block for the Firewall.
         * The `inbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inboundRules(FirewallInboundRuleArgs... inboundRules) {
            return inboundRules(List.of(inboundRules));
        }

        /**
         * @param name The Firewall name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Firewall name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param outboundRules The outbound access rule block for the Firewall.
         * The `outbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outboundRules(@Nullable Output<List<FirewallOutboundRuleArgs>> outboundRules) {
            $.outboundRules = outboundRules;
            return this;
        }

        /**
         * @param outboundRules The outbound access rule block for the Firewall.
         * The `outbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outboundRules(List<FirewallOutboundRuleArgs> outboundRules) {
            return outboundRules(Output.of(outboundRules));
        }

        /**
         * @param outboundRules The outbound access rule block for the Firewall.
         * The `outbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outboundRules(FirewallOutboundRuleArgs... outboundRules) {
            return outboundRules(List.of(outboundRules));
        }

        /**
         * @param pendingChanges An list of object containing the fields, &#34;droplet_id&#34;,
         * &#34;removing&#34;, and &#34;status&#34;.  It is provided to detail exactly which Droplets
         * are having their security policies updated.  When empty, all changes
         * have been successfully applied.
         * 
         * @return builder
         * 
         */
        public Builder pendingChanges(@Nullable Output<List<FirewallPendingChangeArgs>> pendingChanges) {
            $.pendingChanges = pendingChanges;
            return this;
        }

        /**
         * @param pendingChanges An list of object containing the fields, &#34;droplet_id&#34;,
         * &#34;removing&#34;, and &#34;status&#34;.  It is provided to detail exactly which Droplets
         * are having their security policies updated.  When empty, all changes
         * have been successfully applied.
         * 
         * @return builder
         * 
         */
        public Builder pendingChanges(List<FirewallPendingChangeArgs> pendingChanges) {
            return pendingChanges(Output.of(pendingChanges));
        }

        /**
         * @param pendingChanges An list of object containing the fields, &#34;droplet_id&#34;,
         * &#34;removing&#34;, and &#34;status&#34;.  It is provided to detail exactly which Droplets
         * are having their security policies updated.  When empty, all changes
         * have been successfully applied.
         * 
         * @return builder
         * 
         */
        public Builder pendingChanges(FirewallPendingChangeArgs... pendingChanges) {
            return pendingChanges(List.of(pendingChanges));
        }

        /**
         * @param status A status string indicating the current state of the Firewall.
         * This can be &#34;waiting&#34;, &#34;succeeded&#34;, or &#34;failed&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status A status string indicating the current state of the Firewall.
         * This can be &#34;waiting&#34;, &#34;succeeded&#34;, or &#34;failed&#34;.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        /**
         * @param tags The names of the Tags assigned to the Firewall (max. 5).
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The names of the Tags assigned to the Firewall (max. 5).
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The names of the Tags assigned to the Firewall (max. 5).
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public FirewallState build() {
            return $;
        }
    }

}
