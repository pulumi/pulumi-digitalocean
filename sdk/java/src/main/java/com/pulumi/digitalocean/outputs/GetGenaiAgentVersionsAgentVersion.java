// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.digitalocean.outputs.GetGenaiAgentVersionsAgentVersionAttachedChildAgent;
import com.pulumi.digitalocean.outputs.GetGenaiAgentVersionsAgentVersionAttachedFunction;
import com.pulumi.digitalocean.outputs.GetGenaiAgentVersionsAgentVersionAttachedGuardrail;
import com.pulumi.digitalocean.outputs.GetGenaiAgentVersionsAgentVersionAttachedKnowledgeBase;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetGenaiAgentVersionsAgentVersion {
    /**
     * @return ID of the Agent to retrieve versions for
     * 
     */
    private String agentUuid;
    /**
     * @return List of child agents attached to this version
     * 
     */
    private List<GetGenaiAgentVersionsAgentVersionAttachedChildAgent> attachedChildAgents;
    /**
     * @return List of functions attached to this version
     * 
     */
    private List<GetGenaiAgentVersionsAgentVersionAttachedFunction> attachedFunctions;
    /**
     * @return List of guardrails attached to this version
     * 
     */
    private List<GetGenaiAgentVersionsAgentVersionAttachedGuardrail> attachedGuardrails;
    /**
     * @return List of Knowledge Bases agent versions
     * 
     */
    private List<GetGenaiAgentVersionsAgentVersionAttachedKnowledgeBase> attachedKnowledgeBases;
    /**
     * @return Indicates if the version can be rolled back
     * 
     */
    private Boolean canRollback;
    /**
     * @return Timestamp when the Agent Version was created
     * 
     */
    private String createdAt;
    /**
     * @return Email of the user who created this version
     * 
     */
    private String createdByEmail;
    /**
     * @return Indicates if this version is currently applied configuration
     * 
     */
    private Boolean currentlyApplied;
    /**
     * @return Description of the Agent Version
     * 
     */
    private String description;
    /**
     * @return Id of the Agent Version
     * 
     */
    private String id;
    /**
     * @return Instruction for the Agent Version
     * 
     */
    private String instruction;
    /**
     * @return K value for the Agent Version
     * 
     */
    private Integer k;
    /**
     * @return Maximum tokens allowed for the Agent
     * 
     */
    private Integer maxTokens;
    /**
     * @return Name of model associated to the agent version
     * 
     */
    private String modelName;
    /**
     * @return Name of the Agent
     * 
     */
    private String name;
    /**
     * @return Indicates if the should provide in-response citations
     * 
     */
    private Boolean provideCitations;
    /**
     * @return Retrieval method used.
     * - RETRIEVAL_METHOD_UNKNOWN: The retrieval method is unknown
     * - RETRIEVAL_METHOD_REWRITE: The retrieval method is rewrite
     * - RETRIEVAL_METHOD_STEP_BACK: The retrieval method is step back
     * - RETRIEVAL_METHOD_SUB_QUERIES: The retrieval method is sub queries
     * - RETRIEVAL_METHOD_NONE: The retrieval method is none.
     * 
     */
    private String retrievalMethod;
    /**
     * @return List of Tags
     * 
     */
    private List<String> tags;
    /**
     * @return Temperature setting for the Agent Version
     * 
     */
    private Double temperature;
    /**
     * @return Top P sampling parameter for the Agent Version
     * 
     */
    private Double topP;
    /**
     * @return Trigger action for the Agent Version
     * 
     */
    private String triggerAction;
    /**
     * @return Hash of the Agent Version
     * 
     */
    private String versionHash;

    private GetGenaiAgentVersionsAgentVersion() {}
    /**
     * @return ID of the Agent to retrieve versions for
     * 
     */
    public String agentUuid() {
        return this.agentUuid;
    }
    /**
     * @return List of child agents attached to this version
     * 
     */
    public List<GetGenaiAgentVersionsAgentVersionAttachedChildAgent> attachedChildAgents() {
        return this.attachedChildAgents;
    }
    /**
     * @return List of functions attached to this version
     * 
     */
    public List<GetGenaiAgentVersionsAgentVersionAttachedFunction> attachedFunctions() {
        return this.attachedFunctions;
    }
    /**
     * @return List of guardrails attached to this version
     * 
     */
    public List<GetGenaiAgentVersionsAgentVersionAttachedGuardrail> attachedGuardrails() {
        return this.attachedGuardrails;
    }
    /**
     * @return List of Knowledge Bases agent versions
     * 
     */
    public List<GetGenaiAgentVersionsAgentVersionAttachedKnowledgeBase> attachedKnowledgeBases() {
        return this.attachedKnowledgeBases;
    }
    /**
     * @return Indicates if the version can be rolled back
     * 
     */
    public Boolean canRollback() {
        return this.canRollback;
    }
    /**
     * @return Timestamp when the Agent Version was created
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Email of the user who created this version
     * 
     */
    public String createdByEmail() {
        return this.createdByEmail;
    }
    /**
     * @return Indicates if this version is currently applied configuration
     * 
     */
    public Boolean currentlyApplied() {
        return this.currentlyApplied;
    }
    /**
     * @return Description of the Agent Version
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Id of the Agent Version
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Instruction for the Agent Version
     * 
     */
    public String instruction() {
        return this.instruction;
    }
    /**
     * @return K value for the Agent Version
     * 
     */
    public Integer k() {
        return this.k;
    }
    /**
     * @return Maximum tokens allowed for the Agent
     * 
     */
    public Integer maxTokens() {
        return this.maxTokens;
    }
    /**
     * @return Name of model associated to the agent version
     * 
     */
    public String modelName() {
        return this.modelName;
    }
    /**
     * @return Name of the Agent
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Indicates if the should provide in-response citations
     * 
     */
    public Boolean provideCitations() {
        return this.provideCitations;
    }
    /**
     * @return Retrieval method used.
     * - RETRIEVAL_METHOD_UNKNOWN: The retrieval method is unknown
     * - RETRIEVAL_METHOD_REWRITE: The retrieval method is rewrite
     * - RETRIEVAL_METHOD_STEP_BACK: The retrieval method is step back
     * - RETRIEVAL_METHOD_SUB_QUERIES: The retrieval method is sub queries
     * - RETRIEVAL_METHOD_NONE: The retrieval method is none.
     * 
     */
    public String retrievalMethod() {
        return this.retrievalMethod;
    }
    /**
     * @return List of Tags
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return Temperature setting for the Agent Version
     * 
     */
    public Double temperature() {
        return this.temperature;
    }
    /**
     * @return Top P sampling parameter for the Agent Version
     * 
     */
    public Double topP() {
        return this.topP;
    }
    /**
     * @return Trigger action for the Agent Version
     * 
     */
    public String triggerAction() {
        return this.triggerAction;
    }
    /**
     * @return Hash of the Agent Version
     * 
     */
    public String versionHash() {
        return this.versionHash;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGenaiAgentVersionsAgentVersion defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String agentUuid;
        private List<GetGenaiAgentVersionsAgentVersionAttachedChildAgent> attachedChildAgents;
        private List<GetGenaiAgentVersionsAgentVersionAttachedFunction> attachedFunctions;
        private List<GetGenaiAgentVersionsAgentVersionAttachedGuardrail> attachedGuardrails;
        private List<GetGenaiAgentVersionsAgentVersionAttachedKnowledgeBase> attachedKnowledgeBases;
        private Boolean canRollback;
        private String createdAt;
        private String createdByEmail;
        private Boolean currentlyApplied;
        private String description;
        private String id;
        private String instruction;
        private Integer k;
        private Integer maxTokens;
        private String modelName;
        private String name;
        private Boolean provideCitations;
        private String retrievalMethod;
        private List<String> tags;
        private Double temperature;
        private Double topP;
        private String triggerAction;
        private String versionHash;
        public Builder() {}
        public Builder(GetGenaiAgentVersionsAgentVersion defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentUuid = defaults.agentUuid;
    	      this.attachedChildAgents = defaults.attachedChildAgents;
    	      this.attachedFunctions = defaults.attachedFunctions;
    	      this.attachedGuardrails = defaults.attachedGuardrails;
    	      this.attachedKnowledgeBases = defaults.attachedKnowledgeBases;
    	      this.canRollback = defaults.canRollback;
    	      this.createdAt = defaults.createdAt;
    	      this.createdByEmail = defaults.createdByEmail;
    	      this.currentlyApplied = defaults.currentlyApplied;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.instruction = defaults.instruction;
    	      this.k = defaults.k;
    	      this.maxTokens = defaults.maxTokens;
    	      this.modelName = defaults.modelName;
    	      this.name = defaults.name;
    	      this.provideCitations = defaults.provideCitations;
    	      this.retrievalMethod = defaults.retrievalMethod;
    	      this.tags = defaults.tags;
    	      this.temperature = defaults.temperature;
    	      this.topP = defaults.topP;
    	      this.triggerAction = defaults.triggerAction;
    	      this.versionHash = defaults.versionHash;
        }

        @CustomType.Setter
        public Builder agentUuid(String agentUuid) {
            if (agentUuid == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "agentUuid");
            }
            this.agentUuid = agentUuid;
            return this;
        }
        @CustomType.Setter
        public Builder attachedChildAgents(List<GetGenaiAgentVersionsAgentVersionAttachedChildAgent> attachedChildAgents) {
            if (attachedChildAgents == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "attachedChildAgents");
            }
            this.attachedChildAgents = attachedChildAgents;
            return this;
        }
        public Builder attachedChildAgents(GetGenaiAgentVersionsAgentVersionAttachedChildAgent... attachedChildAgents) {
            return attachedChildAgents(List.of(attachedChildAgents));
        }
        @CustomType.Setter
        public Builder attachedFunctions(List<GetGenaiAgentVersionsAgentVersionAttachedFunction> attachedFunctions) {
            if (attachedFunctions == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "attachedFunctions");
            }
            this.attachedFunctions = attachedFunctions;
            return this;
        }
        public Builder attachedFunctions(GetGenaiAgentVersionsAgentVersionAttachedFunction... attachedFunctions) {
            return attachedFunctions(List.of(attachedFunctions));
        }
        @CustomType.Setter
        public Builder attachedGuardrails(List<GetGenaiAgentVersionsAgentVersionAttachedGuardrail> attachedGuardrails) {
            if (attachedGuardrails == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "attachedGuardrails");
            }
            this.attachedGuardrails = attachedGuardrails;
            return this;
        }
        public Builder attachedGuardrails(GetGenaiAgentVersionsAgentVersionAttachedGuardrail... attachedGuardrails) {
            return attachedGuardrails(List.of(attachedGuardrails));
        }
        @CustomType.Setter
        public Builder attachedKnowledgeBases(List<GetGenaiAgentVersionsAgentVersionAttachedKnowledgeBase> attachedKnowledgeBases) {
            if (attachedKnowledgeBases == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "attachedKnowledgeBases");
            }
            this.attachedKnowledgeBases = attachedKnowledgeBases;
            return this;
        }
        public Builder attachedKnowledgeBases(GetGenaiAgentVersionsAgentVersionAttachedKnowledgeBase... attachedKnowledgeBases) {
            return attachedKnowledgeBases(List.of(attachedKnowledgeBases));
        }
        @CustomType.Setter
        public Builder canRollback(Boolean canRollback) {
            if (canRollback == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "canRollback");
            }
            this.canRollback = canRollback;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder createdByEmail(String createdByEmail) {
            if (createdByEmail == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "createdByEmail");
            }
            this.createdByEmail = createdByEmail;
            return this;
        }
        @CustomType.Setter
        public Builder currentlyApplied(Boolean currentlyApplied) {
            if (currentlyApplied == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "currentlyApplied");
            }
            this.currentlyApplied = currentlyApplied;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder instruction(String instruction) {
            if (instruction == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "instruction");
            }
            this.instruction = instruction;
            return this;
        }
        @CustomType.Setter
        public Builder k(Integer k) {
            if (k == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "k");
            }
            this.k = k;
            return this;
        }
        @CustomType.Setter
        public Builder maxTokens(Integer maxTokens) {
            if (maxTokens == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "maxTokens");
            }
            this.maxTokens = maxTokens;
            return this;
        }
        @CustomType.Setter
        public Builder modelName(String modelName) {
            if (modelName == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "modelName");
            }
            this.modelName = modelName;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder provideCitations(Boolean provideCitations) {
            if (provideCitations == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "provideCitations");
            }
            this.provideCitations = provideCitations;
            return this;
        }
        @CustomType.Setter
        public Builder retrievalMethod(String retrievalMethod) {
            if (retrievalMethod == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "retrievalMethod");
            }
            this.retrievalMethod = retrievalMethod;
            return this;
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder temperature(Double temperature) {
            if (temperature == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "temperature");
            }
            this.temperature = temperature;
            return this;
        }
        @CustomType.Setter
        public Builder topP(Double topP) {
            if (topP == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "topP");
            }
            this.topP = topP;
            return this;
        }
        @CustomType.Setter
        public Builder triggerAction(String triggerAction) {
            if (triggerAction == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "triggerAction");
            }
            this.triggerAction = triggerAction;
            return this;
        }
        @CustomType.Setter
        public Builder versionHash(String versionHash) {
            if (versionHash == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentVersionsAgentVersion", "versionHash");
            }
            this.versionHash = versionHash;
            return this;
        }
        public GetGenaiAgentVersionsAgentVersion build() {
            final var _resultValue = new GetGenaiAgentVersionsAgentVersion();
            _resultValue.agentUuid = agentUuid;
            _resultValue.attachedChildAgents = attachedChildAgents;
            _resultValue.attachedFunctions = attachedFunctions;
            _resultValue.attachedGuardrails = attachedGuardrails;
            _resultValue.attachedKnowledgeBases = attachedKnowledgeBases;
            _resultValue.canRollback = canRollback;
            _resultValue.createdAt = createdAt;
            _resultValue.createdByEmail = createdByEmail;
            _resultValue.currentlyApplied = currentlyApplied;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.instruction = instruction;
            _resultValue.k = k;
            _resultValue.maxTokens = maxTokens;
            _resultValue.modelName = modelName;
            _resultValue.name = name;
            _resultValue.provideCitations = provideCitations;
            _resultValue.retrievalMethod = retrievalMethod;
            _resultValue.tags = tags;
            _resultValue.temperature = temperature;
            _resultValue.topP = topP;
            _resultValue.triggerAction = triggerAction;
            _resultValue.versionHash = versionHash;
            return _resultValue;
        }
    }
}
