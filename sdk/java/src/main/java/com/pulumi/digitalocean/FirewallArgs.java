// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.FirewallInboundRuleArgs;
import com.pulumi.digitalocean.inputs.FirewallOutboundRuleArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FirewallArgs extends com.pulumi.resources.ResourceArgs {

    public static final FirewallArgs Empty = new FirewallArgs();

    /**
     * The list of the IDs of the Droplets assigned
     * to the Firewall (max. 10). If you want to assign more droplets to the
     * Firewall, add Tags to them and use the `tags` argument below.
     * 
     */
    @Import(name="dropletIds")
    private @Nullable Output<List<Integer>> dropletIds;

    /**
     * @return The list of the IDs of the Droplets assigned
     * to the Firewall (max. 10). If you want to assign more droplets to the
     * Firewall, add Tags to them and use the `tags` argument below.
     * 
     */
    public Optional<Output<List<Integer>>> dropletIds() {
        return Optional.ofNullable(this.dropletIds);
    }

    /**
     * The inbound access rule block for the Firewall.
     * The `inbound_rule` block is documented below.
     * 
     */
    @Import(name="inboundRules")
    private @Nullable Output<List<FirewallInboundRuleArgs>> inboundRules;

    /**
     * @return The inbound access rule block for the Firewall.
     * The `inbound_rule` block is documented below.
     * 
     */
    public Optional<Output<List<FirewallInboundRuleArgs>>> inboundRules() {
        return Optional.ofNullable(this.inboundRules);
    }

    /**
     * The Firewall name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Firewall name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The outbound access rule block for the Firewall.
     * The `outbound_rule` block is documented below.
     * 
     */
    @Import(name="outboundRules")
    private @Nullable Output<List<FirewallOutboundRuleArgs>> outboundRules;

    /**
     * @return The outbound access rule block for the Firewall.
     * The `outbound_rule` block is documented below.
     * 
     */
    public Optional<Output<List<FirewallOutboundRuleArgs>>> outboundRules() {
        return Optional.ofNullable(this.outboundRules);
    }

    /**
     * The names of the Tags assigned to the Firewall (max. 5).
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return The names of the Tags assigned to the Firewall (max. 5).
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private FirewallArgs() {}

    private FirewallArgs(FirewallArgs $) {
        this.dropletIds = $.dropletIds;
        this.inboundRules = $.inboundRules;
        this.name = $.name;
        this.outboundRules = $.outboundRules;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FirewallArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FirewallArgs $;

        public Builder() {
            $ = new FirewallArgs();
        }

        public Builder(FirewallArgs defaults) {
            $ = new FirewallArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dropletIds The list of the IDs of the Droplets assigned
         * to the Firewall (max. 10). If you want to assign more droplets to the
         * Firewall, add Tags to them and use the `tags` argument below.
         * 
         * @return builder
         * 
         */
        public Builder dropletIds(@Nullable Output<List<Integer>> dropletIds) {
            $.dropletIds = dropletIds;
            return this;
        }

        /**
         * @param dropletIds The list of the IDs of the Droplets assigned
         * to the Firewall (max. 10). If you want to assign more droplets to the
         * Firewall, add Tags to them and use the `tags` argument below.
         * 
         * @return builder
         * 
         */
        public Builder dropletIds(List<Integer> dropletIds) {
            return dropletIds(Output.of(dropletIds));
        }

        /**
         * @param dropletIds The list of the IDs of the Droplets assigned
         * to the Firewall (max. 10). If you want to assign more droplets to the
         * Firewall, add Tags to them and use the `tags` argument below.
         * 
         * @return builder
         * 
         */
        public Builder dropletIds(Integer... dropletIds) {
            return dropletIds(List.of(dropletIds));
        }

        /**
         * @param inboundRules The inbound access rule block for the Firewall.
         * The `inbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inboundRules(@Nullable Output<List<FirewallInboundRuleArgs>> inboundRules) {
            $.inboundRules = inboundRules;
            return this;
        }

        /**
         * @param inboundRules The inbound access rule block for the Firewall.
         * The `inbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inboundRules(List<FirewallInboundRuleArgs> inboundRules) {
            return inboundRules(Output.of(inboundRules));
        }

        /**
         * @param inboundRules The inbound access rule block for the Firewall.
         * The `inbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder inboundRules(FirewallInboundRuleArgs... inboundRules) {
            return inboundRules(List.of(inboundRules));
        }

        /**
         * @param name The Firewall name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Firewall name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param outboundRules The outbound access rule block for the Firewall.
         * The `outbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outboundRules(@Nullable Output<List<FirewallOutboundRuleArgs>> outboundRules) {
            $.outboundRules = outboundRules;
            return this;
        }

        /**
         * @param outboundRules The outbound access rule block for the Firewall.
         * The `outbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outboundRules(List<FirewallOutboundRuleArgs> outboundRules) {
            return outboundRules(Output.of(outboundRules));
        }

        /**
         * @param outboundRules The outbound access rule block for the Firewall.
         * The `outbound_rule` block is documented below.
         * 
         * @return builder
         * 
         */
        public Builder outboundRules(FirewallOutboundRuleArgs... outboundRules) {
            return outboundRules(List.of(outboundRules));
        }

        /**
         * @param tags The names of the Tags assigned to the Firewall (max. 5).
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags The names of the Tags assigned to the Firewall (max. 5).
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags The names of the Tags assigned to the Firewall (max. 5).
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public FirewallArgs build() {
            return $;
        }
    }

}
