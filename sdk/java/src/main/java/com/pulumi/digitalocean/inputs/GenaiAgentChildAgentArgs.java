// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.GenaiAgentChildAgentAnthropicApiKeyArgs;
import com.pulumi.digitalocean.inputs.GenaiAgentChildAgentApiKeyArgs;
import com.pulumi.digitalocean.inputs.GenaiAgentChildAgentApiKeyInfoArgs;
import com.pulumi.digitalocean.inputs.GenaiAgentChildAgentChatbotArgs;
import com.pulumi.digitalocean.inputs.GenaiAgentChildAgentChatbotIdentifierArgs;
import com.pulumi.digitalocean.inputs.GenaiAgentChildAgentDeploymentArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenaiAgentChildAgentArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenaiAgentChildAgentArgs Empty = new GenaiAgentChildAgentArgs();

    /**
     * ID of the child agent
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<String> agentId;

    /**
     * @return ID of the child agent
     * 
     */
    public Optional<Output<String>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * Anthropic API Key information
     * 
     */
    @Import(name="anthropicApiKeys")
    private @Nullable Output<List<GenaiAgentChildAgentAnthropicApiKeyArgs>> anthropicApiKeys;

    /**
     * @return Anthropic API Key information
     * 
     */
    public Optional<Output<List<GenaiAgentChildAgentAnthropicApiKeyArgs>>> anthropicApiKeys() {
        return Optional.ofNullable(this.anthropicApiKeys);
    }

    /**
     * List of API Key Infos
     * 
     */
    @Import(name="apiKeyInfos")
    private @Nullable Output<List<GenaiAgentChildAgentApiKeyInfoArgs>> apiKeyInfos;

    /**
     * @return List of API Key Infos
     * 
     */
    public Optional<Output<List<GenaiAgentChildAgentApiKeyInfoArgs>>> apiKeyInfos() {
        return Optional.ofNullable(this.apiKeyInfos);
    }

    /**
     * List of API Keys
     * 
     */
    @Import(name="apiKeys")
    private @Nullable Output<List<GenaiAgentChildAgentApiKeyArgs>> apiKeys;

    /**
     * @return List of API Keys
     * 
     */
    public Optional<Output<List<GenaiAgentChildAgentApiKeyArgs>>> apiKeys() {
        return Optional.ofNullable(this.apiKeys);
    }

    /**
     * List of Chatbot Identifiers
     * 
     */
    @Import(name="chatbotIdentifiers")
    private @Nullable Output<List<GenaiAgentChildAgentChatbotIdentifierArgs>> chatbotIdentifiers;

    /**
     * @return List of Chatbot Identifiers
     * 
     */
    public Optional<Output<List<GenaiAgentChildAgentChatbotIdentifierArgs>>> chatbotIdentifiers() {
        return Optional.ofNullable(this.chatbotIdentifiers);
    }

    /**
     * ChatBot configuration
     * 
     */
    @Import(name="chatbots")
    private @Nullable Output<List<GenaiAgentChildAgentChatbotArgs>> chatbots;

    /**
     * @return ChatBot configuration
     * 
     */
    public Optional<Output<List<GenaiAgentChildAgentChatbotArgs>>> chatbots() {
        return Optional.ofNullable(this.chatbots);
    }

    /**
     * List of API Key Infos
     * 
     */
    @Import(name="deployments")
    private @Nullable Output<List<GenaiAgentChildAgentDeploymentArgs>> deployments;

    /**
     * @return List of API Key Infos
     * 
     */
    public Optional<Output<List<GenaiAgentChildAgentDeploymentArgs>>> deployments() {
        return Optional.ofNullable(this.deployments);
    }

    /**
     * Description for the Agent
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description for the Agent
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Instruction for the Agent
     * 
     */
    @Import(name="instruction", required=true)
    private Output<String> instruction;

    /**
     * @return Instruction for the Agent
     * 
     */
    public Output<String> instruction() {
        return this.instruction;
    }

    /**
     * Model UUID of the Agent
     * 
     */
    @Import(name="modelUuid", required=true)
    private Output<String> modelUuid;

    /**
     * @return Model UUID of the Agent
     * 
     */
    public Output<String> modelUuid() {
        return this.modelUuid;
    }

    /**
     * Name of the Agent
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the Agent
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Project ID of the Agent
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return Project ID of the Agent
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Region where the Agent is deployed
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return Region where the Agent is deployed
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    private GenaiAgentChildAgentArgs() {}

    private GenaiAgentChildAgentArgs(GenaiAgentChildAgentArgs $) {
        this.agentId = $.agentId;
        this.anthropicApiKeys = $.anthropicApiKeys;
        this.apiKeyInfos = $.apiKeyInfos;
        this.apiKeys = $.apiKeys;
        this.chatbotIdentifiers = $.chatbotIdentifiers;
        this.chatbots = $.chatbots;
        this.deployments = $.deployments;
        this.description = $.description;
        this.instruction = $.instruction;
        this.modelUuid = $.modelUuid;
        this.name = $.name;
        this.projectId = $.projectId;
        this.region = $.region;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenaiAgentChildAgentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenaiAgentChildAgentArgs $;

        public Builder() {
            $ = new GenaiAgentChildAgentArgs();
        }

        public Builder(GenaiAgentChildAgentArgs defaults) {
            $ = new GenaiAgentChildAgentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId ID of the child agent
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId ID of the child agent
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param anthropicApiKeys Anthropic API Key information
         * 
         * @return builder
         * 
         */
        public Builder anthropicApiKeys(@Nullable Output<List<GenaiAgentChildAgentAnthropicApiKeyArgs>> anthropicApiKeys) {
            $.anthropicApiKeys = anthropicApiKeys;
            return this;
        }

        /**
         * @param anthropicApiKeys Anthropic API Key information
         * 
         * @return builder
         * 
         */
        public Builder anthropicApiKeys(List<GenaiAgentChildAgentAnthropicApiKeyArgs> anthropicApiKeys) {
            return anthropicApiKeys(Output.of(anthropicApiKeys));
        }

        /**
         * @param anthropicApiKeys Anthropic API Key information
         * 
         * @return builder
         * 
         */
        public Builder anthropicApiKeys(GenaiAgentChildAgentAnthropicApiKeyArgs... anthropicApiKeys) {
            return anthropicApiKeys(List.of(anthropicApiKeys));
        }

        /**
         * @param apiKeyInfos List of API Key Infos
         * 
         * @return builder
         * 
         */
        public Builder apiKeyInfos(@Nullable Output<List<GenaiAgentChildAgentApiKeyInfoArgs>> apiKeyInfos) {
            $.apiKeyInfos = apiKeyInfos;
            return this;
        }

        /**
         * @param apiKeyInfos List of API Key Infos
         * 
         * @return builder
         * 
         */
        public Builder apiKeyInfos(List<GenaiAgentChildAgentApiKeyInfoArgs> apiKeyInfos) {
            return apiKeyInfos(Output.of(apiKeyInfos));
        }

        /**
         * @param apiKeyInfos List of API Key Infos
         * 
         * @return builder
         * 
         */
        public Builder apiKeyInfos(GenaiAgentChildAgentApiKeyInfoArgs... apiKeyInfos) {
            return apiKeyInfos(List.of(apiKeyInfos));
        }

        /**
         * @param apiKeys List of API Keys
         * 
         * @return builder
         * 
         */
        public Builder apiKeys(@Nullable Output<List<GenaiAgentChildAgentApiKeyArgs>> apiKeys) {
            $.apiKeys = apiKeys;
            return this;
        }

        /**
         * @param apiKeys List of API Keys
         * 
         * @return builder
         * 
         */
        public Builder apiKeys(List<GenaiAgentChildAgentApiKeyArgs> apiKeys) {
            return apiKeys(Output.of(apiKeys));
        }

        /**
         * @param apiKeys List of API Keys
         * 
         * @return builder
         * 
         */
        public Builder apiKeys(GenaiAgentChildAgentApiKeyArgs... apiKeys) {
            return apiKeys(List.of(apiKeys));
        }

        /**
         * @param chatbotIdentifiers List of Chatbot Identifiers
         * 
         * @return builder
         * 
         */
        public Builder chatbotIdentifiers(@Nullable Output<List<GenaiAgentChildAgentChatbotIdentifierArgs>> chatbotIdentifiers) {
            $.chatbotIdentifiers = chatbotIdentifiers;
            return this;
        }

        /**
         * @param chatbotIdentifiers List of Chatbot Identifiers
         * 
         * @return builder
         * 
         */
        public Builder chatbotIdentifiers(List<GenaiAgentChildAgentChatbotIdentifierArgs> chatbotIdentifiers) {
            return chatbotIdentifiers(Output.of(chatbotIdentifiers));
        }

        /**
         * @param chatbotIdentifiers List of Chatbot Identifiers
         * 
         * @return builder
         * 
         */
        public Builder chatbotIdentifiers(GenaiAgentChildAgentChatbotIdentifierArgs... chatbotIdentifiers) {
            return chatbotIdentifiers(List.of(chatbotIdentifiers));
        }

        /**
         * @param chatbots ChatBot configuration
         * 
         * @return builder
         * 
         */
        public Builder chatbots(@Nullable Output<List<GenaiAgentChildAgentChatbotArgs>> chatbots) {
            $.chatbots = chatbots;
            return this;
        }

        /**
         * @param chatbots ChatBot configuration
         * 
         * @return builder
         * 
         */
        public Builder chatbots(List<GenaiAgentChildAgentChatbotArgs> chatbots) {
            return chatbots(Output.of(chatbots));
        }

        /**
         * @param chatbots ChatBot configuration
         * 
         * @return builder
         * 
         */
        public Builder chatbots(GenaiAgentChildAgentChatbotArgs... chatbots) {
            return chatbots(List.of(chatbots));
        }

        /**
         * @param deployments List of API Key Infos
         * 
         * @return builder
         * 
         */
        public Builder deployments(@Nullable Output<List<GenaiAgentChildAgentDeploymentArgs>> deployments) {
            $.deployments = deployments;
            return this;
        }

        /**
         * @param deployments List of API Key Infos
         * 
         * @return builder
         * 
         */
        public Builder deployments(List<GenaiAgentChildAgentDeploymentArgs> deployments) {
            return deployments(Output.of(deployments));
        }

        /**
         * @param deployments List of API Key Infos
         * 
         * @return builder
         * 
         */
        public Builder deployments(GenaiAgentChildAgentDeploymentArgs... deployments) {
            return deployments(List.of(deployments));
        }

        /**
         * @param description Description for the Agent
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description for the Agent
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param instruction Instruction for the Agent
         * 
         * @return builder
         * 
         */
        public Builder instruction(Output<String> instruction) {
            $.instruction = instruction;
            return this;
        }

        /**
         * @param instruction Instruction for the Agent
         * 
         * @return builder
         * 
         */
        public Builder instruction(String instruction) {
            return instruction(Output.of(instruction));
        }

        /**
         * @param modelUuid Model UUID of the Agent
         * 
         * @return builder
         * 
         */
        public Builder modelUuid(Output<String> modelUuid) {
            $.modelUuid = modelUuid;
            return this;
        }

        /**
         * @param modelUuid Model UUID of the Agent
         * 
         * @return builder
         * 
         */
        public Builder modelUuid(String modelUuid) {
            return modelUuid(Output.of(modelUuid));
        }

        /**
         * @param name Name of the Agent
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Agent
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectId Project ID of the Agent
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project ID of the Agent
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region Region where the Agent is deployed
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region where the Agent is deployed
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        public GenaiAgentChildAgentArgs build() {
            if ($.instruction == null) {
                throw new MissingRequiredPropertyException("GenaiAgentChildAgentArgs", "instruction");
            }
            if ($.modelUuid == null) {
                throw new MissingRequiredPropertyException("GenaiAgentChildAgentArgs", "modelUuid");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GenaiAgentChildAgentArgs", "name");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GenaiAgentChildAgentArgs", "projectId");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GenaiAgentChildAgentArgs", "region");
            }
            return $;
        }
    }

}
