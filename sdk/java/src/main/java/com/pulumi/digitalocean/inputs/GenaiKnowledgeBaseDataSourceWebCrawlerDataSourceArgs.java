// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs Empty = new GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs();

    /**
     * The base URL to crawl
     * 
     */
    @Import(name="baseUrl")
    private @Nullable Output<String> baseUrl;

    /**
     * @return The base URL to crawl
     * 
     */
    public Optional<Output<String>> baseUrl() {
        return Optional.ofNullable(this.baseUrl);
    }

    /**
     * Options for specifying how URLs found on pages should be handled.
     * - UNKNOWN: Default unknown value
     * - SCOPED: Only include the base URL.
     * - PATH: Crawl the base URL and linked pages within the URL path.
     * - DOMAIN: Crawl the base URL and linked pages within the same domain.
     * - SUBDOMAINS: Crawl the base URL and linked pages for any subdomain.
     * 
     */
    @Import(name="crawlingOption")
    private @Nullable Output<String> crawlingOption;

    /**
     * @return Options for specifying how URLs found on pages should be handled.
     * - UNKNOWN: Default unknown value
     * - SCOPED: Only include the base URL.
     * - PATH: Crawl the base URL and linked pages within the URL path.
     * - DOMAIN: Crawl the base URL and linked pages within the same domain.
     * - SUBDOMAINS: Crawl the base URL and linked pages for any subdomain.
     * 
     */
    public Optional<Output<String>> crawlingOption() {
        return Optional.ofNullable(this.crawlingOption);
    }

    /**
     * Whether to embed media content
     * 
     */
    @Import(name="embedMedia")
    private @Nullable Output<Boolean> embedMedia;

    /**
     * @return Whether to embed media content
     * 
     */
    public Optional<Output<Boolean>> embedMedia() {
        return Optional.ofNullable(this.embedMedia);
    }

    private GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs() {}

    private GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs(GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs $) {
        this.baseUrl = $.baseUrl;
        this.crawlingOption = $.crawlingOption;
        this.embedMedia = $.embedMedia;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs $;

        public Builder() {
            $ = new GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs();
        }

        public Builder(GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs defaults) {
            $ = new GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param baseUrl The base URL to crawl
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(@Nullable Output<String> baseUrl) {
            $.baseUrl = baseUrl;
            return this;
        }

        /**
         * @param baseUrl The base URL to crawl
         * 
         * @return builder
         * 
         */
        public Builder baseUrl(String baseUrl) {
            return baseUrl(Output.of(baseUrl));
        }

        /**
         * @param crawlingOption Options for specifying how URLs found on pages should be handled.
         * - UNKNOWN: Default unknown value
         * - SCOPED: Only include the base URL.
         * - PATH: Crawl the base URL and linked pages within the URL path.
         * - DOMAIN: Crawl the base URL and linked pages within the same domain.
         * - SUBDOMAINS: Crawl the base URL and linked pages for any subdomain.
         * 
         * @return builder
         * 
         */
        public Builder crawlingOption(@Nullable Output<String> crawlingOption) {
            $.crawlingOption = crawlingOption;
            return this;
        }

        /**
         * @param crawlingOption Options for specifying how URLs found on pages should be handled.
         * - UNKNOWN: Default unknown value
         * - SCOPED: Only include the base URL.
         * - PATH: Crawl the base URL and linked pages within the URL path.
         * - DOMAIN: Crawl the base URL and linked pages within the same domain.
         * - SUBDOMAINS: Crawl the base URL and linked pages for any subdomain.
         * 
         * @return builder
         * 
         */
        public Builder crawlingOption(String crawlingOption) {
            return crawlingOption(Output.of(crawlingOption));
        }

        /**
         * @param embedMedia Whether to embed media content
         * 
         * @return builder
         * 
         */
        public Builder embedMedia(@Nullable Output<Boolean> embedMedia) {
            $.embedMedia = embedMedia;
            return this;
        }

        /**
         * @param embedMedia Whether to embed media content
         * 
         * @return builder
         * 
         */
        public Builder embedMedia(Boolean embedMedia) {
            return embedMedia(Output.of(embedMedia));
        }

        public GenaiKnowledgeBaseDataSourceWebCrawlerDataSourceArgs build() {
            return $;
        }
    }

}
