// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenaiAgentRouteArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenaiAgentRouteArgs Empty = new GenaiAgentRouteArgs();

    /**
     * The UUID of the child agent.
     * 
     */
    @Import(name="childAgentUuid", required=true)
    private Output<String> childAgentUuid;

    /**
     * @return The UUID of the child agent.
     * 
     */
    public Output<String> childAgentUuid() {
        return this.childAgentUuid;
    }

    /**
     * if-case condition for the route.
     * 
     */
    @Import(name="ifCase")
    private @Nullable Output<String> ifCase;

    /**
     * @return if-case condition for the route.
     * 
     */
    public Optional<Output<String>> ifCase() {
        return Optional.ofNullable(this.ifCase);
    }

    /**
     * The UUID of the parent agent.
     * 
     */
    @Import(name="parentAgentUuid", required=true)
    private Output<String> parentAgentUuid;

    /**
     * @return The UUID of the parent agent.
     * 
     */
    public Output<String> parentAgentUuid() {
        return this.parentAgentUuid;
    }

    @Import(name="rollback")
    private @Nullable Output<Boolean> rollback;

    public Optional<Output<Boolean>> rollback() {
        return Optional.ofNullable(this.rollback);
    }

    /**
     * A name for the route.
     * 
     */
    @Import(name="routeName")
    private @Nullable Output<String> routeName;

    /**
     * @return A name for the route.
     * 
     */
    public Optional<Output<String>> routeName() {
        return Optional.ofNullable(this.routeName);
    }

    private GenaiAgentRouteArgs() {}

    private GenaiAgentRouteArgs(GenaiAgentRouteArgs $) {
        this.childAgentUuid = $.childAgentUuid;
        this.ifCase = $.ifCase;
        this.parentAgentUuid = $.parentAgentUuid;
        this.rollback = $.rollback;
        this.routeName = $.routeName;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenaiAgentRouteArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenaiAgentRouteArgs $;

        public Builder() {
            $ = new GenaiAgentRouteArgs();
        }

        public Builder(GenaiAgentRouteArgs defaults) {
            $ = new GenaiAgentRouteArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param childAgentUuid The UUID of the child agent.
         * 
         * @return builder
         * 
         */
        public Builder childAgentUuid(Output<String> childAgentUuid) {
            $.childAgentUuid = childAgentUuid;
            return this;
        }

        /**
         * @param childAgentUuid The UUID of the child agent.
         * 
         * @return builder
         * 
         */
        public Builder childAgentUuid(String childAgentUuid) {
            return childAgentUuid(Output.of(childAgentUuid));
        }

        /**
         * @param ifCase if-case condition for the route.
         * 
         * @return builder
         * 
         */
        public Builder ifCase(@Nullable Output<String> ifCase) {
            $.ifCase = ifCase;
            return this;
        }

        /**
         * @param ifCase if-case condition for the route.
         * 
         * @return builder
         * 
         */
        public Builder ifCase(String ifCase) {
            return ifCase(Output.of(ifCase));
        }

        /**
         * @param parentAgentUuid The UUID of the parent agent.
         * 
         * @return builder
         * 
         */
        public Builder parentAgentUuid(Output<String> parentAgentUuid) {
            $.parentAgentUuid = parentAgentUuid;
            return this;
        }

        /**
         * @param parentAgentUuid The UUID of the parent agent.
         * 
         * @return builder
         * 
         */
        public Builder parentAgentUuid(String parentAgentUuid) {
            return parentAgentUuid(Output.of(parentAgentUuid));
        }

        public Builder rollback(@Nullable Output<Boolean> rollback) {
            $.rollback = rollback;
            return this;
        }

        public Builder rollback(Boolean rollback) {
            return rollback(Output.of(rollback));
        }

        /**
         * @param routeName A name for the route.
         * 
         * @return builder
         * 
         */
        public Builder routeName(@Nullable Output<String> routeName) {
            $.routeName = routeName;
            return this;
        }

        /**
         * @param routeName A name for the route.
         * 
         * @return builder
         * 
         */
        public Builder routeName(String routeName) {
            return routeName(Output.of(routeName));
        }

        public GenaiAgentRouteArgs build() {
            if ($.childAgentUuid == null) {
                throw new MissingRequiredPropertyException("GenaiAgentRouteArgs", "childAgentUuid");
            }
            if ($.parentAgentUuid == null) {
                throw new MissingRequiredPropertyException("GenaiAgentRouteArgs", "parentAgentUuid");
            }
            return $;
        }
    }

}
