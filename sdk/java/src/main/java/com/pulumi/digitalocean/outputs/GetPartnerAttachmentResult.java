// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.digitalocean.outputs.GetPartnerAttachmentBgp;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPartnerAttachmentResult {
    private @Nullable GetPartnerAttachmentBgp bgp;
    private List<String> childrens;
    private Integer connectionBandwidthInMbps;
    private String createdAt;
    private String id;
    private String naasProvider;
    private String name;
    private String parentUuid;
    private @Nullable String redundancyZone;
    private String region;
    private String state;
    private List<String> vpcIds;

    private GetPartnerAttachmentResult() {}
    public Optional<GetPartnerAttachmentBgp> bgp() {
        return Optional.ofNullable(this.bgp);
    }
    public List<String> childrens() {
        return this.childrens;
    }
    public Integer connectionBandwidthInMbps() {
        return this.connectionBandwidthInMbps;
    }
    public String createdAt() {
        return this.createdAt;
    }
    public String id() {
        return this.id;
    }
    public String naasProvider() {
        return this.naasProvider;
    }
    public String name() {
        return this.name;
    }
    public String parentUuid() {
        return this.parentUuid;
    }
    public Optional<String> redundancyZone() {
        return Optional.ofNullable(this.redundancyZone);
    }
    public String region() {
        return this.region;
    }
    public String state() {
        return this.state;
    }
    public List<String> vpcIds() {
        return this.vpcIds;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPartnerAttachmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetPartnerAttachmentBgp bgp;
        private List<String> childrens;
        private Integer connectionBandwidthInMbps;
        private String createdAt;
        private String id;
        private String naasProvider;
        private String name;
        private String parentUuid;
        private @Nullable String redundancyZone;
        private String region;
        private String state;
        private List<String> vpcIds;
        public Builder() {}
        public Builder(GetPartnerAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bgp = defaults.bgp;
    	      this.childrens = defaults.childrens;
    	      this.connectionBandwidthInMbps = defaults.connectionBandwidthInMbps;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.naasProvider = defaults.naasProvider;
    	      this.name = defaults.name;
    	      this.parentUuid = defaults.parentUuid;
    	      this.redundancyZone = defaults.redundancyZone;
    	      this.region = defaults.region;
    	      this.state = defaults.state;
    	      this.vpcIds = defaults.vpcIds;
        }

        @CustomType.Setter
        public Builder bgp(@Nullable GetPartnerAttachmentBgp bgp) {

            this.bgp = bgp;
            return this;
        }
        @CustomType.Setter
        public Builder childrens(List<String> childrens) {
            if (childrens == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "childrens");
            }
            this.childrens = childrens;
            return this;
        }
        public Builder childrens(String... childrens) {
            return childrens(List.of(childrens));
        }
        @CustomType.Setter
        public Builder connectionBandwidthInMbps(Integer connectionBandwidthInMbps) {
            if (connectionBandwidthInMbps == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "connectionBandwidthInMbps");
            }
            this.connectionBandwidthInMbps = connectionBandwidthInMbps;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder naasProvider(String naasProvider) {
            if (naasProvider == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "naasProvider");
            }
            this.naasProvider = naasProvider;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parentUuid(String parentUuid) {
            if (parentUuid == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "parentUuid");
            }
            this.parentUuid = parentUuid;
            return this;
        }
        @CustomType.Setter
        public Builder redundancyZone(@Nullable String redundancyZone) {

            this.redundancyZone = redundancyZone;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder vpcIds(List<String> vpcIds) {
            if (vpcIds == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentResult", "vpcIds");
            }
            this.vpcIds = vpcIds;
            return this;
        }
        public Builder vpcIds(String... vpcIds) {
            return vpcIds(List.of(vpcIds));
        }
        public GetPartnerAttachmentResult build() {
            final var _resultValue = new GetPartnerAttachmentResult();
            _resultValue.bgp = bgp;
            _resultValue.childrens = childrens;
            _resultValue.connectionBandwidthInMbps = connectionBandwidthInMbps;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.naasProvider = naasProvider;
            _resultValue.name = name;
            _resultValue.parentUuid = parentUuid;
            _resultValue.redundancyZone = redundancyZone;
            _resultValue.region = region;
            _resultValue.state = state;
            _resultValue.vpcIds = vpcIds;
            return _resultValue;
        }
    }
}
