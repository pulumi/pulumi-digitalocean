// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetDropletAutoscaleDropletTemplate {
    /**
     * @return Droplet image
     * 
     */
    private String image;
    /**
     * @return Enable droplet IPv6
     * 
     */
    private Boolean ipv6;
    /**
     * @return Droplet project ID
     * 
     */
    private String projectId;
    /**
     * @return Droplet region
     * 
     */
    private String region;
    /**
     * @return Droplet size
     * 
     */
    private String size;
    /**
     * @return Droplet SSH keys
     * 
     */
    private List<String> sshKeys;
    /**
     * @return Droplet tags
     * 
     */
    private List<String> tags;
    /**
     * @return Droplet user data
     * 
     */
    private String userData;
    /**
     * @return Droplet VPC UUID
     * 
     */
    private String vpcUuid;
    /**
     * @return Enable droplet agent
     * 
     */
    private Boolean withDropletAgent;

    private GetDropletAutoscaleDropletTemplate() {}
    /**
     * @return Droplet image
     * 
     */
    public String image() {
        return this.image;
    }
    /**
     * @return Enable droplet IPv6
     * 
     */
    public Boolean ipv6() {
        return this.ipv6;
    }
    /**
     * @return Droplet project ID
     * 
     */
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return Droplet region
     * 
     */
    public String region() {
        return this.region;
    }
    /**
     * @return Droplet size
     * 
     */
    public String size() {
        return this.size;
    }
    /**
     * @return Droplet SSH keys
     * 
     */
    public List<String> sshKeys() {
        return this.sshKeys;
    }
    /**
     * @return Droplet tags
     * 
     */
    public List<String> tags() {
        return this.tags;
    }
    /**
     * @return Droplet user data
     * 
     */
    public String userData() {
        return this.userData;
    }
    /**
     * @return Droplet VPC UUID
     * 
     */
    public String vpcUuid() {
        return this.vpcUuid;
    }
    /**
     * @return Enable droplet agent
     * 
     */
    public Boolean withDropletAgent() {
        return this.withDropletAgent;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDropletAutoscaleDropletTemplate defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String image;
        private Boolean ipv6;
        private String projectId;
        private String region;
        private String size;
        private List<String> sshKeys;
        private List<String> tags;
        private String userData;
        private String vpcUuid;
        private Boolean withDropletAgent;
        public Builder() {}
        public Builder(GetDropletAutoscaleDropletTemplate defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.image = defaults.image;
    	      this.ipv6 = defaults.ipv6;
    	      this.projectId = defaults.projectId;
    	      this.region = defaults.region;
    	      this.size = defaults.size;
    	      this.sshKeys = defaults.sshKeys;
    	      this.tags = defaults.tags;
    	      this.userData = defaults.userData;
    	      this.vpcUuid = defaults.vpcUuid;
    	      this.withDropletAgent = defaults.withDropletAgent;
        }

        @CustomType.Setter
        public Builder image(String image) {
            if (image == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "image");
            }
            this.image = image;
            return this;
        }
        @CustomType.Setter
        public Builder ipv6(Boolean ipv6) {
            if (ipv6 == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "ipv6");
            }
            this.ipv6 = ipv6;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder region(String region) {
            if (region == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "region");
            }
            this.region = region;
            return this;
        }
        @CustomType.Setter
        public Builder size(String size) {
            if (size == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "size");
            }
            this.size = size;
            return this;
        }
        @CustomType.Setter
        public Builder sshKeys(List<String> sshKeys) {
            if (sshKeys == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "sshKeys");
            }
            this.sshKeys = sshKeys;
            return this;
        }
        public Builder sshKeys(String... sshKeys) {
            return sshKeys(List.of(sshKeys));
        }
        @CustomType.Setter
        public Builder tags(List<String> tags) {
            if (tags == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "tags");
            }
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder userData(String userData) {
            if (userData == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "userData");
            }
            this.userData = userData;
            return this;
        }
        @CustomType.Setter
        public Builder vpcUuid(String vpcUuid) {
            if (vpcUuid == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "vpcUuid");
            }
            this.vpcUuid = vpcUuid;
            return this;
        }
        @CustomType.Setter
        public Builder withDropletAgent(Boolean withDropletAgent) {
            if (withDropletAgent == null) {
              throw new MissingRequiredPropertyException("GetDropletAutoscaleDropletTemplate", "withDropletAgent");
            }
            this.withDropletAgent = withDropletAgent;
            return this;
        }
        public GetDropletAutoscaleDropletTemplate build() {
            final var _resultValue = new GetDropletAutoscaleDropletTemplate();
            _resultValue.image = image;
            _resultValue.ipv6 = ipv6;
            _resultValue.projectId = projectId;
            _resultValue.region = region;
            _resultValue.size = size;
            _resultValue.sshKeys = sshKeys;
            _resultValue.tags = tags;
            _resultValue.userData = userData;
            _resultValue.vpcUuid = vpcUuid;
            _resultValue.withDropletAgent = withDropletAgent;
            return _resultValue;
        }
    }
}
