// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class SpacesKeyGrantArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpacesKeyGrantArgs Empty = new SpacesKeyGrantArgs();

    /**
     * Name of the bucket associated with this grant. In case of a `fullaccess` permission, this value should be an empty string.
     * 
     */
    @Import(name="bucket", required=true)
    private Output<String> bucket;

    /**
     * @return Name of the bucket associated with this grant. In case of a `fullaccess` permission, this value should be an empty string.
     * 
     */
    public Output<String> bucket() {
        return this.bucket;
    }

    /**
     * Permission associated with this grant. Values can be `read`, `readwrite`, `fullaccess`.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return Permission associated with this grant. Values can be `read`, `readwrite`, `fullaccess`.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    private SpacesKeyGrantArgs() {}

    private SpacesKeyGrantArgs(SpacesKeyGrantArgs $) {
        this.bucket = $.bucket;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpacesKeyGrantArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpacesKeyGrantArgs $;

        public Builder() {
            $ = new SpacesKeyGrantArgs();
        }

        public Builder(SpacesKeyGrantArgs defaults) {
            $ = new SpacesKeyGrantArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bucket Name of the bucket associated with this grant. In case of a `fullaccess` permission, this value should be an empty string.
         * 
         * @return builder
         * 
         */
        public Builder bucket(Output<String> bucket) {
            $.bucket = bucket;
            return this;
        }

        /**
         * @param bucket Name of the bucket associated with this grant. In case of a `fullaccess` permission, this value should be an empty string.
         * 
         * @return builder
         * 
         */
        public Builder bucket(String bucket) {
            return bucket(Output.of(bucket));
        }

        /**
         * @param permission Permission associated with this grant. Values can be `read`, `readwrite`, `fullaccess`.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission Permission associated with this grant. Values can be `read`, `readwrite`, `fullaccess`.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public SpacesKeyGrantArgs build() {
            if ($.bucket == null) {
                throw new MissingRequiredPropertyException("SpacesKeyGrantArgs", "bucket");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("SpacesKeyGrantArgs", "permission");
            }
            return $;
        }
    }

}
