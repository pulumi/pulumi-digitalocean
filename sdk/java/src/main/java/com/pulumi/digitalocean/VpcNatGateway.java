// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import com.pulumi.digitalocean.Utilities;
import com.pulumi.digitalocean.VpcNatGatewayArgs;
import com.pulumi.digitalocean.inputs.VpcNatGatewayState;
import com.pulumi.digitalocean.outputs.VpcNatGatewayEgress;
import com.pulumi.digitalocean.outputs.VpcNatGatewayVpc;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Provides a DigitalOcean VPC NAT Gateway resource. This can be used to create, modify,
 * read and delete VPC NAT Gateways.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.digitalocean.Vpc;
 * import com.pulumi.digitalocean.VpcArgs;
 * import com.pulumi.digitalocean.VpcNatGateway;
 * import com.pulumi.digitalocean.VpcNatGatewayArgs;
 * import com.pulumi.digitalocean.inputs.VpcNatGatewayVpcArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var my_vpc = new Vpc("my-vpc", VpcArgs.builder()
 *             .name("terraform-example")
 *             .region("nyc3")
 *             .build());
 * 
 *         var my_vpc_nat_gateway = new VpcNatGateway("my-vpc-nat-gateway", VpcNatGatewayArgs.builder()
 *             .name("terraform-example")
 *             .type("PUBLIC")
 *             .region("nyc3")
 *             .size(1)
 *             .vpcs(VpcNatGatewayVpcArgs.builder()
 *                 .vpcUuid(my_vpc.id())
 *                 .build())
 *             .udpTimeoutSeconds(30)
 *             .icmpTimeoutSeconds(30)
 *             .tcpTimeoutSeconds(30)
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Import
 * 
 * VPC NAT Gateways can be imported using their `id`, e.g.
 * 
 * ```sh
 * $ pulumi import digitalocean:index/vpcNatGateway:VpcNatGateway my-vpc-nat-gateway-id 38e66834-d741-47ec-88e7-c70cbdcz0445
 * ```
 * 
 */
@ResourceType(type="digitalocean:index/vpcNatGateway:VpcNatGateway")
public class VpcNatGateway extends com.pulumi.resources.CustomResource {
    /**
     * Created at timestamp for the VPC NAT Gateway.
     * 
     */
    @Export(name="createdAt", refs={String.class}, tree="[0]")
    private Output<String> createdAt;

    /**
     * @return Created at timestamp for the VPC NAT Gateway.
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }
    /**
     * Embeds the list of public egresses assigned to the VPC NAT Gateway: resolves as list of
     * `public_gateways` embedding the reserved `ipv4` addresses.
     * 
     */
    @Export(name="egresses", refs={List.class,VpcNatGatewayEgress.class}, tree="[0,1]")
    private Output<List<VpcNatGatewayEgress>> egresses;

    /**
     * @return Embeds the list of public egresses assigned to the VPC NAT Gateway: resolves as list of
     * `public_gateways` embedding the reserved `ipv4` addresses.
     * 
     */
    public Output<List<VpcNatGatewayEgress>> egresses() {
        return this.egresses;
    }
    /**
     * The egress timeout value for ICMP connections of the VPC NAT Gateway.
     * 
     */
    @Export(name="icmpTimeoutSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> icmpTimeoutSeconds;

    /**
     * @return The egress timeout value for ICMP connections of the VPC NAT Gateway.
     * 
     */
    public Output<Integer> icmpTimeoutSeconds() {
        return this.icmpTimeoutSeconds;
    }
    /**
     * The name of the VPC NAT Gateway.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return The name of the VPC NAT Gateway.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * The region for the VPC NAT Gateway.
     * 
     */
    @Export(name="region", refs={String.class}, tree="[0]")
    private Output<String> region;

    /**
     * @return The region for the VPC NAT Gateway.
     * 
     */
    public Output<String> region() {
        return this.region;
    }
    /**
     * The size of the VPC NAT Gateway.
     * 
     */
    @Export(name="size", refs={Integer.class}, tree="[0]")
    private Output<Integer> size;

    /**
     * @return The size of the VPC NAT Gateway.
     * 
     */
    public Output<Integer> size() {
        return this.size;
    }
    /**
     * State of the VPC NAT Gateway
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return State of the VPC NAT Gateway
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * The egress timeout value for TCP connections of the VPC NAT Gateway.
     * 
     */
    @Export(name="tcpTimeoutSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> tcpTimeoutSeconds;

    /**
     * @return The egress timeout value for TCP connections of the VPC NAT Gateway.
     * 
     */
    public Output<Integer> tcpTimeoutSeconds() {
        return this.tcpTimeoutSeconds;
    }
    /**
     * The type of the VPC NAT Gateway.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The type of the VPC NAT Gateway.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The egress timeout value for UDP connections of the VPC NAT Gateway.
     * 
     */
    @Export(name="udpTimeoutSeconds", refs={Integer.class}, tree="[0]")
    private Output<Integer> udpTimeoutSeconds;

    /**
     * @return The egress timeout value for UDP connections of the VPC NAT Gateway.
     * 
     */
    public Output<Integer> udpTimeoutSeconds() {
        return this.udpTimeoutSeconds;
    }
    /**
     * Updated at timestamp for the VPC NAT Gateway.
     * 
     */
    @Export(name="updatedAt", refs={String.class}, tree="[0]")
    private Output<String> updatedAt;

    /**
     * @return Updated at timestamp for the VPC NAT Gateway.
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }
    /**
     * The ingress VPC configuration of the VPC NAT Gateway, the supported arguments are
     * documented below.
     * 
     */
    @Export(name="vpcs", refs={List.class,VpcNatGatewayVpc.class}, tree="[0,1]")
    private Output<List<VpcNatGatewayVpc>> vpcs;

    /**
     * @return The ingress VPC configuration of the VPC NAT Gateway, the supported arguments are
     * documented below.
     * 
     */
    public Output<List<VpcNatGatewayVpc>> vpcs() {
        return this.vpcs;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public VpcNatGateway(java.lang.String name) {
        this(name, VpcNatGatewayArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public VpcNatGateway(java.lang.String name, VpcNatGatewayArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public VpcNatGateway(java.lang.String name, VpcNatGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/vpcNatGateway:VpcNatGateway", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private VpcNatGateway(java.lang.String name, Output<java.lang.String> id, @Nullable VpcNatGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("digitalocean:index/vpcNatGateway:VpcNatGateway", name, state, makeResourceOptions(options, id), false);
    }

    private static VpcNatGatewayArgs makeArgs(VpcNatGatewayArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? VpcNatGatewayArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static VpcNatGateway get(java.lang.String name, Output<java.lang.String> id, @Nullable VpcNatGatewayState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new VpcNatGateway(name, id, state, options);
    }
}
