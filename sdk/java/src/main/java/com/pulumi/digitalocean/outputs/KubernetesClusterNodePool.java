// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.digitalocean.outputs.KubernetesClusterNodePoolNode;
import com.pulumi.digitalocean.outputs.KubernetesClusterNodePoolTaint;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class KubernetesClusterNodePool {
    /**
     * @return A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
     * 
     */
    private @Nullable Integer actualNodeCount;
    /**
     * @return Enable auto-scaling of the number of nodes in the node pool within the given min/max range.
     * 
     */
    private @Nullable Boolean autoScale;
    /**
     * @return A unique ID that can be used to identify and reference the node.
     * 
     */
    private @Nullable String id;
    /**
     * @return A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
     * 
     */
    private @Nullable Map<String,String> labels;
    /**
     * @return If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
     * 
     */
    private @Nullable Integer maxNodes;
    /**
     * @return If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
     * 
     */
    private @Nullable Integer minNodes;
    /**
     * @return A name for the node pool.
     * 
     */
    private String name;
    /**
     * @return The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.
     * 
     */
    private @Nullable Integer nodeCount;
    /**
     * @return A list of nodes in the pool. Each node exports the following attributes:
     * 
     */
    private @Nullable List<KubernetesClusterNodePoolNode> nodes;
    /**
     * @return The slug identifier for the type of Droplet to be used as workers in the node pool.
     * 
     */
    private String size;
    /**
     * @return A list of tag names to be applied to the Kubernetes cluster.
     * 
     */
    private @Nullable List<String> tags;
    /**
     * @return A block representing a taint applied to all nodes in the pool. Each taint exports the following attributes (taints must be unique by key and effect pair):
     * 
     */
    private @Nullable List<KubernetesClusterNodePoolTaint> taints;

    private KubernetesClusterNodePool() {}
    /**
     * @return A computed field representing the actual number of nodes in the node pool, which is especially useful when auto-scaling is enabled.
     * 
     */
    public Optional<Integer> actualNodeCount() {
        return Optional.ofNullable(this.actualNodeCount);
    }
    /**
     * @return Enable auto-scaling of the number of nodes in the node pool within the given min/max range.
     * 
     */
    public Optional<Boolean> autoScale() {
        return Optional.ofNullable(this.autoScale);
    }
    /**
     * @return A unique ID that can be used to identify and reference the node.
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    /**
     * @return A map of key/value pairs to apply to nodes in the pool. The labels are exposed in the Kubernetes API as labels in the metadata of the corresponding [Node resources](https://kubernetes.io/docs/concepts/architecture/nodes/).
     * 
     */
    public Map<String,String> labels() {
        return this.labels == null ? Map.of() : this.labels;
    }
    /**
     * @return If auto-scaling is enabled, this represents the maximum number of nodes that the node pool can be scaled up to.
     * 
     */
    public Optional<Integer> maxNodes() {
        return Optional.ofNullable(this.maxNodes);
    }
    /**
     * @return If auto-scaling is enabled, this represents the minimum number of nodes that the node pool can be scaled down to.
     * 
     */
    public Optional<Integer> minNodes() {
        return Optional.ofNullable(this.minNodes);
    }
    /**
     * @return A name for the node pool.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The number of Droplet instances in the node pool. If auto-scaling is enabled, this should only be set if the desired result is to explicitly reset the number of nodes to this value. If auto-scaling is enabled, and the node count is outside of the given min/max range, it will use the min nodes value.
     * 
     */
    public Optional<Integer> nodeCount() {
        return Optional.ofNullable(this.nodeCount);
    }
    /**
     * @return A list of nodes in the pool. Each node exports the following attributes:
     * 
     */
    public List<KubernetesClusterNodePoolNode> nodes() {
        return this.nodes == null ? List.of() : this.nodes;
    }
    /**
     * @return The slug identifier for the type of Droplet to be used as workers in the node pool.
     * 
     */
    public String size() {
        return this.size;
    }
    /**
     * @return A list of tag names to be applied to the Kubernetes cluster.
     * 
     */
    public List<String> tags() {
        return this.tags == null ? List.of() : this.tags;
    }
    /**
     * @return A block representing a taint applied to all nodes in the pool. Each taint exports the following attributes (taints must be unique by key and effect pair):
     * 
     */
    public List<KubernetesClusterNodePoolTaint> taints() {
        return this.taints == null ? List.of() : this.taints;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(KubernetesClusterNodePool defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer actualNodeCount;
        private @Nullable Boolean autoScale;
        private @Nullable String id;
        private @Nullable Map<String,String> labels;
        private @Nullable Integer maxNodes;
        private @Nullable Integer minNodes;
        private String name;
        private @Nullable Integer nodeCount;
        private @Nullable List<KubernetesClusterNodePoolNode> nodes;
        private String size;
        private @Nullable List<String> tags;
        private @Nullable List<KubernetesClusterNodePoolTaint> taints;
        public Builder() {}
        public Builder(KubernetesClusterNodePool defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.actualNodeCount = defaults.actualNodeCount;
    	      this.autoScale = defaults.autoScale;
    	      this.id = defaults.id;
    	      this.labels = defaults.labels;
    	      this.maxNodes = defaults.maxNodes;
    	      this.minNodes = defaults.minNodes;
    	      this.name = defaults.name;
    	      this.nodeCount = defaults.nodeCount;
    	      this.nodes = defaults.nodes;
    	      this.size = defaults.size;
    	      this.tags = defaults.tags;
    	      this.taints = defaults.taints;
        }

        @CustomType.Setter
        public Builder actualNodeCount(@Nullable Integer actualNodeCount) {
            this.actualNodeCount = actualNodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder autoScale(@Nullable Boolean autoScale) {
            this.autoScale = autoScale;
            return this;
        }
        @CustomType.Setter
        public Builder id(@Nullable String id) {
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder labels(@Nullable Map<String,String> labels) {
            this.labels = labels;
            return this;
        }
        @CustomType.Setter
        public Builder maxNodes(@Nullable Integer maxNodes) {
            this.maxNodes = maxNodes;
            return this;
        }
        @CustomType.Setter
        public Builder minNodes(@Nullable Integer minNodes) {
            this.minNodes = minNodes;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder nodeCount(@Nullable Integer nodeCount) {
            this.nodeCount = nodeCount;
            return this;
        }
        @CustomType.Setter
        public Builder nodes(@Nullable List<KubernetesClusterNodePoolNode> nodes) {
            this.nodes = nodes;
            return this;
        }
        public Builder nodes(KubernetesClusterNodePoolNode... nodes) {
            return nodes(List.of(nodes));
        }
        @CustomType.Setter
        public Builder size(String size) {
            this.size = Objects.requireNonNull(size);
            return this;
        }
        @CustomType.Setter
        public Builder tags(@Nullable List<String> tags) {
            this.tags = tags;
            return this;
        }
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }
        @CustomType.Setter
        public Builder taints(@Nullable List<KubernetesClusterNodePoolTaint> taints) {
            this.taints = taints;
            return this;
        }
        public Builder taints(KubernetesClusterNodePoolTaint... taints) {
            return taints(List.of(taints));
        }
        public KubernetesClusterNodePool build() {
            final var _resultValue = new KubernetesClusterNodePool();
            _resultValue.actualNodeCount = actualNodeCount;
            _resultValue.autoScale = autoScale;
            _resultValue.id = id;
            _resultValue.labels = labels;
            _resultValue.maxNodes = maxNodes;
            _resultValue.minNodes = minNodes;
            _resultValue.name = name;
            _resultValue.nodeCount = nodeCount;
            _resultValue.nodes = nodes;
            _resultValue.size = size;
            _resultValue.tags = tags;
            _resultValue.taints = taints;
            return _resultValue;
        }
    }
}
