// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenaiAgentChildAgentChatbotArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenaiAgentChildAgentChatbotArgs Empty = new GenaiAgentChildAgentChatbotArgs();

    /**
     * Background color for the chatbot button
     * 
     */
    @Import(name="buttonBackgroundColor")
    private @Nullable Output<String> buttonBackgroundColor;

    /**
     * @return Background color for the chatbot button
     * 
     */
    public Optional<Output<String>> buttonBackgroundColor() {
        return Optional.ofNullable(this.buttonBackgroundColor);
    }

    /**
     * Logo for the chatbot
     * 
     */
    @Import(name="logo")
    private @Nullable Output<String> logo;

    /**
     * @return Logo for the chatbot
     * 
     */
    public Optional<Output<String>> logo() {
        return Optional.ofNullable(this.logo);
    }

    /**
     * Name of the chatbot
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the chatbot
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Primary color for the chatbot
     * 
     */
    @Import(name="primaryColor")
    private @Nullable Output<String> primaryColor;

    /**
     * @return Primary color for the chatbot
     * 
     */
    public Optional<Output<String>> primaryColor() {
        return Optional.ofNullable(this.primaryColor);
    }

    /**
     * Secondary color for the chatbot
     * 
     */
    @Import(name="secondaryColor")
    private @Nullable Output<String> secondaryColor;

    /**
     * @return Secondary color for the chatbot
     * 
     */
    public Optional<Output<String>> secondaryColor() {
        return Optional.ofNullable(this.secondaryColor);
    }

    /**
     * Starting message for the chatbot
     * 
     */
    @Import(name="startingMessage")
    private @Nullable Output<String> startingMessage;

    /**
     * @return Starting message for the chatbot
     * 
     */
    public Optional<Output<String>> startingMessage() {
        return Optional.ofNullable(this.startingMessage);
    }

    private GenaiAgentChildAgentChatbotArgs() {}

    private GenaiAgentChildAgentChatbotArgs(GenaiAgentChildAgentChatbotArgs $) {
        this.buttonBackgroundColor = $.buttonBackgroundColor;
        this.logo = $.logo;
        this.name = $.name;
        this.primaryColor = $.primaryColor;
        this.secondaryColor = $.secondaryColor;
        this.startingMessage = $.startingMessage;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenaiAgentChildAgentChatbotArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenaiAgentChildAgentChatbotArgs $;

        public Builder() {
            $ = new GenaiAgentChildAgentChatbotArgs();
        }

        public Builder(GenaiAgentChildAgentChatbotArgs defaults) {
            $ = new GenaiAgentChildAgentChatbotArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param buttonBackgroundColor Background color for the chatbot button
         * 
         * @return builder
         * 
         */
        public Builder buttonBackgroundColor(@Nullable Output<String> buttonBackgroundColor) {
            $.buttonBackgroundColor = buttonBackgroundColor;
            return this;
        }

        /**
         * @param buttonBackgroundColor Background color for the chatbot button
         * 
         * @return builder
         * 
         */
        public Builder buttonBackgroundColor(String buttonBackgroundColor) {
            return buttonBackgroundColor(Output.of(buttonBackgroundColor));
        }

        /**
         * @param logo Logo for the chatbot
         * 
         * @return builder
         * 
         */
        public Builder logo(@Nullable Output<String> logo) {
            $.logo = logo;
            return this;
        }

        /**
         * @param logo Logo for the chatbot
         * 
         * @return builder
         * 
         */
        public Builder logo(String logo) {
            return logo(Output.of(logo));
        }

        /**
         * @param name Name of the chatbot
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the chatbot
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param primaryColor Primary color for the chatbot
         * 
         * @return builder
         * 
         */
        public Builder primaryColor(@Nullable Output<String> primaryColor) {
            $.primaryColor = primaryColor;
            return this;
        }

        /**
         * @param primaryColor Primary color for the chatbot
         * 
         * @return builder
         * 
         */
        public Builder primaryColor(String primaryColor) {
            return primaryColor(Output.of(primaryColor));
        }

        /**
         * @param secondaryColor Secondary color for the chatbot
         * 
         * @return builder
         * 
         */
        public Builder secondaryColor(@Nullable Output<String> secondaryColor) {
            $.secondaryColor = secondaryColor;
            return this;
        }

        /**
         * @param secondaryColor Secondary color for the chatbot
         * 
         * @return builder
         * 
         */
        public Builder secondaryColor(String secondaryColor) {
            return secondaryColor(Output.of(secondaryColor));
        }

        /**
         * @param startingMessage Starting message for the chatbot
         * 
         * @return builder
         * 
         */
        public Builder startingMessage(@Nullable Output<String> startingMessage) {
            $.startingMessage = startingMessage;
            return this;
        }

        /**
         * @param startingMessage Starting message for the chatbot
         * 
         * @return builder
         * 
         */
        public Builder startingMessage(String startingMessage) {
            return startingMessage(Output.of(startingMessage));
        }

        public GenaiAgentChildAgentChatbotArgs build() {
            return $;
        }
    }

}
