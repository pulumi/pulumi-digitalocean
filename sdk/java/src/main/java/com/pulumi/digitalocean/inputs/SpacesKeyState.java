// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.SpacesKeyGrantArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpacesKeyState extends com.pulumi.resources.ResourceArgs {

    public static final SpacesKeyState Empty = new SpacesKeyState();

    /**
     * The access key ID of the key
     * 
     */
    @Import(name="accessKey")
    private @Nullable Output<String> accessKey;

    /**
     * @return The access key ID of the key
     * 
     */
    public Optional<Output<String>> accessKey() {
        return Optional.ofNullable(this.accessKey);
    }

    /**
     * The creation time of the key
     * 
     */
    @Import(name="createdAt")
    private @Nullable Output<String> createdAt;

    /**
     * @return The creation time of the key
     * 
     */
    public Optional<Output<String>> createdAt() {
        return Optional.ofNullable(this.createdAt);
    }

    /**
     * A grant for the key (documented below).
     * 
     */
    @Import(name="grants")
    private @Nullable Output<List<SpacesKeyGrantArgs>> grants;

    /**
     * @return A grant for the key (documented below).
     * 
     */
    public Optional<Output<List<SpacesKeyGrantArgs>>> grants() {
        return Optional.ofNullable(this.grants);
    }

    /**
     * The name of the key
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the key
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The access key secret of the key
     * 
     */
    @Import(name="secretKey")
    private @Nullable Output<String> secretKey;

    /**
     * @return The access key secret of the key
     * 
     */
    public Optional<Output<String>> secretKey() {
        return Optional.ofNullable(this.secretKey);
    }

    private SpacesKeyState() {}

    private SpacesKeyState(SpacesKeyState $) {
        this.accessKey = $.accessKey;
        this.createdAt = $.createdAt;
        this.grants = $.grants;
        this.name = $.name;
        this.secretKey = $.secretKey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpacesKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpacesKeyState $;

        public Builder() {
            $ = new SpacesKeyState();
        }

        public Builder(SpacesKeyState defaults) {
            $ = new SpacesKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessKey The access key ID of the key
         * 
         * @return builder
         * 
         */
        public Builder accessKey(@Nullable Output<String> accessKey) {
            $.accessKey = accessKey;
            return this;
        }

        /**
         * @param accessKey The access key ID of the key
         * 
         * @return builder
         * 
         */
        public Builder accessKey(String accessKey) {
            return accessKey(Output.of(accessKey));
        }

        /**
         * @param createdAt The creation time of the key
         * 
         * @return builder
         * 
         */
        public Builder createdAt(@Nullable Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt The creation time of the key
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param grants A grant for the key (documented below).
         * 
         * @return builder
         * 
         */
        public Builder grants(@Nullable Output<List<SpacesKeyGrantArgs>> grants) {
            $.grants = grants;
            return this;
        }

        /**
         * @param grants A grant for the key (documented below).
         * 
         * @return builder
         * 
         */
        public Builder grants(List<SpacesKeyGrantArgs> grants) {
            return grants(Output.of(grants));
        }

        /**
         * @param grants A grant for the key (documented below).
         * 
         * @return builder
         * 
         */
        public Builder grants(SpacesKeyGrantArgs... grants) {
            return grants(List.of(grants));
        }

        /**
         * @param name The name of the key
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the key
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param secretKey The access key secret of the key
         * 
         * @return builder
         * 
         */
        public Builder secretKey(@Nullable Output<String> secretKey) {
            $.secretKey = secretKey;
            return this;
        }

        /**
         * @param secretKey The access key secret of the key
         * 
         * @return builder
         * 
         */
        public Builder secretKey(String secretKey) {
            return secretKey(Output.of(secretKey));
        }

        public SpacesKeyState build() {
            return $;
        }
    }

}
