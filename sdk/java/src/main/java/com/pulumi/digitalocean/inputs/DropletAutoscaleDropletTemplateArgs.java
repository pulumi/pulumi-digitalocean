// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DropletAutoscaleDropletTemplateArgs extends com.pulumi.resources.ResourceArgs {

    public static final DropletAutoscaleDropletTemplateArgs Empty = new DropletAutoscaleDropletTemplateArgs();

    /**
     * Image slug of the Droplet Autoscale pool underlying resource(s).
     * 
     */
    @Import(name="image", required=true)
    private Output<String> image;

    /**
     * @return Image slug of the Droplet Autoscale pool underlying resource(s).
     * 
     */
    public Output<String> image() {
        return this.image;
    }

    /**
     * Boolean flag to enable IPv6 networking on the Droplet Autoscale pool underlying resource(s).
     * 
     */
    @Import(name="ipv6")
    private @Nullable Output<Boolean> ipv6;

    /**
     * @return Boolean flag to enable IPv6 networking on the Droplet Autoscale pool underlying resource(s).
     * 
     */
    public Optional<Output<Boolean>> ipv6() {
        return Optional.ofNullable(this.ipv6);
    }

    /**
     * Project UUID to create the Droplet Autoscale pool underlying resource(s).
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return Project UUID to create the Droplet Autoscale pool underlying resource(s).
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Region slug of the Droplet Autoscale pool underlying resource(s).
     * 
     */
    @Import(name="region", required=true)
    private Output<String> region;

    /**
     * @return Region slug of the Droplet Autoscale pool underlying resource(s).
     * 
     */
    public Output<String> region() {
        return this.region;
    }

    /**
     * Size slug of the Droplet Autoscale pool underlying resource(s).
     * 
     */
    @Import(name="size", required=true)
    private Output<String> size;

    /**
     * @return Size slug of the Droplet Autoscale pool underlying resource(s).
     * 
     */
    public Output<String> size() {
        return this.size;
    }

    /**
     * SSH fingerprints to add to the Droplet Autoscale pool underlying resource(s).
     * 
     */
    @Import(name="sshKeys", required=true)
    private Output<List<String>> sshKeys;

    /**
     * @return SSH fingerprints to add to the Droplet Autoscale pool underlying resource(s).
     * 
     */
    public Output<List<String>> sshKeys() {
        return this.sshKeys;
    }

    /**
     * List of tags to add to the Droplet Autoscale pool underlying resource(s).
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return List of tags to add to the Droplet Autoscale pool underlying resource(s).
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Custom user data that can be added to the Droplet Autoscale pool underlying resource(s). This can be a
     * cloud init script that user may configure to setup their application workload.
     * 
     */
    @Import(name="userData")
    private @Nullable Output<String> userData;

    /**
     * @return Custom user data that can be added to the Droplet Autoscale pool underlying resource(s). This can be a
     * cloud init script that user may configure to setup their application workload.
     * 
     */
    public Optional<Output<String>> userData() {
        return Optional.ofNullable(this.userData);
    }

    /**
     * VPC UUID to create the Droplet Autoscale pool underlying resource(s). If not provided, this is inferred
     * from the specified `region` (default VPC).
     * 
     */
    @Import(name="vpcUuid")
    private @Nullable Output<String> vpcUuid;

    /**
     * @return VPC UUID to create the Droplet Autoscale pool underlying resource(s). If not provided, this is inferred
     * from the specified `region` (default VPC).
     * 
     */
    public Optional<Output<String>> vpcUuid() {
        return Optional.ofNullable(this.vpcUuid);
    }

    /**
     * Boolean flag to enable metric agent on the Droplet Autoscale pool underlying resource(s). The
     * metric agent enables collecting resource utilization metrics, which allows making resource based scaling decisions.
     * 
     */
    @Import(name="withDropletAgent")
    private @Nullable Output<Boolean> withDropletAgent;

    /**
     * @return Boolean flag to enable metric agent on the Droplet Autoscale pool underlying resource(s). The
     * metric agent enables collecting resource utilization metrics, which allows making resource based scaling decisions.
     * 
     */
    public Optional<Output<Boolean>> withDropletAgent() {
        return Optional.ofNullable(this.withDropletAgent);
    }

    private DropletAutoscaleDropletTemplateArgs() {}

    private DropletAutoscaleDropletTemplateArgs(DropletAutoscaleDropletTemplateArgs $) {
        this.image = $.image;
        this.ipv6 = $.ipv6;
        this.projectId = $.projectId;
        this.region = $.region;
        this.size = $.size;
        this.sshKeys = $.sshKeys;
        this.tags = $.tags;
        this.userData = $.userData;
        this.vpcUuid = $.vpcUuid;
        this.withDropletAgent = $.withDropletAgent;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DropletAutoscaleDropletTemplateArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DropletAutoscaleDropletTemplateArgs $;

        public Builder() {
            $ = new DropletAutoscaleDropletTemplateArgs();
        }

        public Builder(DropletAutoscaleDropletTemplateArgs defaults) {
            $ = new DropletAutoscaleDropletTemplateArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param image Image slug of the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder image(Output<String> image) {
            $.image = image;
            return this;
        }

        /**
         * @param image Image slug of the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder image(String image) {
            return image(Output.of(image));
        }

        /**
         * @param ipv6 Boolean flag to enable IPv6 networking on the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder ipv6(@Nullable Output<Boolean> ipv6) {
            $.ipv6 = ipv6;
            return this;
        }

        /**
         * @param ipv6 Boolean flag to enable IPv6 networking on the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder ipv6(Boolean ipv6) {
            return ipv6(Output.of(ipv6));
        }

        /**
         * @param projectId Project UUID to create the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project UUID to create the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region Region slug of the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region slug of the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param size Size slug of the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder size(Output<String> size) {
            $.size = size;
            return this;
        }

        /**
         * @param size Size slug of the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder size(String size) {
            return size(Output.of(size));
        }

        /**
         * @param sshKeys SSH fingerprints to add to the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder sshKeys(Output<List<String>> sshKeys) {
            $.sshKeys = sshKeys;
            return this;
        }

        /**
         * @param sshKeys SSH fingerprints to add to the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder sshKeys(List<String> sshKeys) {
            return sshKeys(Output.of(sshKeys));
        }

        /**
         * @param sshKeys SSH fingerprints to add to the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder sshKeys(String... sshKeys) {
            return sshKeys(List.of(sshKeys));
        }

        /**
         * @param tags List of tags to add to the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags List of tags to add to the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags List of tags to add to the Droplet Autoscale pool underlying resource(s).
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param userData Custom user data that can be added to the Droplet Autoscale pool underlying resource(s). This can be a
         * cloud init script that user may configure to setup their application workload.
         * 
         * @return builder
         * 
         */
        public Builder userData(@Nullable Output<String> userData) {
            $.userData = userData;
            return this;
        }

        /**
         * @param userData Custom user data that can be added to the Droplet Autoscale pool underlying resource(s). This can be a
         * cloud init script that user may configure to setup their application workload.
         * 
         * @return builder
         * 
         */
        public Builder userData(String userData) {
            return userData(Output.of(userData));
        }

        /**
         * @param vpcUuid VPC UUID to create the Droplet Autoscale pool underlying resource(s). If not provided, this is inferred
         * from the specified `region` (default VPC).
         * 
         * @return builder
         * 
         */
        public Builder vpcUuid(@Nullable Output<String> vpcUuid) {
            $.vpcUuid = vpcUuid;
            return this;
        }

        /**
         * @param vpcUuid VPC UUID to create the Droplet Autoscale pool underlying resource(s). If not provided, this is inferred
         * from the specified `region` (default VPC).
         * 
         * @return builder
         * 
         */
        public Builder vpcUuid(String vpcUuid) {
            return vpcUuid(Output.of(vpcUuid));
        }

        /**
         * @param withDropletAgent Boolean flag to enable metric agent on the Droplet Autoscale pool underlying resource(s). The
         * metric agent enables collecting resource utilization metrics, which allows making resource based scaling decisions.
         * 
         * @return builder
         * 
         */
        public Builder withDropletAgent(@Nullable Output<Boolean> withDropletAgent) {
            $.withDropletAgent = withDropletAgent;
            return this;
        }

        /**
         * @param withDropletAgent Boolean flag to enable metric agent on the Droplet Autoscale pool underlying resource(s). The
         * metric agent enables collecting resource utilization metrics, which allows making resource based scaling decisions.
         * 
         * @return builder
         * 
         */
        public Builder withDropletAgent(Boolean withDropletAgent) {
            return withDropletAgent(Output.of(withDropletAgent));
        }

        public DropletAutoscaleDropletTemplateArgs build() {
            if ($.image == null) {
                throw new MissingRequiredPropertyException("DropletAutoscaleDropletTemplateArgs", "image");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("DropletAutoscaleDropletTemplateArgs", "region");
            }
            if ($.size == null) {
                throw new MissingRequiredPropertyException("DropletAutoscaleDropletTemplateArgs", "size");
            }
            if ($.sshKeys == null) {
                throw new MissingRequiredPropertyException("DropletAutoscaleDropletTemplateArgs", "sshKeys");
            }
            return $;
        }
    }

}
