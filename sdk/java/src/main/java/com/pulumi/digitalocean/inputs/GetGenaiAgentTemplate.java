// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.GetGenaiAgentTemplateKnowledgeBase;
import com.pulumi.digitalocean.inputs.GetGenaiAgentTemplateModel;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGenaiAgentTemplate extends com.pulumi.resources.InvokeArgs {

    public static final GetGenaiAgentTemplate Empty = new GetGenaiAgentTemplate();

    /**
     * Created At timestamp for the Knowledge Base
     * 
     */
    @Import(name="createdAt", required=true)
    private String createdAt;

    /**
     * @return Created At timestamp for the Knowledge Base
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }

    /**
     * Description of the Agent Template
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Description of the Agent Template
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Instruction for the Agent
     * 
     */
    @Import(name="instruction")
    private @Nullable String instruction;

    /**
     * @return Instruction for the Agent
     * 
     */
    public Optional<String> instruction() {
        return Optional.ofNullable(this.instruction);
    }

    /**
     * K value for the Agent Template
     * 
     */
    @Import(name="k")
    private @Nullable Integer k;

    /**
     * @return K value for the Agent Template
     * 
     */
    public Optional<Integer> k() {
        return Optional.ofNullable(this.k);
    }

    /**
     * List of Knowledge Bases
     * 
     */
    @Import(name="knowledgeBases")
    private @Nullable List<GetGenaiAgentTemplateKnowledgeBase> knowledgeBases;

    /**
     * @return List of Knowledge Bases
     * 
     */
    public Optional<List<GetGenaiAgentTemplateKnowledgeBase>> knowledgeBases() {
        return Optional.ofNullable(this.knowledgeBases);
    }

    /**
     * Maximum tokens allowed
     * 
     */
    @Import(name="maxTokens")
    private @Nullable Integer maxTokens;

    /**
     * @return Maximum tokens allowed
     * 
     */
    public Optional<Integer> maxTokens() {
        return Optional.ofNullable(this.maxTokens);
    }

    /**
     * Model of the Agent Template
     * 
     */
    @Import(name="models")
    private @Nullable List<GetGenaiAgentTemplateModel> models;

    /**
     * @return Model of the Agent Template
     * 
     */
    public Optional<List<GetGenaiAgentTemplateModel>> models() {
        return Optional.ofNullable(this.models);
    }

    /**
     * Name of the Agent Template
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the Agent Template
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Agent temperature setting
     * 
     */
    @Import(name="temperature")
    private @Nullable Double temperature;

    /**
     * @return Agent temperature setting
     * 
     */
    public Optional<Double> temperature() {
        return Optional.ofNullable(this.temperature);
    }

    /**
     * Top P sampling parameter
     * 
     */
    @Import(name="topP")
    private @Nullable Double topP;

    /**
     * @return Top P sampling parameter
     * 
     */
    public Optional<Double> topP() {
        return Optional.ofNullable(this.topP);
    }

    /**
     * Updated At timestamp for the Agent Template
     * 
     */
    @Import(name="updatedAt", required=true)
    private String updatedAt;

    /**
     * @return Updated At timestamp for the Agent Template
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    /**
     * uuid of the Agent Template
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return uuid of the Agent Template
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetGenaiAgentTemplate() {}

    private GetGenaiAgentTemplate(GetGenaiAgentTemplate $) {
        this.createdAt = $.createdAt;
        this.description = $.description;
        this.instruction = $.instruction;
        this.k = $.k;
        this.knowledgeBases = $.knowledgeBases;
        this.maxTokens = $.maxTokens;
        this.models = $.models;
        this.name = $.name;
        this.temperature = $.temperature;
        this.topP = $.topP;
        this.updatedAt = $.updatedAt;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGenaiAgentTemplate defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGenaiAgentTemplate $;

        public Builder() {
            $ = new GetGenaiAgentTemplate();
        }

        public Builder(GetGenaiAgentTemplate defaults) {
            $ = new GetGenaiAgentTemplate(Objects.requireNonNull(defaults));
        }

        /**
         * @param createdAt Created At timestamp for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param description Description of the Agent Template
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param instruction Instruction for the Agent
         * 
         * @return builder
         * 
         */
        public Builder instruction(@Nullable String instruction) {
            $.instruction = instruction;
            return this;
        }

        /**
         * @param k K value for the Agent Template
         * 
         * @return builder
         * 
         */
        public Builder k(@Nullable Integer k) {
            $.k = k;
            return this;
        }

        /**
         * @param knowledgeBases List of Knowledge Bases
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBases(@Nullable List<GetGenaiAgentTemplateKnowledgeBase> knowledgeBases) {
            $.knowledgeBases = knowledgeBases;
            return this;
        }

        /**
         * @param knowledgeBases List of Knowledge Bases
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBases(GetGenaiAgentTemplateKnowledgeBase... knowledgeBases) {
            return knowledgeBases(List.of(knowledgeBases));
        }

        /**
         * @param maxTokens Maximum tokens allowed
         * 
         * @return builder
         * 
         */
        public Builder maxTokens(@Nullable Integer maxTokens) {
            $.maxTokens = maxTokens;
            return this;
        }

        /**
         * @param models Model of the Agent Template
         * 
         * @return builder
         * 
         */
        public Builder models(@Nullable List<GetGenaiAgentTemplateModel> models) {
            $.models = models;
            return this;
        }

        /**
         * @param models Model of the Agent Template
         * 
         * @return builder
         * 
         */
        public Builder models(GetGenaiAgentTemplateModel... models) {
            return models(List.of(models));
        }

        /**
         * @param name Name of the Agent Template
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param temperature Agent temperature setting
         * 
         * @return builder
         * 
         */
        public Builder temperature(@Nullable Double temperature) {
            $.temperature = temperature;
            return this;
        }

        /**
         * @param topP Top P sampling parameter
         * 
         * @return builder
         * 
         */
        public Builder topP(@Nullable Double topP) {
            $.topP = topP;
            return this;
        }

        /**
         * @param updatedAt Updated At timestamp for the Agent Template
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param uuid uuid of the Agent Template
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetGenaiAgentTemplate build() {
            if ($.createdAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplate", "createdAt");
            }
            if ($.updatedAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplate", "updatedAt");
            }
            return $;
        }
    }

}
