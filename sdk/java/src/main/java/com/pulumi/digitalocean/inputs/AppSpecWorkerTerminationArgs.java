// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class AppSpecWorkerTerminationArgs extends com.pulumi.resources.ResourceArgs {

    public static final AppSpecWorkerTerminationArgs Empty = new AppSpecWorkerTerminationArgs();

    /**
     * The number of seconds to wait between sending a TERM signal to a container and issuing a KILL which causes immediate shutdown. Default: 120, Minimum 1, Maximum 600.
     * 
     * A `function` component can contain:
     * 
     */
    @Import(name="gracePeriodSeconds")
    private @Nullable Output<Integer> gracePeriodSeconds;

    /**
     * @return The number of seconds to wait between sending a TERM signal to a container and issuing a KILL which causes immediate shutdown. Default: 120, Minimum 1, Maximum 600.
     * 
     * A `function` component can contain:
     * 
     */
    public Optional<Output<Integer>> gracePeriodSeconds() {
        return Optional.ofNullable(this.gracePeriodSeconds);
    }

    private AppSpecWorkerTerminationArgs() {}

    private AppSpecWorkerTerminationArgs(AppSpecWorkerTerminationArgs $) {
        this.gracePeriodSeconds = $.gracePeriodSeconds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AppSpecWorkerTerminationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AppSpecWorkerTerminationArgs $;

        public Builder() {
            $ = new AppSpecWorkerTerminationArgs();
        }

        public Builder(AppSpecWorkerTerminationArgs defaults) {
            $ = new AppSpecWorkerTerminationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param gracePeriodSeconds The number of seconds to wait between sending a TERM signal to a container and issuing a KILL which causes immediate shutdown. Default: 120, Minimum 1, Maximum 600.
         * 
         * A `function` component can contain:
         * 
         * @return builder
         * 
         */
        public Builder gracePeriodSeconds(@Nullable Output<Integer> gracePeriodSeconds) {
            $.gracePeriodSeconds = gracePeriodSeconds;
            return this;
        }

        /**
         * @param gracePeriodSeconds The number of seconds to wait between sending a TERM signal to a container and issuing a KILL which causes immediate shutdown. Default: 120, Minimum 1, Maximum 600.
         * 
         * A `function` component can contain:
         * 
         * @return builder
         * 
         */
        public Builder gracePeriodSeconds(Integer gracePeriodSeconds) {
            return gracePeriodSeconds(Output.of(gracePeriodSeconds));
        }

        public AppSpecWorkerTerminationArgs build() {
            return $;
        }
    }

}
