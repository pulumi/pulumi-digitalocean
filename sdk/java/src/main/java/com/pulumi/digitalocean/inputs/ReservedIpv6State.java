// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ReservedIpv6State extends com.pulumi.resources.ResourceArgs {

    public static final ReservedIpv6State Empty = new ReservedIpv6State();

    @Import(name="dropletId")
    private @Nullable Output<Integer> dropletId;

    public Optional<Output<Integer>> dropletId() {
        return Optional.ofNullable(this.dropletId);
    }

    @Import(name="ip")
    private @Nullable Output<String> ip;

    public Optional<Output<String>> ip() {
        return Optional.ofNullable(this.ip);
    }

    /**
     * The region that the reserved IPv6 needs to be reserved to.
     * 
     */
    @Import(name="regionSlug")
    private @Nullable Output<String> regionSlug;

    /**
     * @return The region that the reserved IPv6 needs to be reserved to.
     * 
     */
    public Optional<Output<String>> regionSlug() {
        return Optional.ofNullable(this.regionSlug);
    }

    /**
     * the uniform resource name for the reserved ipv6
     * 
     */
    @Import(name="reservedIpv6Urn")
    private @Nullable Output<String> reservedIpv6Urn;

    /**
     * @return the uniform resource name for the reserved ipv6
     * 
     */
    public Optional<Output<String>> reservedIpv6Urn() {
        return Optional.ofNullable(this.reservedIpv6Urn);
    }

    private ReservedIpv6State() {}

    private ReservedIpv6State(ReservedIpv6State $) {
        this.dropletId = $.dropletId;
        this.ip = $.ip;
        this.regionSlug = $.regionSlug;
        this.reservedIpv6Urn = $.reservedIpv6Urn;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ReservedIpv6State defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ReservedIpv6State $;

        public Builder() {
            $ = new ReservedIpv6State();
        }

        public Builder(ReservedIpv6State defaults) {
            $ = new ReservedIpv6State(Objects.requireNonNull(defaults));
        }

        public Builder dropletId(@Nullable Output<Integer> dropletId) {
            $.dropletId = dropletId;
            return this;
        }

        public Builder dropletId(Integer dropletId) {
            return dropletId(Output.of(dropletId));
        }

        public Builder ip(@Nullable Output<String> ip) {
            $.ip = ip;
            return this;
        }

        public Builder ip(String ip) {
            return ip(Output.of(ip));
        }

        /**
         * @param regionSlug The region that the reserved IPv6 needs to be reserved to.
         * 
         * @return builder
         * 
         */
        public Builder regionSlug(@Nullable Output<String> regionSlug) {
            $.regionSlug = regionSlug;
            return this;
        }

        /**
         * @param regionSlug The region that the reserved IPv6 needs to be reserved to.
         * 
         * @return builder
         * 
         */
        public Builder regionSlug(String regionSlug) {
            return regionSlug(Output.of(regionSlug));
        }

        /**
         * @param reservedIpv6Urn the uniform resource name for the reserved ipv6
         * 
         * @return builder
         * 
         */
        public Builder reservedIpv6Urn(@Nullable Output<String> reservedIpv6Urn) {
            $.reservedIpv6Urn = reservedIpv6Urn;
            return this;
        }

        /**
         * @param reservedIpv6Urn the uniform resource name for the reserved ipv6
         * 
         * @return builder
         * 
         */
        public Builder reservedIpv6Urn(String reservedIpv6Urn) {
            return reservedIpv6Urn(Output.of(reservedIpv6Urn));
        }

        public ReservedIpv6State build() {
            return $;
        }
    }

}
