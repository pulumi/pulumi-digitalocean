// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetSpacesKeyGrant {
    /**
     * @return The name of the bucket to grant the key access to.
     * 
     */
    private String bucket;
    /**
     * @return The permission to grant the key. Valid values are `read`, `readwrite`, or `fullaccess`.
     * 
     */
    private String permission;

    private GetSpacesKeyGrant() {}
    /**
     * @return The name of the bucket to grant the key access to.
     * 
     */
    public String bucket() {
        return this.bucket;
    }
    /**
     * @return The permission to grant the key. Valid values are `read`, `readwrite`, or `fullaccess`.
     * 
     */
    public String permission() {
        return this.permission;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSpacesKeyGrant defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String bucket;
        private String permission;
        public Builder() {}
        public Builder(GetSpacesKeyGrant defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.bucket = defaults.bucket;
    	      this.permission = defaults.permission;
        }

        @CustomType.Setter
        public Builder bucket(String bucket) {
            if (bucket == null) {
              throw new MissingRequiredPropertyException("GetSpacesKeyGrant", "bucket");
            }
            this.bucket = bucket;
            return this;
        }
        @CustomType.Setter
        public Builder permission(String permission) {
            if (permission == null) {
              throw new MissingRequiredPropertyException("GetSpacesKeyGrant", "permission");
            }
            this.permission = permission;
            return this;
        }
        public GetSpacesKeyGrant build() {
            final var _resultValue = new GetSpacesKeyGrant();
            _resultValue.bucket = bucket;
            _resultValue.permission = permission;
            return _resultValue;
        }
    }
}
