// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VolumeAttachmentState extends com.pulumi.resources.ResourceArgs {

    public static final VolumeAttachmentState Empty = new VolumeAttachmentState();

    /**
     * ID of the Droplet to attach the volume to.
     * 
     */
    @Import(name="dropletId")
    private @Nullable Output<Integer> dropletId;

    /**
     * @return ID of the Droplet to attach the volume to.
     * 
     */
    public Optional<Output<Integer>> dropletId() {
        return Optional.ofNullable(this.dropletId);
    }

    /**
     * ID of the Volume to be attached to the Droplet.
     * 
     */
    @Import(name="volumeId")
    private @Nullable Output<String> volumeId;

    /**
     * @return ID of the Volume to be attached to the Droplet.
     * 
     */
    public Optional<Output<String>> volumeId() {
        return Optional.ofNullable(this.volumeId);
    }

    private VolumeAttachmentState() {}

    private VolumeAttachmentState(VolumeAttachmentState $) {
        this.dropletId = $.dropletId;
        this.volumeId = $.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeAttachmentState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeAttachmentState $;

        public Builder() {
            $ = new VolumeAttachmentState();
        }

        public Builder(VolumeAttachmentState defaults) {
            $ = new VolumeAttachmentState(Objects.requireNonNull(defaults));
        }

        /**
         * @param dropletId ID of the Droplet to attach the volume to.
         * 
         * @return builder
         * 
         */
        public Builder dropletId(@Nullable Output<Integer> dropletId) {
            $.dropletId = dropletId;
            return this;
        }

        /**
         * @param dropletId ID of the Droplet to attach the volume to.
         * 
         * @return builder
         * 
         */
        public Builder dropletId(Integer dropletId) {
            return dropletId(Output.of(dropletId));
        }

        /**
         * @param volumeId ID of the Volume to be attached to the Droplet.
         * 
         * @return builder
         * 
         */
        public Builder volumeId(@Nullable Output<String> volumeId) {
            $.volumeId = volumeId;
            return this;
        }

        /**
         * @param volumeId ID of the Volume to be attached to the Droplet.
         * 
         * @return builder
         * 
         */
        public Builder volumeId(String volumeId) {
            return volumeId(Output.of(volumeId));
        }

        public VolumeAttachmentState build() {
            return $;
        }
    }

}
