// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenaiFunctionState extends com.pulumi.resources.ResourceArgs {

    public static final GenaiFunctionState Empty = new GenaiFunctionState();

    /**
     * The name of the GenAI resource.
     * 
     */
    @Import(name="agentId")
    private @Nullable Output<String> agentId;

    /**
     * @return The name of the GenAI resource.
     * 
     */
    public Optional<Output<String>> agentId() {
        return Optional.ofNullable(this.agentId);
    }

    /**
     * The region where the GenAI resource will be created.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return The region where the GenAI resource will be created.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The model to use for the GenAI resource.
     * 
     */
    @Import(name="faasName")
    private @Nullable Output<String> faasName;

    /**
     * @return The model to use for the GenAI resource.
     * 
     */
    public Optional<Output<String>> faasName() {
        return Optional.ofNullable(this.faasName);
    }

    /**
     * The current status of the GenAI resource.
     * 
     */
    @Import(name="faasNamespace")
    private @Nullable Output<String> faasNamespace;

    /**
     * @return The current status of the GenAI resource.
     * 
     */
    public Optional<Output<String>> faasNamespace() {
        return Optional.ofNullable(this.faasNamespace);
    }

    /**
     * The creation timestamp of the GenAI resource.
     * 
     */
    @Import(name="functionName")
    private @Nullable Output<String> functionName;

    /**
     * @return The creation timestamp of the GenAI resource.
     * 
     */
    public Optional<Output<String>> functionName() {
        return Optional.ofNullable(this.functionName);
    }

    /**
     * The unique identifier of the GenAI function.
     * 
     */
    @Import(name="functionUuid")
    private @Nullable Output<String> functionUuid;

    /**
     * @return The unique identifier of the GenAI function.
     * 
     */
    public Optional<Output<String>> functionUuid() {
        return Optional.ofNullable(this.functionUuid);
    }

    /**
     * The input schema of the GenAI resource.
     * 
     */
    @Import(name="inputSchema")
    private @Nullable Output<String> inputSchema;

    /**
     * @return The input schema of the GenAI resource.
     * 
     */
    public Optional<Output<String>> inputSchema() {
        return Optional.ofNullable(this.inputSchema);
    }

    /**
     * The output schema of the GenAI resource.
     * 
     */
    @Import(name="outputSchema")
    private @Nullable Output<String> outputSchema;

    /**
     * @return The output schema of the GenAI resource.
     * 
     */
    public Optional<Output<String>> outputSchema() {
        return Optional.ofNullable(this.outputSchema);
    }

    private GenaiFunctionState() {}

    private GenaiFunctionState(GenaiFunctionState $) {
        this.agentId = $.agentId;
        this.description = $.description;
        this.faasName = $.faasName;
        this.faasNamespace = $.faasNamespace;
        this.functionName = $.functionName;
        this.functionUuid = $.functionUuid;
        this.inputSchema = $.inputSchema;
        this.outputSchema = $.outputSchema;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenaiFunctionState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenaiFunctionState $;

        public Builder() {
            $ = new GenaiFunctionState();
        }

        public Builder(GenaiFunctionState defaults) {
            $ = new GenaiFunctionState(Objects.requireNonNull(defaults));
        }

        /**
         * @param agentId The name of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder agentId(@Nullable Output<String> agentId) {
            $.agentId = agentId;
            return this;
        }

        /**
         * @param agentId The name of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder agentId(String agentId) {
            return agentId(Output.of(agentId));
        }

        /**
         * @param description The region where the GenAI resource will be created.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description The region where the GenAI resource will be created.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param faasName The model to use for the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder faasName(@Nullable Output<String> faasName) {
            $.faasName = faasName;
            return this;
        }

        /**
         * @param faasName The model to use for the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder faasName(String faasName) {
            return faasName(Output.of(faasName));
        }

        /**
         * @param faasNamespace The current status of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder faasNamespace(@Nullable Output<String> faasNamespace) {
            $.faasNamespace = faasNamespace;
            return this;
        }

        /**
         * @param faasNamespace The current status of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder faasNamespace(String faasNamespace) {
            return faasNamespace(Output.of(faasNamespace));
        }

        /**
         * @param functionName The creation timestamp of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder functionName(@Nullable Output<String> functionName) {
            $.functionName = functionName;
            return this;
        }

        /**
         * @param functionName The creation timestamp of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder functionName(String functionName) {
            return functionName(Output.of(functionName));
        }

        /**
         * @param functionUuid The unique identifier of the GenAI function.
         * 
         * @return builder
         * 
         */
        public Builder functionUuid(@Nullable Output<String> functionUuid) {
            $.functionUuid = functionUuid;
            return this;
        }

        /**
         * @param functionUuid The unique identifier of the GenAI function.
         * 
         * @return builder
         * 
         */
        public Builder functionUuid(String functionUuid) {
            return functionUuid(Output.of(functionUuid));
        }

        /**
         * @param inputSchema The input schema of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder inputSchema(@Nullable Output<String> inputSchema) {
            $.inputSchema = inputSchema;
            return this;
        }

        /**
         * @param inputSchema The input schema of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder inputSchema(String inputSchema) {
            return inputSchema(Output.of(inputSchema));
        }

        /**
         * @param outputSchema The output schema of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder outputSchema(@Nullable Output<String> outputSchema) {
            $.outputSchema = outputSchema;
            return this;
        }

        /**
         * @param outputSchema The output schema of the GenAI resource.
         * 
         * @return builder
         * 
         */
        public Builder outputSchema(String outputSchema) {
            return outputSchema(Output.of(outputSchema));
        }

        public GenaiFunctionState build() {
            return $;
        }
    }

}
