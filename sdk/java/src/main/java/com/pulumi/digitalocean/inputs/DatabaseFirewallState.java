// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.DatabaseFirewallRuleArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DatabaseFirewallState extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseFirewallState Empty = new DatabaseFirewallState();

    /**
     * The ID of the target database cluster.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The ID of the target database cluster.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * A rule specifying a resource allowed to access the database cluster. The following arguments must be specified:
     * 
     */
    @Import(name="rules")
    private @Nullable Output<List<DatabaseFirewallRuleArgs>> rules;

    /**
     * @return A rule specifying a resource allowed to access the database cluster. The following arguments must be specified:
     * 
     */
    public Optional<Output<List<DatabaseFirewallRuleArgs>>> rules() {
        return Optional.ofNullable(this.rules);
    }

    private DatabaseFirewallState() {}

    private DatabaseFirewallState(DatabaseFirewallState $) {
        this.clusterId = $.clusterId;
        this.rules = $.rules;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseFirewallState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseFirewallState $;

        public Builder() {
            $ = new DatabaseFirewallState();
        }

        public Builder(DatabaseFirewallState defaults) {
            $ = new DatabaseFirewallState(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The ID of the target database cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the target database cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param rules A rule specifying a resource allowed to access the database cluster. The following arguments must be specified:
         * 
         * @return builder
         * 
         */
        public Builder rules(@Nullable Output<List<DatabaseFirewallRuleArgs>> rules) {
            $.rules = rules;
            return this;
        }

        /**
         * @param rules A rule specifying a resource allowed to access the database cluster. The following arguments must be specified:
         * 
         * @return builder
         * 
         */
        public Builder rules(List<DatabaseFirewallRuleArgs> rules) {
            return rules(Output.of(rules));
        }

        /**
         * @param rules A rule specifying a resource allowed to access the database cluster. The following arguments must be specified:
         * 
         * @return builder
         * 
         */
        public Builder rules(DatabaseFirewallRuleArgs... rules) {
            return rules(List.of(rules));
        }

        public DatabaseFirewallState build() {
            return $;
        }
    }

}
