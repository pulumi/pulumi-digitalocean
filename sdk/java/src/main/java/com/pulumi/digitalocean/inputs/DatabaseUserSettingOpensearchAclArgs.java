// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class DatabaseUserSettingOpensearchAclArgs extends com.pulumi.resources.ResourceArgs {

    public static final DatabaseUserSettingOpensearchAclArgs Empty = new DatabaseUserSettingOpensearchAclArgs();

    @Import(name="index", required=true)
    private Output<String> index;

    public Output<String> index() {
        return this.index;
    }

    /**
     * The permission level applied to the ACL. This includes &#34;admin&#34;, &#34;consume&#34;, &#34;produce&#34;, and &#34;produceconsume&#34;. &#34;admin&#34; allows for producing and consuming as well as add/delete/update permission for topics. &#34;consume&#34; allows only for reading topic messages. &#34;produce&#34; allows only for writing topic messages. &#34;produceconsume&#34; allows for both reading and writing topic messages.
     * 
     */
    @Import(name="permission", required=true)
    private Output<String> permission;

    /**
     * @return The permission level applied to the ACL. This includes &#34;admin&#34;, &#34;consume&#34;, &#34;produce&#34;, and &#34;produceconsume&#34;. &#34;admin&#34; allows for producing and consuming as well as add/delete/update permission for topics. &#34;consume&#34; allows only for reading topic messages. &#34;produce&#34; allows only for writing topic messages. &#34;produceconsume&#34; allows for both reading and writing topic messages.
     * 
     */
    public Output<String> permission() {
        return this.permission;
    }

    private DatabaseUserSettingOpensearchAclArgs() {}

    private DatabaseUserSettingOpensearchAclArgs(DatabaseUserSettingOpensearchAclArgs $) {
        this.index = $.index;
        this.permission = $.permission;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DatabaseUserSettingOpensearchAclArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DatabaseUserSettingOpensearchAclArgs $;

        public Builder() {
            $ = new DatabaseUserSettingOpensearchAclArgs();
        }

        public Builder(DatabaseUserSettingOpensearchAclArgs defaults) {
            $ = new DatabaseUserSettingOpensearchAclArgs(Objects.requireNonNull(defaults));
        }

        public Builder index(Output<String> index) {
            $.index = index;
            return this;
        }

        public Builder index(String index) {
            return index(Output.of(index));
        }

        /**
         * @param permission The permission level applied to the ACL. This includes &#34;admin&#34;, &#34;consume&#34;, &#34;produce&#34;, and &#34;produceconsume&#34;. &#34;admin&#34; allows for producing and consuming as well as add/delete/update permission for topics. &#34;consume&#34; allows only for reading topic messages. &#34;produce&#34; allows only for writing topic messages. &#34;produceconsume&#34; allows for both reading and writing topic messages.
         * 
         * @return builder
         * 
         */
        public Builder permission(Output<String> permission) {
            $.permission = permission;
            return this;
        }

        /**
         * @param permission The permission level applied to the ACL. This includes &#34;admin&#34;, &#34;consume&#34;, &#34;produce&#34;, and &#34;produceconsume&#34;. &#34;admin&#34; allows for producing and consuming as well as add/delete/update permission for topics. &#34;consume&#34; allows only for reading topic messages. &#34;produce&#34; allows only for writing topic messages. &#34;produceconsume&#34; allows for both reading and writing topic messages.
         * 
         * @return builder
         * 
         */
        public Builder permission(String permission) {
            return permission(Output.of(permission));
        }

        public DatabaseUserSettingOpensearchAclArgs build() {
            if ($.index == null) {
                throw new MissingRequiredPropertyException("DatabaseUserSettingOpensearchAclArgs", "index");
            }
            if ($.permission == null) {
                throw new MissingRequiredPropertyException("DatabaseUserSettingOpensearchAclArgs", "permission");
            }
            return $;
        }
    }

}
