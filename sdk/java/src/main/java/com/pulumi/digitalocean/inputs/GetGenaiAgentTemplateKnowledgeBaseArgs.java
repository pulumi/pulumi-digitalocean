// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.GetGenaiAgentTemplateKnowledgeBaseLastIndexingJobArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGenaiAgentTemplateKnowledgeBaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetGenaiAgentTemplateKnowledgeBaseArgs Empty = new GetGenaiAgentTemplateKnowledgeBaseArgs();

    /**
     * Timestamp when the Knowledge Base was added to the Agent
     * 
     */
    @Import(name="addedToAgentAt", required=true)
    private Output<String> addedToAgentAt;

    /**
     * @return Timestamp when the Knowledge Base was added to the Agent
     * 
     */
    public Output<String> addedToAgentAt() {
        return this.addedToAgentAt;
    }

    /**
     * Created At timestamp for the Knowledge Base
     * 
     */
    @Import(name="createdAt", required=true)
    private Output<String> createdAt;

    /**
     * @return Created At timestamp for the Knowledge Base
     * 
     */
    public Output<String> createdAt() {
        return this.createdAt;
    }

    /**
     * Database ID of the Knowledge Base
     * 
     */
    @Import(name="databaseId", required=true)
    private Output<String> databaseId;

    /**
     * @return Database ID of the Knowledge Base
     * 
     */
    public Output<String> databaseId() {
        return this.databaseId;
    }

    /**
     * Embedding model UUID for the Knowledge Base
     * 
     */
    @Import(name="embeddingModelUuid", required=true)
    private Output<String> embeddingModelUuid;

    /**
     * @return Embedding model UUID for the Knowledge Base
     * 
     */
    public Output<String> embeddingModelUuid() {
        return this.embeddingModelUuid;
    }

    /**
     * Indicates if the Knowledge Base is public
     * 
     */
    @Import(name="isPublic", required=true)
    private Output<Boolean> isPublic;

    /**
     * @return Indicates if the Knowledge Base is public
     * 
     */
    public Output<Boolean> isPublic() {
        return this.isPublic;
    }

    /**
     * Last indexing job for the Knowledge Base
     * 
     */
    @Import(name="lastIndexingJobs")
    private @Nullable Output<List<GetGenaiAgentTemplateKnowledgeBaseLastIndexingJobArgs>> lastIndexingJobs;

    /**
     * @return Last indexing job for the Knowledge Base
     * 
     */
    public Optional<Output<List<GetGenaiAgentTemplateKnowledgeBaseLastIndexingJobArgs>>> lastIndexingJobs() {
        return Optional.ofNullable(this.lastIndexingJobs);
    }

    /**
     * Name of the Knowledge Base
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name of the Knowledge Base
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * Project ID of the Knowledge Base
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return Project ID of the Knowledge Base
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Region of the Knowledge Base
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return Region of the Knowledge Base
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * List of tags
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return List of tags
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Updated At timestamp for the Knowledge Base
     * 
     */
    @Import(name="updatedAt", required=true)
    private Output<String> updatedAt;

    /**
     * @return Updated At timestamp for the Knowledge Base
     * 
     */
    public Output<String> updatedAt() {
        return this.updatedAt;
    }

    /**
     * User ID of the Knowledge Base
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return User ID of the Knowledge Base
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    /**
     * UUID of the Knowledge Base
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return UUID of the Knowledge Base
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetGenaiAgentTemplateKnowledgeBaseArgs() {}

    private GetGenaiAgentTemplateKnowledgeBaseArgs(GetGenaiAgentTemplateKnowledgeBaseArgs $) {
        this.addedToAgentAt = $.addedToAgentAt;
        this.createdAt = $.createdAt;
        this.databaseId = $.databaseId;
        this.embeddingModelUuid = $.embeddingModelUuid;
        this.isPublic = $.isPublic;
        this.lastIndexingJobs = $.lastIndexingJobs;
        this.name = $.name;
        this.projectId = $.projectId;
        this.region = $.region;
        this.tags = $.tags;
        this.updatedAt = $.updatedAt;
        this.userId = $.userId;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGenaiAgentTemplateKnowledgeBaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGenaiAgentTemplateKnowledgeBaseArgs $;

        public Builder() {
            $ = new GetGenaiAgentTemplateKnowledgeBaseArgs();
        }

        public Builder(GetGenaiAgentTemplateKnowledgeBaseArgs defaults) {
            $ = new GetGenaiAgentTemplateKnowledgeBaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addedToAgentAt Timestamp when the Knowledge Base was added to the Agent
         * 
         * @return builder
         * 
         */
        public Builder addedToAgentAt(Output<String> addedToAgentAt) {
            $.addedToAgentAt = addedToAgentAt;
            return this;
        }

        /**
         * @param addedToAgentAt Timestamp when the Knowledge Base was added to the Agent
         * 
         * @return builder
         * 
         */
        public Builder addedToAgentAt(String addedToAgentAt) {
            return addedToAgentAt(Output.of(addedToAgentAt));
        }

        /**
         * @param createdAt Created At timestamp for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder createdAt(Output<String> createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param createdAt Created At timestamp for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            return createdAt(Output.of(createdAt));
        }

        /**
         * @param databaseId Database ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder databaseId(Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId Database ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param embeddingModelUuid Embedding model UUID for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder embeddingModelUuid(Output<String> embeddingModelUuid) {
            $.embeddingModelUuid = embeddingModelUuid;
            return this;
        }

        /**
         * @param embeddingModelUuid Embedding model UUID for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder embeddingModelUuid(String embeddingModelUuid) {
            return embeddingModelUuid(Output.of(embeddingModelUuid));
        }

        /**
         * @param isPublic Indicates if the Knowledge Base is public
         * 
         * @return builder
         * 
         */
        public Builder isPublic(Output<Boolean> isPublic) {
            $.isPublic = isPublic;
            return this;
        }

        /**
         * @param isPublic Indicates if the Knowledge Base is public
         * 
         * @return builder
         * 
         */
        public Builder isPublic(Boolean isPublic) {
            return isPublic(Output.of(isPublic));
        }

        /**
         * @param lastIndexingJobs Last indexing job for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder lastIndexingJobs(@Nullable Output<List<GetGenaiAgentTemplateKnowledgeBaseLastIndexingJobArgs>> lastIndexingJobs) {
            $.lastIndexingJobs = lastIndexingJobs;
            return this;
        }

        /**
         * @param lastIndexingJobs Last indexing job for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder lastIndexingJobs(List<GetGenaiAgentTemplateKnowledgeBaseLastIndexingJobArgs> lastIndexingJobs) {
            return lastIndexingJobs(Output.of(lastIndexingJobs));
        }

        /**
         * @param lastIndexingJobs Last indexing job for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder lastIndexingJobs(GetGenaiAgentTemplateKnowledgeBaseLastIndexingJobArgs... lastIndexingJobs) {
            return lastIndexingJobs(List.of(lastIndexingJobs));
        }

        /**
         * @param name Name of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectId Project ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param region Region of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region Region of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param tags List of tags
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags List of tags
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags List of tags
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param updatedAt Updated At timestamp for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(Output<String> updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param updatedAt Updated At timestamp for the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            return updatedAt(Output.of(updatedAt));
        }

        /**
         * @param userId User ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId User ID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        /**
         * @param uuid UUID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid UUID of the Knowledge Base
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public GetGenaiAgentTemplateKnowledgeBaseArgs build() {
            if ($.addedToAgentAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseArgs", "addedToAgentAt");
            }
            if ($.createdAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseArgs", "createdAt");
            }
            if ($.databaseId == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseArgs", "databaseId");
            }
            if ($.embeddingModelUuid == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseArgs", "embeddingModelUuid");
            }
            if ($.isPublic == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseArgs", "isPublic");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseArgs", "name");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseArgs", "projectId");
            }
            if ($.updatedAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseArgs", "updatedAt");
            }
            return $;
        }
    }

}
