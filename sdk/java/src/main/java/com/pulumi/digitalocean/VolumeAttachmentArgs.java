// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;


public final class VolumeAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeAttachmentArgs Empty = new VolumeAttachmentArgs();

    /**
     * ID of the Droplet to attach the volume to.
     * 
     */
    @Import(name="dropletId", required=true)
    private Output<Integer> dropletId;

    /**
     * @return ID of the Droplet to attach the volume to.
     * 
     */
    public Output<Integer> dropletId() {
        return this.dropletId;
    }

    /**
     * ID of the Volume to be attached to the Droplet.
     * 
     */
    @Import(name="volumeId", required=true)
    private Output<String> volumeId;

    /**
     * @return ID of the Volume to be attached to the Droplet.
     * 
     */
    public Output<String> volumeId() {
        return this.volumeId;
    }

    private VolumeAttachmentArgs() {}

    private VolumeAttachmentArgs(VolumeAttachmentArgs $) {
        this.dropletId = $.dropletId;
        this.volumeId = $.volumeId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeAttachmentArgs $;

        public Builder() {
            $ = new VolumeAttachmentArgs();
        }

        public Builder(VolumeAttachmentArgs defaults) {
            $ = new VolumeAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param dropletId ID of the Droplet to attach the volume to.
         * 
         * @return builder
         * 
         */
        public Builder dropletId(Output<Integer> dropletId) {
            $.dropletId = dropletId;
            return this;
        }

        /**
         * @param dropletId ID of the Droplet to attach the volume to.
         * 
         * @return builder
         * 
         */
        public Builder dropletId(Integer dropletId) {
            return dropletId(Output.of(dropletId));
        }

        /**
         * @param volumeId ID of the Volume to be attached to the Droplet.
         * 
         * @return builder
         * 
         */
        public Builder volumeId(Output<String> volumeId) {
            $.volumeId = volumeId;
            return this;
        }

        /**
         * @param volumeId ID of the Volume to be attached to the Droplet.
         * 
         * @return builder
         * 
         */
        public Builder volumeId(String volumeId) {
            return volumeId(Output.of(volumeId));
        }

        public VolumeAttachmentArgs build() {
            if ($.dropletId == null) {
                throw new MissingRequiredPropertyException("VolumeAttachmentArgs", "dropletId");
            }
            if ($.volumeId == null) {
                throw new MissingRequiredPropertyException("VolumeAttachmentArgs", "volumeId");
            }
            return $;
        }
    }

}
