// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob extends com.pulumi.resources.InvokeArgs {

    public static final GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob Empty = new GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob();

    /**
     * Number of completed datasources in the last indexing job
     * 
     */
    @Import(name="completedDatasources")
    private @Nullable Integer completedDatasources;

    /**
     * @return Number of completed datasources in the last indexing job
     * 
     */
    public Optional<Integer> completedDatasources() {
        return Optional.ofNullable(this.completedDatasources);
    }

    /**
     * Created At timestamp for the last indexing job
     * 
     */
    @Import(name="createdAt", required=true)
    private String createdAt;

    /**
     * @return Created At timestamp for the last indexing job
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }

    /**
     * Datasource UUIDs for the last indexing job
     * 
     */
    @Import(name="dataSourceUuids")
    private @Nullable List<String> dataSourceUuids;

    /**
     * @return Datasource UUIDs for the last indexing job
     * 
     */
    public Optional<List<String>> dataSourceUuids() {
        return Optional.ofNullable(this.dataSourceUuids);
    }

    /**
     * Timestamp when the last indexing job finished
     * 
     */
    @Import(name="finishedAt", required=true)
    private String finishedAt;

    /**
     * @return Timestamp when the last indexing job finished
     * 
     */
    public String finishedAt() {
        return this.finishedAt;
    }

    /**
     * UUID  of the Knowledge Base for the last indexing job
     * 
     */
    @Import(name="knowledgeBaseUuid", required=true)
    private String knowledgeBaseUuid;

    /**
     * @return UUID  of the Knowledge Base for the last indexing job
     * 
     */
    public String knowledgeBaseUuid() {
        return this.knowledgeBaseUuid;
    }

    /**
     * Phase of the last indexing job
     * 
     */
    @Import(name="phase")
    private @Nullable String phase;

    /**
     * @return Phase of the last indexing job
     * 
     */
    public Optional<String> phase() {
        return Optional.ofNullable(this.phase);
    }

    /**
     * Timestamp when the last indexing job started
     * 
     */
    @Import(name="startedAt", required=true)
    private String startedAt;

    /**
     * @return Timestamp when the last indexing job started
     * 
     */
    public String startedAt() {
        return this.startedAt;
    }

    /**
     * Number of tokens processed in the last indexing job
     * 
     */
    @Import(name="tokens")
    private @Nullable Integer tokens;

    /**
     * @return Number of tokens processed in the last indexing job
     * 
     */
    public Optional<Integer> tokens() {
        return Optional.ofNullable(this.tokens);
    }

    /**
     * Total number of datasources in the last indexing job
     * 
     */
    @Import(name="totalDatasources")
    private @Nullable Integer totalDatasources;

    /**
     * @return Total number of datasources in the last indexing job
     * 
     */
    public Optional<Integer> totalDatasources() {
        return Optional.ofNullable(this.totalDatasources);
    }

    /**
     * Timestamp when the last indexing job updated
     * 
     */
    @Import(name="updatedAt", required=true)
    private String updatedAt;

    /**
     * @return Timestamp when the last indexing job updated
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }

    /**
     * UUID  of the last indexing job
     * 
     */
    @Import(name="uuid")
    private @Nullable String uuid;

    /**
     * @return UUID  of the last indexing job
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob() {}

    private GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob(GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob $) {
        this.completedDatasources = $.completedDatasources;
        this.createdAt = $.createdAt;
        this.dataSourceUuids = $.dataSourceUuids;
        this.finishedAt = $.finishedAt;
        this.knowledgeBaseUuid = $.knowledgeBaseUuid;
        this.phase = $.phase;
        this.startedAt = $.startedAt;
        this.tokens = $.tokens;
        this.totalDatasources = $.totalDatasources;
        this.updatedAt = $.updatedAt;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob $;

        public Builder() {
            $ = new GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob();
        }

        public Builder(GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob defaults) {
            $ = new GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob(Objects.requireNonNull(defaults));
        }

        /**
         * @param completedDatasources Number of completed datasources in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder completedDatasources(@Nullable Integer completedDatasources) {
            $.completedDatasources = completedDatasources;
            return this;
        }

        /**
         * @param createdAt Created At timestamp for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder createdAt(String createdAt) {
            $.createdAt = createdAt;
            return this;
        }

        /**
         * @param dataSourceUuids Datasource UUIDs for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder dataSourceUuids(@Nullable List<String> dataSourceUuids) {
            $.dataSourceUuids = dataSourceUuids;
            return this;
        }

        /**
         * @param dataSourceUuids Datasource UUIDs for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder dataSourceUuids(String... dataSourceUuids) {
            return dataSourceUuids(List.of(dataSourceUuids));
        }

        /**
         * @param finishedAt Timestamp when the last indexing job finished
         * 
         * @return builder
         * 
         */
        public Builder finishedAt(String finishedAt) {
            $.finishedAt = finishedAt;
            return this;
        }

        /**
         * @param knowledgeBaseUuid UUID  of the Knowledge Base for the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder knowledgeBaseUuid(String knowledgeBaseUuid) {
            $.knowledgeBaseUuid = knowledgeBaseUuid;
            return this;
        }

        /**
         * @param phase Phase of the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder phase(@Nullable String phase) {
            $.phase = phase;
            return this;
        }

        /**
         * @param startedAt Timestamp when the last indexing job started
         * 
         * @return builder
         * 
         */
        public Builder startedAt(String startedAt) {
            $.startedAt = startedAt;
            return this;
        }

        /**
         * @param tokens Number of tokens processed in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder tokens(@Nullable Integer tokens) {
            $.tokens = tokens;
            return this;
        }

        /**
         * @param totalDatasources Total number of datasources in the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder totalDatasources(@Nullable Integer totalDatasources) {
            $.totalDatasources = totalDatasources;
            return this;
        }

        /**
         * @param updatedAt Timestamp when the last indexing job updated
         * 
         * @return builder
         * 
         */
        public Builder updatedAt(String updatedAt) {
            $.updatedAt = updatedAt;
            return this;
        }

        /**
         * @param uuid UUID  of the last indexing job
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob build() {
            if ($.createdAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob", "createdAt");
            }
            if ($.finishedAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob", "finishedAt");
            }
            if ($.knowledgeBaseUuid == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob", "knowledgeBaseUuid");
            }
            if ($.startedAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob", "startedAt");
            }
            if ($.updatedAt == null) {
                throw new MissingRequiredPropertyException("GetGenaiAgentTemplateKnowledgeBaseLastIndexingJob", "updatedAt");
            }
            return $;
        }
    }

}
