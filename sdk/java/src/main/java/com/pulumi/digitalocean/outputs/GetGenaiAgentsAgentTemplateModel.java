// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.digitalocean.outputs.GetGenaiAgentsAgentTemplateModelAgreement;
import com.pulumi.digitalocean.outputs.GetGenaiAgentsAgentTemplateModelVersion;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGenaiAgentsAgentTemplateModel {
    /**
     * @return Agreement information for the model
     * 
     */
    private @Nullable List<GetGenaiAgentsAgentTemplateModelAgreement> agreements;
    /**
     * @return Created At timestamp for the Knowledge Base
     * 
     */
    private String createdAt;
    /**
     * @return Inference name of the model
     * 
     */
    private @Nullable String inferenceName;
    /**
     * @return Infernce version of the model
     * 
     */
    private @Nullable String inferenceVersion;
    /**
     * @return Indicates if the Model Base is foundational
     * 
     */
    private @Nullable Boolean isFoundational;
    /**
     * @return Name of the Knowledge Base
     * 
     */
    private @Nullable String name;
    /**
     * @return Parent UUID of the Model
     * 
     */
    private @Nullable String parentUuid;
    /**
     * @return Provider of the Model
     * 
     */
    private @Nullable String provider;
    /**
     * @return Timestamp when the Knowledge Base was updated
     * 
     */
    private String updatedAt;
    /**
     * @return Indicates if the Model upload is complete
     * 
     */
    private @Nullable Boolean uploadComplete;
    /**
     * @return URL of the Model
     * 
     */
    private @Nullable String url;
    /**
     * @return List of Usecases for the Model
     * 
     */
    private @Nullable List<String> usecases;
    /**
     * @return URL of the Model
     * 
     */
    private @Nullable List<GetGenaiAgentsAgentTemplateModelVersion> versions;

    private GetGenaiAgentsAgentTemplateModel() {}
    /**
     * @return Agreement information for the model
     * 
     */
    public List<GetGenaiAgentsAgentTemplateModelAgreement> agreements() {
        return this.agreements == null ? List.of() : this.agreements;
    }
    /**
     * @return Created At timestamp for the Knowledge Base
     * 
     */
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return Inference name of the model
     * 
     */
    public Optional<String> inferenceName() {
        return Optional.ofNullable(this.inferenceName);
    }
    /**
     * @return Infernce version of the model
     * 
     */
    public Optional<String> inferenceVersion() {
        return Optional.ofNullable(this.inferenceVersion);
    }
    /**
     * @return Indicates if the Model Base is foundational
     * 
     */
    public Optional<Boolean> isFoundational() {
        return Optional.ofNullable(this.isFoundational);
    }
    /**
     * @return Name of the Knowledge Base
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Parent UUID of the Model
     * 
     */
    public Optional<String> parentUuid() {
        return Optional.ofNullable(this.parentUuid);
    }
    /**
     * @return Provider of the Model
     * 
     */
    public Optional<String> provider() {
        return Optional.ofNullable(this.provider);
    }
    /**
     * @return Timestamp when the Knowledge Base was updated
     * 
     */
    public String updatedAt() {
        return this.updatedAt;
    }
    /**
     * @return Indicates if the Model upload is complete
     * 
     */
    public Optional<Boolean> uploadComplete() {
        return Optional.ofNullable(this.uploadComplete);
    }
    /**
     * @return URL of the Model
     * 
     */
    public Optional<String> url() {
        return Optional.ofNullable(this.url);
    }
    /**
     * @return List of Usecases for the Model
     * 
     */
    public List<String> usecases() {
        return this.usecases == null ? List.of() : this.usecases;
    }
    /**
     * @return URL of the Model
     * 
     */
    public List<GetGenaiAgentsAgentTemplateModelVersion> versions() {
        return this.versions == null ? List.of() : this.versions;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGenaiAgentsAgentTemplateModel defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<GetGenaiAgentsAgentTemplateModelAgreement> agreements;
        private String createdAt;
        private @Nullable String inferenceName;
        private @Nullable String inferenceVersion;
        private @Nullable Boolean isFoundational;
        private @Nullable String name;
        private @Nullable String parentUuid;
        private @Nullable String provider;
        private String updatedAt;
        private @Nullable Boolean uploadComplete;
        private @Nullable String url;
        private @Nullable List<String> usecases;
        private @Nullable List<GetGenaiAgentsAgentTemplateModelVersion> versions;
        public Builder() {}
        public Builder(GetGenaiAgentsAgentTemplateModel defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agreements = defaults.agreements;
    	      this.createdAt = defaults.createdAt;
    	      this.inferenceName = defaults.inferenceName;
    	      this.inferenceVersion = defaults.inferenceVersion;
    	      this.isFoundational = defaults.isFoundational;
    	      this.name = defaults.name;
    	      this.parentUuid = defaults.parentUuid;
    	      this.provider = defaults.provider;
    	      this.updatedAt = defaults.updatedAt;
    	      this.uploadComplete = defaults.uploadComplete;
    	      this.url = defaults.url;
    	      this.usecases = defaults.usecases;
    	      this.versions = defaults.versions;
        }

        @CustomType.Setter
        public Builder agreements(@Nullable List<GetGenaiAgentsAgentTemplateModelAgreement> agreements) {

            this.agreements = agreements;
            return this;
        }
        public Builder agreements(GetGenaiAgentsAgentTemplateModelAgreement... agreements) {
            return agreements(List.of(agreements));
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentsAgentTemplateModel", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder inferenceName(@Nullable String inferenceName) {

            this.inferenceName = inferenceName;
            return this;
        }
        @CustomType.Setter
        public Builder inferenceVersion(@Nullable String inferenceVersion) {

            this.inferenceVersion = inferenceVersion;
            return this;
        }
        @CustomType.Setter
        public Builder isFoundational(@Nullable Boolean isFoundational) {

            this.isFoundational = isFoundational;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {

            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder parentUuid(@Nullable String parentUuid) {

            this.parentUuid = parentUuid;
            return this;
        }
        @CustomType.Setter
        public Builder provider(@Nullable String provider) {

            this.provider = provider;
            return this;
        }
        @CustomType.Setter
        public Builder updatedAt(String updatedAt) {
            if (updatedAt == null) {
              throw new MissingRequiredPropertyException("GetGenaiAgentsAgentTemplateModel", "updatedAt");
            }
            this.updatedAt = updatedAt;
            return this;
        }
        @CustomType.Setter
        public Builder uploadComplete(@Nullable Boolean uploadComplete) {

            this.uploadComplete = uploadComplete;
            return this;
        }
        @CustomType.Setter
        public Builder url(@Nullable String url) {

            this.url = url;
            return this;
        }
        @CustomType.Setter
        public Builder usecases(@Nullable List<String> usecases) {

            this.usecases = usecases;
            return this;
        }
        public Builder usecases(String... usecases) {
            return usecases(List.of(usecases));
        }
        @CustomType.Setter
        public Builder versions(@Nullable List<GetGenaiAgentsAgentTemplateModelVersion> versions) {

            this.versions = versions;
            return this;
        }
        public Builder versions(GetGenaiAgentsAgentTemplateModelVersion... versions) {
            return versions(List.of(versions));
        }
        public GetGenaiAgentsAgentTemplateModel build() {
            final var _resultValue = new GetGenaiAgentsAgentTemplateModel();
            _resultValue.agreements = agreements;
            _resultValue.createdAt = createdAt;
            _resultValue.inferenceName = inferenceName;
            _resultValue.inferenceVersion = inferenceVersion;
            _resultValue.isFoundational = isFoundational;
            _resultValue.name = name;
            _resultValue.parentUuid = parentUuid;
            _resultValue.provider = provider;
            _resultValue.updatedAt = updatedAt;
            _resultValue.uploadComplete = uploadComplete;
            _resultValue.url = url;
            _resultValue.usecases = usecases;
            _resultValue.versions = versions;
            return _resultValue;
        }
    }
}
