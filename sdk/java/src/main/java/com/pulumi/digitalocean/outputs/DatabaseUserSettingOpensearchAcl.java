// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class DatabaseUserSettingOpensearchAcl {
    private String index;
    /**
     * @return The permission level applied to the ACL. This includes &#34;admin&#34;, &#34;consume&#34;, &#34;produce&#34;, and &#34;produceconsume&#34;. &#34;admin&#34; allows for producing and consuming as well as add/delete/update permission for topics. &#34;consume&#34; allows only for reading topic messages. &#34;produce&#34; allows only for writing topic messages. &#34;produceconsume&#34; allows for both reading and writing topic messages.
     * 
     */
    private String permission;

    private DatabaseUserSettingOpensearchAcl() {}
    public String index() {
        return this.index;
    }
    /**
     * @return The permission level applied to the ACL. This includes &#34;admin&#34;, &#34;consume&#34;, &#34;produce&#34;, and &#34;produceconsume&#34;. &#34;admin&#34; allows for producing and consuming as well as add/delete/update permission for topics. &#34;consume&#34; allows only for reading topic messages. &#34;produce&#34; allows only for writing topic messages. &#34;produceconsume&#34; allows for both reading and writing topic messages.
     * 
     */
    public String permission() {
        return this.permission;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseUserSettingOpensearchAcl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String index;
        private String permission;
        public Builder() {}
        public Builder(DatabaseUserSettingOpensearchAcl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.index = defaults.index;
    	      this.permission = defaults.permission;
        }

        @CustomType.Setter
        public Builder index(String index) {
            if (index == null) {
              throw new MissingRequiredPropertyException("DatabaseUserSettingOpensearchAcl", "index");
            }
            this.index = index;
            return this;
        }
        @CustomType.Setter
        public Builder permission(String permission) {
            if (permission == null) {
              throw new MissingRequiredPropertyException("DatabaseUserSettingOpensearchAcl", "permission");
            }
            this.permission = permission;
            return this;
        }
        public DatabaseUserSettingOpensearchAcl build() {
            final var _resultValue = new DatabaseUserSettingOpensearchAcl();
            _resultValue.index = index;
            _resultValue.permission = permission;
            return _resultValue;
        }
    }
}
