// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetDatabaseCaResult {
    /**
     * @return The CA certificate used to secure database connections decoded to a string.
     * 
     */
    private String certificate;
    private String clusterId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;

    private GetDatabaseCaResult() {}
    /**
     * @return The CA certificate used to secure database connections decoded to a string.
     * 
     */
    public String certificate() {
        return this.certificate;
    }
    public String clusterId() {
        return this.clusterId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDatabaseCaResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String certificate;
        private String clusterId;
        private String id;
        public Builder() {}
        public Builder(GetDatabaseCaResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.certificate = defaults.certificate;
    	      this.clusterId = defaults.clusterId;
    	      this.id = defaults.id;
        }

        @CustomType.Setter
        public Builder certificate(String certificate) {
            this.certificate = Objects.requireNonNull(certificate);
            return this;
        }
        @CustomType.Setter
        public Builder clusterId(String clusterId) {
            this.clusterId = Objects.requireNonNull(clusterId);
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        public GetDatabaseCaResult build() {
            final var _resultValue = new GetDatabaseCaResult();
            _resultValue.certificate = certificate;
            _resultValue.clusterId = clusterId;
            _resultValue.id = id;
            return _resultValue;
        }
    }
}
