// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ContainerRegistryArgs extends com.pulumi.resources.ResourceArgs {

    public static final ContainerRegistryArgs Empty = new ContainerRegistryArgs();

    /**
     * The name of the container_registry
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the container_registry
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.
     * 
     */
    @Import(name="region")
    private @Nullable Output<String> region;

    /**
     * @return The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.
     * 
     */
    public Optional<Output<String>> region() {
        return Optional.ofNullable(this.region);
    }

    /**
     * The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)
     * 
     */
    @Import(name="subscriptionTierSlug", required=true)
    private Output<String> subscriptionTierSlug;

    /**
     * @return The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)
     * 
     */
    public Output<String> subscriptionTierSlug() {
        return this.subscriptionTierSlug;
    }

    private ContainerRegistryArgs() {}

    private ContainerRegistryArgs(ContainerRegistryArgs $) {
        this.name = $.name;
        this.region = $.region;
        this.subscriptionTierSlug = $.subscriptionTierSlug;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ContainerRegistryArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ContainerRegistryArgs $;

        public Builder() {
            $ = new ContainerRegistryArgs();
        }

        public Builder(ContainerRegistryArgs defaults) {
            $ = new ContainerRegistryArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the container_registry
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the container_registry
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param region The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.
         * 
         * @return builder
         * 
         */
        public Builder region(@Nullable Output<String> region) {
            $.region = region;
            return this;
        }

        /**
         * @param region The slug identifier of for region where registry data will be stored. When not provided, a region will be selected automatically.
         * 
         * @return builder
         * 
         */
        public Builder region(String region) {
            return region(Output.of(region));
        }

        /**
         * @param subscriptionTierSlug The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)
         * 
         * @return builder
         * 
         */
        public Builder subscriptionTierSlug(Output<String> subscriptionTierSlug) {
            $.subscriptionTierSlug = subscriptionTierSlug;
            return this;
        }

        /**
         * @param subscriptionTierSlug The slug identifier for the subscription tier to use (`starter`, `basic`, or `professional`)
         * 
         * @return builder
         * 
         */
        public Builder subscriptionTierSlug(String subscriptionTierSlug) {
            return subscriptionTierSlug(Output.of(subscriptionTierSlug));
        }

        public ContainerRegistryArgs build() {
            if ($.subscriptionTierSlug == null) {
                throw new MissingRequiredPropertyException("ContainerRegistryArgs", "subscriptionTierSlug");
            }
            return $;
        }
    }

}
