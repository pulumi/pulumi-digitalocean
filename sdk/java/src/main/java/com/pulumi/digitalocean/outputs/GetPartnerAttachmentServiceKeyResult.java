// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPartnerAttachmentServiceKeyResult {
    private String attachmentId;
    private String createdAt;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String state;
    private String value;

    private GetPartnerAttachmentServiceKeyResult() {}
    public String attachmentId() {
        return this.attachmentId;
    }
    public String createdAt() {
        return this.createdAt;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String state() {
        return this.state;
    }
    public String value() {
        return this.value;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPartnerAttachmentServiceKeyResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String attachmentId;
        private String createdAt;
        private String id;
        private String state;
        private String value;
        public Builder() {}
        public Builder(GetPartnerAttachmentServiceKeyResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachmentId = defaults.attachmentId;
    	      this.createdAt = defaults.createdAt;
    	      this.id = defaults.id;
    	      this.state = defaults.state;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder attachmentId(String attachmentId) {
            if (attachmentId == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentServiceKeyResult", "attachmentId");
            }
            this.attachmentId = attachmentId;
            return this;
        }
        @CustomType.Setter
        public Builder createdAt(String createdAt) {
            if (createdAt == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentServiceKeyResult", "createdAt");
            }
            this.createdAt = createdAt;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentServiceKeyResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentServiceKeyResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder value(String value) {
            if (value == null) {
              throw new MissingRequiredPropertyException("GetPartnerAttachmentServiceKeyResult", "value");
            }
            this.value = value;
            return this;
        }
        public GetPartnerAttachmentServiceKeyResult build() {
            final var _resultValue = new GetPartnerAttachmentServiceKeyResult();
            _resultValue.attachmentId = attachmentId;
            _resultValue.createdAt = createdAt;
            _resultValue.id = id;
            _resultValue.state = state;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
