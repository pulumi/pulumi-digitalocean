// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.GenaiKnowledgeBaseDataSourceArgs;
import com.pulumi.digitalocean.inputs.GenaiKnowledgeBaseLastIndexingJobArgs;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GenaiKnowledgeBaseArgs extends com.pulumi.resources.ResourceArgs {

    public static final GenaiKnowledgeBaseArgs Empty = new GenaiKnowledgeBaseArgs();

    /**
     * The time when the knowledge base was added to the agent.
     * 
     */
    @Import(name="addedToAgentAt")
    private @Nullable Output<String> addedToAgentAt;

    /**
     * @return The time when the knowledge base was added to the agent.
     * 
     */
    public Optional<Output<String>> addedToAgentAt() {
        return Optional.ofNullable(this.addedToAgentAt);
    }

    /**
     * The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
     * 
     */
    @Import(name="databaseId")
    private @Nullable Output<String> databaseId;

    /**
     * @return The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
     * 
     */
    public Optional<Output<String>> databaseId() {
        return Optional.ofNullable(this.databaseId);
    }

    /**
     * Data sources for the knowledge base
     * 
     */
    @Import(name="datasources", required=true)
    private Output<List<GenaiKnowledgeBaseDataSourceArgs>> datasources;

    /**
     * @return Data sources for the knowledge base
     * 
     */
    public Output<List<GenaiKnowledgeBaseDataSourceArgs>> datasources() {
        return this.datasources;
    }

    /**
     * The unique identifier of the embedding model
     * 
     */
    @Import(name="embeddingModelUuid", required=true)
    private Output<String> embeddingModelUuid;

    /**
     * @return The unique identifier of the embedding model
     * 
     */
    public Output<String> embeddingModelUuid() {
        return this.embeddingModelUuid;
    }

    /**
     * Indicates whether the knowledge base is public or private.
     * 
     */
    @Import(name="isPublic")
    private @Nullable Output<Boolean> isPublic;

    /**
     * @return Indicates whether the knowledge base is public or private.
     * 
     */
    public Optional<Output<Boolean>> isPublic() {
        return Optional.ofNullable(this.isPublic);
    }

    /**
     * The last indexing job for the knowledge base.
     * 
     */
    @Import(name="lastIndexingJobs")
    private @Nullable Output<List<GenaiKnowledgeBaseLastIndexingJobArgs>> lastIndexingJobs;

    /**
     * @return The last indexing job for the knowledge base.
     * 
     */
    public Optional<Output<List<GenaiKnowledgeBaseLastIndexingJobArgs>>> lastIndexingJobs() {
        return Optional.ofNullable(this.lastIndexingJobs);
    }

    /**
     * The name of the knowledge base.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name of the knowledge base.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The unique identifier of the project to which the knowledge base belongs.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The unique identifier of the project to which the knowledge base belongs.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    @Import(name="region", required=true)
    private Output<String> region;

    public Output<String> region() {
        return this.region;
    }

    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * The unique identifier of the VPC to which the knowledge base belongs.
     * 
     */
    @Import(name="vpcUuid")
    private @Nullable Output<String> vpcUuid;

    /**
     * @return The unique identifier of the VPC to which the knowledge base belongs.
     * 
     */
    public Optional<Output<String>> vpcUuid() {
        return Optional.ofNullable(this.vpcUuid);
    }

    private GenaiKnowledgeBaseArgs() {}

    private GenaiKnowledgeBaseArgs(GenaiKnowledgeBaseArgs $) {
        this.addedToAgentAt = $.addedToAgentAt;
        this.databaseId = $.databaseId;
        this.datasources = $.datasources;
        this.embeddingModelUuid = $.embeddingModelUuid;
        this.isPublic = $.isPublic;
        this.lastIndexingJobs = $.lastIndexingJobs;
        this.name = $.name;
        this.projectId = $.projectId;
        this.region = $.region;
        this.tags = $.tags;
        this.vpcUuid = $.vpcUuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GenaiKnowledgeBaseArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GenaiKnowledgeBaseArgs $;

        public Builder() {
            $ = new GenaiKnowledgeBaseArgs();
        }

        public Builder(GenaiKnowledgeBaseArgs defaults) {
            $ = new GenaiKnowledgeBaseArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param addedToAgentAt The time when the knowledge base was added to the agent.
         * 
         * @return builder
         * 
         */
        public Builder addedToAgentAt(@Nullable Output<String> addedToAgentAt) {
            $.addedToAgentAt = addedToAgentAt;
            return this;
        }

        /**
         * @param addedToAgentAt The time when the knowledge base was added to the agent.
         * 
         * @return builder
         * 
         */
        public Builder addedToAgentAt(String addedToAgentAt) {
            return addedToAgentAt(Output.of(addedToAgentAt));
        }

        /**
         * @param databaseId The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
         * 
         * @return builder
         * 
         */
        public Builder databaseId(@Nullable Output<String> databaseId) {
            $.databaseId = databaseId;
            return this;
        }

        /**
         * @param databaseId The unique identifier of the DigitalOcean OpenSearch database this knowledge base will use
         * 
         * @return builder
         * 
         */
        public Builder databaseId(String databaseId) {
            return databaseId(Output.of(databaseId));
        }

        /**
         * @param datasources Data sources for the knowledge base
         * 
         * @return builder
         * 
         */
        public Builder datasources(Output<List<GenaiKnowledgeBaseDataSourceArgs>> datasources) {
            $.datasources = datasources;
            return this;
        }

        /**
         * @param datasources Data sources for the knowledge base
         * 
         * @return builder
         * 
         */
        public Builder datasources(List<GenaiKnowledgeBaseDataSourceArgs> datasources) {
            return datasources(Output.of(datasources));
        }

        /**
         * @param datasources Data sources for the knowledge base
         * 
         * @return builder
         * 
         */
        public Builder datasources(GenaiKnowledgeBaseDataSourceArgs... datasources) {
            return datasources(List.of(datasources));
        }

        /**
         * @param embeddingModelUuid The unique identifier of the embedding model
         * 
         * @return builder
         * 
         */
        public Builder embeddingModelUuid(Output<String> embeddingModelUuid) {
            $.embeddingModelUuid = embeddingModelUuid;
            return this;
        }

        /**
         * @param embeddingModelUuid The unique identifier of the embedding model
         * 
         * @return builder
         * 
         */
        public Builder embeddingModelUuid(String embeddingModelUuid) {
            return embeddingModelUuid(Output.of(embeddingModelUuid));
        }

        /**
         * @param isPublic Indicates whether the knowledge base is public or private.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(@Nullable Output<Boolean> isPublic) {
            $.isPublic = isPublic;
            return this;
        }

        /**
         * @param isPublic Indicates whether the knowledge base is public or private.
         * 
         * @return builder
         * 
         */
        public Builder isPublic(Boolean isPublic) {
            return isPublic(Output.of(isPublic));
        }

        /**
         * @param lastIndexingJobs The last indexing job for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder lastIndexingJobs(@Nullable Output<List<GenaiKnowledgeBaseLastIndexingJobArgs>> lastIndexingJobs) {
            $.lastIndexingJobs = lastIndexingJobs;
            return this;
        }

        /**
         * @param lastIndexingJobs The last indexing job for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder lastIndexingJobs(List<GenaiKnowledgeBaseLastIndexingJobArgs> lastIndexingJobs) {
            return lastIndexingJobs(Output.of(lastIndexingJobs));
        }

        /**
         * @param lastIndexingJobs The last indexing job for the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder lastIndexingJobs(GenaiKnowledgeBaseLastIndexingJobArgs... lastIndexingJobs) {
            return lastIndexingJobs(List.of(lastIndexingJobs));
        }

        /**
         * @param name The name of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the knowledge base.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectId The unique identifier of the project to which the knowledge base belongs.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The unique identifier of the project to which the knowledge base belongs.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public Builder region(Output<String> region) {
            $.region = region;
            return this;
        }

        public Builder region(String region) {
            return region(Output.of(region));
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param vpcUuid The unique identifier of the VPC to which the knowledge base belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcUuid(@Nullable Output<String> vpcUuid) {
            $.vpcUuid = vpcUuid;
            return this;
        }

        /**
         * @param vpcUuid The unique identifier of the VPC to which the knowledge base belongs.
         * 
         * @return builder
         * 
         */
        public Builder vpcUuid(String vpcUuid) {
            return vpcUuid(Output.of(vpcUuid));
        }

        public GenaiKnowledgeBaseArgs build() {
            if ($.datasources == null) {
                throw new MissingRequiredPropertyException("GenaiKnowledgeBaseArgs", "datasources");
            }
            if ($.embeddingModelUuid == null) {
                throw new MissingRequiredPropertyException("GenaiKnowledgeBaseArgs", "embeddingModelUuid");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GenaiKnowledgeBaseArgs", "projectId");
            }
            if ($.region == null) {
                throw new MissingRequiredPropertyException("GenaiKnowledgeBaseArgs", "region");
            }
            return $;
        }
    }

}
