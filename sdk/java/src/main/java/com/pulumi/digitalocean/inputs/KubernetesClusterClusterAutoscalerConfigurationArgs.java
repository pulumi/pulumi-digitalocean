// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Double;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesClusterClusterAutoscalerConfigurationArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesClusterClusterAutoscalerConfigurationArgs Empty = new KubernetesClusterClusterAutoscalerConfigurationArgs();

    @Import(name="expanders")
    private @Nullable Output<List<String>> expanders;

    public Optional<Output<List<String>>> expanders() {
        return Optional.ofNullable(this.expanders);
    }

    /**
     * String setting how long a node should be unneeded before it&#39;s eligible for scale down.
     * 
     * This resource supports customized create timeouts. The default timeout is 30 minutes.
     * 
     */
    @Import(name="scaleDownUnneededTime")
    private @Nullable Output<String> scaleDownUnneededTime;

    /**
     * @return String setting how long a node should be unneeded before it&#39;s eligible for scale down.
     * 
     * This resource supports customized create timeouts. The default timeout is 30 minutes.
     * 
     */
    public Optional<Output<String>> scaleDownUnneededTime() {
        return Optional.ofNullable(this.scaleDownUnneededTime);
    }

    /**
     * Float setting the Node utilization level, defined as sum of requested resources divided by capacity, in which a node can be considered for scale down.
     * 
     */
    @Import(name="scaleDownUtilizationThreshold")
    private @Nullable Output<Double> scaleDownUtilizationThreshold;

    /**
     * @return Float setting the Node utilization level, defined as sum of requested resources divided by capacity, in which a node can be considered for scale down.
     * 
     */
    public Optional<Output<Double>> scaleDownUtilizationThreshold() {
        return Optional.ofNullable(this.scaleDownUtilizationThreshold);
    }

    private KubernetesClusterClusterAutoscalerConfigurationArgs() {}

    private KubernetesClusterClusterAutoscalerConfigurationArgs(KubernetesClusterClusterAutoscalerConfigurationArgs $) {
        this.expanders = $.expanders;
        this.scaleDownUnneededTime = $.scaleDownUnneededTime;
        this.scaleDownUtilizationThreshold = $.scaleDownUtilizationThreshold;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesClusterClusterAutoscalerConfigurationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesClusterClusterAutoscalerConfigurationArgs $;

        public Builder() {
            $ = new KubernetesClusterClusterAutoscalerConfigurationArgs();
        }

        public Builder(KubernetesClusterClusterAutoscalerConfigurationArgs defaults) {
            $ = new KubernetesClusterClusterAutoscalerConfigurationArgs(Objects.requireNonNull(defaults));
        }

        public Builder expanders(@Nullable Output<List<String>> expanders) {
            $.expanders = expanders;
            return this;
        }

        public Builder expanders(List<String> expanders) {
            return expanders(Output.of(expanders));
        }

        public Builder expanders(String... expanders) {
            return expanders(List.of(expanders));
        }

        /**
         * @param scaleDownUnneededTime String setting how long a node should be unneeded before it&#39;s eligible for scale down.
         * 
         * This resource supports customized create timeouts. The default timeout is 30 minutes.
         * 
         * @return builder
         * 
         */
        public Builder scaleDownUnneededTime(@Nullable Output<String> scaleDownUnneededTime) {
            $.scaleDownUnneededTime = scaleDownUnneededTime;
            return this;
        }

        /**
         * @param scaleDownUnneededTime String setting how long a node should be unneeded before it&#39;s eligible for scale down.
         * 
         * This resource supports customized create timeouts. The default timeout is 30 minutes.
         * 
         * @return builder
         * 
         */
        public Builder scaleDownUnneededTime(String scaleDownUnneededTime) {
            return scaleDownUnneededTime(Output.of(scaleDownUnneededTime));
        }

        /**
         * @param scaleDownUtilizationThreshold Float setting the Node utilization level, defined as sum of requested resources divided by capacity, in which a node can be considered for scale down.
         * 
         * @return builder
         * 
         */
        public Builder scaleDownUtilizationThreshold(@Nullable Output<Double> scaleDownUtilizationThreshold) {
            $.scaleDownUtilizationThreshold = scaleDownUtilizationThreshold;
            return this;
        }

        /**
         * @param scaleDownUtilizationThreshold Float setting the Node utilization level, defined as sum of requested resources divided by capacity, in which a node can be considered for scale down.
         * 
         * @return builder
         * 
         */
        public Builder scaleDownUtilizationThreshold(Double scaleDownUtilizationThreshold) {
            return scaleDownUtilizationThreshold(Output.of(scaleDownUtilizationThreshold));
        }

        public KubernetesClusterClusterAutoscalerConfigurationArgs build() {
            return $;
        }
    }

}
