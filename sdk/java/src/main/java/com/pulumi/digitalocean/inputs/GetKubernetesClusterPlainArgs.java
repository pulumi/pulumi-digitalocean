// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.digitalocean.inputs.GetKubernetesClusterAmdGpuDeviceMetricsExporterPlugin;
import com.pulumi.digitalocean.inputs.GetKubernetesClusterAmdGpuDevicePlugin;
import com.pulumi.digitalocean.inputs.GetKubernetesClusterClusterAutoscalerConfiguration;
import com.pulumi.digitalocean.inputs.GetKubernetesClusterRoutingAgent;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetKubernetesClusterPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetKubernetesClusterPlainArgs Empty = new GetKubernetesClusterPlainArgs();

    @Import(name="amdGpuDeviceMetricsExporterPlugin")
    private @Nullable GetKubernetesClusterAmdGpuDeviceMetricsExporterPlugin amdGpuDeviceMetricsExporterPlugin;

    public Optional<GetKubernetesClusterAmdGpuDeviceMetricsExporterPlugin> amdGpuDeviceMetricsExporterPlugin() {
        return Optional.ofNullable(this.amdGpuDeviceMetricsExporterPlugin);
    }

    @Import(name="amdGpuDevicePlugin")
    private @Nullable GetKubernetesClusterAmdGpuDevicePlugin amdGpuDevicePlugin;

    public Optional<GetKubernetesClusterAmdGpuDevicePlugin> amdGpuDevicePlugin() {
        return Optional.ofNullable(this.amdGpuDevicePlugin);
    }

    @Import(name="clusterAutoscalerConfigurations")
    private @Nullable List<GetKubernetesClusterClusterAutoscalerConfiguration> clusterAutoscalerConfigurations;

    public Optional<List<GetKubernetesClusterClusterAutoscalerConfiguration>> clusterAutoscalerConfigurations() {
        return Optional.ofNullable(this.clusterAutoscalerConfigurations);
    }

    @Import(name="kubeconfigExpireSeconds")
    private @Nullable Integer kubeconfigExpireSeconds;

    public Optional<Integer> kubeconfigExpireSeconds() {
        return Optional.ofNullable(this.kubeconfigExpireSeconds);
    }

    /**
     * The name of Kubernetes cluster.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of Kubernetes cluster.
     * 
     */
    public String name() {
        return this.name;
    }

    @Import(name="routingAgent")
    private @Nullable GetKubernetesClusterRoutingAgent routingAgent;

    public Optional<GetKubernetesClusterRoutingAgent> routingAgent() {
        return Optional.ofNullable(this.routingAgent);
    }

    /**
     * A list of tag names applied to the node pool.
     * 
     */
    @Import(name="tags")
    private @Nullable List<String> tags;

    /**
     * @return A list of tag names applied to the node pool.
     * 
     */
    public Optional<List<String>> tags() {
        return Optional.ofNullable(this.tags);
    }

    private GetKubernetesClusterPlainArgs() {}

    private GetKubernetesClusterPlainArgs(GetKubernetesClusterPlainArgs $) {
        this.amdGpuDeviceMetricsExporterPlugin = $.amdGpuDeviceMetricsExporterPlugin;
        this.amdGpuDevicePlugin = $.amdGpuDevicePlugin;
        this.clusterAutoscalerConfigurations = $.clusterAutoscalerConfigurations;
        this.kubeconfigExpireSeconds = $.kubeconfigExpireSeconds;
        this.name = $.name;
        this.routingAgent = $.routingAgent;
        this.tags = $.tags;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetKubernetesClusterPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetKubernetesClusterPlainArgs $;

        public Builder() {
            $ = new GetKubernetesClusterPlainArgs();
        }

        public Builder(GetKubernetesClusterPlainArgs defaults) {
            $ = new GetKubernetesClusterPlainArgs(Objects.requireNonNull(defaults));
        }

        public Builder amdGpuDeviceMetricsExporterPlugin(@Nullable GetKubernetesClusterAmdGpuDeviceMetricsExporterPlugin amdGpuDeviceMetricsExporterPlugin) {
            $.amdGpuDeviceMetricsExporterPlugin = amdGpuDeviceMetricsExporterPlugin;
            return this;
        }

        public Builder amdGpuDevicePlugin(@Nullable GetKubernetesClusterAmdGpuDevicePlugin amdGpuDevicePlugin) {
            $.amdGpuDevicePlugin = amdGpuDevicePlugin;
            return this;
        }

        public Builder clusterAutoscalerConfigurations(@Nullable List<GetKubernetesClusterClusterAutoscalerConfiguration> clusterAutoscalerConfigurations) {
            $.clusterAutoscalerConfigurations = clusterAutoscalerConfigurations;
            return this;
        }

        public Builder clusterAutoscalerConfigurations(GetKubernetesClusterClusterAutoscalerConfiguration... clusterAutoscalerConfigurations) {
            return clusterAutoscalerConfigurations(List.of(clusterAutoscalerConfigurations));
        }

        public Builder kubeconfigExpireSeconds(@Nullable Integer kubeconfigExpireSeconds) {
            $.kubeconfigExpireSeconds = kubeconfigExpireSeconds;
            return this;
        }

        /**
         * @param name The name of Kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        public Builder routingAgent(@Nullable GetKubernetesClusterRoutingAgent routingAgent) {
            $.routingAgent = routingAgent;
            return this;
        }

        /**
         * @param tags A list of tag names applied to the node pool.
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable List<String> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags A list of tag names applied to the node pool.
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public GetKubernetesClusterPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetKubernetesClusterPlainArgs", "name");
            }
            return $;
        }
    }

}
