// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.digitalocean.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DatabaseUserSettingAcl {
    /**
     * @return An identifier for the ACL, this will be automatically assigned when you create an ACL entry
     * 
     */
    private @Nullable String id;
    private String permission;
    private String topic;

    private DatabaseUserSettingAcl() {}
    /**
     * @return An identifier for the ACL, this will be automatically assigned when you create an ACL entry
     * 
     */
    public Optional<String> id() {
        return Optional.ofNullable(this.id);
    }
    public String permission() {
        return this.permission;
    }
    public String topic() {
        return this.topic;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DatabaseUserSettingAcl defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String id;
        private String permission;
        private String topic;
        public Builder() {}
        public Builder(DatabaseUserSettingAcl defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.permission = defaults.permission;
    	      this.topic = defaults.topic;
        }

        @CustomType.Setter
        public Builder id(@Nullable String id) {

            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder permission(String permission) {
            if (permission == null) {
              throw new MissingRequiredPropertyException("DatabaseUserSettingAcl", "permission");
            }
            this.permission = permission;
            return this;
        }
        @CustomType.Setter
        public Builder topic(String topic) {
            if (topic == null) {
              throw new MissingRequiredPropertyException("DatabaseUserSettingAcl", "topic");
            }
            this.topic = topic;
            return this;
        }
        public DatabaseUserSettingAcl build() {
            final var _resultValue = new DatabaseUserSettingAcl();
            _resultValue.id = id;
            _resultValue.permission = permission;
            _resultValue.topic = topic;
            return _resultValue;
        }
    }
}
